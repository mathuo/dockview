{"version":3,"file":"assets/js/be94ed75.6c084ee3.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/iframe-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/iframe.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTraget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTraget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            const topPx = `${Math.round(box.top)}px`;\n            const leftPx = `${Math.round(box.left)}px`;\n            const widthPx = `${Math.round(box.width)}px`;\n            const heightPx = `${Math.round(box.height)}px`;\n            if (overlay.style.top === topPx &&\n                overlay.style.left === leftPx &&\n                overlay.style.width === widthPx &&\n                overlay.style.height === heightPx) {\n                return;\n            }\n            overlay.style.top = topPx;\n            overlay.style.left = leftPx;\n            overlay.style.width = widthPx;\n            overlay.style.height = heightPx;\n            overlay.style.visibility = 'visible';\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        const scrollbar = new Scrollbar(this._tabsList);\n        this._element = scrollbar.element;\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, scrollbar, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('mousedown', () => {\n                    this.accessor.popupService.close();\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n            });\n        }));\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { addDisposableWindowListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = '99';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.popupService = new PopupService(this.element);\n        this.updateDropTargetModel(options);\n        this._themeClassnames = new Classnames(this.element);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this.updateTheme();\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = this.options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && tabLocation !== 'headerOverflow' && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dv-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel=\"noopener\"\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dv-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dv-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n    'dockview-theme-kraken',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    iframeComponent: (props: IDockviewPanelProps) => {\n        const [enabled, setEnabled] = React.useState<boolean>(\n            props.api.isActive\n        );\n\n        React.useEffect(() => {\n            const disposable = props.api.onDidActiveChange((event) => {\n                setEnabled(event.isActive);\n                console.log(event);\n            });\n\n            return () => {\n                disposable.dispose();\n            };\n        }, [props.api]);\n\n        return (\n            <iframe\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: enabled ? 'inherit' : 'none',\n                }}\n                src=\"https://dockview.dev\"\n            />\n        );\n    },\n    basicComponent: () => {\n        return (\n            <div style={{ padding: '20px', color: 'white' }}>\n                {'This panel is just a usual component '}\n            </div>\n        );\n    },\n};\n\nexport const App: React.FC = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        event.api.addPanel({\n            id: 'panel_1',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_2',\n            component: 'iframeComponent',\n            renderer: 'always',\n        });\n\n        event.api.addPanel({\n            id: 'panel_3',\n            component: 'basicComponent',\n        });\n    };\n\n    return (\n        <DockviewReact\n            components={components}\n            onReady={onReady}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default App;\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'iframes';\nexport const metadata = {\n  \"id\": \"advanced/iframe\",\n  \"title\": \"iframes\",\n  \"description\": \"iframes reload when repositioned within the DOM which can cause issues.\",\n  \"source\": \"@site/docs/advanced/iframe.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/iframe\",\n  \"permalink\": \"/docs/advanced/iframe\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Window-like mananger with tabs\",\n    \"permalink\": \"/docs/advanced/\"\n  },\n  \"next\": {\n    \"title\": \"Keyboard\",\n    \"permalink\": \"/docs/advanced/keyboard\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewWithIFrames from '@site/sandboxes/iframe-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"iframes\",\n      children: \"iframes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iframes reload when repositioned within the DOM which can cause issues.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"iFrames required special attention because of a particular behaviour in how iFrames render:\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Re-parenting an iFrame will reload the contents of the iFrame or the rephrase this, moving an iFrame within the DOM will cause a reload of its contents.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can find many examples of discussions on this. Two reputable forums for example are linked \", _jsx(_components.a, {\n        href: \"https://bugzilla.mozilla.org/show_bug.cgi?id=254144\",\n        children: \"here\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/whatwg/html/issues/5484\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To ensure iFrames work as expected you should render them in panels with \", _jsx(_components.code, {\n        children: \"renderer: 'always'\"\n      }), \" to ensure they are never removed from the DOM, alternatively set the defaultRenderer to \", _jsx(_components.code, {\n        children: \"always\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"See the \", _jsx(_components.a, {\n          href: \"/docs/core/panels/rendering\",\n          children: \"Panel Rendering\"\n        }), \" section for more information of render modes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        metastring: \"title=\\\"Example of a panel using an alternative renderer\\\"\",\n        children: \"api.addPanel({\\n  id: 'my_panel_id',\\n  component: 'my_component',\\n  renderer: 'always',\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      sandboxId: \"iframe-dockview\",\n      height: 600,\n      react: DockviewWithIFrames\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTraget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","topPx","leftPx","widthPx","heightPx","visibility","changed","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","dropTraget","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","WillShowOverlayLocationEvent","kind","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","wrapper","popupService","close","scrollIntoView","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","updateDropTargetModel","_themeClassnames","updateWatermark","updateTheme","_rootDropTarget","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","flexGrow","MultiFrameworkContainer","iframeComponent","setEnabled","log","basicComponent","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","a","blockquote","code","h1","pre","metastring","MDXContent","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}