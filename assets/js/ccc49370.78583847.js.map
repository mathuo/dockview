{"version":3,"file":"assets/js/ccc49370.78583847.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/Metadata/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/styles.module.css","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOC/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/tocUtils.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/hooks/useTOCHighlight.ts","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/Tree.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/TOCItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogPostPaginator(props) {\n  const {nextItem, prevItem} = props;\n  return (\n    <nav\n      className=\"pagination-nav docusaurus-mt-lg\"\n      aria-label={translate({\n        id: 'theme.blog.post.paginator.navAriaLabel',\n        message: 'Blog post page navigation',\n        description: 'The ARIA label for the blog posts pagination',\n      })}>\n      {prevItem && (\n        <PaginatorNavLink\n          {...prevItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.newerPost\"\n              description=\"The blog post button label to navigate to the newer/previous post\">\n              Newer Post\n            </Translate>\n          }\n        />\n      )}\n      {nextItem && (\n        <PaginatorNavLink\n          {...nextItem}\n          subLabel={\n            <Translate\n              id=\"theme.blog.post.paginator.olderPost\"\n              description=\"The blog post button label to navigate to the older/next post\">\n              Older Post\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {PageMetadata} from '@docusaurus/theme-common';\nimport {useBlogPost} from '@docusaurus/theme-common/internal';\nexport default function BlogPostPageMetadata() {\n  const {assets, metadata} = useBlogPost();\n  const {title, description, date, tags, authors, frontMatter} = metadata;\n  const {keywords} = frontMatter;\n  const image = assets.image ?? frontMatter.image;\n  return (\n    <PageMetadata\n      title={title}\n      description={description}\n      keywords={keywords}\n      image={image}>\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"article:published_time\" content={date} />\n      {/* TODO double check those article meta array syntaxes, see https://ogp.me/#array */}\n      {authors.some((author) => author.url) && (\n        <meta\n          property=\"article:author\"\n          content={authors\n            .map((author) => author.url)\n            .filter(Boolean)\n            .join(',')}\n        />\n      )}\n      {tags.length > 0 && (\n        <meta\n          property=\"article:tag\"\n          content={tags.map((tag) => tag.label).join(',')}\n        />\n      )}\n    </PageMetadata>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {HtmlClassNameProvider, ThemeClassNames} from '@docusaurus/theme-common';\nimport {BlogPostProvider, useBlogPost} from '@docusaurus/theme-common/internal';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogPostItem from '@theme/BlogPostItem';\nimport BlogPostPaginator from '@theme/BlogPostPaginator';\nimport BlogPostPageMetadata from '@theme/BlogPostPage/Metadata';\nimport TOC from '@theme/TOC';\nimport Unlisted from '@theme/Unlisted';\nfunction BlogPostPageContent({sidebar, children}) {\n  const {metadata, toc} = useBlogPost();\n  const {nextItem, prevItem, frontMatter, unlisted} = metadata;\n  const {\n    hide_table_of_contents: hideTableOfContents,\n    toc_min_heading_level: tocMinHeadingLevel,\n    toc_max_heading_level: tocMaxHeadingLevel,\n  } = frontMatter;\n  return (\n    <BlogLayout\n      sidebar={sidebar}\n      toc={\n        !hideTableOfContents && toc.length > 0 ? (\n          <TOC\n            toc={toc}\n            minHeadingLevel={tocMinHeadingLevel}\n            maxHeadingLevel={tocMaxHeadingLevel}\n          />\n        ) : undefined\n      }>\n      {unlisted && <Unlisted />}\n      <BlogPostItem>{children}</BlogPostItem>\n\n      {(nextItem || prevItem) && (\n        <BlogPostPaginator nextItem={nextItem} prevItem={prevItem} />\n      )}\n    </BlogLayout>\n  );\n}\nexport default function BlogPostPage(props) {\n  const BlogPostContent = props.content;\n  return (\n    <BlogPostProvider content={props.content} isBlogPostPage>\n      <HtmlClassNameProvider\n        className={clsx(\n          ThemeClassNames.wrapper.blogPages,\n          ThemeClassNames.page.blogPostPage,\n        )}>\n        <BlogPostPageMetadata />\n        <BlogPostPageContent sidebar={props.sidebar}>\n          <BlogPostContent />\n        </BlogPostPageContent>\n      </HtmlClassNameProvider>\n    </BlogPostProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableOfContents\":\"tableOfContents_TN1Q\",\"docItemContainer\":\"docItemContainer_JtJJ\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport TOCItems from '@theme/TOCItems';\nimport styles from './styles.module.css';\n// Using a custom className\n// This prevents TOCInline/TOCCollapsible getting highlighted by mistake\nconst LINK_CLASS_NAME = 'table-of-contents__link toc-highlight';\nconst LINK_ACTIVE_CLASS_NAME = 'table-of-contents__link--active';\nexport default function TOC({className, ...props}) {\n  return (\n    <div className={clsx(styles.tableOfContents, 'thin-scrollbar', className)}>\n      <TOCItems\n        {...props}\n        linkClassName={LINK_CLASS_NAME}\n        linkActiveClassName={LINK_ACTIVE_CLASS_NAME}\n      />\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport type {TOCItem} from '@docusaurus/mdx-loader';\n\nexport type TOCTreeNode = {\n  readonly value: string;\n  readonly id: string;\n  readonly level: number;\n  readonly children: readonly TOCTreeNode[];\n};\n\nfunction treeifyTOC(flatTOC: readonly TOCItem[]): TOCTreeNode[] {\n  const headings = flatTOC.map((heading) => ({\n    ...heading,\n    parentIndex: -1,\n    children: [] as TOCTreeNode[],\n  }));\n\n  // Keep track of which previous index would be the current heading's direct\n  // parent. Each entry <i> is the last index of the `headings` array at heading\n  // level <i>. We will modify these indices as we iterate through all headings.\n  // e.g. if an ### H3 was last seen at index 2, then prevIndexForLevel[3] === 2\n  // indices 0 and 1 will remain unused.\n  const prevIndexForLevel = Array<number>(7).fill(-1);\n\n  headings.forEach((curr, currIndex) => {\n    // Take the last seen index for each ancestor level. the highest index will\n    // be the direct ancestor of the current heading.\n    const ancestorLevelIndexes = prevIndexForLevel.slice(2, curr.level);\n    curr.parentIndex = Math.max(...ancestorLevelIndexes);\n    // Mark that curr.level was last seen at the current index.\n    prevIndexForLevel[curr.level] = currIndex;\n  });\n\n  const rootNodes: TOCTreeNode[] = [];\n\n  // For a given parentIndex, add each Node into that parent's `children` array\n  headings.forEach((heading) => {\n    const {parentIndex, ...rest} = heading;\n    if (parentIndex >= 0) {\n      headings[parentIndex]!.children.push(rest);\n    } else {\n      rootNodes.push(rest);\n    }\n  });\n  return rootNodes;\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect. Memoized for performance.\n */\nexport function useTreeifiedTOC(toc: TOCItem[]): readonly TOCTreeNode[] {\n  return useMemo(() => treeifyTOC(toc), [toc]);\n}\n\nfunction filterTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCTreeNode[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): TOCTreeNode[] {\n  function isValid(item: TOCTreeNode) {\n    return item.level >= minHeadingLevel && item.level <= maxHeadingLevel;\n  }\n\n  return toc.flatMap((item) => {\n    const filteredChildren = filterTOC({\n      toc: item.children,\n      minHeadingLevel,\n      maxHeadingLevel,\n    });\n    if (isValid(item)) {\n      return [\n        {\n          ...item,\n          children: filteredChildren,\n        },\n      ];\n    }\n    return filteredChildren;\n  });\n}\n\n/**\n * Takes a flat TOC list (from the MDX loader) and treeifies it into what the\n * TOC components expect, applying the `minHeadingLevel` and `maxHeadingLevel`.\n * Memoized for performance.\n *\n * **Important**: this is not the same as `useTreeifiedTOC(toc.filter(...))`,\n * because we have to filter the TOC after it has been treeified. This is mostly\n * to ensure that weird TOC structures preserve their semantics. For example, an\n * h3-h2-h4 sequence should not be treeified as an \"h3 > h4\" hierarchy with\n * min=3, max=4, but should rather be \"[h3, h4]\" (since the h2 heading has split\n * the two headings and they are not parent-children)\n */\nexport function useFilteredAndTreeifiedTOC({\n  toc,\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  toc: readonly TOCItem[];\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): readonly TOCTreeNode[] {\n  return useMemo(\n    () => filterTOC({toc: treeifyTOC(toc), minHeadingLevel, maxHeadingLevel}),\n    [toc, minHeadingLevel, maxHeadingLevel],\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useEffect, useRef} from 'react';\nimport {useThemeConfig} from '../utils/useThemeConfig';\n\n// TODO make the hardcoded theme-classic classnames configurable (or add them\n// to ThemeClassNames?)\n\n/**\n * If the anchor has no height and is just a \"marker\" in the DOM; we'll use the\n * parent (normally the link text) rect boundaries instead\n */\nfunction getVisibleBoundingClientRect(element: HTMLElement): DOMRect {\n  const rect = element.getBoundingClientRect();\n  const hasNoHeight = rect.top === rect.bottom;\n  if (hasNoHeight) {\n    return getVisibleBoundingClientRect(element.parentNode as HTMLElement);\n  }\n  return rect;\n}\n\n/**\n * Considering we divide viewport into 2 zones of each 50vh, this returns true\n * if an element is in the first zone (i.e., appear in viewport, near the top)\n */\nfunction isInViewportTopHalf(boundingRect: DOMRect) {\n  return boundingRect.top > 0 && boundingRect.bottom < window.innerHeight / 2;\n}\n\nfunction getAnchors({\n  minHeadingLevel,\n  maxHeadingLevel,\n}: {\n  minHeadingLevel: number;\n  maxHeadingLevel: number;\n}): HTMLElement[] {\n  const selectors = [];\n  for (let i = minHeadingLevel; i <= maxHeadingLevel; i += 1) {\n    selectors.push(`h${i}.anchor`);\n  }\n  return Array.from(document.querySelectorAll(selectors.join()));\n}\n\nfunction getActiveAnchor(\n  anchors: HTMLElement[],\n  {\n    anchorTopOffset,\n  }: {\n    anchorTopOffset: number;\n  },\n): Element | null {\n  // Naming is hard: The \"nextVisibleAnchor\" is the first anchor that appear\n  // under the viewport top boundary. It does not mean this anchor is visible\n  // yet, but if user continues scrolling down, it will be the first to become\n  // visible\n  const nextVisibleAnchor = anchors.find((anchor) => {\n    const boundingRect = getVisibleBoundingClientRect(anchor);\n    return boundingRect.top >= anchorTopOffset;\n  });\n\n  if (nextVisibleAnchor) {\n    const boundingRect = getVisibleBoundingClientRect(nextVisibleAnchor);\n    // If anchor is in the top half of the viewport: it is the one we consider\n    // \"active\" (unless it's too close to the top and and soon to be scrolled\n    // outside viewport)\n    if (isInViewportTopHalf(boundingRect)) {\n      return nextVisibleAnchor;\n    }\n    // If anchor is in the bottom half of the viewport, or under the viewport,\n    // we consider the active anchor is the previous one. This is because the\n    // main text appearing in the user screen mostly belong to the previous\n    // anchor. Returns null for the first anchor, see\n    // https://github.com/facebook/docusaurus/issues/5318\n    return anchors[anchors.indexOf(nextVisibleAnchor) - 1] ?? null;\n  }\n  // No anchor under viewport top (i.e. we are at the bottom of the page),\n  // highlight the last anchor found\n  return anchors[anchors.length - 1] ?? null;\n}\n\nfunction getLinkAnchorValue(link: HTMLAnchorElement): string {\n  return decodeURIComponent(link.href.substring(link.href.indexOf('#') + 1));\n}\n\nfunction getLinks(linkClassName: string) {\n  return Array.from(\n    document.getElementsByClassName(linkClassName),\n  ) as HTMLAnchorElement[];\n}\n\nfunction getNavbarHeight(): number {\n  // Not ideal to obtain actual height this way\n  // Using TS ! (not ?) because otherwise a bad selector would be un-noticed\n  return document.querySelector('.navbar')!.clientHeight;\n}\n\nfunction useAnchorTopOffsetRef() {\n  const anchorTopOffsetRef = useRef<number>(0);\n  const {\n    navbar: {hideOnScroll},\n  } = useThemeConfig();\n\n  useEffect(() => {\n    anchorTopOffsetRef.current = hideOnScroll ? 0 : getNavbarHeight();\n  }, [hideOnScroll]);\n\n  return anchorTopOffsetRef;\n}\n\nexport type TOCHighlightConfig = {\n  /** A class name that all TOC links share. */\n  linkClassName: string;\n  /** The class name applied to the active (highlighted) link. */\n  linkActiveClassName: string;\n  /**\n   * The minimum heading level that the TOC includes. Only headings that are in\n   * this range will be eligible as \"active heading\".\n   */\n  minHeadingLevel: number;\n  /** @see {@link TOCHighlightConfig.minHeadingLevel} */\n  maxHeadingLevel: number;\n};\n\n/**\n * Side-effect that applies the active class name to the TOC heading that the\n * user is currently viewing. Disabled when `config` is undefined.\n */\nexport function useTOCHighlight(config: TOCHighlightConfig | undefined): void {\n  const lastActiveLinkRef = useRef<HTMLAnchorElement | undefined>(undefined);\n\n  const anchorTopOffsetRef = useAnchorTopOffsetRef();\n\n  useEffect(() => {\n    if (!config) {\n      // No-op, highlighting is disabled\n      return () => {};\n    }\n\n    const {\n      linkClassName,\n      linkActiveClassName,\n      minHeadingLevel,\n      maxHeadingLevel,\n    } = config;\n\n    function updateLinkActiveClass(link: HTMLAnchorElement, active: boolean) {\n      if (active) {\n        if (lastActiveLinkRef.current && lastActiveLinkRef.current !== link) {\n          lastActiveLinkRef.current.classList.remove(linkActiveClassName);\n        }\n        link.classList.add(linkActiveClassName);\n        lastActiveLinkRef.current = link;\n        // link.scrollIntoView({block: 'nearest'});\n      } else {\n        link.classList.remove(linkActiveClassName);\n      }\n    }\n\n    function updateActiveLink() {\n      const links = getLinks(linkClassName);\n      const anchors = getAnchors({minHeadingLevel, maxHeadingLevel});\n      const activeAnchor = getActiveAnchor(anchors, {\n        anchorTopOffset: anchorTopOffsetRef.current,\n      });\n      const activeLink = links.find(\n        (link) => activeAnchor && activeAnchor.id === getLinkAnchorValue(link),\n      );\n\n      links.forEach((link) => {\n        updateLinkActiveClass(link, link === activeLink);\n      });\n    }\n\n    document.addEventListener('scroll', updateActiveLink);\n    document.addEventListener('resize', updateActiveLink);\n\n    updateActiveLink();\n\n    return () => {\n      document.removeEventListener('scroll', updateActiveLink);\n      document.removeEventListener('resize', updateActiveLink);\n    };\n  }, [config, anchorTopOffsetRef]);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Link from '@docusaurus/Link';\n// Recursive component rendering the toc tree\nfunction TOCItemTree({toc, className, linkClassName, isChild}) {\n  if (!toc.length) {\n    return null;\n  }\n  return (\n    <ul className={isChild ? undefined : className}>\n      {toc.map((heading) => (\n        <li key={heading.id}>\n          <Link\n            to={`#${heading.id}`}\n            className={linkClassName ?? undefined}\n            // Developer provided the HTML, so assume it's safe.\n            dangerouslySetInnerHTML={{__html: heading.value}}\n          />\n          <TOCItemTree\n            isChild\n            toc={heading.children}\n            className={className}\n            linkClassName={linkClassName}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n// Memo only the tree root is enough\nexport default React.memo(TOCItemTree);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useMemo} from 'react';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nimport {\n  useTOCHighlight,\n  useFilteredAndTreeifiedTOC,\n} from '@docusaurus/theme-common/internal';\nimport TOCItemTree from '@theme/TOCItems/Tree';\nexport default function TOCItems({\n  toc,\n  className = 'table-of-contents table-of-contents__left-border',\n  linkClassName = 'table-of-contents__link',\n  linkActiveClassName = undefined,\n  minHeadingLevel: minHeadingLevelOption,\n  maxHeadingLevel: maxHeadingLevelOption,\n  ...props\n}) {\n  const themeConfig = useThemeConfig();\n  const minHeadingLevel =\n    minHeadingLevelOption ?? themeConfig.tableOfContents.minHeadingLevel;\n  const maxHeadingLevel =\n    maxHeadingLevelOption ?? themeConfig.tableOfContents.maxHeadingLevel;\n  const tocTree = useFilteredAndTreeifiedTOC({\n    toc,\n    minHeadingLevel,\n    maxHeadingLevel,\n  });\n  const tocHighlightConfig = useMemo(() => {\n    if (linkClassName && linkActiveClassName) {\n      return {\n        linkClassName,\n        linkActiveClassName,\n        minHeadingLevel,\n        maxHeadingLevel,\n      };\n    }\n    return undefined;\n  }, [linkClassName, linkActiveClassName, minHeadingLevel, maxHeadingLevel]);\n  useTOCHighlight(tocHighlightConfig);\n  return (\n    <TOCItemTree\n      toc={tocTree}\n      className={className}\n      linkClassName={linkClassName}\n      {...props}\n    />\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                // Debug logging for always rendered panels\n                if (process.env.NODE_ENV === 'development') {\n                    console.log('Always render positioning:', {\n                        panelId,\n                        left, top, width, height,\n                        referenceBox: box,\n                        containerBox: box2\n                    });\n                }\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (process.env.NODE_ENV === 'development') {\n                console.log('Always render visibility changed:', {\n                    panelId: panel.api.id,\n                    isVisible: panel.api.isVisible,\n                    renderer: panel.api.renderer\n                });\n            }\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup(group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                    referenceGroup: gridReferenceGroup\n                        ? this.getPanel(gridReferenceGroup)\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const targetActivePanel = to.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: true, // Always skip setting panels active during move\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            if (!options.skipSetActive) {\n                // Make the moved panel (from the source group) active\n                if (activePanel) {\n                    this.doSetGroupAndPanelActive(to);\n                }\n            }\n            else if (targetActivePanel) {\n                // Ensure the target group's original active panel remains active\n                to.model.openPanel(targetActivePanel, {\n                    skipSetGroupActive: true\n                });\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, { skipActive: true });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        if (!options.skipSetActive) {\n            this.doSetGroupAndPanelActive(from);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogPostPaginator","props","nextItem","prevItem","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","subLabel","Translate","isNext","BlogPostPageMetadata","assets","metadata","useBlogPost","title","date","tags","authors","frontMatter","keywords","image","PageMetadata","property","content","some","author","url","map","filter","Boolean","join","length","tag","label","BlogPostPageContent","_ref","sidebar","toc","unlisted","hide_table_of_contents","hideTableOfContents","toc_min_heading_level","tocMinHeadingLevel","toc_max_heading_level","tocMaxHeadingLevel","BlogLayout","TOC","minHeadingLevel","maxHeadingLevel","undefined","Unlisted","BlogPostItem","BlogPostPage","BlogPostContent","BlogPostProvider","isBlogPostPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogPostPage","LINK_CLASS_NAME","LINK_ACTIVE_CLASS_NAME","styles","tableOfContents","TOCItems","linkClassName","linkActiveClassName","treeifyTOC","flatTOC","headings","heading","parentIndex","prevIndexForLevel","Array","fill","forEach","curr","currIndex","ancestorLevelIndexes","slice","level","Math","max","rootNodes","rest","push","filterTOC","flatMap","item","filteredChildren","isValid","getVisibleBoundingClientRect","element","rect","getBoundingClientRect","top","bottom","parentNode","getActiveAnchor","anchors","_ref2","anchorTopOffset","nextVisibleAnchor","find","anchor","boundingRect","window","innerHeight","isInViewportTopHalf","indexOf","useAnchorTopOffsetRef","anchorTopOffsetRef","useRef","navbar","hideOnScroll","useThemeConfig","useEffect","current","document","querySelector","clientHeight","useTOCHighlight","config","lastActiveLinkRef","updateActiveLink","links","from","getElementsByClassName","getLinks","selectors","i","querySelectorAll","getAnchors","activeAnchor","activeLink","link","decodeURIComponent","href","substring","getLinkAnchorValue","active","classList","remove","add","updateLinkActiveClass","addEventListener","removeEventListener","TOCItemTree","isChild","Link","to","dangerouslySetInnerHTML","__html","value","React","minHeadingLevelOption","maxHeadingLevelOption","themeConfig","tocTree","useMemo","useFilteredAndTreeifiedTOC","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","_key","listener","disposables","child","dispose","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","index","splice","fire","e","queueMicrotask","delete","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","contains","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","width","height","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","v","trim","tail","arr","sequenceEquals","arr1","arr2","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","sequentialNumberGenerator","next","toString","range","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","open","features","entries","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","targetActivePanel","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","_props","componentProps","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","frameworkName","toLowerCase"],"sourceRoot":""}