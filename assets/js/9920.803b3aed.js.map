{"version":3,"file":"assets/js/9920.803b3aed.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/constraints/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTraget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTraget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            const topPx = `${Math.round(box.top)}px`;\n            const leftPx = `${Math.round(box.left)}px`;\n            const widthPx = `${Math.round(box.width)}px`;\n            const heightPx = `${Math.round(box.height)}px`;\n            if (overlay.style.top === topPx &&\n                overlay.style.left === leftPx &&\n                overlay.style.width === widthPx &&\n                overlay.style.height === heightPx) {\n                return;\n            }\n            overlay.style.top = topPx;\n            overlay.style.left = leftPx;\n            overlay.style.width = widthPx;\n            overlay.style.height = heightPx;\n            overlay.style.visibility = 'visible';\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        const scrollbar = new Scrollbar(this._tabsList);\n        this._element = scrollbar.element;\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, scrollbar, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('mousedown', () => {\n                    this.accessor.popupService.close();\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n            });\n        }));\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { addDisposableWindowListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = '99';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.popupService = new PopupService(this.element);\n        this.updateDropTargetModel(options);\n        this._themeClassnames = new Classnames(this.element);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this.updateTheme();\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = this.options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && tabLocation !== 'headerOverflow' && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import {\n    DockviewApi,\n    DockviewReact,\n    DockviewReadyEvent,\n    GridConstraintChangeEvent,\n    IDockviewPanelProps,\n} from 'dockview';\nimport * as React from 'react';\n\nconst components = {\n    default: (props: IDockviewPanelProps) => {\n        const [contraints, setContraints] =\n            React.useState<GridConstraintChangeEvent | null>(null);\n\n        React.useEffect(() => {\n            props.api.group.api.onDidConstraintsChange((event) => {\n                setContraints(event);\n            });\n        }, []);\n\n        const onClick = () => {\n            props.api.group.api.setConstraints({\n                maximumWidth: 300,\n                maximumHeight: 300,\n            });\n        };\n\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                    color: 'white',\n                }}\n            >\n                <button onClick={onClick}>Set</button>\n                {contraints && (\n                    <div style={{ fontSize: '13px' }}>\n                        {typeof contraints.maximumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Height: `}</span>\n                                <span>{`${contraints.maximumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumHeight === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Height: `}</span>\n                                <span>{`${contraints.minimumHeight}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.maximumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Maximum Width: `}</span>\n                                <span>{`${contraints.maximumWidth}px`}</span>\n                            </div>\n                        )}\n                        {typeof contraints.minimumWidth === 'number' && (\n                            <div\n                                style={{\n                                    border: '1px solid grey',\n                                    margin: '2px',\n                                    padding: '1px',\n                                }}\n                            >\n                                <span\n                                    style={{ color: 'grey' }}\n                                >{`Minimum Width: `}</span>\n                                <span>{`${contraints.minimumWidth}px`}</span>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    },\n};\n\nconst App = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'default',\n        });\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'default',\n            position: {\n                referencePanel: panel1,\n                direction: 'right',\n            },\n        });\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'default',\n            position: {\n                referencePanel: panel2,\n                direction: 'right',\n            },\n        });\n\n        const panel4 = event.api.addPanel({\n            id: 'panel_4',\n            component: 'default',\n            position: {\n                direction: 'below',\n            },\n        });\n    };\n\n    return (\n        <DockviewReact\n            onReady={onReady}\n            components={components}\n            className={`${props.theme || 'dockview-theme-abyss'}`}\n        />\n    );\n};\n\nexport default App;\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTraget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","topPx","leftPx","widthPx","heightPx","visibility","changed","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","dropTraget","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","WillShowOverlayLocationEvent","kind","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","wrapper","popupService","close","scrollIntoView","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","updateDropTargetModel","_themeClassnames","updateWatermark","updateTheme","_rootDropTarget","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","default","contraints","setContraints","_jsxs","background","_jsx","border","setApi","panel1","panel2"],"sourceRoot":""}