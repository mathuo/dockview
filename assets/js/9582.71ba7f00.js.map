{"version":3,"file":"assets/js/9582.71ba7f00.js","mappings":"uTAAA,MAAMA,GAEC,MAAMC,UAAsBD,EAC/BE,WAAAA,CAAYC,EAAQC,EAASC,GACzBC,QACAC,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,CACnB,EAEG,MAAMG,UAAqBR,EAC9BE,WAAAA,CAAYC,EAAQM,GAChBH,QACAC,KAAKJ,OAASA,EACdI,KAAKE,OAASA,CAClB,EAKG,MAAMC,EACTR,WAAAA,GACI,CAEJ,kBAAOS,GACH,OAAOD,EAAuBE,QAClC,CACAC,OAAAA,CAAQC,GACJ,OAAOA,GAASA,IAAUP,KAAKO,KACnC,CACAC,SAAAA,CAAUD,GACFP,KAAKM,QAAQC,KACbP,KAAKO,WAAQE,EACbT,KAAKU,UAAOD,EAEpB,CACAE,OAAAA,CAAQJ,GACJ,GAAIP,KAAKM,QAAQC,GACb,OAAOP,KAAKU,IAGpB,CACAE,OAAAA,CAAQF,EAAMH,GACNA,IACAP,KAAKU,KAAOA,EACZV,KAAKO,MAAQA,EAErB,EAGG,SAASM,IACZ,MAAMC,EAAgBX,EAAuBC,cAE7C,GADqBU,EAAcR,QAAQZ,EAAcqB,WAIzD,OAAOD,EAAcH,QAAQjB,EAAcqB,WAAW,EAC1D,CACO,SAASC,IACZ,MAAMC,EAAed,EAAuBC,cAE5C,GADqBa,EAAaX,QAAQL,EAAac,WAIvD,OAAOE,EAAaN,QAAQV,EAAac,WAAW,EACxD,CCjEO,IAAIG,ECAAC,EFiDXhB,EAAuBE,SAAW,IAAIF,EChDtC,SAAWe,GACPA,EAAME,IAAM,WAAkB,IAAD,IAAAC,EAAAC,UAAAC,OAAbC,EAAQ,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAARF,EAAQE,GAAAJ,UAAAI,GACpB,OAAQC,IACJ,MAAMC,EAAcJ,EAASK,KAAKC,GAAUA,EAAMH,KAClD,MAAO,CACHI,QAASA,KACLH,EAAYI,SAASC,IACjBA,EAAEF,SAAS,GACb,EAET,CAET,CACH,CAbD,CAaGb,IAAUA,EAAQ,CAAC,IACf,MAAMgB,EACTvC,WAAAA,GACIK,KAAKmC,mBAAoB,CAC7B,CACA,oBAAIC,GACA,OAAOpC,KAAKmC,iBAChB,CACAE,cAAAA,GACIrC,KAAKmC,mBAAoB,CAC7B,EAEG,MAAMG,EACT3C,WAAAA,GACIK,KAAKuC,aAAc,CACvB,CACA,cAAIC,GACA,OAAOxC,KAAKuC,WAChB,CACAE,MAAAA,GACIzC,KAAKuC,aAAc,CACvB,EAmBJ,MAAMG,EACF,aAAOC,GACH,IAAIC,EACJ,OAAO,IAAIF,EAAwC,QAA5BE,GAAK,IAAIC,OAAQC,aAA0B,IAAPF,EAAgBA,EAAK,GACpF,CACAjD,WAAAA,CAAYoD,GACR/C,KAAK+C,MAAQA,CACjB,CACAC,KAAAA,GACIC,QAAQC,KAAK,uBAAwBlD,KAAK+C,MAC9C,EAEJ,MAAMI,EACFxD,WAAAA,CAAYyD,EAAUC,GAClBrD,KAAKoD,SAAWA,EAChBpD,KAAKqD,WAAaA,CACtB,EAGG,MAAMC,EACT,+BAAOC,CAAyBC,GACxBA,IAAcF,EAAQG,iBACtBH,EAAQI,oBAAoBC,QAEhCL,EAAQG,gBAAkBD,CAC9B,CACA,SAAIT,GACA,OAAO/C,KAAK4D,KAChB,CACAjE,WAAAA,CAAYkE,GACR7D,KAAK6D,QAAUA,EACf7D,KAAK8D,WAAa,GAClB9D,KAAK+D,WAAY,CACrB,CACA,SAAIC,GA4BA,OA3BKhE,KAAKiE,SACNjE,KAAKiE,OAAUb,IACX,IAAIR,GACyB,QAAvBA,EAAK5C,KAAK6D,eAA4B,IAAPjB,OAAgB,EAASA,EAAGsB,cAA0BzD,IAAfT,KAAK4D,OAC7ER,EAASpD,KAAK4D,OAElB,MAAMjC,EAAW,IAAIwB,EAASC,EAAUE,EAAQG,gBAAkBf,EAAWC,cAAWlC,GAExF,OADAT,KAAK8D,WAAWK,KAAKxC,GACd,CACHI,QAASA,KACL,MAAMqC,EAAQpE,KAAK8D,WAAWO,QAAQ1C,GAClCyC,GAAS,EACTpE,KAAK8D,WAAWQ,OAAOF,EAAO,GAEzBd,EAAQG,eAIb,EAGX,EAEDH,EAAQG,iBACRH,EAAQI,oBAAoBa,IAAIvE,KAAKiE,OAAQvB,EAAWC,WAGzD3C,KAAKiE,MAChB,CACAO,IAAAA,CAAKC,GACDzE,KAAK4D,MAAQa,EACb,IAAK,MAAM9C,KAAY3B,KAAK8D,WACxBnC,EAASyB,SAASqB,EAE1B,CACA1C,OAAAA,GACS/B,KAAK+D,YACN/D,KAAK+D,WAAY,EACb/D,KAAK8D,WAAWvC,OAAS,IACrB+B,EAAQG,iBACRiB,gBAAe,KACX,IAAI9B,EAEJ,IAAK,MAAMjB,KAAY3B,KAAK8D,WACxBb,QAAQC,KAAK,uBAAuD,QAA9BN,EAAKjB,EAAS0B,kBAA+B,IAAPT,OAAgB,EAASA,EAAGI,QAC5G,IAGRhD,KAAK8D,WAAa,IAElBR,EAAQG,iBAAmBzD,KAAKiE,QAChCX,EAAQI,oBAAoBiB,OAAO3E,KAAKiE,QAGpD,EAIG,SAASW,EAA4BC,EAASC,EAAMnD,EAAUkC,GAEjE,OADAgB,EAAQE,iBAAiBD,EAAMnD,EAAUkC,GAClC,CACH9B,QAASA,KACL8C,EAAQG,oBAAoBF,EAAMnD,EAAUkC,EAAQ,EAGhE,CACO,SAASoB,EAAsBJ,EAASC,EAAMnD,EAAUkC,GAE3D,OADAgB,EAAQE,iBAAiBD,EAAMnD,EAAUkC,GAClC,CACH9B,QAASA,KACL8C,EAAQG,oBAAoBF,EAAMnD,EAAUkC,EAAQ,EAGhE,CAjBAP,EAAQG,iBAAkB,EAC1BH,EAAQI,oBAAsB,IA7G9B,MACI/D,WAAAA,GACIK,KAAKkF,OAAS,IAAIC,GACtB,CACA,QAAIC,GACA,OAAOpF,KAAKkF,OAAOE,IACvB,CACAb,GAAAA,CAAIP,EAAOX,GACPrD,KAAKkF,OAAOG,IAAIrB,EAAOX,EAC3B,CACAsB,OAAOX,GACHhE,KAAKkF,OAAOP,OAAOX,EACvB,CACAL,KAAAA,GACI3D,KAAKkF,OAAOvB,OAChB,GAyHG,MAAM2B,EACT3F,WAAAA,GACIK,KAAKuF,SAAW,IAAIjC,EACpBtD,KAAKwF,kBAAoB,EACzBxF,KAAKyF,SAAU,EACfzF,KAAK0F,QAAWjB,IAIZ,MAAMkB,EAAqC3F,KAAKwF,kBAChD,OAAOxF,KAAKuF,SAASvB,OAAM,KAQnBhE,KAAKwF,kBAAoBG,GACzBlB,GACJ,GACF,CAEV,CACAD,IAAAA,GACIxE,KAAKwF,oBACDxF,KAAKyF,UAGTzF,KAAKyF,SAAU,EACff,gBAAe,KACX1E,KAAKyF,SAAU,EACfzF,KAAKuF,SAASf,MAAM,IAE5B,CACAzC,OAAAA,GACI/B,KAAKuF,SAASxD,SAClB,GCjNJ,SAAWZ,GACPA,EAAWyE,KAAO,CACd7D,QAASA,QAWbZ,EAAW0E,KAPX,SAAcC,GACV,MAAO,CACH/D,QAASA,KACL+D,GAAM,EAGlB,CAEH,CAdD,CAcG3E,IAAeA,EAAa,CAAC,IACzB,MAAM4E,EACT,cAAIC,GACA,OAAOhG,KAAKiG,WAChB,CACAtG,WAAAA,GACIK,KAAKiG,aAAc,EAAM,QAAA5E,EAAAC,UAAAC,OADd2E,EAAI,IAAAzE,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJwE,EAAIxE,GAAAJ,UAAAI,GAEf1B,KAAKmG,aAAeD,CACxB,CACAE,cAAAA,GAAyB,IAAD,IAAAC,EAAA/E,UAAAC,OAAN2E,EAAI,IAAAzE,MAAA4E,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,GAAAhF,UAAAgF,GAClBJ,EAAKlE,SAASuE,GAAQvG,KAAKmG,aAAahC,KAAKoC,IACjD,CACAxE,OAAAA,GACQ/B,KAAKiG,cAGTjG,KAAKiG,aAAc,EACnBjG,KAAKmG,aAAanE,SAASuE,GAAQA,EAAIxE,YACvC/B,KAAKmG,aAAe,GACxB,EAEG,MAAMK,EACT7G,WAAAA,GACIK,KAAKyG,YAActF,EAAWyE,IAClC,CACA,SAAI7C,CAAM2D,GACF1G,KAAKyG,aACLzG,KAAKyG,YAAY1E,UAErB/B,KAAKyG,YAAcC,CACvB,CACA3E,OAAAA,GACQ/B,KAAKyG,cACLzG,KAAKyG,YAAY1E,UACjB/B,KAAKyG,YAActF,EAAWyE,KAEtC,ECnCG,SAASe,EAAmB9B,EAAS+B,GACxC,MAAMC,EAAW,IAAIC,gBAAgBC,IAMjCC,uBAAsB,KAClB,MAAMC,EAAaF,EAAQ,GAC3BH,EAAGK,EAAW,GAChB,IAGN,OADAJ,EAASK,QAAQrC,GACV,CACH9C,QAASA,KACL8E,EAASM,UAAUtC,GACnBgC,EAASO,YAAY,EAGjC,CACO,MAAMC,EAAgB,SAACxC,GAAyB,IAAD,IAAAxD,EAAAC,UAAAC,OAAZ+F,EAAO,IAAA7F,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAP4F,EAAO5F,EAAA,GAAAJ,UAAAI,GAC7C,IAAK,MAAM6F,KAAaD,EAChBzC,EAAQ2C,UAAUC,SAASF,IAC3B1C,EAAQ2C,UAAUE,OAAOH,EAGrC,EACaI,EAAa,SAAC9C,GAAyB,IAAD,IAAAwB,EAAA/E,UAAAC,OAAZ+F,EAAO,IAAA7F,MAAA4E,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPgB,EAAOhB,EAAA,GAAAhF,UAAAgF,GAC1C,IAAK,MAAMiB,KAAaD,EACfzC,EAAQ2C,UAAUC,SAASF,IAC5B1C,EAAQ2C,UAAUjD,IAAIgD,EAGlC,EACaK,EAAcA,CAAC/C,EAASgD,EAAWC,KAC5C,MAAMC,EAAWlD,EAAQ2C,UAAUC,SAASI,GACxCC,IAAcC,GACdlD,EAAQ2C,UAAUjD,IAAIsD,IAErBC,GAAaC,GACdlD,EAAQ2C,UAAUE,OAAOG,EAC7B,EAEG,SAASG,EAAWC,EAAWC,GAClC,KAAOD,GAAW,CACd,GAAIA,IAAcC,EACd,OAAO,EAEXD,EAAYA,EAAUE,UAC1B,CACA,OAAO,CACX,CACO,SAASC,EAAqBC,GACjC,OAAO5G,MAAMV,UAAUuH,MAAMC,KAAKC,SAASJ,qBAAqBC,GAAM,EAC1E,CACO,SAASI,EAAW5D,GACvB,OAAO,IAAI6D,EAAa7D,EAC5B,CAIA,MAAM6D,UAAqB3C,EACvBpG,WAAAA,CAAYkF,GACR9E,QACAC,KAAK2I,YAAc,IAAIrF,EACvBtD,KAAK4I,WAAa5I,KAAK2I,YAAY3E,MACnChE,KAAK6I,WAAa,IAAIvF,EACtBtD,KAAK8I,UAAY9I,KAAK6I,WAAW7E,MACjChE,KAAKoG,eAAepG,KAAK2I,YAAa3I,KAAK6I,YAC3C,IAAIE,EAAWf,EAAWQ,SAASQ,cAAenE,GAC9CoE,GAAe,EACnB,MAAMC,EAAUA,KACZD,GAAe,EACVF,IACDA,GAAW,EACX/I,KAAK2I,YAAYnE,OACrB,EAEE2E,EAASA,KACPJ,IACAE,GAAe,EACfG,OAAOC,YAAW,KACVJ,IACAA,GAAe,EACfF,GAAW,EACX/I,KAAK6I,WAAWrE,OACpB,GACD,GACP,EAEJxE,KAAKsJ,qBAAuB,KACItB,EAAWQ,SAASQ,cAAenE,KACnCkE,IACpBA,EACAI,IAGAD,IAER,EAEArE,aAAmB0E,aACnBvJ,KAAKoG,eAAenB,EAAsBJ,EAAS,QAASqE,GAAS,IACrElJ,KAAKoG,eAAenB,EAAsBJ,EAAS,OAAQsE,GAAQ,MAGnEnJ,KAAKoG,eAAexB,EAA4BC,EAAS,QAASqE,GAAS,IAC3ElJ,KAAKoG,eAAexB,EAA4BC,EAAS,OAAQsE,GAAQ,IAEjF,CACAK,YAAAA,GACIxJ,KAAKsJ,sBACT,EAGJ,MAAMG,EAA4B,yBAM3B,SAASC,EAAsB1F,GAClC,OAAOA,EAAMyF,EACjB,CA2BO,SAASE,EAAuBC,GACnC,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,OAAEC,GAAWJ,EAAQK,wBAC7C,MAAO,CACHJ,KAAMA,EAAOT,OAAOc,QACpBJ,IAAKA,EAAMV,OAAOe,QAClBJ,MAAOA,EACPC,OAAQA,EAEhB,CAwBO,SAASI,IACZ,MAAMC,EAAU,IACTjC,EAAqB,aACrBA,EAAqB,YAEtBkC,EAAW,IAAIC,QACrB,IAAK,MAAMC,KAAUH,EACjBC,EAASjF,IAAImF,EAAQA,EAAOC,MAAMC,eAClCF,EAAOC,MAAMC,cAAgB,OAEjC,MAAO,CACHC,QAASA,KACL,IAAI/H,EACJ,IAAK,MAAM4H,KAAUH,EACjBG,EAAOC,MAAMC,cAAgD,QAA/B9H,EAAK0H,EAASM,IAAIJ,UAA4B,IAAP5H,EAAgBA,EAAK,OAE9FyH,EAAQ/F,OAAO,EAAG+F,EAAQ9I,OAAO,EAG7C,CAoBO,MAAMsJ,EACTlL,WAAAA,CAAYkF,GACR7E,KAAK6E,QAAUA,EACf7E,KAAK8K,YAAc,EACvB,CACAC,aAAAA,CAAcC,GACV,IAAK,MAAMnD,KAAa7H,KAAK8K,YACzBlD,EAAY5H,KAAK6E,QAASgD,GAAW,GAEzC7H,KAAK8K,YAAcE,EACdC,MAAM,KACNC,QAAQC,GAAMA,EAAEC,OAAO7J,OAAS,IACrC,IAAK,MAAMsG,KAAa7H,KAAK8K,YACzBlD,EAAY5H,KAAK6E,QAASgD,GAAW,EAE7C,EC5PG,SAASwD,EAAKC,GACjB,GAAmB,IAAfA,EAAI/J,OACJ,MAAM,IAAIsB,MAAM,qBAEpB,MAAO,CAACyI,EAAIhD,MAAM,EAAGgD,EAAI/J,OAAS,GAAI+J,EAAIA,EAAI/J,OAAS,GAC3D,CAIO,SAASgK,EAAeC,EAAMC,GACjC,GAAID,EAAKjK,SAAWkK,EAAKlK,OACrB,OAAO,EAEX,IAAK,IAAImK,EAAI,EAAGA,EAAIF,EAAKjK,OAAQmK,IAC7B,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,CACX,CAIO,SAASC,EAAYL,EAAKvI,GAC7B,MAAMqB,EAAQkH,EAAIjH,QAAQtB,GACtBqB,GAAS,IACTkH,EAAIhH,OAAOF,EAAO,GAClBkH,EAAIM,QAAQ7I,GAEpB,CAIO,SAAS8I,EAAUP,EAAKvI,GAC3B,MAAMqB,EAAQkH,EAAIjH,QAAQtB,GACtBqB,GAAS,IACTkH,EAAIhH,OAAOF,EAAO,GAClBkH,EAAInH,KAAKpB,GAEjB,CAUO,SAAS2E,EAAOoE,EAAO/I,GAC1B,MAAMqB,EAAQ0H,EAAMC,WAAWC,GAAMA,IAAMjJ,IAC3C,OAAIqB,GAAS,IACT0H,EAAMxH,OAAOF,EAAO,IACb,EAGf,CCxDO,MAAM6H,EAAQA,CAAClJ,EAAOmJ,EAAKC,IAC1BD,EAAMC,EAKCD,EAEJE,KAAKF,IAAIC,EAAKC,KAAKD,IAAIpJ,EAAOmJ,IAE5BG,EAA4BA,KACrC,IAAItJ,EAAQ,EACZ,MAAO,CAAEuJ,KAAMA,KAAOvJ,KAASwJ,WAAY,EAElCC,EAAQA,CAAC3G,EAAM4G,KACxB,MAAMC,EAAS,GAKf,GAJkB,iBAAPD,IACPA,EAAK5G,EACLA,EAAO,GAEPA,GAAQ4G,EACR,IAAK,IAAIf,EAAI7F,EAAM6F,EAAIe,EAAIf,IACvBgB,EAAOvI,KAAKuH,QAIhB,IAAK,IAAIA,EAAI7F,EAAM6F,EAAIe,EAAIf,IACvBgB,EAAOvI,KAAKuH,GAGpB,OAAOgB,CAAM,EC7BV,MAAMC,EACT,QAAIvH,CAAKA,GACLpF,KAAK4M,MAAQxH,CACjB,CACA,QAAIA,GACA,OAAOpF,KAAK4M,KAChB,CACA,qBAAIC,GACA,OAAO7M,KAAK8M,kBAChB,CACA,WAAIC,GACA,YAA0C,IAA5B/M,KAAK8M,kBACvB,CACA,eAAIE,GACA,OAAOhN,KAAK+M,QAAU/M,KAAKiN,KAAKD,YAAc,CAClD,CACA,mBAAIE,GACA,OAAOlN,KAAKiN,KAAKD,WACrB,CACA,eAAIG,GACA,OAAOnN,KAAK+M,QAAU/M,KAAKiN,KAAKE,YAAc,CAClD,CACA,mBAAIC,GACA,OAAOpN,KAAKiN,KAAKE,WACrB,CACA,YAAIE,GACA,OAAOrN,KAAKiN,KAAKI,QACrB,CACA,QAAIC,GACA,QAAStN,KAAKiN,KAAKK,IACvB,CACA,WAAIC,CAAQA,GACRvN,KAAKwN,UAAU/C,MAAMC,cAAgB6C,EAAU,GAAK,MACxD,CACA5N,WAAAA,CAAY6N,EAAWP,EAAM7H,EAAMsB,GAC/B1G,KAAKwN,UAAYA,EACjBxN,KAAKiN,KAAOA,EACZjN,KAAK0G,WAAaA,EAClB1G,KAAK8M,wBAAqBrM,EACN,iBAAT2E,GACPpF,KAAK4M,MAAQxH,EACbpF,KAAK8M,wBAAqBrM,EAC1B+M,EAAUhG,UAAUjD,IAAI,aAGxBvE,KAAK4M,MAAQ,EACb5M,KAAK8M,mBAAqB1H,EAAKyH,kBAEvC,CACAY,UAAAA,CAAWV,EAAS3H,GAChB,IAAIxC,EACAmK,IAAY/M,KAAK+M,UAGjBA,GACA/M,KAAKoF,KAAO6G,EAAyC,QAAlCrJ,EAAK5C,KAAK8M,0BAAuC,IAAPlK,EAAgBA,EAAK,EAAG5C,KAAKkN,gBAAiBlN,KAAKoN,iBAChHpN,KAAK8M,wBAAqBrM,IAG1BT,KAAK8M,mBACe,iBAAT1H,EAAoBA,EAAOpF,KAAKoF,KAC3CpF,KAAKoF,KAAO,GAEhBpF,KAAKwN,UAAUhG,UAAUkG,OAAO,UAAWX,GACvC/M,KAAKiN,KAAKQ,YACVzN,KAAKiN,KAAKQ,WAAWV,GAE7B,CACAhL,OAAAA,GAEI,OADA/B,KAAK0G,WAAW3E,UACT/B,KAAKiN,IAChB,EC/DG,IAAIU,EAKAC,EAOAC,EAMAC,GAjBX,SAAWH,GACPA,EAAwB,WAAI,aAC5BA,EAAsB,SAAI,UAC7B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,SACzC,CALD,CAKGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAOC,WAAa,CAAEjJ,KAAM,cAI5BgJ,EAAOE,MAHP,SAAe5J,GACX,MAAO,CAAEU,KAAM,QAASV,QAC5B,EAKA0J,EAAOG,UAHP,SAAmBpB,GACf,MAAO,CAAE/H,KAAM,YAAa+H,oBAChC,CAEH,CAVD,CAUGiB,IAAWA,EAAS,CAAC,IACjB,MAAMI,EACT,eAAIC,GACA,OAAOnO,KAAKoO,YAChB,CACA,QAAIhJ,GACA,OAAOpF,KAAK4M,KAChB,CACA,QAAIxH,CAAKrC,GACL/C,KAAK4M,MAAQ7J,CACjB,CACA,kBAAIsL,GACA,OAAOrO,KAAKsO,eAChB,CACA,kBAAID,CAAetL,GACf/C,KAAKsO,gBAAkBvL,CAC3B,CACA,UAAIxB,GACA,OAAOvB,KAAKuO,UAAUhN,MAC1B,CACA,eAAIiN,GACA,OAAOxO,KAAKyO,aAAe,IAAIzO,KAAKyO,mBAAgBhO,CACxD,CACA,eAAIiO,GACA,OAAO1O,KAAK2O,YAChB,CACA,eAAID,CAAY3L,GACZ/C,KAAK2O,aAAe5L,EACpB,MAAM6L,EAAM5O,KAAKoF,KACjBpF,KAAKoF,KAAOpF,KAAKqO,eACjBrO,KAAKqO,eAAiBO,EACtBvH,EAAcrH,KAAK6E,QAAS,gBAAiB,eAC7C7E,KAAK6E,QAAQ2C,UAAUjD,IAAIvE,KAAK0O,aAAef,EAAYkB,WACrD,gBACA,cACV,CACA,eAAI7B,GACA,OAAOhN,KAAKuO,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAKhC,aAAa,EACpE,CACA,eAAIG,GACA,OAAuB,IAAhBnN,KAAKuB,OACN0N,OAAOC,kBACPlP,KAAKuO,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAK7B,aAAa,EACnE,CACA,wBAAIgC,GACA,OAAOnP,KAAKoP,qBAChB,CACA,wBAAID,CAAqBA,GACjBnP,KAAKoP,wBAA0BD,IAGnCnP,KAAKoP,sBAAwBD,EAC7BnP,KAAKqP,uBACT,CACA,sBAAIC,GACA,OAAOtP,KAAKuP,mBAChB,CACA,sBAAID,CAAmBA,GACftP,KAAKuP,sBAAwBD,IAGjCtP,KAAKuP,oBAAsBD,EAC3BtP,KAAKqP,uBACT,CACA,YAAIG,GACA,OAAOxP,KAAKyP,SAChB,CACA,YAAID,CAASzM,GACT/C,KAAKyP,UAAY1M,EACjB6E,EAAY5H,KAAK6E,QAAS,wBAAyB9B,EACvD,CACA,UAAI2M,GACA,OAAO1P,KAAK2P,OAChB,CACA,UAAID,CAAO3M,GACP/C,KAAK2P,QAAU5M,CACnB,CACApD,WAAAA,CAAY6N,EAAW3J,GAAU,IACzBjB,EAAIgN,EADoBC,EAAA,KAE5B7P,KAAKwN,UAAYA,EACjBxN,KAAKuO,UAAY,GACjBvO,KAAK8P,OAAS,GACd9P,KAAK4M,MAAQ,EACb5M,KAAKsO,gBAAkB,EACvBtO,KAAKoO,aAAe,EACpBpO,KAAKyO,kBAAehO,EACpBT,KAAKoP,uBAAwB,EAC7BpP,KAAKuP,qBAAsB,EAC3BvP,KAAKyP,WAAY,EACjBzP,KAAK2P,QAAU,EACf3P,KAAK+P,cAAgB,IAAIzM,EACzBtD,KAAKgQ,aAAehQ,KAAK+P,cAAc/L,MACvChE,KAAKiQ,cAAgB,IAAI3M,EACzBtD,KAAKkQ,aAAelQ,KAAKiQ,cAAcjM,MACvChE,KAAKmQ,iBAAmB,IAAI7M,EAC5BtD,KAAKoQ,gBAAkBpQ,KAAKmQ,iBAAiBnM,MAC7ChE,KAAKqQ,OAAS,SAACjM,EAAOkM,EAAOC,EAA2CC,EAAoBC,EAAqBC,EAA6CC,EAA6CC,EAAYC,GACnN,QAD8B,IAALN,IAAAA,EAAQV,EAAKtB,UAAU1M,KAAKiP,GAAMA,EAAE1L,aAAgE,IAAhBsL,IAAAA,EAAmBzB,OAAO8B,wBAAmC,IAAhBJ,IAAAA,EAAmB1B,OAAOC,mBAChL9K,EAAQ,GAAKA,EAAQyL,EAAKtB,UAAUhN,OACpC,OAAO,EAEX,MAAMyP,EAAYxE,EAAMpI,GAAQ,GAC1B6M,EAAczE,EAAMpI,EAAQ,EAAGyL,EAAKtB,UAAUhN,QAEpD,GAAIkP,EACA,IAAK,MAAM/E,KAAK+E,EACZ9E,EAAYqF,EAAWtF,GACvBC,EAAYsF,EAAavF,GAGjC,GAAI8E,EACA,IAAK,MAAM9E,KAAK8E,EACZ3E,EAAUmF,EAAWtF,GACrBG,EAAUoF,EAAavF,GAI/B,MAAMwF,EAAUF,EAAUnP,KAAK6J,GAAMmE,EAAKtB,UAAU7C,KAC9CyF,EAAUH,EAAUnP,KAAK6J,GAAM6E,EAAM7E,KAErC0F,EAAYH,EAAYpP,KAAK6J,GAAMmE,EAAKtB,UAAU7C,KAClD2F,EAAYJ,EAAYpP,KAAK6J,GAAM6E,EAAM7E,KAEzC4F,EAAaN,EAAUlC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAI1B,EAAKtB,UAAU7C,GAAGsB,YAAcuD,EAAM7E,IAAI,GACtF8F,EAAaR,EAAUlC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAI1B,EAAKtB,UAAU7C,GAAGyB,YAAcoD,EAAM7E,IAAI,GAEtF+F,EAAsC,IAAvBR,EAAY1P,OAC3B0N,OAAOC,kBACP+B,EAAYnC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAIhB,EAAM7E,GAAKmE,EAAKtB,UAAU7C,GAAGsB,aAAa,GAC3E0E,EAAsC,IAAvBT,EAAY1P,OAC3B0N,OAAO8B,kBACPE,EAAYnC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAIhB,EAAM7E,GAAKmE,EAAKtB,UAAU7C,GAAGyB,aAAa,GAE3EwE,EAAWvF,KAAKD,IAAImF,EAAYI,GAChCE,EAAWxF,KAAKF,IAAIuF,EAAcD,GAExC,IAAIK,GAAU,EACd,GAAIjB,EAAY,CACZ,MAAMkB,EAAWjC,EAAKtB,UAAUqC,EAAWxM,OACrC2I,EAAUuD,GAASM,EAAWmB,WACpCF,EAAU9E,IAAY+E,EAAS/E,QAC/B+E,EAASrE,WAAWV,EAAS6D,EAAWxL,KAC5C,CACA,IAAKyM,GAAWhB,EAAW,CACvB,MAAMiB,EAAWjC,EAAKtB,UAAUsC,EAAUzM,OACpC2I,EAAUuD,EAAQO,EAAUkB,WAClCF,EAAU9E,IAAY+E,EAAS/E,QAC/B+E,EAASrE,WAAWV,EAAS8D,EAAUzL,KAC3C,CACA,GAAIyM,EACA,OAAOhC,EAAKQ,OAAOjM,EAAOkM,EAAOC,EAAOC,EAAoBC,EAAqBC,EAAkBC,GAIvG,IAAIqB,EAAc,EAEdC,EAHmBhG,EAAMqE,EAAOqB,EAAUC,GAI9C,IAAK,IAAIlG,EAAI,EAAGA,EAAIwF,EAAQ3P,OAAQmK,IAAK,CACrC,MAAMsD,EAAOkC,EAAQxF,GACftG,EAAO6G,EAAMkF,EAAQzF,GAAKuG,EAASjD,EAAKhC,YAAagC,EAAK7B,aAC1D+E,EAAY9M,EAAO+L,EAAQzF,GACjCsG,GAAeE,EACfD,GAAWC,EACXlD,EAAK5J,KAAOA,CAChB,CAEA,IAAI+M,EAAYH,EAChB,IAAK,IAAItG,EAAI,EAAGA,EAAI0F,EAAU7P,OAAQmK,IAAK,CACvC,MAAMsD,EAAOoC,EAAU1F,GACjBtG,EAAO6G,EAAMoF,EAAU3F,GAAKyG,EAAWnD,EAAKhC,YAAagC,EAAK7B,aAEpEgF,GADkB/M,EAAOiM,EAAU3F,GAEnCsD,EAAK5J,KAAOA,CAChB,CAEA,OAAOkL,CACX,EACAtQ,KAAK2O,aAA8C,QAA9B/L,EAAKiB,EAAQ6K,mBAAgC,IAAP9L,EAAgBA,EAAK+K,EAAYyE,SAC5FpS,KAAK6E,QAAU7E,KAAKqS,kBACpBrS,KAAK0P,OAAmC,QAAzBE,EAAK/L,EAAQ6L,cAA2B,IAAPE,EAAgBA,EAAK,EACrE5P,KAAKsS,wBAC8B7R,IAA/BoD,EAAQyO,sBAEAzO,EAAQyO,mBACpBtS,KAAKuS,cAAgBvS,KAAKwS,sBAC1BxS,KAAKyS,cAAgBzS,KAAK0S,sBAC1B1S,KAAK6E,QAAQ8N,YAAY3S,KAAKyS,eAC9BzS,KAAK6E,QAAQ8N,YAAY3S,KAAKuS,eAC9BvS,KAAKwN,UAAUmF,YAAY3S,KAAK6E,SAChC7E,KAAKyK,MAAM5G,EAAQ+O,QAEf/O,EAAQgP,aACR7S,KAAK4M,MAAQ/I,EAAQgP,WAAWzN,KAChCvB,EAAQgP,WAAWC,MAAM9Q,SAAQ,CAAC+Q,EAAgB3O,KAC9C,MAAM4O,OAAoCvS,IAA3BsS,EAAehG,SAC1BgG,EAAehG,QACbgG,EAAe3N,KACf,CACEN,KAAM,YACN+H,kBAAmBkG,EAAe3N,MAEpC6H,EAAO8F,EAAe9F,KAC5BjN,KAAKiT,QAAQhG,EAAM+F,EAAQ5O,GAAO,EAEjC,IAGLpE,KAAKoO,aAAepO,KAAKuO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEtG,MAAM,GAChEpF,KAAKkT,kBAEb,CACAzI,KAAAA,CAAMmI,GAC+E,iBAA5EA,aAAuC,EAASA,EAAOO,kBACxD9L,EAAcrH,KAAK6E,QAAS,uBAC5B7E,KAAK6E,QAAQ4F,MAAM2I,eAAe,2BAGlCzL,EAAW3H,KAAK6E,QAAS,wBACrB+N,aAAuC,EAASA,EAAOO,kBACvDnT,KAAK6E,QAAQ4F,MAAM4I,YAAY,wBAAyBT,EAAOO,iBAG3E,CACAG,aAAAA,CAAclP,GACV,GAAIA,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,OACrC,MAAM,IAAIsB,MAAM,uBAGpB,OADiB7C,KAAKuO,UAAUnK,GAChB2I,OACpB,CACAwG,cAAAA,CAAenP,EAAO2I,GAClB,GAAI3I,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,OACrC,MAAM,IAAIsB,MAAM,uBAEpB,MAAM2Q,EAAWxT,KAAKuO,UAAUnK,GAChCoP,EAAS/F,WAAWV,EAASyG,EAASpO,MACtCpF,KAAKyT,qBAAqBrP,GAC1BpE,KAAK0T,cACL1T,KAAKkT,iBACT,CACAS,WAAAA,CAAYvP,GACR,OAAIA,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,QAC7B,EAELvB,KAAKuO,UAAUnK,GAAOgB,IACjC,CACAwO,UAAAA,CAAWxP,EAAOgB,GACd,GAAIhB,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,OACrC,OAEJ,MAAMsS,EAAUrH,EAAMxM,KAAKuO,UAAUhN,QAAQ2J,QAAQQ,GAAMA,IAAMtH,IAC3DoM,EAAqB,IACpBqD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACvE1P,GAEEqM,EAAsBoD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAC1F/E,EAAOhP,KAAKuO,UAAUnK,GAC5BgB,EAAOgH,KAAK4H,MAAM5O,GAClBA,EAAO6G,EAAM7G,EAAM4J,EAAKhC,YAAaZ,KAAKF,IAAI8C,EAAK7B,YAAanN,KAAK4M,QACrEoC,EAAK5J,KAAOA,EACZpF,KAAKiU,SAASzD,EAAoBC,EACtC,CACAyD,QAAAA,GACI,OAAOlU,KAAKuO,UAAU1M,KAAKiP,GAAMA,EAAE7D,MACvC,CACAkH,WAAAA,CAAYnF,EAAM5J,GACd,MAAMhB,EAAQpE,KAAKuO,UAAUlK,QAAQ2K,GACrC,GAAI5K,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,OACrC,OAEJ6D,EAAuB,iBAATA,EAAoBA,EAAO4J,EAAK5J,KAC9CA,EAAO6G,EAAM7G,EAAM4J,EAAKhC,YAAagC,EAAK7B,aAC1C6B,EAAK5J,KAAOA,EACZ,MAAMyO,EAAUrH,EAAMxM,KAAKuO,UAAUhN,QAAQ2J,QAAQQ,GAAMA,IAAMtH,IAC3DoM,EAAqB,IACpBqD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACvE1P,GAEEqM,EAAsBoD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAKhG/T,KAAKiU,SAAS,IAAIzD,EAAoBpM,GAAQqM,EAClD,CACAwC,OAAAA,CAAQhG,EAAM7H,EAA+BhB,EAA+BgQ,QAA1D,IAAJhP,IAAAA,EAAO,CAAEN,KAAM,oBAAqB,IAALV,IAAAA,EAAQpE,KAAKuO,UAAUhN,QAChE,MAAMiM,EAAYhF,SAAS6L,cAAc,OAGzC,IAAIC,EAFJ9G,EAAU3F,UAAY,UACtB2F,EAAUmF,YAAY1F,EAAKpI,SAGvByP,EADgB,iBAATlP,EACIA,EAEQ,UAAdA,EAAKN,KACC9E,KAAK2T,YAAYvO,EAAKhB,OAAS,EAEvB,cAAdgB,EAAKN,KACC,CAAE+H,kBAAmBzH,EAAKyH,mBAG1BI,EAAKD,YAEpB,MAAMtG,EAAauG,EAAKkH,aAAaI,GAAYvU,KAAKmU,YAAYX,EAAUe,EAAQnP,QAC9EoO,EAAW,IAAI7G,EAASa,EAAWP,EAAMqH,EAAU,CACrDvS,QAASA,KACL2E,EAAW3E,UACX/B,KAAKuS,cAAciC,YAAYhH,EAAU,IAUjD,GAPIpJ,IAAUpE,KAAKuO,UAAUhN,OACzBvB,KAAKuS,cAAcI,YAAYnF,GAG/BxN,KAAKuS,cAAckC,aAAajH,EAAWxN,KAAKuS,cAAc/Q,SAASwN,KAAK5K,IAEhFpE,KAAKuO,UAAUjK,OAAOF,EAAO,EAAGoP,GAC5BxT,KAAKuO,UAAUhN,OAAS,EAAG,CAE3B,MAAMmT,EAAOlM,SAAS6L,cAAc,OACpCK,EAAK7M,UAAY,UACjB,MAAM8M,EAAkB3Q,IACpB,IAAK,MAAMgL,KAAQhP,KAAKuO,UACpBS,EAAKzB,SAAU,EAEnB,MAAMlD,EAAUD,IACVwK,EAAQ5U,KAAK2O,eAAiBhB,EAAYkB,WAC1C7K,EAAM6Q,QACN7Q,EAAM8Q,QACNC,EHrUf,SAAoBjJ,EAAOkJ,GAC9B,IAAK,IAAItJ,EAAI,EAAGA,EAAII,EAAMvK,OAAQmK,IAE9B,GAAIsJ,EADYlJ,EAAMJ,IAElB,OAAOA,EAGf,OAAQ,CACZ,CG6TkCuJ,CAAWjV,KAAK8P,QAASoF,GAAMA,EAAE1H,YAAckH,IAE3DnE,EAAQvQ,KAAKuO,UAAU1M,KAAKiP,GAAMA,EAAE1L,OAE1C,IAAIwL,EACAC,EACJ,MAAMG,EAAYxE,EAAMuI,GAAY,GAC9B9D,EAAczE,EAAMuI,EAAY,EAAG/U,KAAKuO,UAAUhN,QAClD+P,EAAaN,EAAUlC,QAAO,CAACC,EAAGrD,IAAMqD,GAAK/O,KAAKuO,UAAU7C,GAAGsB,YAAcuD,EAAM7E,KAAK,GACxF8F,EAAaR,EAAUlC,QAAO,CAACC,EAAGrD,IAAMqD,GAAK/O,KAAKuO,UAAU7C,GAAG0B,gBAAkBmD,EAAM7E,KAAK,GAC5F+F,EAAsC,IAAvBR,EAAY1P,OAC3B0N,OAAOC,kBACP+B,EAAYnC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BwB,EAAM7E,GAAK1L,KAAKuO,UAAU7C,GAAGsB,cAAc,GAC9C0E,EAAsC,IAAvBT,EAAY1P,OAC3B0N,OAAO8B,kBACPE,EAAYnC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BwB,EAAM7E,GACH1L,KAAKuO,UAAU7C,GAAG0B,kBAAkB,GAC1CuE,EAAWvF,KAAKD,IAAImF,EAAYI,GAChCE,EAAWxF,KAAKF,IAAIuF,EAAcD,GAClC2D,EAAkBnV,KAAKoV,mBAAmBpE,GAC1CqE,EAAiBrV,KAAKoV,mBAAmBnE,GAC/C,GAA+B,iBAApBkE,EAA8B,CACrC,MAAMG,EAAkBtV,KAAKuO,UAAU4G,GACjCI,EAAWnJ,KAAKoJ,MAAMF,EAAgBpI,gBAAkB,GAC9D0D,EAAa,CACTxM,MAAO+Q,EACPpD,WAAYuD,EAAgBvI,QACtB4E,EAAW4D,EACX5D,EAAW4D,EACjBnQ,KAAMkQ,EAAgBlQ,KAE9B,CACA,GAA8B,iBAAnBiQ,EAA6B,CACpC,MAAMC,EAAkBtV,KAAKuO,UAAU8G,GACjCE,EAAWnJ,KAAKoJ,MAAMF,EAAgBpI,gBAAkB,GAC9D2D,EAAY,CACRzM,MAAOiR,EACPtD,WAAYuD,EAAgBvI,QACtB6E,EAAW2D,EACX3D,EAAW2D,EACjBnQ,KAAMkQ,EAAgBlQ,KAE9B,CACA,MAAMqQ,EAAiBzR,IACnB,MAGMsM,GAHUtQ,KAAK2O,eAAiBhB,EAAYkB,WAC5C7K,EAAM6Q,QACN7Q,EAAM8Q,SACYF,EACxB5U,KAAKqQ,OAAO0E,EAAWzE,EAAOC,OAAO9P,OAAWA,EAAWkR,EAAUC,EAAUhB,EAAYC,GAC3F7Q,KAAKyT,uBACLzT,KAAK0T,aAAa,EAEhBgC,EAAMA,KACR,IAAK,MAAM1G,KAAQhP,KAAKuO,UACpBS,EAAKzB,SAAU,EAEnBlD,EAAQM,UACR3K,KAAKkT,kBACL1K,SAASxD,oBAAoB,cAAeyQ,GAC5CjN,SAASxD,oBAAoB,YAAa0Q,GAC1ClN,SAASxD,oBAAoB,gBAAiB0Q,GAC9C1V,KAAK+P,cAAcvL,UAAK/D,EAAU,EAEtC+H,SAASzD,iBAAiB,cAAe0Q,GACzCjN,SAASzD,iBAAiB,YAAa2Q,GACvClN,SAASzD,iBAAiB,gBAAiB2Q,EAAI,EAEnDhB,EAAK3P,iBAAiB,cAAe4P,GACrC,MAAMgB,EAAW,CACbnI,UAAWkH,EACXhO,WAAYA,KACRgO,EAAK1P,oBAAoB,cAAe2P,GACxC3U,KAAKyS,cAAc+B,YAAYE,EAAK,GAG5C1U,KAAKyS,cAAcE,YAAY+B,GAC/B1U,KAAK8P,OAAO3L,KAAKwR,EACrB,CACKvB,GACDpU,KAAKiU,SAAS,CAAC7P,IAEdgQ,GACe,iBAAThP,GACO,eAAdA,EAAKN,MACL9E,KAAK4V,sBAET5V,KAAKiQ,cAAczL,KAAKyI,EAC5B,CACA2I,mBAAAA,GACI,MAAMC,EAAoB,GAC1B,IAAIC,EAAe,EACnB,IAAK,MAAM9G,KAAQhP,KAAKuO,UAChBS,EAAK7B,YAAc6B,EAAKhC,YAAc,IACtC6I,EAAkB1R,KAAK6K,GACvB8G,GAAgB9G,EAAK5J,MAG7B,MAAMA,EAAOgH,KAAKoJ,MAAMM,EAAeD,EAAkBtU,QACzD,IAAK,MAAMyN,KAAQ6G,EACf7G,EAAK5J,KAAO6G,EAAM7G,EAAM4J,EAAKhC,YAAagC,EAAK7B,aAEnD,MAAM0G,EAAUrH,EAAMxM,KAAKuO,UAAUhN,QAC/BiP,EAAqBqD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG/T,KAAKiU,SAASzD,EAAoBC,EACtC,CACAsF,UAAAA,CAAW3R,EAAO4O,EAAQoB,QAAU,IAAVA,IAAAA,GAAa,GAEnC,MAAMZ,EAAWxT,KAAKuO,UAAUjK,OAAOF,EAAO,GAAG,GAGjD,GAFAoP,EAASzR,UAEL/B,KAAKuO,UAAUhN,QAAU,EAAG,CAC5B,MAAMwT,EAAY3I,KAAKD,IAAI/H,EAAQ,EAAG,GACrBpE,KAAK8P,OAAOxL,OAAOyQ,EAAW,GAAG,GACzCrO,YACb,CAQA,OAPK0N,GACDpU,KAAKiU,WAELjB,GAA0B,eAAhBA,EAAOlO,MACjB9E,KAAK4V,sBAET5V,KAAKmQ,iBAAiB3L,KAAKgP,EAASvG,MAC7BuG,EAASvG,IACpB,CACA+I,wBAAAA,CAAyB5R,GACrB,GAAIA,EAAQ,GAAKA,GAASpE,KAAKuO,UAAUhN,OACrC,MAAM,IAAIsB,MAAM,uBAGpB,OADiB7C,KAAKuO,UAAUnK,GAChByI,iBACpB,CACAoJ,QAAAA,CAASpQ,EAAM4G,GACX,MAAMI,EAAoB7M,KAAKgW,yBAAyBnQ,GAClDmN,OAAsC,IAAtBnG,EAChB7M,KAAK2T,YAAY9N,GACjBiI,EAAOG,UAAUpB,GACjBI,EAAOjN,KAAK+V,WAAWlQ,OAAMpF,GAAW,GAC9CT,KAAKiT,QAAQhG,EAAM+F,EAAQvG,EAC/B,CACAyJ,MAAAA,CAAO9Q,EAAMiJ,GACT,MAAM8H,EAAe/J,KAAKD,IAAInM,KAAKoF,KAAMpF,KAAKoO,cAG9C,GAFApO,KAAKoF,KAAOA,EACZpF,KAAKqO,eAAiBA,EACjBrO,KAAKwO,YAML,CACD,IAAI4H,EAAQ,EACZ,IAAK,IAAI1K,EAAI,EAAGA,EAAI1L,KAAKuO,UAAUhN,OAAQmK,IAAK,CAC5C,MAAMsD,EAAOhP,KAAKuO,UAAU7C,GACtB2K,EAAarW,KAAKwO,YAAY9C,GACV,iBAAf2K,EACPD,GAASC,EAGTjR,GAAQ4J,EAAK5J,IAErB,CACA,IAAK,IAAIsG,EAAI,EAAGA,EAAI1L,KAAKuO,UAAUhN,OAAQmK,IAAK,CAC5C,MAAMsD,EAAOhP,KAAKuO,UAAU7C,GACtB2K,EAAarW,KAAKwO,YAAY9C,GACV,iBAAf2K,GAA2BD,EAAQ,IAC1CpH,EAAK5J,KAAO6G,EAAMG,KAAK4H,MAAOqC,EAAajR,EAAQgR,GAAQpH,EAAKhC,YAAagC,EAAK7B,aAE1F,CACJ,KAzBuB,CACnB,MAAM0G,EAAUrH,EAAMxM,KAAKuO,UAAUhN,QAC/BiP,EAAqBqD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG/T,KAAKqQ,OAAOrQ,KAAKuO,UAAUhN,OAAS,EAAG6D,EAAO+Q,OAAc1V,EAAW+P,EAAoBC,EAC/F,CAqBAzQ,KAAKyT,uBACLzT,KAAK0T,aACT,CACAO,QAAAA,CAASzD,EAAoBC,GACzB,MAAMtC,EAAcnO,KAAKuO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEtG,MAAM,GAChEpF,KAAKqQ,OAAOrQ,KAAKuO,UAAUhN,OAAS,EAAGvB,KAAK4M,MAAQuB,OAAa1N,EAAW+P,EAAoBC,GAChGzQ,KAAKyT,uBACLzT,KAAK0T,cACL1T,KAAKkT,iBACT,CACAO,oBAAAA,CAAqB6C,GACjB,MAAMnI,EAAcnO,KAAKuO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEtG,MAAM,GAChE,IAAImR,EAAavW,KAAKoF,KAAO+I,EAC7B,MAAM0F,EAAUrH,EAAMxM,KAAKuO,UAAUhN,OAAS,GAAI,GAC5CiP,EAAqBqD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAM1L,KAAKuO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG,IAAK,MAAM3P,KAASqM,EAChB9E,EAAYkI,EAASzP,GAEzB,IAAK,MAAMA,KAASoM,EAChB3E,EAAUgI,EAASzP,GAES,iBAArBkS,GACPzK,EAAUgI,EAASyC,GAEvB,IAAK,IAAI5K,EAAI,EAAkB,IAAf6K,GAAoB7K,EAAImI,EAAQtS,OAAQmK,IAAK,CACzD,MAAMsD,EAAOhP,KAAKuO,UAAUsF,EAAQnI,IAC9BtG,EAAO6G,EAAM+C,EAAK5J,KAAOmR,EAAYvH,EAAKhC,YAAagC,EAAK7B,aAElEoJ,GADkBnR,EAAO4J,EAAK5J,KAE9B4J,EAAK5J,KAAOA,CAChB,CACJ,CACA8N,eAAAA,GACQlT,KAAKsS,oBAAsBtS,KAAKoO,aAAe,IAC/CpO,KAAKyO,aAAezO,KAAKuO,UAAU1M,KAAK6J,GAAMA,EAAEqB,QAAUrB,EAAEtG,KAAOpF,KAAKoO,kBAAe3N,IAE/F,CAUAiT,WAAAA,GAGI,GAFA1T,KAAKoO,aAAepO,KAAKuO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEtG,MAAM,GAChEpF,KAAKqP,uBACyB,IAA1BrP,KAAKuO,UAAUhN,OACf,OAEJ,MAAMiV,EAAmBxW,KAAKuO,UAAUrD,QAAQQ,GAAMA,EAAEqB,UAClD0J,EAAYrK,KAAKD,IAAI,EAAGqK,EAAiBjV,OAAS,GAClDmV,EAAqB1W,KAAK0P,OAAS+G,EAAarK,KAAKD,IAAI,EAAGqK,EAAiBjV,QACnF,IAAIoV,EAAkB,EACtB,MAAMC,EAAkB,GAElBC,EAA2B7W,KAAKuO,UAAUO,QAAO,CAACxD,EAAKkI,EAAU9H,KACnE,MAAMoL,EAAOtD,EAASzG,QAAU,EAAI,EAOpC,OANU,IAANrB,EACAJ,EAAInH,KAAK2S,GAGTxL,EAAInH,KAAKmH,EAAII,EAAI,GAAKoL,GAEnBxL,CAAG,GACX,IAEHtL,KAAKuO,UAAUvM,SAAQ,CAACiL,EAAMvB,KAC1BiL,GAAmB3W,KAAKuO,UAAU7C,GAAGtG,KACrCwR,EAAgBzS,KAAKwS,GACrB,MAAMvR,EAAO6H,EAAKF,QAAUE,EAAK7H,KAAOsR,EAAoB,EACtDK,EAA8B3K,KAAKD,IAAI,EAAG0K,EAAyBnL,GAAK,GACxEsL,EAAe,IAANtL,GAA2C,IAAhCqL,EACpB,EACAH,EAAgBlL,EAAI,GACjBqL,EAA8BN,EAC3BC,EACZ,GAAIhL,EAAI1L,KAAKuO,UAAUhN,OAAS,EAAG,CAE/B,MAAMgT,EAAUtH,EAAKF,QACfiK,EAAS5R,EAAO6R,EAAgBjX,KAAK0P,OAAS,EAC9CsH,EACFhX,KAAK2O,eAAiBhB,EAAYkB,aAClC7O,KAAK8P,OAAOpE,GAAG8B,UAAU/C,MAAMZ,KAAQ,GAAE0K,MACzCvU,KAAK8P,OAAOpE,GAAG8B,UAAU/C,MAAMX,IAAO,OAEtC9J,KAAK2O,eAAiBhB,EAAYyE,WAClCpS,KAAK8P,OAAOpE,GAAG8B,UAAU/C,MAAMZ,KAAQ,MACvC7J,KAAK8P,OAAOpE,GAAG8B,UAAU/C,MAAMX,IAAO,GAAEyK,MAEhD,CAEIvU,KAAK2O,eAAiBhB,EAAYkB,aAClC5B,EAAKO,UAAU/C,MAAMV,MAAS,GAAE3E,MAChC6H,EAAKO,UAAU/C,MAAMZ,KAAQ,GAAEmN,MAC/B/J,EAAKO,UAAU/C,MAAMX,IAAM,GAC3BmD,EAAKO,UAAU/C,MAAMT,OAAS,IAE9BhK,KAAK2O,eAAiBhB,EAAYyE,WAClCnF,EAAKO,UAAU/C,MAAMT,OAAU,GAAE5E,MACjC6H,EAAKO,UAAU/C,MAAMX,IAAO,GAAEkN,MAC9B/J,EAAKO,UAAU/C,MAAMV,MAAQ,GAC7BkD,EAAKO,UAAU/C,MAAMZ,KAAO,IAEhCoD,EAAKA,KAAKiJ,OAAOjJ,EAAK7H,KAAOsR,EAAmB1W,KAAKsO,gBAAgB,GAE7E,CACA8G,kBAAAA,CAAmBvB,GAEf,IAAK,MAAMzP,KAASyP,EAAS,CACzB,MAAML,EAAWxT,KAAKuO,UAAUnK,GAChC,GAAKoP,EAASzG,SAGVyG,EAASlG,KACT,OAAOlJ,CAEf,CAEA,IAAK,MAAMA,KAASyP,EAAS,CACzB,MAAML,EAAWxT,KAAKuO,UAAUnK,GAChC,GAAIoP,EAASzG,SACTyG,EAASrG,YAAcqG,EAASxG,YAAc,EAC9C,OAEJ,IAAKwG,EAASzG,SAAWyG,EAASlG,KAC9B,OAAOlJ,CAEf,CAEJ,CACAiL,oBAAAA,GACI,IAAI6H,GAAW,EACf,MAAMC,EAAgBnX,KAAKuO,UAAU1M,KAAK6J,GAAOwL,EAAWxL,EAAEtG,KAAOsG,EAAEsB,YAAc,GAAKkK,IAC1FA,GAAW,EACX,MAAME,EAAcpX,KAAKuO,UAAU1M,KAAK6J,GAAOwL,EAAWxL,EAAEyB,YAAczB,EAAEtG,KAAO,GAAK8R,IAClFG,EAAe,IAAIrX,KAAKuO,WAAW+I,UACzCJ,GAAW,EACX,MAAMK,EAAcF,EACfxV,KAAK6J,GAAOwL,EAAWxL,EAAEtG,KAAOsG,EAAEsB,YAAc,GAAKkK,IACrDI,UACLJ,GAAW,EACX,MAAMM,EAAYH,EACbxV,KAAK6J,GAAOwL,EAAWxL,EAAEyB,YAAczB,EAAEtG,KAAO,GAAK8R,IACrDI,UACL,IAAIG,EAAW,EACf,IAAK,IAAIrT,EAAQ,EAAGA,EAAQpE,KAAK8P,OAAOvO,OAAQ6C,IAAS,CACrD,MAAMsQ,EAAO1U,KAAK8P,OAAO1L,GAEzBqT,GADiBzX,KAAKuO,UAAUnK,GACXgB,KACrB,MAAM8G,IAAQiL,EAAc/S,IAAUoT,EAAUpT,EAAQ,IAClD+H,IAAQiL,EAAYhT,IAAUmT,EAAYnT,EAAQ,IACxD,GAAI8H,GAAOC,EAAK,CACZ,MAAM6E,EAAYxE,EAAMpI,GAAQ,GAC1B6M,EAAczE,EAAMpI,EAAQ,EAAGpE,KAAKuO,UAAUhN,QAC9C4T,EAAkBnV,KAAKoV,mBAAmBpE,GAC1CqE,EAAiBrV,KAAKoV,mBAAmBnE,GACzCyG,EAA2C,iBAApBvC,IACxBnV,KAAKuO,UAAU4G,GAAiBpI,QAC/B4K,EAAyC,iBAAnBtC,IACvBrV,KAAKuO,UAAU8G,GAAgBtI,QAChC2K,GACAH,EAAYnT,KACXqT,EAAW,GAAKzX,KAAKmP,sBACtBnP,KAAK4X,WAAWlD,EAAM9G,EAAUiK,SAE3BF,GACLR,EAAc/S,KACbqT,EAAWzX,KAAKoO,cAAgBpO,KAAKsP,oBACtCtP,KAAK4X,WAAWlD,EAAM9G,EAAUkK,SAGhC9X,KAAK4X,WAAWlD,EAAM9G,EAAUmK,SAExC,MACS7L,IAAQC,EACbnM,KAAK4X,WAAWlD,EAAM9G,EAAUiK,UAE1B3L,GAAOC,EACbnM,KAAK4X,WAAWlD,EAAM9G,EAAUkK,SAGhC9X,KAAK4X,WAAWlD,EAAM9G,EAAUoK,QAExC,CACJ,CACAJ,UAAAA,CAAWlD,EAAMuD,GACbrQ,EAAY8M,EAAKlH,UAAW,cAAeyK,IAAUrK,EAAUmK,UAC/DnQ,EAAY8M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUoK,SAC9DpQ,EAAY8M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUkK,SAC9DlQ,EAAY8M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUiK,QAClE,CACArF,mBAAAA,GACI,MAAM3N,EAAU2D,SAAS6L,cAAc,OAEvC,OADAxP,EAAQgD,UAAY,oBACbhD,CACX,CACA6N,mBAAAA,GACI,MAAM7N,EAAU2D,SAAS6L,cAAc,OAEvC,OADAxP,EAAQgD,UAAY,oBACbhD,CACX,CACAwN,eAAAA,GACI,MAAMxN,EAAU2D,SAAS6L,cAAc,OACjC6D,EAAuBlY,KAAK2O,eAAiBhB,EAAYkB,WACzD,gBACA,cAEN,OADAhK,EAAQgD,UAAa,2BAA0BqQ,IACxCrT,CACX,CACA9C,OAAAA,GACI/B,KAAK+P,cAAchO,UACnB/B,KAAKiQ,cAAclO,UACnB/B,KAAKmQ,iBAAiBpO,UACtB,IAAK,IAAI2J,EAAI,EAAGA,EAAI1L,KAAK6E,QAAQrD,SAASD,OAAQmK,IAC9C,GAAI1L,KAAK6E,QAAQrD,SAASwN,KAAKtD,KAAO1L,KAAK6E,QAAS,CAChD7E,KAAK6E,QAAQ2P,YAAYxU,KAAK6E,SAC9B,KACJ,CAEJ,IAAK,MAAM2O,KAAYxT,KAAKuO,UACxBiF,EAASzR,UAEb/B,KAAK6E,QAAQ6C,QACjB,EC5vBG,MAAMyQ,EAA0B,MAKnC,MAAMC,EAAa,CACf1J,iBAAajO,EACboS,gBAAYpS,EACZ6R,wBAAoB7R,EACpBmS,YAAQnS,EACRiP,YAAQjP,EACR4X,yBAAqB5X,EACrBoH,eAAWpH,GAEf,OAAO6X,OAAOC,KAAKH,EACtB,EAfsC,GCIhC,MAAMI,UAAiBzS,EAC1B,gBAAImK,GACA,OAAOlQ,KAAKyY,UAAUvI,YAC1B,CACA,mBAAIE,GACA,OAAOpQ,KAAKyY,UAAUrI,eAC1B,CACA,eAAIpD,GACA,OAAOhN,KAAKyY,UAAUzL,WAC1B,CACA,eAAIG,GACA,OAAOnN,KAAKyY,UAAUtL,WAC1B,CACA,eAAIuB,GACA,OAAO1O,KAAKyY,UAAU/J,WAC1B,CACA,QAAItJ,GACA,OAAOpF,KAAKyY,UAAUrT,IAC1B,CACA,kBAAIiJ,GACA,OAAOrO,KAAKyY,UAAUpK,cAC1B,CACA1O,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,QACAC,KAAK0Y,UAAY,GACjB1Y,KAAK2Y,eAAgB,EACrB3Y,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAK2O,aAA8C,QAA9B/L,EAAKiB,EAAQ6K,mBAAgC,IAAP9L,EAAgBA,EAAK+K,EAAYyE,SAC5FpS,KAAK6E,QAAU2D,SAAS6L,cAAc,OACtCrU,KAAK6E,QAAQgD,UAAY,oBACzB2F,EAAUmF,YAAY3S,KAAK6E,SAC3B7E,KAAKyY,UAAY,IAAIvK,EAAUlO,KAAK6E,QAAS,CACzC6J,YAAa1O,KAAK2O,aAClB2D,oBAAoB,EACpBO,WAAYhP,EAAQgP,aAIxB7S,KAAK6Y,WAAW7W,SAAS8W,IACrB,MAAMpS,EAAa,IAAIX,EAAoB+S,EAAKC,2BAA0B,KACtE/Y,KAAKgZ,iBACLhZ,KAAK4Y,aAAapU,UAAK/D,EAAU,KAE/BwY,EAAW,CACbH,OACApS,WAAY,CACR3E,QAASA,KACL2E,EAAW3E,SAAS,IAIhC/B,KAAK0Y,UAAUvU,KAAK8U,GACpBH,EAAKzK,eAAiBrO,KAAKyY,UAAUpK,cAAc,IAEvDrO,KAAKoG,eAAepG,KAAK4Y,aAAc5Y,KAAKyY,UAAUzI,cAAa,KAC/DhQ,KAAK4Y,aAAapU,UAAK/D,EAAU,IACjCT,KAAKyY,UAAUvI,cAAa,KAC5BlQ,KAAK4Y,aAAapU,MAAM,IACxBxE,KAAKyY,UAAUrI,iBAAgB,KAC/BpQ,KAAK4Y,aAAapU,MAAM,IAEhC,CACA+O,cAAAA,CAAenP,EAAO2I,GAClB/M,KAAKyY,UAAUlF,eAAenP,EAAO2I,EACzC,CACAmM,OAAAA,CAAQJ,EAAM1T,EAAMhB,EAA+BgQ,QAA1B,IAALhQ,IAAAA,EAAQpE,KAAKyY,UAAUlX,aAAkB,IAAV6S,IAAAA,GAAa,GAC5D,MAAM1N,EAAaoS,EAAKC,2BAA0B,KAC9C/Y,KAAKgZ,iBACLhZ,KAAK4Y,aAAapU,UAAK/D,EAAU,IAE/BwY,EAAW,CACbH,OACApS,WAAY,CACR3E,QAASA,KACL2E,EAAW3E,SAAS,IAIhC/B,KAAK0Y,UAAUpU,OAAOF,EAAO,EAAG6U,GAChCH,EAAKzK,eAAiBrO,KAAKyY,UAAUpK,eACrCrO,KAAKyY,UAAUxF,QAAQ6F,EAAM1T,EAAMhB,EAAOgQ,EAC9C,CACAT,WAAAA,CAAYvP,GACR,OAAOpE,KAAKyY,UAAU9E,YAAYvP,EACtC,CACAyU,QAAAA,GACI,OAAO7Y,KAAKyY,UAAUvE,UAC1B,CACAiF,UAAAA,CAAW/U,EAAOP,QAAO,IAAPA,IAAAA,EAAU,CAAEuV,aAAa,IACvC,MAAMH,EAAWjZ,KAAK0Y,UAAUpU,OAAOF,EAAO,GAAG,GAMjD,OALApE,KAAKyY,UAAU1C,WAAW3R,GACrBP,EAAQuV,cACTH,EAASvS,WAAW3E,UACpBkX,EAASH,KAAK/W,WAEXkX,CACX,CACAhD,QAAAA,CAASpQ,EAAM4G,GACX,GAAI5G,IAAS4G,EACT,OAEJ,MAAMQ,EAAOjN,KAAKmZ,WAAWtT,EAAM,CAAEuT,aAAa,IAClDpZ,KAAK2Y,eAAgB,EACrB,IACI3Y,KAAKkZ,QAAQjM,EAAK6L,KAAM7L,EAAK6L,KAAK1T,KAAMqH,GAAI,EAChD,CAAC,QAEGzM,KAAK2Y,eAAgB,CACzB,CACJ,CACAzC,MAAAA,CAAO9Q,EAAMiJ,GACTrO,KAAKyY,UAAUvC,OAAO9Q,EAAMiJ,EAChC,CACA2K,cAAAA,GACQhZ,KAAK2Y,gBAGL3Y,KAAKqZ,iBACLC,aAAatZ,KAAKqZ,gBAClBrZ,KAAKqZ,oBAAiB5Y,GAE1BkH,EAAW3H,KAAK6E,QAAS,eACzB7E,KAAKqZ,eAAiBhQ,YAAW,KAC7BrJ,KAAKqZ,oBAAiB5Y,EACtB4G,EAAcrH,KAAK6E,QAAS,cAAc,GAC3C,KACP,CACA9C,OAAAA,GACIhC,MAAMgC,UACF/B,KAAKqZ,iBACLC,aAAatZ,KAAKqZ,gBAClBrZ,KAAKqZ,oBAAiB5Y,GAE1BT,KAAK0Y,UAAU1W,SAASiX,IACpBA,EAASvS,WAAW3E,UACpBkX,EAASH,KAAK/W,SAAS,IAE3B/B,KAAK0Y,UAAY,GACjB1Y,KAAKyY,UAAU1W,UACf/B,KAAK6E,QAAQ6C,QACjB,EC5IG,MAAM6R,EACT,gBAAIC,GACA,OAAOxZ,KAAKiN,KAAKuM,YACrB,CACA,gBAAIC,GACA,OAAOzZ,KAAKiN,KAAKwM,YACrB,CACA,iBAAIC,GACA,OAAO1Z,KAAKiN,KAAKyM,aACrB,CACA,iBAAIC,GACA,OAAO3Z,KAAKiN,KAAK0M,aACrB,CACA,YAAItM,GACA,OAAOrN,KAAKiN,KAAKI,QACrB,CACA,QAAIC,GACA,OAAOtN,KAAKiN,KAAKK,IACrB,CACA,eAAIN,GACA,OAAOhN,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAK0Z,cACL1Z,KAAKwZ,YACf,CACA,eAAIrM,GACA,OAAOnN,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAK2Z,cACL3Z,KAAKyZ,YACf,CACA,yBAAIG,GACA,OAAO5Z,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKwZ,aACLxZ,KAAK0Z,aACf,CACA,yBAAIG,GACA,OAAO7Z,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKyZ,aACLzZ,KAAK2Z,aACf,CACA,kBAAItL,GACA,OAAOrO,KAAKsO,eAChB,CACA,QAAIlJ,GACA,OAAOpF,KAAK4M,KAChB,CACA,WAAI/H,GACA,OAAO7E,KAAKiN,KAAKpI,OACrB,CACA,SAAIkF,GACA,OAAO/J,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKqO,eACLrO,KAAKoF,IACf,CACA,UAAI4E,GACA,OAAOhK,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKoF,KACLpF,KAAKqO,cACf,CACA1O,WAAAA,CAAYsN,EAAMyB,EAAaL,EAAgBjJ,QAAI,IAAJA,IAAAA,EAAO,GAClDpF,KAAKiN,KAAOA,EACZjN,KAAK0O,YAAcA,EACnB1O,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAKsO,gBAAkBD,EACvBrO,KAAK4M,MAAQxH,EACbpF,KAAKyG,YAAczG,KAAKiN,KAAKkH,aAAanQ,IAClCA,EACAhE,KAAK4Y,aAAapU,KAAK,CACnBY,KAAMpF,KAAK0O,cAAgBf,EAAYyE,SACjCpO,EAAM+F,MACN/F,EAAMgG,OACZqE,eAAgBrO,KAAK0O,cAAgBf,EAAYyE,SAC3CpO,EAAMgG,OACNhG,EAAM+F,QAIhB/J,KAAK4Y,aAAapU,KAAK,CAAC,EAC5B,GAER,CACAiJ,UAAAA,CAAWV,GACH/M,KAAKiN,KAAKQ,YACVzN,KAAKiN,KAAKQ,WAAWV,EAE7B,CACAmJ,MAAAA,CAAO9Q,EAAMiJ,GACTrO,KAAK4M,MAAQxH,EACbpF,KAAKsO,gBAAkBD,EACvBrO,KAAKiN,KAAKiJ,OAAOlW,KAAK+J,MAAO/J,KAAKgK,OACtC,CACAjI,OAAAA,GACI/B,KAAK4Y,aAAa7W,UAClB/B,KAAKyG,YAAY1E,SACrB,EC5FG,MAAM+X,UAAmB/T,EAC5B,SAAIgE,GACA,OAAO/J,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKoF,KACLpF,KAAKqO,cACf,CACA,UAAIrE,GACA,OAAOhK,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKqO,eACLrO,KAAKoF,IACf,CACA,eAAI4H,GACA,OAAgC,IAAzBhN,KAAKwB,SAASD,OACf,EACA6K,KAAKD,OAAOnM,KAAKwB,SAASK,KAAI,CAACkY,EAAG3V,IAAUpE,KAAKyY,UAAUnF,cAAclP,GACrE2V,EAAEH,sBACF,IACd,CACA,eAAIzM,GACA,OAAOf,KAAKF,OAAOlM,KAAKwB,SAASK,KAAI,CAACkY,EAAG3V,IAAUpE,KAAKyY,UAAUnF,cAAclP,GAC1E2V,EAAEF,sBACF5K,OAAOC,oBACjB,CACA,yBAAI0K,GACA,OAAO5Z,KAAKyY,UAAUzL,WAC1B,CACA,yBAAI6M,GACA,OAAO7Z,KAAKyY,UAAUtL,WAC1B,CACA,kBAAIkB,GACA,OAAOrO,KAAKsO,eAChB,CACA,QAAIlJ,GACA,OAAOpF,KAAK4M,KAChB,CACA,gBAAI4M,GACA,OAAOxZ,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAK4Z,sBACL5Z,KAAKgN,WACf,CACA,iBAAI0M,GACA,OAAO1Z,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKgN,YACLhN,KAAK4Z,qBACf,CACA,gBAAIH,GACA,OAAOzZ,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAK6Z,sBACL7Z,KAAKmN,WACf,CACA,iBAAIwM,GACA,OAAO3Z,KAAK0O,cAAgBf,EAAYkB,WAClC7O,KAAKmN,YACLnN,KAAK6Z,qBACf,CACA,YAAIxM,GACA,GAA6B,IAAzBrN,KAAKwB,SAASD,OACd,OAAOsM,EAAemM,OAE1B,MAAMC,EAAaja,KAAKwB,SAASK,KAAKkY,QAA4B,IAAfA,EAAE1M,SAC/CQ,EAAemM,OACfD,EAAE1M,WACR,OAAI4M,EAAWC,MAAMC,GAAMA,IAAMtM,EAAekG,OACrClG,EAAekG,KAEjBkG,EAAWC,MAAMC,GAAMA,IAAMtM,EAAeiG,MAC1CjG,EAAeiG,IAEnBjG,EAAemM,MAC1B,CACA,YAAIxK,GACA,OAAOxP,KAAKyY,UAAUjJ,QAC1B,CACA,YAAIA,CAASzM,GACT/C,KAAKyY,UAAUjJ,SAAWzM,CAC9B,CACA,UAAI2M,GACA,OAAO1P,KAAKyY,UAAU/I,MAC1B,CACA,UAAIA,CAAO3M,GACP/C,KAAKyY,UAAU/I,OAAS3M,EACxB/C,KAAKwB,SAASQ,SAASF,IACfA,aAAiBgY,IACjBhY,EAAM4N,OAAS3M,EACnB,GAER,CACApD,WAAAA,CAAY+O,EAAa4D,EAAoBM,EAAQxN,EAAMiJ,EAAgBmB,EAAUE,EAAQ0K,GAezF,GAdAra,QACAC,KAAK0O,YAAcA,EACnB1O,KAAKsS,mBAAqBA,EAC1BtS,KAAK4S,OAASA,EACd5S,KAAKqa,oBAAsBlZ,EAAWyE,KACtC5F,KAAKwB,SAAW,GAChBxB,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAKsa,uBAAyB,IAAIhX,EAClCtD,KAAKua,sBAAwBva,KAAKsa,uBAAuBtW,MACzDhE,KAAKsO,gBAAkBD,EACvBrO,KAAK4M,MAAQxH,EACbpF,KAAK6E,QAAU2D,SAAS6L,cAAc,OACtCrU,KAAK6E,QAAQgD,UAAY,iBACpBuS,EASA,CACD,MAAMvH,EAAa,CACfC,MAAOsH,EAAiBvY,KAAK2Y,IAClB,CACHvN,KAAMuN,EAAgBC,KACtBrV,KAAMoV,EAAgBC,KAAKrV,KAC3B2H,UAASyN,EAAgBC,gBAAgBlB,QACT9Y,IAA5B+Z,EAAgBzN,UACdyN,EAAgBzN,YAI9B3H,KAAMpF,KAAKqO,gBAEfrO,KAAKwB,SAAW4Y,EAAiBvY,KAAKkY,GAAMA,EAAEU,OAC9Cza,KAAKyY,UAAY,IAAIvK,EAAUlO,KAAK6E,QAAS,CACzC6J,YAAa1O,KAAK0O,YAClBmE,aACAP,qBACAM,SACAlD,UAER,MA9BI1P,KAAKyY,UAAY,IAAIvK,EAAUlO,KAAK6E,QAAS,CACzC6J,YAAa1O,KAAK0O,YAClB4D,qBACAM,SACAlD,WAEJ1P,KAAKyY,UAAUvC,OAAOlW,KAAKoF,KAAMpF,KAAKqO,gBAyB1CrO,KAAKwP,SAAWA,EAChBxP,KAAKoG,eAAepG,KAAK4Y,aAAc5Y,KAAKsa,uBAAwBta,KAAKyY,UAAUzI,cAAa,KAC5FhQ,KAAK4Y,aAAapU,KAAK,CAAC,EAAE,KAE9BxE,KAAK0a,qBACT,CACAjN,UAAAA,CAAWkN,GACP,CAEJC,cAAAA,CAAexW,GACX,GAAIA,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAEpB,OAAO7C,KAAKyY,UAAUnF,cAAclP,EACxC,CACAyW,eAAAA,CAAgBzW,EAAO2I,GACnB,GAAI3I,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAEpB,GAAI7C,KAAKyY,UAAUnF,cAAclP,KAAW2I,EACxC,OAEJ,MAAM+N,EAAuD,IAA/B9a,KAAKyY,UAAUtK,YAC7CnO,KAAKyY,UAAUlF,eAAenP,EAAO2I,GAErC,MAAMgO,EAAsD,IAA/B/a,KAAKyY,UAAUtK,aAGvCpB,GAAW+N,IACV/N,GAAWgO,IACb/a,KAAKsa,uBAAuB9V,KAAK,CAAEuI,WAE3C,CACAiO,SAAAA,CAAUnV,EAAM4G,GACZ,GAAI5G,IAAS4G,EACT,OAEJ,GAAI5G,EAAO,GAAKA,GAAQ7F,KAAKwB,SAASD,OAClC,MAAM,IAAIsB,MAAM,sBAEhBgD,EAAO4G,GACPA,IAEJzM,KAAKyY,UAAUxC,SAASpQ,EAAM4G,GAC9B,MAAM3K,EAAQ9B,KAAKib,aAAapV,GAChC7F,KAAKkb,UAAUpZ,EAAO2K,EAC1B,CACA0O,YAAAA,CAAa/W,GACT,GAAIA,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAEpB,OAAO7C,KAAKyY,UAAU9E,YAAYvP,EACtC,CACAgX,WAAAA,CAAYhX,EAAOgB,GACf,GAAIhB,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAEpB7C,KAAKyY,UAAU7E,WAAWxP,EAAOgB,EACrC,CACA8Q,MAAAA,CAAO9Q,EAAMiJ,GACTrO,KAAK4M,MAAQyB,EACbrO,KAAKsO,gBAAkBlJ,EACvBpF,KAAKyY,UAAUvC,OAAO7H,EAAgBjJ,EAC1C,CACAiW,QAAAA,CAASZ,EAAMrV,EAAMhB,EAAOgQ,GACxB,GAAIhQ,EAAQ,GAAKA,EAAQpE,KAAKwB,SAASD,OACnC,MAAM,IAAIsB,MAAM,iBAEpB7C,KAAKyY,UAAUxF,QAAQwH,EAAMrV,EAAMhB,EAAOgQ,GAC1CpU,KAAKkb,UAAUT,EAAMrW,EACzB,CACAkX,yBAAAA,CAA0BlX,GACtB,GAAIA,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAEpB,OAAO7C,KAAKyY,UAAUzC,yBAAyB5R,EACnD,CACAoQ,WAAAA,CAAYpQ,EAAO4O,GACf,GAAI5O,EAAQ,GAAKA,GAASpE,KAAKwB,SAASD,OACpC,MAAM,IAAIsB,MAAM,iBAGpB,OADA7C,KAAKyY,UAAU1C,WAAW3R,EAAO4O,GAC1BhT,KAAKib,aAAa7W,EAC7B,CACA8W,SAAAA,CAAUT,EAAMrW,GACZpE,KAAKwB,SAAS8C,OAAOF,EAAO,EAAGqW,GAC/Bza,KAAK0a,qBACT,CACAO,YAAAA,CAAa7W,GACT,MAAOtC,GAAS9B,KAAKwB,SAAS8C,OAAOF,EAAO,GAE5C,OADApE,KAAK0a,sBACE5Y,CACX,CACA4Y,mBAAAA,GACI1a,KAAKqa,oBAAoBtY,UACzB/B,KAAKqa,oBAAsB,IAAItU,EAAoB7E,EAAME,OAAOpB,KAAKwB,SAASK,KAAKkY,GAAMA,EAAE5F,cAAxCjT,EAAuDuD,IAKtGzE,KAAK4Y,aAAapU,KAAK,CAAEY,KAAMX,EAAE4J,gBAAiB,OAC/CrO,KAAKwB,SAASK,KAAI,CAACkY,EAAGrO,IACrBqO,aAAaD,EACNC,EAAEQ,uBAAsBgB,IAAkB,IAAjB,QAAExO,GAASwO,EACvCvb,KAAK6a,gBAAgBnP,EAAGqB,EAAQ,IAGjC5L,EAAWyE,OAE1B,CACA7D,OAAAA,GACI/B,KAAKqa,oBAAoBtY,UACzB/B,KAAKyY,UAAU1W,UACf/B,KAAKwB,SAASQ,SAASF,GAAUA,EAAMC,YACvChC,MAAMgC,SACV,ECvPJ,SAASyZ,EAASC,EAAcC,GAC5B,GAAID,aAAwBlC,EACxB,OAAOkC,EAEX,GAAIA,aAAwB3B,EACxB,OAAO0B,EAASC,EAAaja,SAASka,EAAOD,EAAaja,SAASD,OAAS,EAAI,GAAIma,GAExF,MAAM,IAAI7Y,MAAM,eACpB,CACA,SAAS8Y,EAASlB,EAAMrV,EAAMiJ,GAC1B,GAAIoM,aAAgBX,EAAY,CAC5B,MAAMpN,EAAS,IAAIoN,EAAW8B,GAAWnB,EAAK/L,aAAc+L,EAAKnI,mBAAoBmI,EAAK7H,OAAQxN,EAAMiJ,EAAgBoM,EAAKjL,SAAUiL,EAAK/K,QAC5I,IAAImM,EAAY,EAChB,IAAK,IAAInQ,EAAI+O,EAAKjZ,SAASD,OAAS,EAAGmK,GAAK,EAAGA,IAAK,CAChD,MAAM5J,EAAQ2Y,EAAKjZ,SAASkK,GACtBoQ,EAAYha,aAAiBgY,EAAahY,EAAMuM,eAAiBvM,EAAMsD,KAC7E,IAAImP,EAAwB,IAAdkG,EAAKrV,KACb,EACAgH,KAAK4H,MAAO5O,EAAO0W,EAAarB,EAAKrV,MAC3CyW,GAAatH,EAEH,IAAN7I,IACA6I,GAAWnP,EAAOyW,GAEtBnP,EAAO2O,SAASM,EAAS7Z,EAAOuM,EAAgBkG,GAAUA,EAAS,GAAG,EAC1E,CACA,OAAO7H,CACX,CAEI,OAAO,IAAI6M,EAASkB,EAAKxN,KAAM2O,GAAWnB,EAAK/L,aAAcL,EAErE,CAoBO,SAAS0N,GAAgBlX,GAC5B,MAAMmX,EAAgBnX,EAAQmX,cAC9B,IAAKA,EACD,MAAM,IAAInZ,MAAM,wBAEpB,GAAI,mBAAmBoZ,KAAKD,EAAcnU,WACtC,MAAO,GAEX,MAAMzD,EA3BH,SAAuBS,GAC1B,MAAMmX,EAAgBnX,EAAQmX,cAC9B,IAAKA,EACD,MAAM,IAAInZ,MAAM,wBAEpB,IAAIqZ,EAAKF,EAAcG,kBACnB/X,EAAQ,EACZ,KAAO8X,IAAOrX,GAAWqX,IAAOF,EAAcI,kBAAoBF,GAC9DA,EAAKA,EAAGG,mBACRjY,IAEJ,OAAOA,CACX,CAekBkY,CAAcN,GAE5B,MAAO,IAAID,GADMC,EAAcA,cAAcA,cAAcA,eACrB5X,EAC1C,CACO,SAASmY,GAAoBC,EAAiBC,EAAUC,GAC3D,MAAMhO,EAoBH,SAAgC8N,EAAiBC,GACpD,OAAOA,EAASlb,OAAS,GAAM,EACzBqa,GAAWY,GACXA,CACV,CAxBwBG,CAAuBH,EAAiBC,GACtDG,EAcH,SAAiCF,GACpC,MAAqB,QAAdA,GAAqC,WAAdA,EACxB/O,EAAYyE,SACZzE,EAAYkB,UACtB,CAlBiCgO,CAAwBH,GACrD,GAAIhO,IAAgBkO,EAAsB,CACtC,MAAOE,EAAMC,GAAU1R,EAAKoR,GAC5B,IAAIrY,EAAQ2Y,EAIZ,MAHkB,UAAdL,GAAuC,WAAdA,IACzBtY,GAAS,GAEN,IAAI0Y,EAAM1Y,EACrB,CACK,CACD,MAAMA,EAAsB,UAAdsY,GAAuC,WAAdA,EAAyB,EAAI,EACpE,MAAO,IAAID,EAAUrY,EACzB,CACJ,CAWO,MAAMwX,GAAclN,GAAgBA,IAAgBf,EAAYkB,WACjElB,EAAYyE,SACZzE,EAAYkB,WAIlB,MAAMmO,GAAsBA,CAACvC,EAAM/L,KAC/B,MAAMtJ,EAAOsJ,IAAgBf,EAAYyE,SAAWqI,EAAKwC,IAAIlT,MAAQ0Q,EAAKwC,IAAIjT,OAC9E,OALG,SAA0ByQ,GAC7B,QAASA,EAAKjZ,QAClB,CAGS0b,CAAiBzC,GAWf,CACH3V,KAAM,SACNpE,KAAM+Z,EAAKjZ,SAASK,KAAKkY,GAAMiD,GAAoBjD,EAAG6B,GAAWlN,MACjEtJ,QAbsC,iBAA3BqV,EAAK5N,kBACL,CACH/H,KAAM,OACNpE,KAAM+Z,EAAKxN,KAAKkQ,SAChB/X,KAAMqV,EAAK5N,kBACXE,SAAS,GAGV,CAAEjI,KAAM,OAAQpE,KAAM+Z,EAAKxN,KAAKkQ,SAAU/X,OAMpD,EAEE,MAAMgY,GACT,UAAI7b,GACA,OAAOvB,KAAKqd,MAAQrd,KAAKqd,MAAM7b,SAASD,OAAS,CACrD,CACA,eAAImN,GACA,OAAO1O,KAAKsd,KAAK5O,WACrB,CACA,eAAIA,CAAYA,GACZ,GAAI1O,KAAKsd,KAAK5O,cAAgBA,EAC1B,OAEJ,MAAM,KAAEtJ,EAAI,eAAEiJ,GAAmBrO,KAAKsd,KACtCtd,KAAKsd,KAAO3B,EAAS3b,KAAKsd,KAAMjP,EAAgBjJ,GAChDpF,KAAKsd,KAAKpH,OAAO9Q,EAAMiJ,EAC3B,CACA,SAAItE,GACA,OAAO/J,KAAKsd,KAAKvT,KACrB,CACA,UAAIC,GACA,OAAOhK,KAAKsd,KAAKtT,MACrB,CACA,gBAAIwP,GACA,OAAOxZ,KAAKsd,KAAK9D,YACrB,CACA,iBAAIE,GACA,OAAO1Z,KAAKsd,KAAK5D,aACrB,CACA,gBAAID,GACA,OAAOzZ,KAAKsd,KAAK3D,aACrB,CACA,iBAAIA,GACA,OAAO3Z,KAAKsd,KAAK3D,aACrB,CACA,UAAI4D,GACA,OAAOvd,KAAKwd,OAChB,CACA,UAAID,CAAOxa,GACP/C,KAAKwd,QAAUza,EACf,MAAM0a,EAAS,CAACzd,KAAKsd,MAMrB,KAAOG,EAAOlc,OAAS,GAAG,CACtB,MAAMkZ,EAAOgD,EAAOC,MAChBjD,aAAgBX,IAChBW,EAAKjL,SAAWzM,EAChB0a,EAAOtZ,QAAQsW,EAAKjZ,UAE5B,CACJ,CACA,UAAIkO,GACA,OAAO1P,KAAK2P,OAChB,CACA,UAAID,CAAO3M,GACP/C,KAAK2P,QAAU5M,EACf/C,KAAKsd,KAAK5N,OAAS3M,CACvB,CACA4a,aAAAA,GACI,IAAI/a,EACJ,OAAsC,QAA9BA,EAAK5C,KAAK4d,sBAAmC,IAAPhb,OAAgB,EAASA,EAAGib,KAAK5Q,IACnF,CACA6Q,gBAAAA,GACI,YAA+Brd,IAAxBT,KAAK4d,cAChB,CACAG,YAAAA,CAAa9Q,GACT,IAAIrK,EACJ,MAAM6Z,EAAWV,GAAgB9O,EAAKpI,UAC/B0M,EAAGkJ,GAAQza,KAAKge,QAAQvB,GAC/B,KAAMhC,aAAgBlB,GAClB,OAEJ,IAAoC,QAA9B3W,EAAK5C,KAAK4d,sBAAmC,IAAPhb,OAAgB,EAASA,EAAGib,QAAUpD,EAC9E,OAEAza,KAAK8d,oBACL9d,KAAKie,oBAETjB,GAAoBhd,KAAKke,UAAWle,KAAK0O,aACzC,MAAMyP,EAAmB,IACzB,SAASC,EAAgBC,EAAQC,GAC7B,IAAK,IAAI5S,EAAI,EAAGA,EAAI2S,EAAO7c,SAASD,OAAQmK,IAAK,CAC7C,MAAM5J,EAAQuc,EAAO7c,SAASkK,GAC1B5J,aAAiByX,EACbzX,IAAUwc,IACND,EAAOzD,eAAelP,GACtB2S,EAAOxD,gBAAgBnP,GAAG,GAG1ByS,EAAiBha,KAAKrC,IAK9Bsc,EAAgBtc,EAAOwc,EAE/B,CACJ,CACAF,CAAgBpe,KAAKsd,KAAM7C,GAC3Bza,KAAK4d,eAAiB,CAAEC,KAAMpD,EAAM0D,oBACpCne,KAAKue,0BAA0B/Z,KAAK,CAChCyI,KAAMwN,EAAKxN,KACXuR,aAAa,GAErB,CACAP,iBAAAA,GACI,IAAKje,KAAK4d,eACN,OAEJ,MAAMO,EAAmBne,KAAK4d,eAAeO,kBAC7C,SAASM,EAAwBJ,GAC7B,IAAK,IAAIja,EAAQia,EAAO7c,SAASD,OAAS,EAAG6C,GAAS,EAAGA,IAAS,CAC9D,MAAMtC,EAAQuc,EAAO7c,SAAS4C,GAC1BtC,aAAiByX,EACZ4E,EAAiBO,SAAS5c,IAC3Buc,EAAOxD,gBAAgBzW,GAAO,GAIlCqa,EAAwB3c,EAEhC,CACJ,CACA2c,CAAwBze,KAAKsd,MAC7B,MAAM1O,EAAM5O,KAAK4d,eAAeC,KAChC7d,KAAK4d,oBAAiBnd,EACtBT,KAAKue,0BAA0B/Z,KAAK,CAChCyI,KAAM2B,EAAI3B,KACVuR,aAAa,GAErB,CACAG,SAAAA,GACI,MAAMhB,EAAgB3d,KAAK2d,gBAC3B,IAAIiB,EACAjB,IAKAiB,EAAuB7C,GAAgB4B,EAAc9Y,UAErD7E,KAAK8d,oBASL9d,KAAKie,oBAET,MACMY,EAAU,CACZvB,KAFSN,GAAoBhd,KAAKke,UAAWle,KAAK0O,aAGlD3E,MAAO/J,KAAK+J,MACZC,OAAQhK,KAAKgK,OACb0E,YAAa1O,KAAK0O,aAWtB,OATIkQ,IACAC,EAAQC,cAAgB,CACpBrC,SAAUmC,IAGdjB,GAEA3d,KAAK+d,aAAaJ,GAEfkB,CACX,CACA9c,OAAAA,GACI/B,KAAK0G,WAAW3E,UAChB/B,KAAK4Y,aAAa7W,UAClB/B,KAAKue,0BAA0Bxc,UAC/B/B,KAAK+e,2BAA2Bhd,UAChC/B,KAAKsd,KAAKvb,UACV/B,KAAK4d,oBAAiBnd,EACtBT,KAAK6E,QAAQ6C,QACjB,CACA/D,KAAAA,GACI,MAAM+K,EAAc1O,KAAKsd,KAAK5O,YAC9B1O,KAAKsd,KAAO,IAAIxD,EAAWpL,EAAa1O,KAAKsS,mBAAoBtS,KAAK4S,OAAQ5S,KAAKsd,KAAKlY,KAAMpF,KAAKsd,KAAKjP,eAAgBrO,KAAKud,OAAQvd,KAAK0P,OAC9I,CACAsP,WAAAA,CAAYC,EAAMC,GACd,MAAMxQ,EAAcuQ,EAAKvQ,YACnB1E,EAAS0E,IAAgBf,EAAYyE,SAAW6M,EAAKjV,OAASiV,EAAKlV,MAOzE,GANA/J,KAAKmf,aAAaF,EAAK3B,KAAM5O,EAAawQ,EAAclV,GAKxDhK,KAAKkW,OAAO+I,EAAKlV,MAAOkV,EAAKjV,QACzBiV,EAAKH,cAAe,CACpB,MAAMrC,EAAWwC,EAAKH,cAAcrC,UAC7BlL,EAAGkJ,GAAQza,KAAKge,QAAQvB,GAC/B,KAAMhC,aAAgBlB,GAClB,OAEJvZ,KAAK+d,aAAatD,EAAKxN,KAC3B,CACJ,CACAkS,YAAAA,CAAa7B,EAAM5O,EAAawQ,EAAc7Q,GAC1CrO,KAAKsd,KAAOtd,KAAKof,iBAAiB9B,EAAM5O,EAAawQ,EAAc7Q,EACvE,CACA+Q,gBAAAA,CAAiB3E,EAAM/L,EAAawQ,EAAc7Q,GAC9C,IAAIzL,EACJ,IAAI8J,EACJ,GAAkB,WAAd+N,EAAK3V,KAAmB,CACxB,MACMtD,EADqBiZ,EAAK/Z,KACImB,KAAKwd,IAC9B,CACH5E,KAAMza,KAAKof,iBAAiBC,EAAiBzD,GAAWlN,GAAcwQ,EAAczE,EAAKrV,MACzF2H,QAASsS,EAAgBtS,YAGjCL,EAAS,IAAIoN,EAAWpL,EAAa1O,KAAKsS,mBAAoBtS,KAAK4S,OAAQ6H,EAAKrV,KAChFiJ,EACArO,KAAKud,OAAQvd,KAAK0P,OAAQlO,EAC9B,KACK,CACD,MAAMyL,EAAOiS,EAAaI,SAAS7E,GACP,kBAAjBA,EAAK1N,UACe,QAA1BnK,EAAKqK,EAAKQ,kBAA+B,IAAP7K,GAAyBA,EAAG2F,KAAK0E,EAAMwN,EAAK1N,UAEnFL,EAAS,IAAI6M,EAAStM,EAAMyB,EAAaL,EAAgBoM,EAAKrV,KAClE,CACA,OAAOsH,CACX,CACA,QAAI4Q,GACA,OAAOtd,KAAKqd,KAChB,CACA,QAAIC,CAAKA,GACL,MAAMiC,EAAUvf,KAAKqd,MACjBkC,IACAA,EAAQxd,UACR/B,KAAK4d,oBAAiBnd,EACtBT,KAAK6E,QAAQ2P,YAAY+K,EAAQ1a,UAErC7E,KAAKqd,MAAQC,EACbtd,KAAK6E,QAAQ8N,YAAY3S,KAAKqd,MAAMxY,SACpC7E,KAAK0G,WAAW3D,MAAQ/C,KAAKqd,MAAMlJ,aAAa1P,IAC5CzE,KAAK4Y,aAAapU,KAAKC,EAAE,GAEjC,CAKA+a,+BAAAA,GACI,IAAKxf,KAAKqd,MACN,OAEJ,MAAMkC,EAAUvf,KAAKsd,KAGrB,GAFAiC,EAAQ1a,QAAQ6C,SAChB1H,KAAKqd,MAAQ,IAAIvD,EAAW8B,GAAW2D,EAAQ7Q,aAAc1O,KAAKsS,mBAAoBtS,KAAK4S,OAAQ5S,KAAKsd,KAAKjP,eAAgBrO,KAAKsd,KAAKlY,KAAMpF,KAAKud,OAAQvd,KAAK0P,QAC/H,IAA5B6P,EAAQ/d,SAASD,aAGhB,GAAgC,IAA5Bge,EAAQ/d,SAASD,OAAc,CAEpC,MAAMke,EAAiBF,EAAQ/d,SAAS,GAC1B+d,EAAQ/K,YAAY,GAC5BzS,UACNwd,EAAQxd,UACR/B,KAAKqd,MAAMhC,SAOXM,EAAS8D,EAAgBA,EAAepR,eAAgBoR,EAAera,MAAO0I,EAAOC,WAAY,EACrG,MAEI/N,KAAKqd,MAAMhC,SAASkE,EAASzR,EAAOC,WAAY,GAEpD/N,KAAK6E,QAAQ8N,YAAY3S,KAAKqd,MAAMxY,SACpC7E,KAAK0G,WAAW3D,MAAQ/C,KAAKqd,MAAMlJ,aAAa1P,IAC5CzE,KAAK4Y,aAAapU,KAAKC,EAAE,GAEjC,CACA6H,IAAAA,CAAKmQ,GACD,OAAOzc,KAAK0f,gBAAgBjD,EAChC,CACAvF,QAAAA,CAASuF,GACL,OAAOzc,KAAK0f,gBAAgBjD,GAAU,EAC1C,CACAyB,OAAAA,CAAQzB,GACJ,MAAMhC,EAAOgC,EAAWzc,KAAKge,QAAQvB,GAAU,GAAKzc,KAAKsd,KACzD,OAAOtd,KAAK2f,UAAUlF,EAAMza,KAAK0O,YACrC,CACAiR,SAAAA,CAAUlF,EAAM/L,EAAa7B,GACzB,MAAMoQ,EAAM,CAAEjT,OAAQyQ,EAAKzQ,OAAQD,MAAO0Q,EAAK1Q,OAC/C,GAAI0Q,aAAgBlB,EAChB,MAAO,CAAE0D,MAAKhQ,KAAMwN,EAAKxN,KAAMJ,qBAEnC,MAAMrL,EAAW,GACjB,IAAK,IAAIkK,EAAI,EAAGA,EAAI+O,EAAKjZ,SAASD,OAAQmK,IAAK,CAC3C,MAAM5J,EAAQ2Y,EAAKjZ,SAASkK,GACtBkU,EAAwBnF,EAAKa,0BAA0B5P,GAC7DlK,EAAS2C,KAAKnE,KAAK2f,UAAU7d,EAAO8Z,GAAWlN,GAAckR,GACjE,CACA,MAAO,CAAE3C,MAAKzb,WAClB,CACAke,eAAAA,CAAgBjD,EAAUnF,QAAO,IAAPA,IAAAA,GAAU,GAChC,MAAOuI,EAAMpF,GAAQza,KAAKge,QAAQvB,GAClC,KAAMhC,aAAgBlB,GAClB,MAAM,IAAI1W,MAAM,oBAEpB,IAAK,IAAI6I,EAAImU,EAAKte,OAAS,EAAGmK,GAAK,EAAGA,IAAK,CACvC,MAAMoU,EAAID,EAAKnU,GACTqU,EAAItD,EAAS/Q,IAAM,EAIzB,GAHkC4L,EAC5ByI,EAAI,GAAK,EACTA,EAAI,EAAID,EAAEte,SAASD,OAErB,OAAOia,EAASsE,EAAEte,SAAS8V,EAAUyI,EAAI,EAAIA,EAAI,GAAIzI,EAE7D,CACA,OAAOkE,EAASxb,KAAKsd,KAAMhG,EAC/B,CACA3X,WAAAA,CAAY2S,EAAoBM,EAAQlE,EAAa6O,EAAQ7N,GACzD1P,KAAKsS,mBAAqBA,EAC1BtS,KAAK4S,OAASA,EACd5S,KAAKwd,SAAU,EACfxd,KAAK2P,QAAU,EACf3P,KAAK4d,oBAAiBnd,EACtBT,KAAK0G,WAAa,IAAIF,EACtBxG,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAK+e,2BAA6B,IAAIzb,EACtCtD,KAAKggB,0BAA4BhgB,KAAK+e,2BAA2B/a,MACjEhE,KAAKue,0BAA4B,IAAIjb,EACrCtD,KAAKigB,yBAA2BjgB,KAAKue,0BAA0Bva,MAC/DhE,KAAK6E,QAAU2D,SAAS6L,cAAc,OACtCrU,KAAK6E,QAAQgD,UAAY,eACzB7H,KAAKwd,QAAUD,SAAuCA,EACtDvd,KAAK2P,QAAUD,QAAuCA,EAAS,EAC/D1P,KAAKsd,KAAO,IAAIxD,EAAWpL,EAAa4D,EAAoBM,EAAQ,EAAG,EAAG5S,KAAKud,OAAQvd,KAAK0P,OAChG,CACA4D,aAAAA,CAAcmJ,GACV,MAAOK,EAAM1Y,GAASiH,EAAKoR,IACpB,CAAE4B,GAAUre,KAAKge,QAAQlB,GAChC,KAAMuB,aAAkBvE,GACpB,MAAM,IAAIjX,MAAM,yBAEpB,OAAOwb,EAAOzD,eAAexW,EACjC,CACAmP,cAAAA,CAAekJ,EAAU1P,GACjB/M,KAAK8d,oBACL9d,KAAKie,oBAET,MAAOnB,EAAM1Y,GAASiH,EAAKoR,IACpB,CAAE4B,GAAUre,KAAKge,QAAQlB,GAChC,KAAMuB,aAAkBvE,GACpB,MAAM,IAAIjX,MAAM,yBAEpB7C,KAAK+e,2BAA2Bva,OAChC6Z,EAAOxD,gBAAgBzW,EAAO2I,EAClC,CACAkJ,QAAAA,CAASiK,EAAgBra,EAAM4G,GACvBzM,KAAK8d,oBACL9d,KAAKie,oBAET,MAAO,CAAEI,GAAUre,KAAKge,QAAQkC,GAChC,KAAM7B,aAAkBvE,GACpB,MAAM,IAAIjX,MAAM,oBAEpBwb,EAAOrD,UAAUnV,EAAM4G,EAC3B,CACAwG,OAAAA,CAAQhG,EAAM7H,EAAMqX,GACZzc,KAAK8d,oBACL9d,KAAKie,oBAET,MAAOnB,EAAM1Y,GAASiH,EAAKoR,IACpB0D,EAAc9B,GAAUre,KAAKge,QAAQlB,GAC5C,GAAIuB,aAAkBvE,EAAY,CAC9B,MAAMW,EAAO,IAAIlB,EAAStM,EAAM2O,GAAWyC,EAAO3P,aAAc2P,EAAOhQ,gBACvEgQ,EAAOhD,SAASZ,EAAMrV,EAAMhB,EAChC,KACK,CACD,MAAOgc,KAAgB7O,GAAK,IAAI4O,GAAc7I,WACvC+I,KAAgBC,GAAM,IAAIxD,GAAMxF,UACvC,IAAIiJ,EAAiB,EACrB,MAAMC,EAA8BJ,EAAY9E,0BAA0B+E,GAC/B,iBAAhCG,IACPD,EAAiBzS,EAAOG,UAAUuS,IAExBJ,EAAY5L,YAAY6L,GAChCte,UACN,MAAM0e,EAAY,IAAI3G,EAAWuE,EAAO3P,YAAa1O,KAAKsS,mBAAoBtS,KAAK4S,OAAQyL,EAAOjZ,KAAMiZ,EAAOhQ,eAAgBrO,KAAKud,OAAQvd,KAAK0P,QACjJ0Q,EAAY/E,SAASoF,EAAWpC,EAAOjZ,KAAMib,GAC7C,MAAMK,EAAa,IAAInH,EAAS8E,EAAOpR,KAAMmT,EAAY1R,YAAa2P,EAAOjZ,MAC7Eqb,EAAUpF,SAASqF,EAAYH,EAAgB,GAC3B,iBAATnb,GAAmC,UAAdA,EAAKN,OACjCM,EAAO,CAAEN,KAAM,QAASV,MAAO,IAEnC,MAAMqW,EAAO,IAAIlB,EAAStM,EAAMmT,EAAY1R,YAAa2P,EAAOjZ,MAChEqb,EAAUpF,SAASZ,EAAMrV,EAAMhB,EACnC,CACJ,CACAsD,MAAAA,CAAOuF,EAAM+F,GACT,MAAMyJ,EAAWV,GAAgB9O,EAAKpI,SACtC,OAAO7E,KAAK+V,WAAW0G,EAAUzJ,EACrC,CACA+C,UAAAA,CAAW0G,EAAUzJ,GACbhT,KAAK8d,oBACL9d,KAAKie,oBAET,MAAOnB,EAAM1Y,GAASiH,EAAKoR,IACpB0D,EAAc9B,GAAUre,KAAKge,QAAQlB,GAC5C,KAAMuB,aAAkBvE,GACpB,MAAM,IAAIjX,MAAM,oBAEpB,MAAM8d,EAAetC,EAAO7c,SAAS4C,GACrC,KAAMuc,aAAwBpH,GAC1B,MAAM,IAAI1W,MAAM,oBAIpB,GAFAwb,EAAO7J,YAAYpQ,EAAO4O,GAC1B2N,EAAa5e,UACkB,IAA3Bsc,EAAO7c,SAASD,OAChB,OAAOof,EAAa1T,KAOxB,MAAM2T,EAAUvC,EAAO7c,SAAS,GAChC,GAA4B,IAAxB2e,EAAa5e,OAEb,OAAIqf,aAAmBrH,IAOvB8E,EAAO7J,YAAY,EAAGxB,GAEtBhT,KAAKsd,KAAOsD,GAPDD,EAAa1T,KAW5B,MAAOmT,KAAgB7O,GAAK,IAAI4O,GAAc7I,WACvC+I,KAAgBC,GAAM,IAAIxD,GAAMxF,UACjCuJ,EAAmBxC,EAAOzD,eAAe,GAE/CyD,EAAO7J,YAAY,EAAGxB,GAEtB,MAAMzC,EAAQ6P,EAAY5e,SAASK,KAAI,CAAC+K,EAAOlB,IAAM0U,EAAYjF,aAAazP,KAI9E,GADA0U,EAAY5L,YAAY6L,EAAarN,GAAQjR,UACzC6e,aAAmB9G,EAAY,CAE/BvJ,EAAMjM,OAAO+b,EAAa,KAAMO,EAAQpf,SAASK,KAAKkY,GAAMA,EAAE3U,QAE9D,IAAK,IAAIsG,EAAI,EAAGA,EAAIkV,EAAQpf,SAASD,OAAQmK,IAAK,CAC9C,MAAM5J,EAAQ8e,EAAQpf,SAASkK,GAC/B0U,EAAY/E,SAASvZ,EAAOA,EAAMsD,KAAMib,EAAc3U,EAC1D,CAMA,KAAOkV,EAAQpf,SAASD,OAAS,GAC7Bqf,EAAQpM,YAAY,EAE5B,KACK,CAED,MAAMkM,EAAa,IAAInH,EAASqH,EAAQ3T,KAAM2O,GAAWgF,EAAQlS,aAAckS,EAAQxb,MACjF0b,EAAgBD,EAChBD,EAAQvS,eACRP,EAAOG,UAAU2S,EAAQvS,gBAC/B+R,EAAY/E,SAASqF,EAAYI,EAAeT,EACpD,CAEAO,EAAQ7e,UAER,IAAK,IAAI2J,EAAI,EAAGA,EAAI6E,EAAMhP,OAAQmK,IAC9B0U,EAAYhF,YAAY1P,EAAG6E,EAAM7E,IAErC,OAAOiV,EAAa1T,IACxB,CACAiJ,MAAAA,CAAOnM,EAAOC,GACV,MAAO5E,EAAMiJ,GAAkBrO,KAAKsd,KAAK5O,cAAgBf,EAAYkB,WAC/D,CAAC7E,EAAQD,GACT,CAACA,EAAOC,GACdhK,KAAKsd,KAAKpH,OAAO9Q,EAAMiJ,EAC3B,CACA2P,OAAAA,CAAQvB,EAAUhC,EAAkBoF,GAChC,QADkB,IAAJpF,IAAAA,EAAOza,KAAKsd,WAAU,IAAJuC,IAAAA,EAAO,IACf,IAApBpD,EAASlb,OACT,MAAO,CAACse,EAAMpF,GAElB,KAAMA,aAAgBX,GAClB,MAAM,IAAIjX,MAAM,oBAEpB,MAAOuB,KAAU0Y,GAAQL,EACzB,GAAIrY,EAAQ,GAAKA,GAASqW,EAAKjZ,SAASD,OACpC,MAAM,IAAIsB,MAAM,oBAEpB,MAAMf,EAAQ2Y,EAAKjZ,SAAS4C,GAE5B,OADAyb,EAAK1b,KAAKsW,GACHza,KAAKge,QAAQlB,EAAMhb,EAAO+d,EACrC,ECxnBG,MAAMkB,GAAyB,MAKlC,MAAM3I,EAAa,CACfC,yBAAqB5X,EACrB6R,wBAAoB7R,EACpBiO,iBAAajO,EACbugB,iBAAavgB,EACboH,eAAWpH,GAEf,OAAO6X,OAAOC,KAAKH,EACtB,EAbqC,GCE/B,MAAM6I,WAAkBlb,EAC3B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACA,mBAAIC,GACA,OAAOnhB,KAAKohB,gBAChB,CACA,mBAAID,CAAgBpe,GAChB/C,KAAKohB,iBAAmBre,CAC5B,CACApD,WAAAA,CAAYqc,EAAemF,QAAe,IAAfA,IAAAA,GAAkB,GACzCphB,QACAC,KAAKohB,iBAAmBD,EACxBnhB,KAAKkhB,SAAWlF,EAChBhc,KAAKoG,eAAeO,EAAmB3G,KAAKkhB,UAAWG,IACnD,GAAIrhB,KAAKgG,WAKL,OAEJ,GAAIhG,KAAKmhB,gBACL,OAEJ,IAAKnhB,KAAKkhB,SAASI,aAaf,OAEJ,IXyIL,SAAsBzc,GACzB,IAAI0c,EAAiB1c,EACrB,KAAO0c,aAAuD,EAASA,EAAepZ,YAAY,CAC9F,GAAIoZ,EAAepZ,aAAeK,SAC9B,OAAO,EAIP+Y,EAFKA,EAAepZ,sBAAsBqZ,iBAEzBD,EAAepZ,WAAWsZ,KAG1BF,EAAepZ,UAExC,CACA,OAAO,CACX,CWxJiBuZ,CAAa1hB,KAAKkhB,UAMnB,OAEJ,MAAM,MAAEnX,EAAK,OAAEC,GAAWqX,EAAMM,YAChC3hB,KAAKkW,OAAOnM,EAAOC,EAAO,IAElC,EC9CJ,MAAM4X,GAAevV,IACd,SAASwV,GAASnF,GACrB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SAEX,QACI,MAAO,SAEnB,CACO,MAAMoF,WAAiBb,GAC1B,MAAIc,GACA,OAAO/hB,KAAKgiB,GAChB,CACA,QAAI5c,GACA,OAAOpF,KAAKiiB,QAAQ7c,IACxB,CACA,UAAI8c,GACA,OAAOzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UAAUtgB,KAAK0P,GAAMA,EAAExO,OAC1D,CACA,SAAIgH,GACA,OAAO/J,KAAKoiB,SAASrY,KACzB,CACA,UAAIC,GACA,OAAOhK,KAAKoiB,SAASpY,MACzB,CACA,iBAAI0P,GACA,OAAO1Z,KAAKoiB,SAAS1I,aACzB,CACA,iBAAIC,GACA,OAAO3Z,KAAKoiB,SAASzI,aACzB,CACA,gBAAIH,GACA,OAAOxZ,KAAKoiB,SAAS5I,YACzB,CACA,gBAAIC,GACA,OAAOzZ,KAAKoiB,SAAS3I,YACzB,CACA,eAAI4I,GACA,OAAOriB,KAAKsiB,YAChB,CACA,UAAI/E,GACA,OAAOvd,KAAKoiB,SAAS7E,MACzB,CACA,UAAIA,CAAOxa,GACP/C,KAAKoiB,SAAS7E,OAASxa,CAC3B,CACApD,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,MAAMyI,SAAS6L,cAAc,OAAQxQ,EAAQwU,qBAC7CrY,KAAKgiB,IAAMJ,GAAatV,OACxBtM,KAAKiiB,QAAU,IAAI9c,IACnBnF,KAAKuiB,aAAe,IAAIjf,EACxBtD,KAAKwiB,YAAcxiB,KAAKuiB,aAAave,MACrChE,KAAKyiB,UAAY,IAAInf,EACrBtD,KAAK0iB,SAAW1iB,KAAKyiB,UAAUze,MAC/BhE,KAAK2iB,sBAAwB,IAAIrf,EACjCtD,KAAK4iB,qBAAuB5iB,KAAK2iB,sBAAsB3e,MACvDhE,KAAK6iB,mBAAqB,IAAIvf,EAC9BtD,KAAK8iB,kBAAoB9iB,KAAK6iB,mBAAmB7e,MACjDhE,KAAK+iB,yBAA2B,IAAIzd,EACpCtF,KAAKgjB,kBAAoBhjB,KAAK+iB,yBAAyBrd,QACvD1F,KAAKijB,yCAA2C,IAAI3d,EACpDtF,KAAKkjB,wCAA0CljB,KAAKijB,yCAAyCvd,QAC7F1F,KAAK6E,QAAQ4F,MAAMT,OAAS,OAC5BhK,KAAK6E,QAAQ4F,MAAMV,MAAQ,OAC3B/J,KAAK8K,YAAc,IAAID,EAAW7K,KAAK6E,SACvC7E,KAAK8K,YAAYC,cAA2C,QAA5BnI,EAAKiB,EAAQgE,iBAA8B,IAAPjF,EAAgBA,EAAK,IAEzF4K,EAAUmF,YAAY3S,KAAK6E,SAC3B7E,KAAKoiB,SAAW,IAAIhF,KAAWvZ,EAAQyO,mBAAoBzO,EAAQ+O,OAAQ/O,EAAQ6K,YAAa7K,EAAQ0Z,OAAQ1Z,EAAQ6L,QACxH1P,KAAKoiB,SAAS7E,SAAW1Z,EAAQ0Z,OACjCvd,KAAK6E,QAAQ8N,YAAY3S,KAAKoiB,SAASvd,SACvC7E,KAAKkW,OAAO,EAAG,GAAG,GAClBlW,KAAKoG,eAAepG,KAAKoiB,SAASnC,0BAA0Bjc,IACxDhE,KAAK2iB,sBAAsBne,KAAK,CAC5B2e,MAAOnf,EAAMiJ,KACbuR,YAAaxa,EAAMwa,aACrB,IACFxe,KAAKoiB,SAASpC,2BAA0B,IAAMhgB,KAAKijB,yCAAyCze,SAASxE,KAAKkjB,yCAAwC,KAClJljB,KAAKkW,OAAOlW,KAAK+J,MAAO/J,KAAKgK,QAAQ,EAAK,IAC1C7I,EAAW0E,MAAK,KAChB,IAAIjD,EACkC,QAArCA,EAAK5C,KAAK6E,QAAQmX,qBAAkC,IAAPpZ,GAAyBA,EAAG4R,YAAYxU,KAAK6E,QAAQ,IACnG7E,KAAKoiB,SAASjO,aAAY,KAC1BnU,KAAK+iB,yBAAyBve,MAAM,IACpCtD,EAAME,IAAIpB,KAAK0iB,SAAU1iB,KAAKwiB,YAAaxiB,KAAK8iB,kBAAhD5hB,EAAmE,KACnElB,KAAK+iB,yBAAyBve,MAAM,IACpCxE,KAAK2iB,sBAAuB3iB,KAAKijB,yCAA0CjjB,KAAK+iB,yBACxF,CACAtV,UAAAA,CAAW0V,EAAOpW,GACd/M,KAAKoiB,SAAS7O,eAAewI,GAAgBoH,EAAMte,SAAUkI,GAC7D/M,KAAK+iB,yBAAyBve,MAClC,CACA4e,SAAAA,CAAUD,GACN,OAAOnjB,KAAKoiB,SAAS9O,cAAcyI,GAAgBoH,EAAMte,SAC7D,CACAwe,aAAAA,CAAcxf,GACV,IAAIjB,EAAIgN,EAAI0T,EAAIC,EACL1f,EAAQyO,mBAGfzO,EAAQ6K,cACR1O,KAAKoiB,SAAS1T,YAAc7K,EAAQ6K,aAKpC,oBAAqB7K,IACrB7D,KAAKmhB,gBAAyD,QAAtCve,EAAKiB,EAAQwU,2BAAwC,IAAPzV,GAAgBA,GAEtF,WAAYiB,IACZ7D,KAAKud,OAAmC,QAAzB3N,EAAK/L,EAAQ0Z,cAA2B,IAAP3N,GAAgBA,GAEhE,WAAY/L,IACZ7D,KAAKoiB,SAAS1S,OAAmC,QAAzB4T,EAAKzf,EAAQ6L,cAA2B,IAAP4T,EAAgBA,EAAK,GAE9E,cAAezf,GACf7D,KAAK8K,YAAYC,cAA2C,QAA5BwY,EAAK1f,EAAQgE,iBAA8B,IAAP0b,EAAgBA,EAAK,GAEjG,CACAC,aAAAA,CAAcL,GACVnjB,KAAKoiB,SAASrE,aAAaoF,GAC3BnjB,KAAKyjB,iBAAiBN,EAC1B,CACAO,gBAAAA,CAAiBP,GACb,OAAOnjB,KAAKoiB,SAASzE,kBAAoBwF,CAC7C,CACAQ,kBAAAA,GACI3jB,KAAKoiB,SAASnE,mBAClB,CACA2F,iBAAAA,GACI,OAAO5jB,KAAKoiB,SAAStE,kBACzB,CACA+F,UAAAA,CAAWC,EAAOrH,EAAgBrX,QAAR,IAARqX,IAAAA,EAAW,CAAC,IAC1Bzc,KAAKoiB,SAASnP,QAAQ6Q,EAAO1e,QAAmCA,EAAO0I,EAAOC,WAAY0O,GAC1Fzc,KAAKyiB,UAAUje,KAAKsf,EACxB,CACAC,aAAAA,CAAcD,EAAOjgB,GACjB,IAAK7D,KAAKiiB,QAAQ+B,IAAIF,EAAM/B,IACxB,MAAM,IAAIlf,MAAM,qBAEpB,MAAMmM,EAAOhP,KAAKiiB,QAAQrX,IAAIkZ,EAAM/B,IAC9B9U,EAAOjN,KAAKoiB,SAAS1a,OAAOoc,EAAOhW,EAAOC,YAOhD,GANIiB,KAAUnL,aAAyC,EAASA,EAAQuV,eACpEpK,EAAKtI,WAAW3E,UAChBiN,EAAKjM,MAAMhB,UACX/B,KAAKiiB,QAAQtd,OAAOmf,EAAM/B,IAC1B/hB,KAAKuiB,aAAa/d,KAAKsf,MAErBjgB,aAAyC,EAASA,EAAQogB,aAAejkB,KAAKsiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UACvCniB,KAAKyjB,iBAAiBvB,EAAO3gB,OAAS,EAAI2gB,EAAO,GAAGnf,WAAQtC,EAChE,CACA,OAAOwM,CACX,CACAiX,QAAAA,CAASnC,GACL,IAAInf,EACJ,OAAuC,QAA/BA,EAAK5C,KAAKiiB,QAAQrX,IAAImX,UAAwB,IAAPnf,OAAgB,EAASA,EAAGG,KAC/E,CACA0gB,gBAAAA,CAAiBK,GACT9jB,KAAKsiB,eAAiBwB,IAGtB9jB,KAAKsiB,cACLtiB,KAAKsiB,aAAa6B,WAAU,GAE5BL,GACAA,EAAMK,WAAU,GAEpBnkB,KAAKsiB,aAAewB,EACpB9jB,KAAK6iB,mBAAmBre,KAAKsf,GACjC,CACAM,WAAAA,CAAYN,GACR9jB,KAAK+jB,cAAcD,EACvB,CACAO,UAAAA,CAAWxgB,GACP,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQigB,MAAO,CAChB,IAAK9jB,KAAKqiB,YACN,OAEJxe,EAAQigB,MAAQ9jB,KAAKqiB,WACzB,CACA,MAAM5F,EAAWV,GAAgBlY,EAAQigB,MAAMjf,SACzCyH,EAA+C,QAAvC1J,EAAK5C,KAAKoiB,SAAS9V,KAAKmQ,UAA8B,IAAP7Z,OAAgB,EAASA,EAAGqK,KACzFjN,KAAKyjB,iBAAiBnX,EAC1B,CACAgY,cAAAA,CAAezgB,GACX,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQigB,MAAO,CAChB,IAAK9jB,KAAKqiB,YACN,OAEJxe,EAAQigB,MAAQ9jB,KAAKqiB,WACzB,CACA,MAAM5F,EAAWV,GAAgBlY,EAAQigB,MAAMjf,SACzCyH,EAAmD,QAA3C1J,EAAK5C,KAAKoiB,SAASlL,SAASuF,UAA8B,IAAP7Z,OAAgB,EAASA,EAAGqK,KAC7FjN,KAAKyjB,iBAAiBnX,EAC1B,CACA4J,MAAAA,CAAOnM,EAAOC,EAAQua,IACAA,GAAexa,IAAU/J,KAAK+J,OAASC,IAAWhK,KAAKgK,UAIzEhK,KAAKoiB,SAASvd,QAAQ4F,MAAMT,OAAU,GAAEA,MACxChK,KAAKoiB,SAASvd,QAAQ4F,MAAMV,MAAS,GAAEA,MACvC/J,KAAKoiB,SAASlM,OAAOnM,EAAOC,GAChC,CACAjI,OAAAA,GACI/B,KAAK6iB,mBAAmB9gB,UACxB/B,KAAKyiB,UAAU1gB,UACf/B,KAAKuiB,aAAaxgB,UAClB,IAAK,MAAM+hB,KAAS9jB,KAAKkiB,OACrB4B,EAAM/hB,UAEV/B,KAAKoiB,SAASrgB,UACdhC,MAAMgC,SACV,EC7OG,MAAMyiB,GAIT,eAAIxX,GACA,OAAOhN,KAAKykB,UAAUzX,WAC1B,CAIA,eAAIG,GACA,OAAOnN,KAAKykB,UAAUtX,WAC1B,CAIA,SAAIpD,GACA,OAAO/J,KAAKykB,UAAU1a,KAC1B,CAIA,UAAIC,GACA,OAAOhK,KAAKykB,UAAUza,MAC1B,CAIA,UAAIzI,GACA,OAAOvB,KAAKykB,UAAUljB,MAC1B,CAIA,eAAImN,GACA,OAAO1O,KAAKykB,UAAU/V,WAC1B,CAIA,UAAIgW,GACA,OAAO1kB,KAAKykB,UAAUC,MAC1B,CAIA,uBAAIC,GACA,OAAO3kB,KAAKykB,UAAUE,mBAC1B,CAKA,qBAAI3B,GACA,OAAOhjB,KAAKykB,UAAUzB,iBAC1B,CAIA,gBAAI9S,GACA,OAAOlQ,KAAKykB,UAAUvU,YAC1B,CAIA,mBAAIE,GACA,OAAOpQ,KAAKykB,UAAUrU,eAC1B,CACAzQ,WAAAA,CAAY8kB,GACRzkB,KAAKykB,UAAYA,CACrB,CAKAG,WAAAA,CAAYzB,EAAOnQ,GACfhT,KAAKykB,UAAUG,YAAYzB,EAAOnQ,EACtC,CAIA6R,KAAAA,GACI7kB,KAAKykB,UAAUI,OACnB,CAIAX,QAAAA,CAASnC,GACL,OAAO/hB,KAAKykB,UAAUP,SAASnC,EACnC,CAIA7L,MAAAA,CAAOnM,EAAOC,GACV,OAAOhK,KAAKykB,UAAUvO,OAAOnM,EAAOC,EACxC,CAIA8a,QAAAA,CAASjhB,GACL,OAAO7D,KAAKykB,UAAUK,SAASjhB,EACnC,CAIAkhB,SAAAA,CAAUlf,EAAM4G,GACZzM,KAAKykB,UAAUM,UAAUlf,EAAM4G,EACnC,CAIA6S,QAAAA,CAAS5e,GACLV,KAAKykB,UAAUnF,SAAS5e,EAC5B,CAEAyc,MAAAA,GACI,OAAOnd,KAAKykB,UAAUtH,QAC1B,CAIAxZ,KAAAA,GACI3D,KAAKykB,UAAU9gB,OACnB,CAIA0f,aAAAA,CAAcxf,GACV7D,KAAKykB,UAAUpB,cAAcxf,EACjC,CAIA9B,OAAAA,GACI/B,KAAKykB,UAAU1iB,SACnB,EAEG,MAAMijB,GAIT,eAAIhY,GACA,OAAOhN,KAAKykB,UAAUzX,WAC1B,CAIA,eAAIG,GACA,OAAOnN,KAAKykB,UAAUtX,WAC1B,CAIA,SAAIpD,GACA,OAAO/J,KAAKykB,UAAU1a,KAC1B,CAIA,UAAIC,GACA,OAAOhK,KAAKykB,UAAUza,MAC1B,CAIA,UAAI0a,GACA,OAAO1kB,KAAKykB,UAAUC,MAC1B,CAIA,qBAAI1B,GACA,OAAOhjB,KAAKykB,UAAUzB,iBAC1B,CAIA,uBAAI2B,GACA,OAAO3kB,KAAKykB,UAAUE,mBAC1B,CAIA,gBAAIzU,GACA,OAAOlQ,KAAKykB,UAAUvU,YAC1B,CAIA,mBAAIE,GACA,OAAOpQ,KAAKykB,UAAUrU,eAC1B,CAIA,aAAI6U,GACA,OAAOjlB,KAAKykB,UAAUQ,SAC1B,CACA,4BAAIC,GACA,OAAOllB,KAAKykB,UAAUS,wBAC1B,CACAvlB,WAAAA,CAAY8kB,GACRzkB,KAAKykB,UAAYA,CACrB,CAIAG,WAAAA,CAAYzB,GACRnjB,KAAKykB,UAAUG,YAAYzB,EAC/B,CAIAe,QAAAA,CAASnC,GACL,OAAO/hB,KAAKykB,UAAUP,SAASnC,EACnC,CAIAgD,SAAAA,CAAUlf,EAAM4G,GACZzM,KAAKykB,UAAUM,UAAUlf,EAAM4G,EACnC,CAIAoY,KAAAA,GACI7kB,KAAKykB,UAAUI,OACnB,CAIA3O,MAAAA,CAAOnM,EAAOC,GACVhK,KAAKykB,UAAUvO,OAAOnM,EAAOC,EACjC,CAIA8a,QAAAA,CAASjhB,GACL,OAAO7D,KAAKykB,UAAUK,SAASjhB,EACnC,CAIAyb,QAAAA,CAAS5e,GACLV,KAAKykB,UAAUnF,SAAS5e,EAC5B,CAIAyc,MAAAA,GACI,OAAOnd,KAAKykB,UAAUtH,QAC1B,CAIAxZ,KAAAA,GACI3D,KAAKykB,UAAU9gB,OACnB,CAIA0f,aAAAA,CAAcxf,GACV7D,KAAKykB,UAAUpB,cAAcxf,EACjC,CAIA9B,OAAAA,GACI/B,KAAKykB,UAAU1iB,SACnB,EAEG,MAAMojB,GAIT,SAAIpb,GACA,OAAO/J,KAAKykB,UAAU1a,KAC1B,CAIA,UAAIC,GACA,OAAOhK,KAAKykB,UAAUza,MAC1B,CAIA,iBAAI0P,GACA,OAAO1Z,KAAKykB,UAAU/K,aAC1B,CAIA,iBAAIC,GACA,OAAO3Z,KAAKykB,UAAU9K,aAC1B,CAIA,gBAAIH,GACA,OAAOxZ,KAAKykB,UAAUjL,YAC1B,CAIA,gBAAIC,GACA,OAAOzZ,KAAKykB,UAAUhL,YAC1B,CAIA,qBAAIuJ,GACA,OAAOhjB,KAAKykB,UAAUzB,iBAC1B,CAIA,iBAAIoC,GACA,OAAOplB,KAAKykB,UAAUY,aAC1B,CAIA,oBAAIC,GACA,OAAOtlB,KAAKykB,UAAUc,gBAC1B,CAIA,0BAAIC,GACA,OAAOxlB,KAAKykB,UAAUgB,sBAC1B,CAIA,uBAAId,GACA,OAAO3kB,KAAKykB,UAAUE,mBAC1B,CAIA,UAAID,GACA,OAAO1kB,KAAKykB,UAAUvC,MAC1B,CAIA,eAAIxT,GACA,OAAO1O,KAAKykB,UAAU/V,WAC1B,CACA,eAAIA,CAAY3L,GACZ/C,KAAKykB,UAAUpB,cAAc,CAAE3U,YAAa3L,GAChD,CACApD,WAAAA,CAAY8kB,GACRzkB,KAAKykB,UAAYA,CACrB,CAIAI,KAAAA,GACI7kB,KAAKykB,UAAUI,OACnB,CAIA3O,MAAAA,CAAOnM,EAAOC,EAAQ0b,QAAK,IAALA,IAAAA,GAAQ,GAC1B1lB,KAAKykB,UAAUvO,OAAOnM,EAAOC,EAAQ0b,EACzC,CAIAZ,QAAAA,CAASjhB,GACL,OAAO7D,KAAKykB,UAAUK,SAASjhB,EACnC,CAIA+gB,WAAAA,CAAYzB,EAAOnQ,GACfhT,KAAKykB,UAAUG,YAAYzB,EAAOnQ,EACtC,CAIA+R,SAAAA,CAAU5B,EAAOtf,GACb7D,KAAKykB,UAAUM,UAAU5B,EAAOtf,EACpC,CAIAqgB,QAAAA,CAASnC,GACL,OAAO/hB,KAAKykB,UAAUP,SAASnC,EACnC,CAIAzC,QAAAA,CAAS5e,GACL,OAAOV,KAAKykB,UAAUnF,SAAS5e,EACnC,CAIAyc,MAAAA,GACI,OAAOnd,KAAKykB,UAAUtH,QAC1B,CAIAxZ,KAAAA,GACI3D,KAAKykB,UAAU9gB,OACnB,CACA0f,aAAAA,CAAcxf,GACV7D,KAAKykB,UAAUpB,cAAcxf,EACjC,CAIA9B,OAAAA,GACI/B,KAAKykB,UAAU1iB,SACnB,EAEG,MAAM4jB,GAIT,MAAI5D,GACA,OAAO/hB,KAAKykB,UAAU1C,EAC1B,CAIA,SAAIhY,GACA,OAAO/J,KAAKykB,UAAU1a,KAC1B,CAIA,UAAIC,GACA,OAAOhK,KAAKykB,UAAUza,MAC1B,CAIA,iBAAI0P,GACA,OAAO1Z,KAAKykB,UAAU/K,aAC1B,CAIA,iBAAIC,GACA,OAAO3Z,KAAKykB,UAAU9K,aAC1B,CAIA,gBAAIH,GACA,OAAOxZ,KAAKykB,UAAUjL,YAC1B,CAIA,gBAAIC,GACA,OAAOzZ,KAAKykB,UAAUhL,YAC1B,CAIA,QAAIrU,GACA,OAAOpF,KAAKykB,UAAUrf,IAC1B,CAIA,eAAIwgB,GACA,OAAO5lB,KAAKykB,UAAUmB,WAC1B,CACA,OAAIC,GACA,OAAO7lB,KAAKykB,UAAUoB,GAC1B,CAIA,0BAAIJ,GACA,OAAOzlB,KAAKykB,UAAUgB,sBAC1B,CAIA,iBAAIJ,GACA,OAAOrlB,KAAKykB,UAAUY,aAC1B,CAIA,oBAAIE,GACA,OAAOvlB,KAAKykB,UAAUc,gBAC1B,CAIA,0BAAIC,GACA,OAAOxlB,KAAKykB,UAAUe,sBAC1B,CAIA,iBAAIJ,GACA,OAAOplB,KAAKykB,UAAUW,aAC1B,CAIA,oBAAIE,GACA,OAAOtlB,KAAKykB,UAAUa,gBAC1B,CACA,kBAAIQ,GACA,OAAO9lB,KAAKykB,UAAUqB,cAC1B,CAIA,uBAAInB,GACA,OAAO3kB,KAAKykB,UAAUE,mBAC1B,CAIA,qBAAI3B,GACA,OAAOhjB,KAAKykB,UAAUzB,iBAC1B,CAIA,aAAIiC,GACA,OAAOjlB,KAAKykB,UAAUQ,SAC1B,CAOA,cAAIc,GACA,OAAO/lB,KAAKykB,UAAUsB,UAC1B,CAOA,qBAAIC,GACA,OAAOhmB,KAAKykB,UAAUuB,iBAC1B,CAOA,mBAAIC,GACA,OAAOjmB,KAAKykB,UAAUwB,eAC1B,CAMA,mBAAIC,GACA,OAAOlmB,KAAKykB,UAAUyB,eAC1B,CACA,4BAAIhB,GACA,OAAOllB,KAAKykB,UAAUS,wBAC1B,CAIA,UAAIR,GACA,OAAO1kB,KAAKykB,UAAUC,MAC1B,CAIA,UAAIxC,GACA,OAAOliB,KAAKykB,UAAUvC,MAC1B,CAIA,eAAIiE,GACA,OAAOnmB,KAAKykB,UAAU0B,WAC1B,CAIA,eAAI9D,GACA,OAAOriB,KAAKykB,UAAUpC,WAC1B,CACA1iB,WAAAA,CAAY8kB,GACRzkB,KAAKykB,UAAYA,CACrB,CAIAI,KAAAA,GACI7kB,KAAKykB,UAAUI,OACnB,CAIAX,QAAAA,CAASnC,GACL,OAAO/hB,KAAKykB,UAAU2B,cAAcrE,EACxC,CAIA7L,MAAAA,CAAOnM,EAAOC,EAAQ0b,QAAK,IAALA,IAAAA,GAAQ,GAC1B1lB,KAAKykB,UAAUvO,OAAOnM,EAAOC,EAAQ0b,EACzC,CAIAZ,QAAAA,CAASjhB,GACL,OAAO7D,KAAKykB,UAAUK,SAASjhB,EACnC,CAIA+gB,WAAAA,CAAYzB,GACRnjB,KAAKykB,UAAUG,YAAYzB,EAC/B,CAIAkD,QAAAA,CAASxiB,GACL,OAAO7D,KAAKykB,UAAU4B,SAASxiB,EACnC,CAIAyiB,cAAAA,GACI,OAAOtmB,KAAKykB,UAAU6B,gBAC1B,CAIAlC,WAAAA,CAAYN,GACR9jB,KAAKykB,UAAUL,YAAYN,EAC/B,CAIAyC,QAAAA,CAASxE,GACL,OAAO/hB,KAAKykB,UAAUP,SAASnC,EACnC,CAIAyE,gBAAAA,CAAiBxX,EAAMnL,GACnB,OAAO7D,KAAKykB,UAAU+B,iBAAiBxX,EAAMnL,EACjD,CAIAyb,QAAAA,CAAS5e,GACLV,KAAKykB,UAAUnF,SAAS5e,EAC5B,CAIAyc,MAAAA,GACI,OAAOnd,KAAKykB,UAAUtH,QAC1B,CAIAxZ,KAAAA,GACI3D,KAAKykB,UAAU9gB,OACnB,CAIA0gB,UAAAA,CAAWxgB,GACP7D,KAAKykB,UAAUJ,WAAWxgB,EAC9B,CAIAygB,cAAAA,CAAezgB,GACX7D,KAAKykB,UAAUH,eAAezgB,EAClC,CACA2f,aAAAA,CAAcL,GACVnjB,KAAKykB,UAAUjB,cAAcL,EAAMW,MACvC,CACAF,iBAAAA,GACI,OAAO5jB,KAAKykB,UAAUb,mBAC1B,CACAD,kBAAAA,GACI3jB,KAAKykB,UAAUd,oBACnB,CACA,6BAAI8C,GACA,OAAOzmB,KAAKykB,UAAUgC,yBAC1B,CAIAC,cAAAA,CAAe1X,EAAMnL,GACjB,OAAO7D,KAAKykB,UAAUiC,eAAe1X,EAAMnL,EAC/C,CACA8iB,MAAAA,CAAOd,GACH7lB,KAAKykB,UAAUpB,cAAc,CAAEwC,OACnC,CACAxC,aAAAA,CAAcxf,GACV7D,KAAKykB,UAAUpB,cAAcxf,EACjC,CAIA9B,OAAAA,GACI/B,KAAKykB,UAAU1iB,SACnB,EC5sBG,MAAM6kB,WAAoB7gB,EAC7BpG,WAAAA,CAAYuc,GACRnc,QACAC,KAAKkc,GAAKA,EACVlc,KAAK6mB,eAAiB,IAAIrgB,EAC1BxG,KAAK8mB,wBAA0B,IAAItgB,EACnCxG,KAAK+mB,aAAe,IAAIzjB,EACxBtD,KAAKgnB,YAAchnB,KAAK+mB,aAAa/iB,MACrChE,KAAKoG,eAAepG,KAAK+mB,aAAc/mB,KAAK6mB,eAAgB7mB,KAAK8mB,yBACjE9mB,KAAKinB,WACT,CACAC,WAAAA,CAAYjjB,GACR,OAAO,CACX,CACAgjB,SAAAA,GACIjnB,KAAKoG,eAAepG,KAAK+mB,aAAc9hB,EAAsBjF,KAAKkc,GAAI,aAAclY,IAChF,GAAIA,EAAM5B,kBAAoBpC,KAAKknB,YAAYljB,GAE3C,YADAA,EAAM3B,iBAGV,MAAMgI,EAAUD,IAUhB,GATApK,KAAK8mB,wBAAwB/jB,MAAQ,CACjChB,QAASA,KACLsI,EAAQM,SAAS,GAGzB3K,KAAKkc,GAAG1U,UAAUjD,IAAI,cACtB8E,YAAW,IAAMrJ,KAAKkc,GAAG1U,UAAUE,OAAO,eAAe,GACzD1H,KAAK6mB,eAAe9jB,MAAQ/C,KAAKW,QAAQqD,GACzChE,KAAK+mB,aAAaviB,KAAKR,GACnBA,EAAMmjB,aAAc,CACpBnjB,EAAMmjB,aAAaC,cAAgB,OACnBpjB,EAAMmjB,aAAaE,MAAM9lB,OAAS,GAW9CyC,EAAMmjB,aAAavmB,QAAQ,aAAc,GAEjD,KACAqE,EAAsBjF,KAAKkc,GAAI,WAAW,KAC1Clc,KAAK8mB,wBAAwB/kB,UAC7B/B,KAAK6mB,eAAe9kB,SAAS,IAErC,ECnDG,MAAMulB,WAA4BvhB,EACrCpG,WAAAA,CAAYkF,EAAS0iB,GACjBxnB,QACAC,KAAK6E,QAAUA,EACf7E,KAAKunB,UAAYA,EACjBvnB,KAAKwnB,OAAS,KACdxnB,KAAKynB,mBACT,CACAC,WAAAA,CAAYjjB,GACRzE,KAAKwnB,OAAS/iB,EAAE+iB,OAChBxnB,KAAKunB,UAAUG,YAAYjjB,EAC/B,CACAkjB,UAAAA,CAAWljB,GACPA,EAAEpC,iBACErC,KAAKunB,UAAUI,YACf3nB,KAAKunB,UAAUI,WAAWljB,EAElC,CACAmjB,WAAAA,CAAYnjB,GACJzE,KAAKwnB,SAAW/iB,EAAE+iB,SAClBxnB,KAAKwnB,OAAS,KACdxnB,KAAKunB,UAAUK,YAAYnjB,GAEnC,CACAojB,SAAAA,CAAUpjB,GACNzE,KAAKwnB,OAAS,KACdxnB,KAAKunB,UAAUM,UAAUpjB,EAC7B,CACAqjB,MAAAA,CAAOrjB,GACHzE,KAAKunB,UAAUO,OAAOrjB,EAC1B,CACAgjB,iBAAAA,GACIznB,KAAKoG,eAAenB,EAAsBjF,KAAK6E,QAAS,aAAcJ,IAClEzE,KAAK0nB,YAAYjjB,EAAE,IACpB,IACHzE,KAAKoG,eAAenB,EAAsBjF,KAAK6E,QAAS,YAAaJ,IACjEzE,KAAK2nB,WAAWljB,EAAE,IACnB,IACHzE,KAAKoG,eAAenB,EAAsBjF,KAAK6E,QAAS,aAAcJ,IAClEzE,KAAK4nB,YAAYnjB,EAAE,KAEvBzE,KAAKoG,eAAenB,EAAsBjF,KAAK6E,QAAS,WAAYJ,IAChEzE,KAAK6nB,UAAUpjB,EAAE,KAErBzE,KAAKoG,eAAenB,EAAsBjF,KAAK6E,QAAS,QAASJ,IAC7DzE,KAAK8nB,OAAOrjB,EAAE,IAEtB,EC5CG,MAAMsjB,WAA6B7lB,EACtC,eAAI8lB,GACA,OAAOhoB,KAAK6D,QAAQmkB,WACxB,CACA,YAAIvQ,GACA,OAAOzX,KAAK6D,QAAQ4T,QACxB,CACA9X,WAAAA,CAAYkE,GACR9D,QACAC,KAAK6D,QAAUA,CACnB,EAEG,SAASokB,GAAoBvL,GAChC,OAAQA,GACJ,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI7Z,MAAO,sBAAqB6Z,MAElD,CACO,SAASwL,GAAoBzQ,GAChC,OAAQA,GACJ,IAAK,MACD,MAAO,QACX,IAAK,SACD,MAAO,QACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI5U,MAAO,qBAAoB4U,MAEjD,CACA,MAAM0Q,GAA0B,CAC5BplB,MAAO,GACP+B,KAAM,cAEJsjB,GAAe,CACjBrlB,MAAO,GACP+B,KAAM,cAIH,MAAMujB,WAAmBtiB,EAC5B,SAAIkS,GACA,OAAOjY,KAAKsoB,MAChB,CACA3oB,WAAAA,CAAYkF,EAAShB,GACjB9D,QACAC,KAAK6E,QAAUA,EACf7E,KAAK6D,QAAUA,EACf7D,KAAKuoB,QAAU,IAAIjlB,EACnBtD,KAAK8nB,OAAS9nB,KAAKuoB,QAAQvkB,MAC3BhE,KAAKwoB,mBAAqB,IAAIllB,EAC9BtD,KAAKgmB,kBAAoBhmB,KAAKwoB,mBAAmBxkB,MAEjDhE,KAAKyoB,wBAA0B,IAAIC,IAAI1oB,KAAK6D,QAAQ8kB,qBACpD3oB,KAAK4oB,IAAM,IAAItB,GAAoBtnB,KAAK6E,QAAS,CAC7C6iB,YAAaA,KAAe,EAC5BC,WAAaljB,IACT,GAA0C,IAAtCzE,KAAKyoB,wBAAwBrjB,KAE7B,YADApF,KAAK6oB,mBAGT,MAAM9e,EAAQ/J,KAAK6E,QAAQikB,YACrB9e,EAAShK,KAAK6E,QAAQkkB,aAC5B,GAAc,IAAVhf,GAA0B,IAAXC,EACf,OAEJ,MAAMgf,EAAOvkB,EAAEwkB,cAAchf,wBACvB6G,EAAIrM,EAAEoQ,QAAUmU,EAAKnf,KACrBqf,EAAIzkB,EAAEqQ,QAAUkU,EAAKlf,IACrBqf,EAAWnpB,KAAKopB,kBAAkBppB,KAAKyoB,wBAAyB3X,EAAGoY,EAAGnf,EAAOC,GAMnF,GAAIhK,KAAKqpB,cAAc5kB,IAAmB,OAAb0kB,EAGzB,YADAnpB,KAAK6oB,mBAGT,IAAK7oB,KAAK6D,QAAQylB,kBAAkB7kB,EAAG0kB,GAEnC,YADAnpB,KAAK6oB,mBAGT,MAAMU,EAAuB,IAAIxB,GAAqB,CAClDC,YAAavjB,EACbgT,SAAU0R,IAMdnpB,KAAKwoB,mBAAmBhkB,KAAK+kB,GACzBA,EAAqBnnB,iBACrBpC,KAAK6oB,oBAGT7oB,KAAKwpB,WAAW/kB,GACXzE,KAAKypB,gBACNzpB,KAAKypB,cAAgBjhB,SAAS6L,cAAc,OAC5CrU,KAAKypB,cAAc5hB,UAAY,0BAC/B7H,KAAK0pB,eAAiBlhB,SAAS6L,cAAc,OAC7CrU,KAAK0pB,eAAe7hB,UAAY,2BAChC7H,KAAKsoB,OAAS,SACdtoB,KAAKypB,cAAc9W,YAAY3S,KAAK0pB,gBACpC1pB,KAAK6E,QAAQ2C,UAAUjD,IAAI,kBAC3BvE,KAAK6E,QAAQ8kB,OAAO3pB,KAAKypB,gBAE7BzpB,KAAK4pB,cAAcT,EAAUpf,EAAOC,GACpChK,KAAKsoB,OAASa,EAAQ,EAE1BvB,YAAaA,KACT5nB,KAAK6oB,kBAAkB,EAE3BhB,UAAWA,KACP7nB,KAAK6oB,kBAAkB,EAE3Bf,OAASrjB,IACLA,EAAEpC,iBACF,MAAM4V,EAAQjY,KAAKsoB,OACnBtoB,KAAK6oB,mBACD5Q,IAGAxT,EAAEolB,kBACF7pB,KAAKuoB,QAAQ/jB,KAAK,CAAEiT,SAAUQ,EAAO+P,YAAavjB,IACtD,IAGRzE,KAAKoG,eAAepG,KAAKuoB,QAASvoB,KAAKwoB,mBAAoBxoB,KAAK4oB,IACpE,CACAkB,cAAAA,CAAenB,GACX3oB,KAAKyoB,wBAA0B,IAAIC,IAAIC,EAC3C,CACAoB,eAAAA,CAAgBC,GACZhqB,KAAK6D,QAAQomB,aAAeD,CAChC,CACAjoB,OAAAA,GACI/B,KAAK6oB,mBACL9oB,MAAMgC,SACV,CAIAynB,UAAAA,CAAWxlB,GACPA,EAAMqkB,GAAW6B,gBAAiB,CACtC,CAIAb,aAAAA,CAAcrlB,GACV,MAAMjB,EAAQiB,EAAMqkB,GAAW6B,eAC/B,MAAwB,kBAAVnnB,GAAuBA,CACzC,CACA6mB,aAAAA,CAAcT,EAAUpf,EAAOC,GAC3B,IAAIpH,EAAIgN,EACR,IAAK5P,KAAK0pB,eACN,OAEJ,MAAMS,EAAWpgB,EAzHI,IA0HfqgB,EAAWpgB,EAzHK,IA0HhBqgB,EAAsB,SAAblB,EACTmB,EAAuB,UAAbnB,EACVoB,EAAqB,QAAbpB,EACRqB,EAAwB,WAAbrB,EACXsB,GAAcN,GAAYG,EAC1BI,GAAaP,GAAYE,EACzBM,GAAYP,GAAYG,EACxBK,GAAeR,GAAYI,EACjC,IAAIplB,EAAO,EACX,MAAMylB,EAAuG,QAAxFjb,EAA0C,QAApChN,EAAK5C,KAAK6D,QAAQomB,oBAAiC,IAAPrnB,OAAgB,EAASA,EAAGwC,YAAyB,IAAPwK,EAAgBA,EAAKwY,GACjH,eAArByC,EAAY/lB,KACZM,EAAO6G,EAAM4e,EAAY9nB,MAAO,EAAG,KAAO,MAGtC0nB,GAAcC,KACdtlB,EAAO6G,EAAM,EAAG4e,EAAY9nB,MAAOgH,GAASA,IAE5C4gB,GAAYC,KACZxlB,EAAO6G,EAAM,EAAG4e,EAAY9nB,MAAOiH,GAAUA,IAGrD,MAAMiT,EAAM,CAAEnT,IAAK,MAAOD,KAAM,MAAOE,MAAO,OAAQC,OAAQ,QAoB1DygB,GACAxN,EAAIpT,KAAU,KAAO,EAAIzE,GAAb,IACZ6X,EAAIlT,MAAW,IAAM3E,EAAR,KAERslB,EACLzN,EAAIlT,MAAW,IAAM3E,EAAR,IAERulB,EACL1N,EAAIjT,OAAY,IAAM5E,EAAR,IAETwlB,IACL3N,EAAInT,IAAS,KAAO,EAAI1E,GAAb,IACX6X,EAAIjT,OAAY,IAAM5E,EAAR,KAElBpF,KAAK0pB,eAAejf,MAAMX,IAAMmT,EAAInT,IACpC9J,KAAK0pB,eAAejf,MAAMZ,KAAOoT,EAAIpT,KACrC7J,KAAK0pB,eAAejf,MAAMV,MAAQkT,EAAIlT,MACtC/J,KAAK0pB,eAAejf,MAAMT,OAASiT,EAAIjT,OACvCpC,EAAY5H,KAAK0pB,eAAgB,gCAAiCU,GAClExiB,EAAY5H,KAAK0pB,eAAgB,kCAAmCS,GACpEviB,EAAY5H,KAAK0pB,eAAgB,sBAAuBW,GACxDziB,EAAY5H,KAAK0pB,eAAgB,uBAAwBY,GACzD1iB,EAAY5H,KAAK0pB,eAAgB,qBAAsBa,GACvD3iB,EAAY5H,KAAK0pB,eAAgB,wBAAyBc,GAC1D5iB,EAAY5H,KAAK0pB,eAAgB,wBAAsC,WAAbP,EAC9D,CACAC,iBAAAA,CAAkB0B,EAAaha,EAAGoY,EAAGnf,EAAOC,GACxC,IAAIpH,EAAIgN,EACR,MAAMmb,EAA2H,QAAlGnb,EAA0C,QAApChN,EAAK5C,KAAK6D,QAAQomB,oBAAiC,IAAPrnB,OAAgB,EAASA,EAAGooB,sBAAmC,IAAPpb,EAAgBA,EAAKuY,GAE9J,MADoD,eAA/B4C,EAAsBjmB,KAiB5C,SAAuCgmB,EAAaha,EAAGoY,EAAGnf,EAAOC,EAAQihB,GAC5E,MAAMC,EAAM,IAAMpa,EAAK/G,EACjBohB,EAAM,IAAMjC,EAAKlf,EACvB,GAAI8gB,EAAY9G,IAAI,SAAWkH,EAAKD,EAChC,MAAO,OAEX,GAAIH,EAAY9G,IAAI,UAAYkH,EAAK,IAAMD,EACvC,MAAO,QAEX,GAAIH,EAAY9G,IAAI,QAAUmH,EAAKF,EAC/B,MAAO,MAEX,GAAIH,EAAY9G,IAAI,WAAamH,EAAK,IAAMF,EACxC,MAAO,SAEX,IAAKH,EAAY9G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlCmBoH,CAA8BN,EAAaha,EAAGoY,EAAGnf,EAAOC,EAAQ+gB,EAAsBhoB,OAmClG,SAAmC+nB,EAAaha,EAAGoY,EAAGnf,EAAOC,EAAQihB,GACxE,GAAIH,EAAY9G,IAAI,SAAWlT,EAAIma,EAC/B,MAAO,OAEX,GAAIH,EAAY9G,IAAI,UAAYlT,EAAI/G,EAAQkhB,EACxC,MAAO,QAEX,GAAIH,EAAY9G,IAAI,QAAUkF,EAAI+B,EAC9B,MAAO,MAEX,GAAIH,EAAY9G,IAAI,WAAakF,EAAIlf,EAASihB,EAC1C,MAAO,SAEX,IAAKH,EAAY9G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlDeqH,CAA0BP,EAAaha,EAAGoY,EAAGnf,EAAOC,EAAQ+gB,EAAsBhoB,MAC7F,CACA8lB,gBAAAA,GACQ7oB,KAAKypB,gBACLzpB,KAAKsoB,YAAS7nB,EACdT,KAAK6E,QAAQ2P,YAAYxU,KAAKypB,eAC9BzpB,KAAKypB,mBAAgBhpB,EACrBT,KAAK0pB,oBAAiBjpB,EACtBT,KAAK6E,QAAQ2C,UAAUE,OAAO,kBAEtC,EAEJ2gB,GAAW6B,cAAgB,wCCzQpB,MAAMoB,GAAyB,MAKlC,MAAMlT,EAAa,CACfC,yBAAqB5X,EACrB8qB,gBAAY9qB,EACZoH,eAAWpH,GAEf,OAAO6X,OAAOC,KAAKH,EACtB,EAXqC,GAY/B,MAAMoT,WAAuClpB,EAChD3C,WAAAA,CAAYqoB,EAAavQ,EAAU9W,EAASwiB,GACxCpjB,QACAC,KAAKgoB,YAAcA,EACnBhoB,KAAKyX,SAAWA,EAChBzX,KAAKW,QAAUA,EACfX,KAAKmjB,MAAQA,CACjB,EClBG,MAAMsI,WAAuBvpB,EAChCvC,WAAAA,GACII,OACJ,EAKG,MAAM2rB,WAAqB3lB,EAC9B,aAAI4lB,GACA,OAAO3rB,KAAK4rB,UAChB,CACA,YAAIC,GACA,OAAO7rB,KAAK8rB,SAChB,CACA,aAAI1I,GACA,OAAOpjB,KAAK+rB,UAChB,CACA,SAAIhiB,GACA,OAAO/J,KAAKgsB,MAChB,CACA,UAAIhiB,GACA,OAAOhK,KAAKisB,OAChB,CACAtsB,WAAAA,CAAYoiB,EAAI0C,GACZ1kB,QACAC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAK4rB,YAAa,EAClB5rB,KAAK8rB,WAAY,EACjB9rB,KAAK+rB,YAAa,EAClB/rB,KAAKgsB,OAAS,EACdhsB,KAAKisB,QAAU,EACfjsB,KAAKksB,YAAc,CAAC,EACpBlsB,KAAKmsB,uBAAyB,IAAI3lB,EAClCxG,KAAKosB,sBAAwB,IAAI9oB,EACjCtD,KAAKqsB,sBAAwBrsB,KAAKosB,sBAAsBpoB,MACxDhE,KAAKssB,kBAAoB,IAAIhpB,EAC7BtD,KAAKusB,iBAAmBvsB,KAAKssB,kBAAkBtoB,MAE/ChE,KAAKwsB,aAAe,IAAIlpB,EACxBtD,KAAKysB,YAAczsB,KAAKwsB,aAAaxoB,MAErChE,KAAKsa,uBAAyB,IAAIhX,EAClCtD,KAAKua,sBAAwBva,KAAKsa,uBAAuBtW,MACzDhE,KAAK0sB,wBAA0B,IAAIppB,EACnCtD,KAAK2sB,uBAAyB3sB,KAAK0sB,wBAAwB1oB,MAC3DhE,KAAK6iB,mBAAqB,IAAIvf,EAC9BtD,KAAK8iB,kBAAoB9iB,KAAK6iB,mBAAmB7e,MACjDhE,KAAK4sB,gBAAkB,IAAItpB,EAC3BtD,KAAK6sB,eAAiB7sB,KAAK4sB,gBAAgB5oB,MAC3ChE,KAAK8sB,uBAAyB,IAAIxpB,EAClCtD,KAAK+sB,sBAAwB/sB,KAAK8sB,uBAAuB9oB,MACzDhE,KAAKoG,eAAepG,KAAKusB,kBAAkBvoB,IACvChE,KAAK4rB,WAAa5nB,EAAM2nB,SAAS,IACjC3rB,KAAK8iB,mBAAmB9e,IACxBhE,KAAK8rB,UAAY9nB,EAAM6nB,QAAQ,IAC/B7rB,KAAKua,uBAAuBvW,IAC5BhE,KAAK+rB,WAAa/nB,EAAMof,SAAS,IACjCpjB,KAAKqsB,uBAAuBroB,IAC5BhE,KAAKgsB,OAAShoB,EAAM+F,MACpB/J,KAAKisB,QAAUjoB,EAAMgG,MAAM,IAC3BhK,KAAKmsB,uBAAwBnsB,KAAKosB,sBAAuBpsB,KAAKssB,kBAAmBtsB,KAAKsa,uBAAwBta,KAAK6iB,mBAAoB7iB,KAAKwsB,aAAcxsB,KAAK4sB,gBAAiB5sB,KAAKwsB,aAAcxsB,KAAK0sB,wBAAyB1sB,KAAK8sB,uBAC9O,CACAE,aAAAA,GACI,OAAOhtB,KAAKksB,WAChB,CACAe,UAAAA,CAAW9J,GACPnjB,KAAKmsB,uBAAuBppB,MAAQ/C,KAAK8sB,uBAAuB9oB,OAAOkpB,IACnEltB,KAAKksB,YAAcgB,EACnB/J,EAAMgK,OAAO,CACTC,OAAQF,GACV,GAEV,CACAzf,UAAAA,CAAW2V,GACPpjB,KAAK0sB,wBAAwBloB,KAAK,CAAE4e,aACxC,CACAe,SAAAA,GACInkB,KAAK4sB,gBAAgBpoB,MACzB,CACA6oB,gBAAAA,CAAiBH,GACbltB,KAAK8sB,uBAAuBtoB,KAAK0oB,EACrC,ECnFG,MAAMI,WAA8B5B,GAEvC/rB,WAAAA,CAAYoiB,EAAI0C,GACZ1kB,MAAMgiB,EAAI0C,GACVzkB,KAAKutB,gCAAkC,IAAIjqB,EAC3CtD,KAAKwtB,+BAAiCxtB,KAAKutB,gCAAgCvpB,MAE3EhE,KAAKytB,wBAA0B,IAAInqB,EAAQ,CACvCY,QAAQ,IAEZlE,KAAK0tB,uBAAyB1tB,KAAKytB,wBAAwBzpB,MAE3DhE,KAAK2tB,iBAAmB,IAAIrqB,EAC5BtD,KAAK4tB,gBAAkB5tB,KAAK2tB,iBAAiB3pB,MAC7ChE,KAAKoG,eAAepG,KAAKutB,gCAAiCvtB,KAAKytB,wBAAyBztB,KAAK2tB,iBACjG,CACAE,cAAAA,CAAe9qB,GACX/C,KAAKutB,gCAAgC/oB,KAAKzB,EAC9C,CACA+qB,OAAAA,CAAQ9pB,GACJhE,KAAK2tB,iBAAiBnpB,KAAKR,EAC/B,ECrBG,MAAM+pB,WAA6BT,GACtC,QAAIxU,CAAKA,GACL9Y,KAAKguB,MAAQlV,CACjB,CACAnZ,WAAAA,CAAYoiB,EAAI0C,GACZ1kB,MAAMgiB,EAAI0C,GACVzkB,KAAKiuB,sBAAwB,IAAI3qB,EAAQ,CACrCY,QAAQ,IAEZlE,KAAKkuB,qBAAuBluB,KAAKiuB,sBAAsBjqB,MACvDhE,KAAKmuB,cAAgB,IAAI7qB,EAAQ,CAAC,GAClCtD,KAAKouB,aAAepuB,KAAKmuB,cAAcnqB,MACvChE,KAAKquB,cAAgB,IAAI/qB,EAAQ,CAAC,GAClCtD,KAAKsuB,aAAetuB,KAAKquB,cAAcrqB,MACvChE,KAAKoG,eAAepG,KAAKiuB,sBAAuBjuB,KAAKmuB,cAAenuB,KAAKquB,cAC7E,CACAE,WAAAA,CAAYC,GACR,IAAI5rB,EACkB,QAArBA,EAAK5C,KAAKguB,aAA0B,IAAPprB,GAAyBA,EAAG2rB,YAAYC,EAC1E,CACA,cAAIA,GACA,IAAI5rB,EACJ,SAAgC,QAArBA,EAAK5C,KAAKguB,aAA0B,IAAPprB,OAAgB,EAASA,EAAG4rB,aACxE,ECtBG,MAAMC,WAAsB1oB,EAC/B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACA,SAAInX,GACA,OAAO/J,KAAKgsB,MAChB,CACA,UAAIhiB,GACA,OAAOhK,KAAKisB,OAChB,CACA,UAAImB,GACA,IAAIxqB,EACJ,OAA+B,QAAvBA,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,OAAgB,EAASA,EAAGwqB,MACvE,CACAztB,WAAAA,CAAYoiB,EAAI0C,EAAWkK,GACvB5uB,QACAC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAK2uB,IAAMA,EACX3uB,KAAKisB,QAAU,EACfjsB,KAAKgsB,OAAS,EACdhsB,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAAS0N,UAAY,EAC1B5uB,KAAKkhB,SAASzW,MAAMokB,QAAU,OAC9B7uB,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,OAC5B/J,KAAKkhB,SAASzW,MAAMqkB,SAAW,SAC/B,MAAMC,EAAetmB,EAAWzI,KAAKkhB,UACrClhB,KAAKoG,eAAepG,KAAK2uB,IAAKI,EAAanmB,YAAW,KAClD5I,KAAK2uB,IAAIrC,kBAAkB9nB,KAAK,CAAEmnB,WAAW,GAAO,IACpDoD,EAAajmB,WAAU,KACvB9I,KAAK2uB,IAAIrC,kBAAkB9nB,KAAK,CAAEmnB,WAAW,GAAQ,IACrDoD,EACR,CACAlK,KAAAA,GACI,MAAM7gB,EAAQ,IAAIynB,GAClBzrB,KAAK2uB,IAAInC,aAAahoB,KAAKR,GACvBA,EAAM5B,kBAGVpC,KAAKkhB,SAAS2D,OAClB,CACA3O,MAAAA,CAAOnM,EAAOC,GACVhK,KAAKgsB,OAASjiB,EACd/J,KAAKisB,QAAUjiB,EACfhK,KAAK2uB,IAAIvC,sBAAsB5nB,KAAK,CAAEuF,QAAOC,WACzChK,KAAKgvB,MACDhvB,KAAK0uB,SACL1uB,KAAKgvB,KAAK7B,OAAOntB,KAAK0uB,QAAQtB,OAG1C,CACA6B,IAAAA,CAAK/B,GACDltB,KAAK0uB,QAAUxB,EACfltB,KAAKgvB,KAAOhvB,KAAKkvB,cACrB,CACA/B,MAAAA,CAAOnpB,GACH,IAAIpB,EAAIgN,EAER5P,KAAK0uB,QAAUpW,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAK0uB,SAAU,CAAEtB,OAAQ9U,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAA2B,QAAvBvsB,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,OAAgB,EAASA,EAAGwqB,QAASppB,EAAMopB,UAKnL,IAAK,MAAMgC,KAAO9W,OAAOC,KAAKvU,EAAMopB,aACN3sB,IAAtBuD,EAAMopB,OAAOgC,WACNpvB,KAAK0uB,QAAQtB,OAAOgC,GAId,QAApBxf,EAAK5P,KAAKgvB,YAAyB,IAAPpf,GAAyBA,EAAGud,OAAO,CAAEC,OAAQptB,KAAK0uB,QAAQtB,QAC3F,CACAjQ,MAAAA,GACI,IAAIva,EAAIgN,EACR,MAAMwd,EAAuF,QAA7Exd,EAA6B,QAAvBhN,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,OAAgB,EAASA,EAAGwqB,cAA2B,IAAPxd,EAAgBA,EAAK,CAAC,EAC3H,MAAO,CACHmS,GAAI/hB,KAAK+hB,GACT0C,UAAWzkB,KAAKykB,UAChB2I,OAAQ9U,OAAOC,KAAK6U,GAAQ7rB,OAAS,EAAI6rB,OAAS3sB,EAE1D,CACAsB,OAAAA,GACI,IAAIa,EACJ5C,KAAK2uB,IAAI5sB,UACY,QAApBa,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGb,UACzDhC,MAAMgC,SACV,ECpFG,MAAMstB,WAAsBZ,GAC/B,eAAI/f,CAAY3L,GACZ/C,KAAK2O,aAAe5L,CACxB,CACA,eAAI2L,GACA,OAAO1O,KAAK2O,YAChB,CACA,eAAI3B,GAIA,OAHmBhN,KAAKsvB,YACPtvB,KAAKwuB,aACaxuB,KAAKuvB,iBAAmB,EAE/D,CACA,eAAIpiB,GAIA,OAHmBnN,KAAKsvB,YACPtvB,KAAKwuB,aACaxuB,KAAKwvB,iBAAmB,EAE/D,CACA,QAAIpqB,GACA,OAAOpF,KAAK4M,KAChB,CACA,kBAAIyB,GACA,OAAOrO,KAAKsO,eAChB,CACA,kBAAID,CAAejJ,GACfpF,KAAKsO,gBAAkBlJ,CAC3B,CACA,mBAAIqqB,GACA,OAAOzvB,KAAKuvB,gBAChB,CACA,mBAAIE,CAAgB1sB,GAChB/C,KAAKuvB,iBAAoC,iBAAVxsB,EAAqBA,EAAQ,CAChE,CACA,mBAAI2sB,GACA,OAAO1vB,KAAKwvB,gBAChB,CACA,mBAAIE,CAAgB3sB,GAChB/C,KAAKwvB,iBACgB,iBAAVzsB,EAAqBA,EAAQkM,OAAOC,iBACnD,CACA,iBAAIygB,GACA,OAAO3vB,KAAK4vB,cAChB,CACA,iBAAID,CAAc5sB,GACd/C,KAAK4vB,eAAiB7sB,EACtB/C,KAAK6vB,OAAOplB,MAAMqlB,QAAU/sB,EAAQ,GAAK,MAC7C,CACApD,WAAAA,CAAYoiB,EAAI0C,EAAWsL,EAAiBrhB,EAAa8f,EAAYwB,GACjEjwB,MAAMgiB,EAAI0C,EAAW,IAAIsJ,GAAqBhM,EAAI0C,IAClDzkB,KAAK+vB,gBAAkBA,EACvB/vB,KAAKiwB,2BAA6B,IAAI3sB,EAAQ,CAAEY,QAAQ,IACxDlE,KAAK+Y,0BAA4B/Y,KAAKiwB,2BAA2BjsB,MACjEhE,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAKsvB,WAAa,GAClBtvB,KAAKsO,gBAAkB,EACvBtO,KAAK4M,MAAQ,EACb5M,KAAKuvB,iBAAmB,IACxBvvB,KAAKwvB,iBAAmBvgB,OAAOC,kBAC/BlP,KAAKkwB,aAAc,EACnBlwB,KAAKmwB,aAAe,EACpBnwB,KAAK2uB,IAAI7V,KAAO9Y,KAChBA,KAAK2uB,IAAI1B,WAAWjtB,MACpBA,KAAKkwB,YAAc1B,EACnBxuB,KAAK4vB,eAAiBI,EACtBhwB,KAAKiwB,2BAA2BzrB,KAAKxE,KAAKwuB,cAC1CxuB,KAAK2O,aAAeD,EACpB1O,KAAK6E,QAAQ2C,UAAUjD,IAAI,WAC3BvE,KAAKoG,eAAepG,KAAK2uB,IAAIhC,wBAAwB3oB,IACjD,MAAM,UAAEof,GAAcpf,GAChB,SAAEosB,GAAapwB,KAAK0uB,QAC1B0B,EAAS3iB,WAAWzN,KAAMojB,EAAU,IACpCpjB,KAAK2uB,IAAIf,iBAAiB5pB,IAC1BhE,KAAK4Y,aAAapU,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAC5CH,EAAsBjF,KAAK6E,QAAS,cAAewrB,IACnDrwB,KAAK2uB,IAAIR,cAAc3pB,KAAK6rB,EAAG,IAC/BprB,EAAsBjF,KAAK6E,QAAS,cAAewrB,IACnDrwB,KAAK2uB,IAAIN,cAAc7pB,KAAK6rB,EAAG,KAEnCrwB,KAAKoG,eAAepG,KAAKiwB,2BAA4BjwB,KAAK+Y,2BAA2BuX,IACjFtwB,KAAK2uB,IAAIV,sBAAsBzpB,KAAK,CAChCgqB,WAAY8B,GACd,IACFtwB,KAAK2uB,IAAIpC,kBAAkB9nB,IACtBzE,KAAK6vB,SAGNprB,EAAEknB,UACFhkB,EAAW3H,KAAK6vB,OAAQ,WAGxBxoB,EAAcrH,KAAK6vB,OAAQ,WAC/B,KAEJ7vB,KAAKuwB,YACT,CACA9iB,UAAAA,CAAW2V,GACPpjB,KAAK2uB,IAAIrU,uBAAuB9V,KAAK,CAAE4e,aAC3C,CACAe,SAAAA,CAAU0H,GACN7rB,KAAK2uB,IAAI9L,mBAAmBre,KAAK,CAAEqnB,YACvC,CACA2C,UAAAA,GACI,OAAOxuB,KAAKkwB,WAChB,CACA3B,WAAAA,CAAYiC,GACJxwB,KAAKkwB,cAAgBM,IAGzBxwB,KAAKkwB,YAAcM,EACfA,GACIxwB,KAAKqZ,gBACLC,aAAatZ,KAAKqZ,gBAElBrZ,KAAKywB,MACLzwB,KAAK6E,QAAQ8N,YAAY3S,KAAKywB,OAIlCzwB,KAAKqZ,eAAiBhQ,YAAW,KAC7B,IAAIzG,EACiB,QAApBA,EAAK5C,KAAKywB,YAAyB,IAAP7tB,GAAyBA,EAAG8E,QAAQ,GAClE,KAEP1H,KAAK4Y,aAAapU,KAAKgsB,EAAW,CAAEprB,KAAMpF,KAAK+J,OAAU,CAAC,GAC1D/J,KAAKiwB,2BAA2BzrB,KAAKgsB,GACzC,CACAta,MAAAA,CAAO9Q,EAAMiJ,GACTrO,KAAK4M,MAAQxH,EACbpF,KAAKsO,gBAAkBD,EACvB,MAAOtE,EAAOC,GAAUhK,KAAK0O,cAAgBf,EAAYkB,WACnD,CAACzJ,EAAMiJ,GACP,CAACA,EAAgBjJ,GACnBpF,KAAKwuB,eACLxuB,KAAKmwB,aAAepmB,GAExBhK,MAAMmW,OAAOnM,EAAOC,EACxB,CACAilB,IAAAA,CAAK/B,GACD,IAAItqB,EAAIgN,EACR7P,MAAMkvB,KAAK/B,GAC+B,iBAA/BA,EAAWuC,kBAClBzvB,KAAKyvB,gBAAkBvC,EAAWuC,iBAEI,iBAA/BvC,EAAWwC,kBAClB1vB,KAAK0vB,gBAAkBxC,EAAWwC,iBAEtC1vB,KAAK0wB,SAAW1wB,KAAK2wB,mBACrB3wB,KAAK4wB,WAAa5wB,KAAK6wB,qBACvB7wB,KAAK0wB,SAASzB,KAAK3W,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGjC,GAAa,CAAEyB,IAAK3uB,KAAK2uB,OAC5E3uB,KAAK4wB,WAAW3B,KAAK3W,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGjC,GAAa,CAAEyB,IAAK3uB,KAAK2uB,OACzD,QAApB/rB,EAAK5C,KAAKywB,YAAyB,IAAP7tB,GAAyBA,EAAG+mB,OAAO3pB,KAAK0wB,SAAS7rB,SACvD,QAAtB+K,EAAK5P,KAAK6vB,cAA2B,IAAPjgB,GAAyBA,EAAG+Z,OAAO3pB,KAAK4wB,WAAW/rB,SAC7C,kBAA1BqoB,EAAWsB,YAClBxuB,KAAKuuB,YAAYrB,EAAWsB,WAEpC,CACArR,MAAAA,GACI,MAAMiQ,EAASptB,KAAK0uB,QACpB,OAAOpW,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGpvB,MAAMod,UAAW,CAAE4S,gBAAiB/vB,KAAK+vB,gBAAiBe,MAAO1D,EAAO0D,OACnH,CACAP,UAAAA,GACIvwB,KAAK6vB,OAASrnB,SAAS6L,cAAc,OACrCrU,KAAK6vB,OAAOjB,SAAW,EACvB5uB,KAAK6vB,OAAOhoB,UAAY,iBACxB7H,KAAK6vB,OAAOplB,MAAMT,OAAU,GAAEhK,KAAKsvB,eACnCtvB,KAAK6vB,OAAOplB,MAAMsmB,WAAc,GAAE/wB,KAAKsvB,eACvCtvB,KAAK6vB,OAAOplB,MAAMumB,UAAa,GAAEhxB,KAAKsvB,eACtCtvB,KAAK6vB,OAAOplB,MAAMwmB,UAAa,GAAEjxB,KAAKsvB,eACtCtvB,KAAK6E,QAAQ8N,YAAY3S,KAAK6vB,QAC9B7vB,KAAKywB,KAAOjoB,SAAS6L,cAAc,OACnCrU,KAAKywB,KAAK5oB,UAAY,eACtB7H,KAAK6E,QAAQ8N,YAAY3S,KAAKywB,KAClC,CAEAvB,YAAAA,GACI,MAAO,CACH/B,OAASC,IACL,IAAIxqB,EAAIgN,EACiB,QAAxBhN,EAAK5C,KAAK0wB,gBAA6B,IAAP9tB,GAAyBA,EAAGuqB,OAAO,CAAEC,WAC3C,QAA1Bxd,EAAK5P,KAAK4wB,kBAA+B,IAAPhhB,GAAyBA,EAAGud,OAAO,CAAEC,UAAS,EAErFrrB,QAASA,KACL,IAAIa,EAAIgN,EACiB,QAAxBhN,EAAK5C,KAAK0wB,gBAA6B,IAAP9tB,GAAyBA,EAAGb,UAClC,QAA1B6N,EAAK5P,KAAK4wB,kBAA+B,IAAPhhB,GAAyBA,EAAG7N,SAAS,EAGpF,EC3LG,MAAMmvB,WAA+B7B,GACxC1vB,WAAAA,CAAYywB,EAAUrO,EAAI0C,EAAWsL,EAAiBrhB,EAAa8f,EAAYjD,GAC3ExrB,MAAMgiB,EAAI0C,EAAWsL,EAAiBrhB,EAAa8f,GAAY,GAC/DxuB,KAAKowB,SAAWA,EAChBpwB,KAAKmxB,WAAa,IAAI7tB,EACtBtD,KAAKilB,UAAYjlB,KAAKmxB,WAAWntB,MACjChE,KAAKoxB,0BAA4B,IAAI9tB,EACrCtD,KAAKklB,yBAA2BllB,KAAKoxB,0BAA0BptB,MAC/DhE,KAAKoG,eAAepG,KAAKmxB,WAAYnxB,KAAKoxB,2BACrC7F,GACDvrB,KAAKqxB,kBAEb,CACAA,gBAAAA,GACI,IAAKrxB,KAAK6vB,OACN,OAEJ,MAAM9N,EAAK/hB,KAAK+hB,GACVuP,EAAatxB,KAAKowB,SAASrO,GACjC/hB,KAAK6vB,OAAO0B,WAAY,EACxBvxB,KAAKwxB,QAAU,IAAK,cAA8B5K,GAC9CjmB,OAAAA,GAEI,OADAR,EAAuBC,cAAcQ,QAAQ,CAAC,IAAIX,EAAaqxB,EAAYvP,IAAM9hB,EAAac,WACvF,CACHgB,QAASA,KACL5B,EAAuBC,cAAcI,UAAUP,EAAac,UAAU,EAGlF,GACDf,KAAK6vB,QACR7vB,KAAKwnB,OAAS,IAAIa,GAAWroB,KAAK6E,QAAS,CACvC8jB,oBAAqB,CAAC,MAAO,UAC7BsB,aAAc,CACVe,eAAgB,CAAElmB,KAAM,aAAc/B,MAAO,KAEjDumB,kBAAmBA,CAACtlB,EAAOyT,KACvB,MAAM/W,EAAOM,IACb,GAAIN,GACIA,EAAKR,SAAWF,KAAK+hB,IACrBrhB,EAAKd,SAAWI,KAAKowB,SAASrO,GAC9B,OAAO,EAGf,MAAM0P,EAAa,IAAIjG,GAA+BxnB,EAAOyT,EAAUzW,EAAahB,MAEpF,OADAA,KAAKoxB,0BAA0B5sB,KAAKitB,GAC7BA,EAAWjvB,UAAU,IAGpCxC,KAAKoG,eAAepG,KAAKmxB,WAAYnxB,KAAKwxB,QAASxxB,KAAKwnB,OAAQxnB,KAAKwnB,OAAOM,QAAQ9jB,IAChFhE,KAAK8nB,OAAO9jB,EAAM,IAE1B,CACA8jB,MAAAA,CAAO9jB,GACH,MAAMtD,EAAOM,IACb,IAAKN,GAAQA,EAAKd,SAAWI,KAAKowB,SAASrO,GAIvC,YADA/hB,KAAKmxB,WAAW3sB,KAAK8T,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnrB,GAAQ,CAAEmf,MAAOnjB,KAAM2uB,IAAK,IAAI3J,GAAYhlB,KAAKowB,UAAWzvB,QAASK,KAG9H,MAAM0wB,EAAe1xB,KAAK0uB,QACrBgD,aACC5xB,EAAUY,EAAKR,OACfyxB,EAAgBD,EAAaxN,SAASpkB,GAC5C,IAAK6xB,EAGD,YADA3xB,KAAKmxB,WAAW3sB,KAAK8T,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnrB,GAAQ,CAAEmf,MAAOnjB,KAAMW,QAASK,EAAa2tB,IAAK,IAAI3J,GAAYhlB,KAAKowB,aAGhI,MAAMwB,EAAYF,EAAahN,OACzBmN,EAAYD,EAAUvtB,QAAQstB,GACpC,IAAIG,EAAUJ,EAAahN,OAAOrgB,QAAQrE,MACnB,SAAnBgE,EAAMyT,UAA0C,QAAnBzT,EAAMyT,WACnCqa,EAAU1lB,KAAKD,IAAI,EAAG2lB,EAAU,IAEb,UAAnB9tB,EAAMyT,UAA2C,WAAnBzT,EAAMyT,WAChCoa,EAAYC,GACZA,IAEJA,EAAU1lB,KAAKF,IAAI0lB,EAAUrwB,OAAS,EAAGuwB,IAE7CJ,EAAa3M,UAAU8M,EAAWC,EACtC,ECpFG,MAAMC,WAAyBhsB,EAClC,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYywB,EAAUtM,GAClB/jB,QACAC,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAK0G,WAAa,IAAIF,EACtBxG,KAAK2I,YAAc,IAAIrF,EACvBtD,KAAK4I,WAAa5I,KAAK2I,YAAY3E,MACnChE,KAAK6I,WAAa,IAAIvF,EACtBtD,KAAK8I,UAAY9I,KAAK6I,WAAW7E,MACjChE,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,uBAC1B7H,KAAKkhB,SAAS0N,UAAY,EAC1B5uB,KAAKoG,eAAepG,KAAK2I,YAAa3I,KAAK6I,YAC3C7I,KAAKgyB,WAAa,IAAI3J,GAAWroB,KAAK6E,QAAS,CAC3C8jB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDW,kBAAmBA,CAACtlB,EAAOyT,KACvB,GAA0B,mBAAtBzX,KAAK8jB,MAAMvG,QACVvd,KAAK8jB,MAAMvG,QAAuB,WAAb9F,EACtB,OAAO,EAEX,MAAM/W,EAAOG,IACb,IAAKH,GACDsD,EAAMiuB,UACuB,aAA7BjyB,KAAK8jB,MAAMrH,SAAS3X,KACpB,OAAO,EAEX,GAAIpE,GAAQA,EAAKd,SAAWI,KAAKowB,SAASrO,GAAI,CAC1C,GAAIrhB,EAAKb,UAAYG,KAAK8jB,MAAM/B,GAAI,CAChC,GAAiB,WAAbtK,EAEA,OAAO,EAEX,GAAqB,OAAjB/W,EAAKZ,QAEL,OAAO,CAEf,CAGA,QAF4E,IAA7BE,KAAK8jB,MAAMY,OAAOnjB,QAC7Db,EAAKb,UAAYG,KAAK8jB,MAAM/B,GAEpC,CACA,OAAO/hB,KAAK8jB,MAAMwF,kBAAkBtlB,EAAOyT,EAAU,UAAU,IAGvEzX,KAAKoG,eAAepG,KAAKgyB,WAC7B,CACAE,IAAAA,GACIlyB,KAAK6E,QAAQ4F,MAAMqlB,QAAU,EACjC,CACAqC,IAAAA,GACInyB,KAAK6E,QAAQ4F,MAAMqlB,QAAU,MACjC,CACAsC,WAAAA,CAAYjP,EAAOtf,QAAO,IAAPA,IAAAA,EAAU,CAAEwuB,UAAU,IACrC,MAAMC,EAAWzuB,EAAQwuB,UACpBryB,KAAKmjB,OAASnjB,KAAK8jB,MAAMyO,cAAcvyB,KAAKmjB,OASjD,IAAI3V,EACJ,OATIxN,KAAKmjB,OACLnjB,KAAKmjB,MAAMlW,KAAKulB,QAAQ3tB,QAAQmX,gBAAkBhc,KAAKkhB,UAIvDlhB,KAAKkhB,SAAS1M,YAAYxU,KAAKmjB,MAAMlW,KAAKulB,QAAQ3tB,SAEtD7E,KAAKmjB,MAAQA,EAELA,EAAMwL,IAAI8D,UACd,IAAK,kBACDzyB,KAAK8jB,MAAM4O,gBAAgBC,QAAQxP,GAC/BnjB,KAAKmjB,OACDmP,GACAtyB,KAAKkhB,SAASvO,YAAY3S,KAAKmjB,MAAMlW,KAAKulB,QAAQ3tB,SAG1D2I,EAAYxN,KAAKkhB,SACjB,MACJ,IAAK,SACGiC,EAAMlW,KAAKulB,QAAQ3tB,QAAQmX,gBAAkBhc,KAAKkhB,UAClDlhB,KAAKkhB,SAAS1M,YAAY2O,EAAMlW,KAAKulB,QAAQ3tB,SAEjD2I,EAAYxN,KAAK8jB,MAAM4O,gBAAgBE,OAAO,CAC1CzP,QACA0P,mBAAoB7yB,OAExB,MACJ,QACI,MAAM,IAAI6C,MAAO,oCAAmCsgB,EAAMwL,IAAI8D,aAEtE,GAAIH,EAAU,CACV,MAAMvD,EAAetmB,EAAW+E,GAC1B9G,EAAa,IAAIX,EACvBW,EAAWN,eAAe2oB,EAAcA,EAAanmB,YAAW,IAAM5I,KAAK2I,YAAYnE,SAASuqB,EAAajmB,WAAU,IAAM9I,KAAK6I,WAAWrE,UAC7IxE,KAAK0G,WAAW3D,MAAQ2D,CAC5B,CACJ,CACAosB,SAAAA,CAAU3P,GACFnjB,KAAKmjB,QAAUA,GAGnBnjB,KAAKoyB,YAAYjP,EACrB,CACAjN,MAAAA,CAAO8V,EAAQC,GACX,CAEJ8G,UAAAA,GACI,IAAInwB,EACA5C,KAAKmjB,OAC2B,oBAA5BnjB,KAAKmjB,MAAMwL,IAAI8D,WAC0C,QAAxD7vB,EAAK5C,KAAKmjB,MAAMlW,KAAKulB,QAAQ3tB,QAAQmX,qBAAkC,IAAPpZ,GAAyBA,EAAG4R,YAAYxU,KAAKmjB,MAAMlW,KAAKulB,QAAQ3tB,UAGzI7E,KAAKmjB,WAAQ1iB,CACjB,CACAsB,OAAAA,GACI/B,KAAK0G,WAAW3E,UAChBhC,MAAMgC,SACV,ECrHJ,MAAMixB,WAAuBpM,GACzBjnB,WAAAA,CAAYkF,EAASurB,EAAUtM,EAAOX,GAClCpjB,MAAM8E,GACN7E,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAKmjB,MAAQA,EACbnjB,KAAKc,cAAgBX,EAAuBC,aAChD,CACAO,OAAAA,CAAQqD,GAEJ,OADAhE,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAKowB,SAASrO,GAAI/hB,KAAK8jB,MAAM/B,GAAI/hB,KAAKmjB,MAAMpB,KAAMriB,EAAcqB,WACvG,CACHgB,QAASA,KACL/B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EAEG,MAAMkyB,WAAYltB,EACrB,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYwjB,EAAOiN,EAAUtM,GACzB/jB,QACAC,KAAKmjB,MAAQA,EACbnjB,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAKwyB,aAAU/xB,EACfT,KAAKkzB,WAAa,IAAI5vB,EACtBtD,KAAKmzB,UAAYnzB,KAAKkzB,WAAWlvB,MACjChE,KAAKozB,WAAa,IAAI9vB,EACtBtD,KAAK8nB,OAAS9nB,KAAKozB,WAAWpvB,MAC9BhE,KAAK+mB,aAAe,IAAIzjB,EACxBtD,KAAKgnB,YAAchnB,KAAK+mB,aAAa/iB,MACrChE,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,SAC1B7H,KAAKkhB,SAAS0N,SAAW,EACzB5uB,KAAKkhB,SAASqQ,WAAY,EAC1B3pB,EAAY5H,KAAK6E,QAAS,mBAAmB,GAC7C,MAAMwuB,EAAc,IAAIL,GAAehzB,KAAKkhB,SAAUlhB,KAAKowB,SAAUpwB,KAAK8jB,MAAO9jB,KAAKmjB,OACtFnjB,KAAKgyB,WAAa,IAAI3J,GAAWroB,KAAKkhB,SAAU,CAC5CyH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACtlB,EAAOyT,KACvB,GAAIzX,KAAK8jB,MAAMvG,OACX,OAAO,EAEX,MAAM7c,EAAOG,IACb,OAAIH,GAAQV,KAAKowB,SAASrO,KAAOrhB,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAK8jB,MAAM/B,KAIzB/hB,KAAKmjB,MAAMpB,KAAOrhB,EAAKZ,QAE3BE,KAAK8jB,MAAMkG,MAAMV,kBAAkBtlB,EAAOyT,EAAU,MAAM,IAGzEzX,KAAKgmB,kBAAoBhmB,KAAKgyB,WAAWhM,kBACzChmB,KAAKoG,eAAepG,KAAKkzB,WAAYlzB,KAAKozB,WAAYpzB,KAAK+mB,aAAcsM,EAAYrM,aAAahjB,IAC9FhE,KAAK+mB,aAAaviB,KAAKR,EAAM,IAC7BqvB,EAAapuB,EAAsBjF,KAAKkhB,SAAU,eAAgBld,IAC9DA,EAAM5B,kBAGVpC,KAAKkzB,WAAW1uB,KAAKR,EAAM,IAC3BhE,KAAKgyB,WAAWlK,QAAQ9jB,IACxBhE,KAAKozB,WAAW5uB,KAAKR,EAAM,IAC3BhE,KAAKgyB,WACb,CACA7N,SAAAA,CAAU0H,GACNjkB,EAAY5H,KAAK6E,QAAS,gBAAiBgnB,GAC3CjkB,EAAY5H,KAAK6E,QAAS,mBAAoBgnB,EAClD,CACAyH,UAAAA,CAAWtE,GACHhvB,KAAKwyB,SACLxyB,KAAKkhB,SAAS1M,YAAYxU,KAAKwyB,QAAQ3tB,SAE3C7E,KAAKwyB,QAAUxD,EACfhvB,KAAKkhB,SAASvO,YAAY3S,KAAKwyB,QAAQ3tB,QAC3C,CACA9C,OAAAA,GACIhC,MAAMgC,SACV,ECnFG,MAAMwxB,WAAyB3M,GAClCjnB,WAAAA,CAAYkF,EAASurB,EAAUtM,GAC3B/jB,MAAM8E,GACN7E,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAKc,cAAgBX,EAAuBC,cAC5CJ,KAAKoG,eAAenB,EAAsBJ,EAAS,eAAgBJ,IAC3DA,EAAEwtB,WAMkBxtB,E1BoH1BgF,IAA6B,E0BnH3B,IACD,GACP,CACAyd,WAAAA,CAAYjjB,GACR,MAAqC,aAAjCjE,KAAK8jB,MAAM6K,IAAIlS,SAAS3X,OAAwBb,EAAOguB,QAI/D,CACAtxB,OAAAA,CAAQ6yB,GACJ,MAAMrM,EAAeqM,EAAUrM,aAC/BnnB,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAKowB,SAASrO,GAAI/hB,KAAK8jB,MAAM/B,GAAI,OAAQriB,EAAcqB,WACrG,MAAM0J,EAAQrB,OAAOqqB,iBAAiBzzB,KAAKkc,IACrCwX,EAAUjpB,EAAMkpB,iBAAiB,sDACjCC,EAAQnpB,EAAMkpB,iBAAiB,2CACrC,GAAIxM,EAAc,CACd,MAAM0M,EAAerrB,SAAS6L,cAAc,OAC5Cwf,EAAappB,MAAMqpB,gBAAkBJ,EACrCG,EAAappB,MAAMmpB,MAAQA,EAC3BC,EAAappB,MAAMspB,QAAU,UAC7BF,EAAappB,MAAMT,OAAS,OAC5B6pB,EAAappB,MAAMupB,SAAW,OAC9BH,EAAappB,MAAMsmB,WAAa,OAChC8C,EAAappB,MAAMwpB,aAAe,OAClCJ,EAAappB,MAAMgN,SAAW,WAC9Boc,EAAaK,YAAe,oBAAmBl0B,KAAK8jB,MAAM1e,QC3C/D,SAAuB+hB,EAAc0M,GAExClsB,EAAWksB,EAAc,cACzBrrB,SAASioB,KAAK9d,YAAYkhB,GAC1B1M,EAAagN,aAAaN,EAAc,EAAG,GAC3CxqB,YAAW,KACPhC,EAAcwsB,EAAc,cAC5BA,EAAansB,QAAQ,GACtB,EACP,CDmCY0sB,CAAcjN,EAAc0M,EAChC,CACA,MAAO,CACH9xB,QAASA,KACL/B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EE9CG,MAAMszB,WAAsBtuB,EAC/B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYywB,EAAUtM,GAClB/jB,QACAC,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAKuoB,QAAU,IAAIjlB,EACnBtD,KAAK8nB,OAAS9nB,KAAKuoB,QAAQvkB,MAC3BhE,KAAK+mB,aAAe,IAAIzjB,EACxBtD,KAAKgnB,YAAchnB,KAAK+mB,aAAa/iB,MACrChE,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,oBAC1B7H,KAAKkhB,SAASqQ,WAAY,EAC1BvxB,KAAKoG,eAAepG,KAAKuoB,QAASvoB,KAAK+mB,aAAc9hB,EAAsBjF,KAAKkhB,SAAU,eAAe,KACrGlhB,KAAKowB,SAAS3M,iBAAiBzjB,KAAK8jB,MAAM,KAE9C,MAAM0N,EAAU,IAAI+B,GAAiBvzB,KAAKkhB,SAAUkP,EAAUtM,GAC9D9jB,KAAKs0B,WAAa,IAAIjM,GAAWroB,KAAKkhB,SAAU,CAC5CyH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAACtlB,EAAOyT,KACvB,IAAI7U,EACJ,MAAMlC,EAAOG,IACb,OAAIH,GAAQV,KAAKowB,SAASrO,KAAOrhB,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAK8jB,MAAM/B,MAKW,QAAlCnf,G3B/BR0I,E2B+BkBtL,KAAK8jB,MAAMY,Q3B9BnCnjB,OAAS,EAAI+J,EAAIA,EAAI/J,OAAS,QAAKd,S2B8B4B,IAAPmC,OAAgB,EAASA,EAAGmf,MAAQrhB,EAAKZ,QAEzFgkB,EAAMkG,MAAMV,kBAAkBtlB,EAAOyT,EAAU,gB3BjC/D,IAAcnM,C2BiCgE,IAG7EtL,KAAKgmB,kBAAoBhmB,KAAKs0B,WAAWtO,kBACzChmB,KAAKoG,eAAeorB,EAASA,EAAQxK,aAAahjB,IAC9ChE,KAAK+mB,aAAaviB,KAAKR,EAAM,IAC7BhE,KAAKs0B,WAAWxM,QAAQ9jB,IACxBhE,KAAKuoB,QAAQ/jB,KAAKR,EAAM,IACxBhE,KAAKs0B,WACb,ECzCG,MAAMC,WAAsBxuB,EAC/B,UAAI2e,GACA,OAAO1kB,KAAKw0B,KAAK3yB,KAAK0P,GAAMA,EAAExO,MAAMogB,MAAMpB,IAC9C,CACA,QAAI3c,GACA,OAAOpF,KAAKw0B,KAAKjzB,MACrB,CACA,UAAIkzB,GACA,OAAOz0B,KAAK00B,OAChB,CACA,UAAID,CAAO1xB,GACP/C,KAAK00B,QAAU3xB,EACf/C,KAAK6E,QAAQ4F,MAAMqlB,QAAU/sB,EAAQ,OAAS,EAClD,CACAmvB,IAAAA,GACSlyB,KAAKy0B,SACNz0B,KAAK6E,QAAQ4F,MAAMqlB,QAAU,GAErC,CACAqC,IAAAA,GACInyB,KAAKkhB,SAASzW,MAAMqlB,QAAU,MAClC,CACA6E,sBAAAA,CAAuB9vB,GACf7E,KAAK40B,eAAiB/vB,IAGtB7E,KAAK40B,eACL50B,KAAK40B,aAAaltB,SAClB1H,KAAK40B,kBAAen0B,GAEpBoE,IACA7E,KAAK60B,sBAAsBliB,YAAY9N,GACvC7E,KAAK40B,aAAe/vB,GAE5B,CACAiwB,qBAAAA,CAAsBjwB,GACd7E,KAAK+0B,cAAgBlwB,IAGrB7E,KAAK+0B,cACL/0B,KAAK+0B,YAAYrtB,SACjB1H,KAAK+0B,iBAAct0B,GAEnBoE,IACA7E,KAAKg1B,qBAAqBriB,YAAY9N,GACtC7E,KAAK+0B,YAAclwB,GAE3B,CACAowB,uBAAAA,CAAwBpwB,GAChB7E,KAAKk1B,aAAerwB,IAGpB7E,KAAKk1B,aACLl1B,KAAKk1B,WAAWxtB,SAChB1H,KAAKk1B,gBAAaz0B,GAElBoE,IACA7E,KAAKm1B,oBAAoBxiB,YAAY9N,GACrC7E,KAAKk1B,WAAarwB,GAE1B,CACA,WAAIA,GACA,OAAO7E,KAAKkhB,QAChB,CACA2K,QAAAA,CAASuJ,GACL,OAAQp1B,KAAKq1B,eAAiB,GAC1Br1B,KAAKw0B,KAAKx0B,KAAKq1B,eAAetyB,QAAUqyB,CAChD,CACA/wB,OAAAA,CAAQ0d,GACJ,OAAO/hB,KAAKw0B,KAAKzoB,WAAWqpB,GAAQA,EAAIryB,MAAMogB,MAAMpB,KAAOA,GAC/D,CACApiB,WAAAA,CAAYywB,EAAUtM,GAClB/jB,QACAC,KAAKowB,SAAWA,EAChBpwB,KAAK8jB,MAAQA,EACb9jB,KAAKw0B,KAAO,GACZx0B,KAAKq1B,eAAiB,EACtBr1B,KAAK00B,SAAU,EACf10B,KAAKuoB,QAAU,IAAIjlB,EACnBtD,KAAK8nB,OAAS9nB,KAAKuoB,QAAQvkB,MAC3BhE,KAAKs1B,gBAAkB,IAAIhyB,EAC3BtD,KAAKu1B,eAAiBv1B,KAAKs1B,gBAAgBtxB,MAC3ChE,KAAKw1B,kBAAoB,IAAIlyB,EAC7BtD,KAAKy1B,iBAAmBz1B,KAAKw1B,kBAAkBxxB,MAC/ChE,KAAKwoB,mBAAqB,IAAIllB,EAC9BtD,KAAKgmB,kBAAoBhmB,KAAKwoB,mBAAmBxkB,MACjDhE,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,gCAC1BD,EAAY5H,KAAKkhB,SAAU,2BAAoE,cAAxClhB,KAAKowB,SAASvsB,QAAQ6xB,eAC7E11B,KAAK60B,sBAAwBrsB,SAAS6L,cAAc,OACpDrU,KAAK60B,sBAAsBhtB,UAAY,6BACvC7H,KAAKg1B,qBAAuBxsB,SAAS6L,cAAc,OACnDrU,KAAKg1B,qBAAqBntB,UAAY,4BACtC7H,KAAKm1B,oBAAsB3sB,SAAS6L,cAAc,OAClDrU,KAAKm1B,oBAAoBttB,UAAY,2BACrC7H,KAAK21B,aAAentB,SAAS6L,cAAc,OAC3CrU,KAAK21B,aAAa9tB,UAAY,oBAC9B7H,KAAK41B,cAAgB,IAAIvB,GAAcr0B,KAAKowB,SAAUpwB,KAAK8jB,OAC3D9jB,KAAKkhB,SAASvO,YAAY3S,KAAKm1B,qBAC/Bn1B,KAAKkhB,SAASvO,YAAY3S,KAAK21B,cAC/B31B,KAAKkhB,SAASvO,YAAY3S,KAAKg1B,sBAC/Bh1B,KAAKkhB,SAASvO,YAAY3S,KAAK41B,cAAc/wB,SAC7C7E,KAAKkhB,SAASvO,YAAY3S,KAAK60B,uBAC/B70B,KAAKoG,eAAepG,KAAKwoB,mBAAoBxoB,KAAKuoB,QAASvoB,KAAKs1B,gBAAiBt1B,KAAKw1B,kBAAmBx1B,KAAK41B,cAAe51B,KAAK41B,cAAc5O,aAAahjB,IACzJhE,KAAKw1B,kBAAkBhxB,KAAK,CACxBwjB,YAAahkB,EACb8f,MAAO9jB,KAAK8jB,OACd,IACF9jB,KAAK41B,cAAc9N,QAAQ9jB,IAC3BhE,KAAKuoB,QAAQ/jB,KAAK,CACdR,MAAOA,EAAMgkB,YACb5jB,MAAOpE,KAAKw0B,KAAKjzB,QACnB,IACFvB,KAAK41B,cAAc5P,mBAAmBhiB,IACtChE,KAAKwoB,mBAAmBhkB,KAAK,IAAIqxB,GAA6B7xB,EAAO,CACjE8xB,KAAM,eACN3S,MAAOnjB,KAAK8jB,MAAMqC,YAClBwI,IAAK3uB,KAAKowB,SAASzB,IACnB7K,MAAO9jB,KAAK8jB,MACZnjB,QAASE,IACV,IACHoE,EAAsBjF,KAAK41B,cAAc/wB,QAAS,eAAgBb,IAElE,IADiChE,KAAKowB,SAASvsB,QAAQkyB,uBAEnD/xB,EAAMiuB,UAC2B,aAAjCjyB,KAAK8jB,MAAM6K,IAAIlS,SAAS3X,KAAqB,CAC7Cd,EAAM3B,iBACN,MAAM,IAAEyH,EAAG,KAAED,GAAS7J,KAAK6E,QAAQoF,yBAC3BH,IAAKksB,EAASnsB,KAAMosB,GAAaj2B,KAAKowB,SAASvrB,QAAQoF,wBAC/DjK,KAAKowB,SAAS5J,iBAAiBxmB,KAAK8jB,MAAO,CACvChT,EAAGjH,EAAOosB,EAAW,GACrB/M,EAAGpf,EAAMksB,EAAU,GACnBE,YAAY,GAEpB,KACAjxB,EAAsBjF,KAAK21B,aAAc,eAAgB3xB,IACzD,GAAIA,EAAM5B,iBACN,OAEiC,IAAjB4B,EAAMmyB,QAEtBn2B,KAAKowB,SAAS3M,iBAAiBzjB,KAAK8jB,MACxC,IAER,CACAK,SAAAA,CAAUiS,GACN,CAEJzxB,OAAOod,GACH,MAAM3d,EAAQpE,KAAKw0B,KAAKzoB,WAAWqpB,GAAQA,EAAIryB,MAAMogB,MAAMpB,KAAOA,IAC5DsU,EAAcr2B,KAAKw0B,KAAKlwB,OAAOF,EAAO,GAAG,GAC/C,IAAKiyB,EACD,MAAM,IAAIxzB,MAAO,2BAErB,MAAM,MAAEE,EAAK,WAAE2D,GAAe2vB,EAC9B3vB,EAAW3E,UACXgB,EAAMhB,UACNgB,EAAM8B,QAAQ6C,SACd1H,KAAKs2B,kBACT,CACAC,cAAAA,CAAepT,GACXnjB,KAAKw0B,KAAKxyB,SAASozB,IACf,MAAMoB,EAAgBrT,EAAMpB,KAAOqT,EAAIryB,MAAMogB,MAAMpB,GACnDqT,EAAIryB,MAAMohB,UAAUqS,EAAc,GAE1C,CACA1D,SAAAA,CAAU3P,EAAO/e,GACb,QADkB,IAALA,IAAAA,EAAQpE,KAAKw0B,KAAKjzB,QAC3BvB,KAAKw0B,KAAKiC,MAAMrB,GAAQA,EAAIryB,MAAMogB,MAAMpB,KAAOoB,EAAMpB,KACrD,OAEJ,MAAMqT,EAAM,IAAInC,GAAI9P,EAAOnjB,KAAKowB,SAAUpwB,KAAK8jB,OAC/CsR,EAAI9B,WAAWnQ,EAAMlW,KAAKmoB,KAC1B,MAAM1uB,EAAa,IAAIX,EAAoBqvB,EAAIpO,aAAahjB,IACxDhE,KAAKs1B,gBAAgB9wB,KAAK,CAAEwjB,YAAahkB,EAAOmf,SAAQ,IACxDiS,EAAIjC,WAAWnvB,IACf,GAAIA,EAAM5B,iBACN,OAEJ,MAAMs0B,GAA2B12B,KAAKowB,SAASvsB,QAAQkyB,sBACjDY,EAA0D,aAAjC32B,KAAK8jB,MAAM6K,IAAIlS,SAAS3X,MACrC,IAAd9E,KAAKoF,KACT,GAAIsxB,IACCC,GACD3yB,EAAMiuB,SAFV,CAGIjuB,EAAM3B,iBACN,MAAM8gB,EAAQnjB,KAAKowB,SAAShK,cAAcgP,EAAIjS,MAAMpB,KAC9C,IAAEjY,EAAG,KAAED,GAASurB,EAAIvwB,QAAQoF,yBAC1BH,IAAKksB,EAASnsB,KAAMosB,GAAaj2B,KAAKowB,SAASvrB,QAAQoF,wBAC/DjK,KAAKowB,SAAS5J,iBAAiBrD,EAAO,CAClCrS,EAAGjH,EAAOosB,EACV/M,EAAGpf,EAAMksB,EACTE,YAAY,GAGpB,MACA,OAAQlyB,EAAMmyB,QACV,KAAK,EACGn2B,KAAK8jB,MAAMqC,cAAgBhD,GAC3BnjB,KAAK8jB,MAAMkG,MAAM8I,UAAU3P,GAE/B,MACJ,KAAK,EACDA,EAAMwL,IAAIiI,QAElB,IACAxB,EAAItN,QAAQ9jB,IACZhE,KAAKuoB,QAAQ/jB,KAAK,CACdR,MAAOA,EAAMgkB,YACb5jB,MAAOpE,KAAKw0B,KAAKzoB,WAAW+E,GAAMA,EAAE/N,QAAUqyB,KAChD,IACFA,EAAIpP,mBAAmBhiB,IACvBhE,KAAKwoB,mBAAmBhkB,KAAK,IAAIqxB,GAA6B7xB,EAAO,CACjE8xB,KAAM,MACN3S,MAAOnjB,KAAK8jB,MAAMqC,YAClBwI,IAAK3uB,KAAKowB,SAASzB,IACnB7K,MAAO9jB,KAAK8jB,MACZnjB,QAASE,IACV,KAEDkC,EAAQ,CAAEA,MAAOqyB,EAAK1uB,cAC5B1G,KAAK62B,OAAO9zB,EAAOqB,EACvB,CACA2uB,UAAAA,CAAW5P,GACPnjB,KAAK2E,OAAOwe,EAAMpB,GACtB,CACAhgB,OAAAA,GACIhC,MAAMgC,UACN,IAAK,MAAM,MAAEgB,EAAK,WAAE2D,KAAgB1G,KAAKw0B,KACrC9tB,EAAW3E,UACXgB,EAAMhB,UAEV/B,KAAKw0B,KAAO,EAChB,CACAqC,MAAAA,CAAOzB,EAAKhxB,GACR,QADa,IAALA,IAAAA,EAAQpE,KAAKw0B,KAAKjzB,QACtB6C,EAAQ,GAAKA,EAAQpE,KAAKw0B,KAAKjzB,OAC/B,MAAM,IAAIsB,MAAM,oBAEpB7C,KAAK21B,aAAalhB,aAAa2gB,EAAIryB,MAAM8B,QAAS7E,KAAK21B,aAAan0B,SAAS4C,IAC7EpE,KAAKw0B,KAAO,IACLx0B,KAAKw0B,KAAKlsB,MAAM,EAAGlE,GACtBgxB,KACGp1B,KAAKw0B,KAAKlsB,MAAMlE,IAEnBpE,KAAKq1B,cAAgB,IACrBr1B,KAAKq1B,cAAgBjxB,GAEzBpE,KAAKs2B,kBACT,CACAA,gBAAAA,GACI1uB,EAAY5H,KAAKkhB,SAAU,gBAA+B,IAAdlhB,KAAKoF,KACrD,EChQG,MAAM0xB,WAAuCx0B,EAChD3C,WAAAA,CAAYqoB,EAAaR,EAAQ/P,EAAU9W,EAASmjB,GAChD/jB,QACAC,KAAKgoB,YAAcA,EACnBhoB,KAAKwnB,OAASA,EACdxnB,KAAKyX,SAAWA,EAChBzX,KAAKW,QAAUA,EACfX,KAAK8jB,MAAQA,CACjB,EAEG,MAAMiT,GAAyB,MAKlC,MAAM3e,EAAa,CACfC,yBAAqB5X,EACrBugB,iBAAavgB,EACbi1B,mBAAej1B,EACfs1B,2BAAuBt1B,EACvBu2B,yBAAqBv2B,EACrBw2B,eAAWx2B,EACXy2B,qBAAiBz2B,EACjB02B,WAAO12B,EACP22B,sBAAkB32B,EAClB8c,YAAQ9c,EACR8qB,gBAAY9qB,EACZolB,SAAKplB,EACLoH,eAAWpH,EACX42B,qBAAiB52B,GAErB,OAAO6X,OAAOC,KAAKH,EACtB,EAtBqC,GCH/B,MAAMkf,WAA6Bp1B,EACtC,eAAI8lB,GACA,OAAOhoB,KAAK6D,QAAQmkB,WACxB,CACA,YAAIvQ,GACA,OAAOzX,KAAK6D,QAAQ4T,QACxB,CACA,SAAI0L,GACA,OAAOnjB,KAAK6D,QAAQsf,KACxB,CACA,SAAIW,GACA,OAAO9jB,KAAK6D,QAAQigB,KACxB,CACA,OAAI6K,GACA,OAAO3uB,KAAK6D,QAAQ8qB,GACxB,CACAhvB,WAAAA,CAAYkE,GACR9D,QACAC,KAAK6D,QAAUA,CACnB,CACAlD,OAAAA,GACI,OAAOX,KAAK6D,QAAQlD,SACxB,EAEG,MAAM42B,WAA8BD,GACvC,QAAIxB,GACA,OAAO91B,KAAKw3B,KAChB,CACA73B,WAAAA,CAAYkE,GACR9D,MAAM8D,GACN7D,KAAKw3B,MAAQ3zB,EAAQiyB,IACzB,EAEG,MAAMD,GACT,QAAIC,GACA,OAAO91B,KAAK6D,QAAQiyB,IACxB,CACA,eAAI9N,GACA,OAAOhoB,KAAKgE,MAAMgkB,WACtB,CACA,YAAIvQ,GACA,OAAOzX,KAAKgE,MAAMyT,QACtB,CACA,oBAAIrV,GACA,OAAOpC,KAAKgE,MAAM5B,gBACtB,CACA,SAAI+gB,GACA,OAAOnjB,KAAK6D,QAAQsf,KACxB,CACA,OAAIwL,GACA,OAAO3uB,KAAK6D,QAAQ8qB,GACxB,CACA,SAAI7K,GACA,OAAO9jB,KAAK6D,QAAQigB,KACxB,CACAzhB,cAAAA,GACIrC,KAAKgE,MAAM3B,gBACf,CACA1B,OAAAA,GACI,OAAOX,KAAK6D,QAAQlD,SACxB,CACAhB,WAAAA,CAAYqE,EAAOH,GACf7D,KAAKgE,MAAQA,EACbhE,KAAK6D,QAAUA,CACnB,EAEG,MAAM4zB,WAAgC1xB,EACzC,WAAIlB,GACA,MAAM,IAAIhC,MAAM,0BACpB,CACA,eAAIsjB,GACA,OAAOnmB,KAAK03B,YAChB,CACA,UAAIna,GACA,OAAOvd,KAAKwd,OAChB,CACA,UAAID,CAAOxa,GACP/C,KAAKwd,QAAUza,EACf6E,EAAY5H,KAAKwN,UAAW,sBAAiC,mBAAVzK,GAA8BA,EACrF,CACA,YAAI8oB,GACA,OAAO7rB,KAAKo2B,cAChB,CACA,UAAI1R,GACA,OAAO1kB,KAAK23B,OAChB,CACA,QAAIvyB,GACA,OAAOpF,KAAK23B,QAAQp2B,MACxB,CACA,WAAIq2B,GACA,OAA+B,IAAxB53B,KAAK23B,QAAQp2B,MACxB,CACA,gBAAIs2B,GACA,SAAU73B,KAAK83B,YAAa93B,KAAKwN,UAAU/F,SAASzH,KAAK83B,UAAUjzB,SACvE,CACA,UAAIgrB,GACA,OAAO7vB,KAAK+3B,aAChB,CACA,oBAAIC,GACA,QAAKxvB,SAASQ,eAGPhB,EAAWQ,SAASQ,cAAehJ,KAAKi4B,iBAAiBpzB,QACpE,CACA,YAAI4X,GACA,OAAOzc,KAAKk4B,SAChB,CACA,YAAIzb,CAAS1Z,GAIT,OAHA/C,KAAKk4B,UAAYn1B,EACjB6E,EAAY5H,KAAKwN,UAAW,yBAAyB,GACrD5F,EAAY5H,KAAKwN,UAAW,uBAAuB,GAC3CzK,EAAM+B,MACV,IAAK,OACD9E,KAAKi4B,iBAAiBjG,WAAWlI,eAAe,CAC5C,MACA,SACA,OACA,QACA,WAEJ,MACJ,IAAK,WACD9pB,KAAKi4B,iBAAiBjG,WAAWlI,eAAe,CAAC,WACjD9pB,KAAKi4B,iBAAiBjG,WAAWlI,eAAe/mB,EAC1C,CAAC,UACD,CAAC,MAAO,SAAU,OAAQ,QAAS,WACzC6E,EAAY5H,KAAKwN,UAAW,yBAAyB,GACrD,MACJ,IAAK,SACDxN,KAAKi4B,iBAAiBjG,WAAWlI,eAAe,CAAC,WACjDliB,EAAY5H,KAAKwN,UAAW,uBAAuB,GAG3DxN,KAAKm4B,WAAWxJ,IAAIyJ,qBAAqB5zB,KAAK,CAC1CiY,SAAUzc,KAAKyc,UAEvB,CACA9c,WAAAA,CAAY6N,EAAW4iB,EAAUrO,EAAIle,EAASs0B,GAC1C,IAAIv1B,EACJ7C,QACAC,KAAKwN,UAAYA,EACjBxN,KAAKowB,SAAWA,EAChBpwB,KAAK+hB,GAAKA,EACV/hB,KAAK6D,QAAUA,EACf7D,KAAKm4B,WAAaA,EAClBn4B,KAAKo2B,gBAAiB,EACtBp2B,KAAKwd,SAAU,EACfxd,KAAKk4B,UAAY,CAAEpzB,KAAM,QACzB9E,KAAKq4B,iBAAmB,GACxBr4B,KAAKs4B,0BAA4B,KACjCt4B,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAKgsB,OAAS,EACdhsB,KAAKisB,QAAU,EACfjsB,KAAK23B,QAAU,GACf33B,KAAKu4B,kBAAoB,IAAIpzB,IAC7BnF,KAAKw4B,QAAU,IAAIl1B,EACnBtD,KAAKy4B,OAASz4B,KAAKw4B,QAAQx0B,MAC3BhE,KAAKmxB,WAAa,IAAI7tB,EACtBtD,KAAKilB,UAAYjlB,KAAKmxB,WAAWntB,MACjChE,KAAK04B,YAAc,IAAIp1B,EACvBtD,KAAK+lB,WAAa/lB,KAAK04B,YAAY10B,MACnChE,KAAKwoB,mBAAqB,IAAIllB,EAC9BtD,KAAKgmB,kBAAoBhmB,KAAKwoB,mBAAmBxkB,MACjDhE,KAAKs1B,gBAAkB,IAAIhyB,EAC3BtD,KAAKu1B,eAAiBv1B,KAAKs1B,gBAAgBtxB,MAC3ChE,KAAKw1B,kBAAoB,IAAIlyB,EAC7BtD,KAAKy1B,iBAAmBz1B,KAAKw1B,kBAAkBxxB,MAC/ChE,KAAK24B,eAAiB,IAAIr1B,EAC1BtD,KAAKolB,cAAgBplB,KAAK24B,eAAe30B,MACzChE,KAAK44B,uBAAyB,IAAIt1B,EAClCtD,KAAK64B,sBAAwB74B,KAAK44B,uBAAuB50B,MACzDhE,KAAK84B,4BAA8B,IAAIx1B,EACvCtD,KAAK+4B,2BAA6B/4B,KAAK84B,4BAA4B90B,MACnEhE,KAAKg5B,kBAAoB,IAAI11B,EAC7BtD,KAAKslB,iBAAmBtlB,KAAKg5B,kBAAkBh1B,MAC/ChE,KAAKi5B,wBAA0B,IAAI31B,EACnCtD,KAAKwlB,uBAAyBxlB,KAAKi5B,wBAAwBj1B,MAC3DhE,KAAKoxB,0BAA4B,IAAI9tB,EACrCtD,KAAKklB,yBAA2BllB,KAAKoxB,0BAA0BptB,MAC/D4D,EAAY5H,KAAKwN,UAAW,gBAAgB,GAC5CxN,KAAKk5B,KAAO,IAAIvT,GAAY3lB,KAAKowB,UACjCpwB,KAAK+3B,cAAgB,IAAIxD,GAAcv0B,KAAKowB,SAAUpwB,KAAKm4B,YAC3Dn4B,KAAKi4B,iBAAmB,IAAIlG,GAAiB/xB,KAAKowB,SAAUpwB,MAC5DwN,EAAUmc,OAAO3pB,KAAK+3B,cAAclzB,QAAS7E,KAAKi4B,iBAAiBpzB,SACnE7E,KAAK6vB,OAAO4E,SAAW5wB,EAAQs1B,WAC/Bn5B,KAAKud,OAAmC,QAAzB3a,EAAKiB,EAAQ0Z,cAA2B,IAAP3a,GAAgBA,EAChE5C,KAAKoG,eAAepG,KAAKs1B,gBAAiBt1B,KAAKw1B,kBAAmBx1B,KAAKwoB,mBAAoBxoB,KAAK+3B,cAAcxC,gBAAgBvxB,IAC1HhE,KAAKs1B,gBAAgB9wB,KAAKR,EAAM,IAChChE,KAAK+3B,cAActC,kBAAkBzxB,IACrChE,KAAKw1B,kBAAkBhxB,KAAKR,EAAM,IAClChE,KAAK+3B,cAAcjQ,QAAQ9jB,IAC3BhE,KAAKo5B,gBAAgB,SAAUp1B,EAAMA,MAAO,SAAUA,EAAMI,MAAM,IAClEpE,KAAKi4B,iBAAiBrvB,YAAW,KACjC5I,KAAKowB,SAAS3M,iBAAiBzjB,KAAKm4B,WAAW,IAC/Cn4B,KAAKi4B,iBAAiBnvB,WAAU,SAEhC9I,KAAKi4B,iBAAiBjG,WAAWlK,QAAQ9jB,IACzChE,KAAKo5B,gBAAgB,UAAWp1B,EAAMgkB,YAAahkB,EAAMyT,SAAS,IAClEzX,KAAK+3B,cAAc/R,mBAAmBhiB,IACtChE,KAAKwoB,mBAAmBhkB,KAAKR,EAAM,IACnChE,KAAKi4B,iBAAiBjG,WAAWhM,mBAAmBhiB,IACpDhE,KAAKwoB,mBAAmBhkB,KAAK,IAAIqxB,GAA6B7xB,EAAO,CACjE8xB,KAAM,UACN3S,MAAOnjB,KAAKmmB,YACZwI,IAAK3uB,KAAKk5B,KACVpV,MAAO9jB,KAAKm4B,WACZx3B,QAASE,IACV,IACHb,KAAKw4B,QAASx4B,KAAK4Y,aAAc5Y,KAAKmxB,WAAYnxB,KAAK04B,YAAa14B,KAAK24B,eAAgB34B,KAAKg5B,kBAAmBh5B,KAAKi5B,wBAAyBj5B,KAAKoxB,0BAA2BpxB,KAAK44B,uBAAwB54B,KAAK84B,4BACzN,CACAO,YAAAA,GACIr5B,KAAKi4B,iBAAiBpzB,QAAQggB,OAClC,CACA,mBAAI6N,CAAgB3vB,GAChB/C,KAAK0kB,OAAO1iB,SAASmhB,IACjBnjB,KAAK0yB,gBAAgBC,QAAQxP,EAAM,IAEvCnjB,KAAKs4B,0BAA4Bv1B,EACjC/C,KAAK0kB,OAAO1iB,SAASmhB,IACjBnjB,KAAKs5B,SAASnW,EAAM,GAE5B,CACA,mBAAIuP,GACA,IAAI9vB,EACJ,OAAkD,QAAzCA,EAAK5C,KAAKs4B,iCAA8C,IAAP11B,EAAgBA,EAAK5C,KAAKowB,SAASmJ,sBACjG,CACAtM,UAAAA,GACQjtB,KAAK6D,QAAQ6gB,QACb1kB,KAAK6D,QAAQ6gB,OAAO1iB,SAASmhB,IACzBnjB,KAAKw5B,WAAWrW,EAAM,IAG1BnjB,KAAK6D,QAAQsiB,aACbnmB,KAAK8yB,UAAU9yB,KAAK6D,QAAQsiB,aAIhCnmB,KAAKmkB,UAAUnkB,KAAK6rB,UAAU,GAC9B7rB,KAAKy5B,kBACDz5B,KAAKowB,SAASvsB,QAAQ61B,mCACtB15B,KAAK25B,oBACD35B,KAAKowB,SAASvsB,QAAQ61B,iCAAiC15B,KAAKm4B,YAChEn4B,KAAKoG,eAAepG,KAAK25B,qBACzB35B,KAAK25B,oBAAoB1K,KAAK,CAC1ByC,aAAc1xB,KAAKk5B,KACnBvK,IAAK3uB,KAAKm4B,WAAWxJ,IACrB7K,MAAO9jB,KAAKm4B,aAEhBn4B,KAAK+3B,cAAcpD,uBAAuB30B,KAAK25B,oBAAoB90B,UAEnE7E,KAAKowB,SAASvsB,QAAQ+1B,kCACtB55B,KAAK65B,mBACD75B,KAAKowB,SAASvsB,QAAQ+1B,gCAAgC55B,KAAKm4B,YAC/Dn4B,KAAKoG,eAAepG,KAAK65B,oBACzB75B,KAAK65B,mBAAmB5K,KAAK,CACzByC,aAAc1xB,KAAKk5B,KACnBvK,IAAK3uB,KAAKm4B,WAAWxJ,IACrB7K,MAAO9jB,KAAKm4B,aAEhBn4B,KAAK+3B,cAAcjD,sBAAsB90B,KAAK65B,mBAAmBh1B,UAEjE7E,KAAKowB,SAASvsB,QAAQi2B,oCACtB95B,KAAK+5B,qBACD/5B,KAAKowB,SAASvsB,QAAQi2B,kCAAkC95B,KAAKm4B,YACjEn4B,KAAKoG,eAAepG,KAAK+5B,sBACzB/5B,KAAK+5B,qBAAqB9K,KAAK,CAC3ByC,aAAc1xB,KAAKk5B,KACnBvK,IAAK3uB,KAAKm4B,WAAWxJ,IACrB7K,MAAO9jB,KAAKm4B,aAEhBn4B,KAAK+3B,cAAc9C,wBAAwBj1B,KAAK+5B,qBAAqBl1B,SAE7E,CACAy0B,QAAAA,CAASnW,GACLnjB,KAAKi4B,iBAAiB7F,YAAYjP,EAAO,CAAEkP,UAAU,GACzD,CACAhuB,OAAAA,CAAQ8e,GACJ,OAAOnjB,KAAK+3B,cAAc1zB,QAAQ8e,EAAMpB,GAC5C,CACA5E,MAAAA,GACI,IAAIva,EACJ,MAAM8J,EAAS,CACXoG,MAAO9S,KAAK+3B,cAAcrT,OAC1BsV,WAAyC,QAA5Bp3B,EAAK5C,KAAK03B,oBAAiC,IAAP90B,OAAgB,EAASA,EAAGmf,GAC7EA,GAAI/hB,KAAK+hB,IAQb,OANoB,IAAhB/hB,KAAKud,SACL7Q,EAAO6Q,OAASvd,KAAKud,QAErBvd,KAAK6vB,OAAO4E,SACZ/nB,EAAOysB,YAAa,GAEjBzsB,CACX,CACA2X,UAAAA,CAAWxgB,GACFA,IACDA,EAAU,CAAC,GAEVA,EAAQsf,QACTtf,EAAQsf,MAAQnjB,KAAKmmB,aAEzB,MAAM/hB,EAAQP,EAAQsf,MAAQnjB,KAAK0kB,OAAOrgB,QAAQR,EAAQsf,QAAU,EACpE,IAAI8W,EACJ,GAAI71B,EAAQpE,KAAK0kB,OAAOnjB,OAAS,EAC7B04B,EAAkB71B,EAAQ,MAEzB,IAAKP,EAAQq2B,aAId,OAHAD,EAAkB,CAItB,CACAj6B,KAAK8yB,UAAU9yB,KAAK0kB,OAAOuV,GAC/B,CACA3V,cAAAA,CAAezgB,GAOX,GANKA,IACDA,EAAU,CAAC,GAEVA,EAAQsf,QACTtf,EAAQsf,MAAQnjB,KAAKmmB,cAEpBtiB,EAAQsf,MACT,OAEJ,MAAM/e,EAAQpE,KAAK0kB,OAAOrgB,QAAQR,EAAQsf,OAC1C,IAAI8W,EACJ,GAAI71B,EAAQ,EACR61B,EAAkB71B,EAAQ,MAEzB,IAAKP,EAAQq2B,aAId,OAHAD,EAAkBj6B,KAAK0kB,OAAOnjB,OAAS,CAI3C,CACAvB,KAAK8yB,UAAU9yB,KAAK0kB,OAAOuV,GAC/B,CACAE,aAAAA,CAAchX,GACV,OAAOnjB,KAAK0kB,OAAOhG,SAASyE,EAChC,CACA8L,IAAAA,CAAKP,GACD,CAEJvB,MAAAA,CAAOuB,GACH,CAEJ7J,KAAAA,GACI,IAAIjiB,EACyB,QAA5BA,EAAK5C,KAAK03B,oBAAiC,IAAP90B,GAAyBA,EAAGiiB,OACrE,CACAiO,SAAAA,CAAU3P,EAAOtf,QAAO,IAAPA,IAAAA,EAAU,CAAC,IAOK,iBAAlBA,EAAQO,OACfP,EAAQO,MAAQpE,KAAK0kB,OAAOnjB,UAC5BsC,EAAQO,MAAQpE,KAAK0kB,OAAOnjB,QAEhC,MAAM64B,IAAkBv2B,EAAQu2B,cAEhCjX,EAAMkX,kBAAkBr6B,KAAKm4B,WAAY,CACrCiC,cAAev2B,EAAQu2B,gBAE3Bp6B,KAAKw5B,WAAWrW,EAAOtf,EAAQO,MAAO,CAClCg2B,cAAeA,IAEfp6B,KAAK03B,eAAiBvU,GAIrBiX,GACDp6B,KAAKs6B,iBAAiBnX,GAErBtf,EAAQ02B,oBACTv6B,KAAKowB,SAAS3M,iBAAiBzjB,KAAKm4B,YAEnCt0B,EAAQu2B,eACTp6B,KAAKy5B,mBAVLz5B,KAAKi4B,iBAAiB7F,YAAYjP,EAAO,CAAEkP,UAAU,GAY7D,CACAzN,WAAAA,CAAY4V,EAAe32B,QAAO,IAAPA,IAAAA,EAAU,CACjCu2B,eAAe,IAEf,MAAMrY,EAA8B,iBAAlByY,EACZA,EACAA,EAAczY,GACd0Y,EAAgBz6B,KAAK23B,QAAQlB,MAAMtT,GAAUA,EAAMpB,KAAOA,IAChE,IAAK0Y,EACD,MAAM,IAAI53B,MAAM,qBAEpB,OAAO7C,KAAK06B,aAAaD,EAAe52B,EAC5C,CACA82B,cAAAA,GACI,GAAI36B,KAAK0kB,OAAOnjB,OAAS,EAAG,CAExB,MAAMq5B,EAAc,IAAI56B,KAAK0kB,QAC7B,IAAK,MAAMvB,KAASyX,EAChB56B,KAAK66B,QAAQ1X,EAErB,MAEInjB,KAAKowB,SAAShM,YAAYpkB,KAAKm4B,WAEvC,CACApF,UAAAA,CAAW5P,GACPnjB,KAAK66B,QAAQ1X,EACjB,CACA0X,OAAAA,CAAQ1X,GACJ,MAAM2X,EAAgC,IAAvB96B,KAAK0kB,OAAOnjB,QAAgD,IAAhCvB,KAAKowB,SAASlO,OAAO3gB,OAChEvB,KAAKowB,SAASxL,YAAYzB,EAAO2X,GAAoD,eAA1C96B,KAAKowB,SAASvsB,QAAQwzB,gBAC3D,CAAE0D,kBAAkB,QACpBt6B,EACV,CACA8xB,aAAAA,CAAcpP,GACV,OAAOnjB,KAAK03B,eAAiBvU,CACjC,CACA6X,aAAAA,CAAcn2B,GACV7E,KAAK+3B,cAAcpD,uBAAuB9vB,EAC9C,CACAsf,SAAAA,CAAU8W,EAAevV,QAAK,IAALA,IAAAA,GAAQ,IACxBA,GAAS1lB,KAAK6rB,WAAaoP,KAGhCj7B,KAAKo2B,eAAiB6E,EACtBrzB,EAAY5H,KAAKwN,UAAW,kBAAmBytB,GAC/CrzB,EAAY5H,KAAKwN,UAAW,qBAAsBytB,GAClDj7B,KAAK+3B,cAAc5T,UAAUnkB,KAAK6rB,WAC7B7rB,KAAK03B,cAAgB13B,KAAK0kB,OAAOnjB,OAAS,GAC3CvB,KAAKs6B,iBAAiBt6B,KAAK0kB,OAAO,IAEtC1kB,KAAKy5B,kBACT,CACAvjB,MAAAA,CAAOnM,EAAOC,GACV,IAAIpH,EACJ5C,KAAKgsB,OAASjiB,EACd/J,KAAKisB,QAAUjiB,EACfhK,KAAKi4B,iBAAiB/hB,OAAOlW,KAAKgsB,OAAQhsB,KAAKisB,UACd,QAA5BrpB,EAAK5C,KAAK03B,oBAAiC,IAAP90B,OAAgB,EAASA,EAAGsT,SACjElW,KAAK03B,aAAaxhB,OAAOlW,KAAKgsB,OAAQhsB,KAAKisB,QAEnD,CACAyO,YAAAA,CAAavX,EAAOtf,GAChB,MAAM2yB,EAAgBx2B,KAAK03B,eAAiBvU,EAE5C,GADAnjB,KAAKk7B,cAAc/X,GACfqT,GAAiBx2B,KAAK0kB,OAAOnjB,OAAS,EAAG,CACzC,MAAM45B,EAAYn7B,KAAKq4B,iBAAiB,GACxCr4B,KAAK8yB,UAAUqI,EAAW,CACtBf,cAAev2B,EAAQu2B,cACvBG,mBAAoB12B,EAAQu3B,oBAEpC,CAOA,OANIp7B,KAAK03B,cAAuC,IAAvB13B,KAAK0kB,OAAOnjB,QACjCvB,KAAKs6B,sBAAiB75B,GAErBoD,EAAQu2B,eACTp6B,KAAKy5B,kBAEFtW,CACX,CACA+X,aAAAA,CAAc/X,GACV,MAAM/e,EAAQpE,KAAK0kB,OAAOrgB,QAAQ8e,GAMlC,GALInjB,KAAK03B,eAAiBvU,GACtBnjB,KAAKi4B,iBAAiBlF,aAE1B/yB,KAAK+3B,cAAcpzB,OAAOwe,EAAMpB,IAChC/hB,KAAK23B,QAAQrzB,OAAOF,EAAO,GACvBpE,KAAKq4B,iBAAiB3Z,SAASyE,GAAQ,CACvC,MAAM/e,EAAQpE,KAAKq4B,iBAAiBh0B,QAAQ8e,GAC5CnjB,KAAKq4B,iBAAiB/zB,OAAOF,EAAO,EACxC,CACA,MAAMsC,EAAa1G,KAAKu4B,kBAAkB3tB,IAAIuY,EAAMpB,IAChDrb,IACAA,EAAW3E,UACX/B,KAAKu4B,kBAAkB5zB,OAAOwe,EAAMpB,KAExC/hB,KAAKg5B,kBAAkBx0B,KAAK,CAAE2e,SAClC,CACAqW,UAAAA,CAAWrW,EAAO/e,EAA4BP,QAAvB,IAALO,IAAAA,EAAQpE,KAAK0kB,OAAOnjB,aAAe,IAAPsC,IAAAA,EAAU,CAAEu2B,eAAe,IACrE,MACMiB,EADgBr7B,KAAK23B,QAAQtzB,QAAQ8e,IACD,EAC1CnjB,KAAK+3B,cAAc7F,OACnBlyB,KAAKi4B,iBAAiB/F,OACtBlyB,KAAK+3B,cAAcjF,UAAU3P,EAAO/e,GAC/BP,EAAQu2B,eACTp6B,KAAKi4B,iBAAiBnF,UAAU3P,GAEhCkY,IAIJr7B,KAAKs7B,UAAUnY,GACfnjB,KAAK0kB,OAAOpgB,OAAOF,EAAO,EAAG+e,GAC7BnjB,KAAKu4B,kBAAkBlzB,IAAI8d,EAAMpB,GAAI,IAAIhc,EAAoBod,EAAMwL,IAAI4M,kBAAkBv3B,GAAUhE,KAAK44B,uBAAuBp0B,KAAKR,KAASmf,EAAMwL,IAAI5B,uBAAuB/oB,GAAUhE,KAAK84B,4BAA4Bt0B,KAAKR,OAC9NhE,KAAK24B,eAAen0B,KAAK,CAAE2e,UAC/B,CACAmX,gBAAAA,CAAiBnX,GACTnjB,KAAK03B,eAAiBvU,IAG1BnjB,KAAK03B,aAAevU,EAChBA,IACAnjB,KAAK+3B,cAAcxB,eAAepT,GAClCA,EAAMjN,OAAOlW,KAAKgsB,OAAQhsB,KAAKisB,SAC/BjsB,KAAKs7B,UAAUnY,GACfnjB,KAAKi5B,wBAAwBz0B,KAAK,CAC9B2e,WAGZ,CACAmY,SAAAA,CAAUnY,GACFnjB,KAAKq4B,iBAAiB3Z,SAASyE,IAC/BnjB,KAAKq4B,iBAAiB/zB,OAAOtE,KAAKq4B,iBAAiBh0B,QAAQ8e,GAAQ,GAEvEnjB,KAAKq4B,iBAAmB,CAAClV,KAAUnjB,KAAKq4B,iBAC5C,CACAoB,eAAAA,GACI,IAAI72B,EAAIgN,EAER,GADA5P,KAAK0kB,OAAO1iB,SAASmhB,GAAUA,EAAMqY,cACjCx7B,KAAK43B,UAAY53B,KAAK83B,UAAW,CACjC,MAAMA,EAAY93B,KAAKowB,SAASqL,2BAChC3D,EAAU7I,KAAK,CACXyC,aAAc1xB,KAAKk5B,KACnBpV,MAAO9jB,KAAKm4B,aAEhBn4B,KAAK83B,UAAYA,EACjB7yB,EAAsBjF,KAAK83B,UAAUjzB,QAAS,eAAe,KACpD7E,KAAK6rB,UACN7rB,KAAKowB,SAAS3M,iBAAiBzjB,KAAKm4B,WACxC,IAEJn4B,KAAKi4B,iBAAiBpzB,QAAQ8N,YAAY3S,KAAK83B,UAAUjzB,QAC7D,EACK7E,KAAK43B,SAAW53B,KAAK83B,YACtB93B,KAAK83B,UAAUjzB,QAAQ6C,SACkB,QAAxCkI,GAAMhN,EAAK5C,KAAK83B,WAAW/1B,eAA4B,IAAP6N,GAAyBA,EAAGrH,KAAK3F,GAClF5C,KAAK83B,eAAYr3B,EAEzB,CACA6oB,iBAAAA,CAAkBtlB,EAAOyT,EAAU+P,GAC/B,MAAMiK,EAAa,IAAIqF,GAA+B9yB,EAAOwjB,EAAQ/P,EAAU5W,EAAcb,KAAKowB,SAASlM,SAASlkB,KAAK+hB,KAEzH,OADA/hB,KAAKoxB,0BAA0B5sB,KAAKitB,GAC7BA,EAAWjvB,UACtB,CACA42B,eAAAA,CAAgBt0B,EAAMd,EAAOyT,EAAUrT,GACnC,GAAoB,mBAAhBpE,KAAKud,OACL,OAUJ,MAAM4F,EAAyB,iBAAV/e,EAAqBpE,KAAK0kB,OAAOtgB,QAAS3D,EACzDi7B,EAAgB,IAAInE,GAAsB,CAC5CvP,YAAahkB,EACbyT,WACA0L,QACAxiB,QAASA,IAAME,IACfi1B,KAdJ,WACI,OAAQhxB,GACJ,IAAK,SACD,MAAwB,iBAAVV,EAAqB,MAAQ,eAC/C,IAAK,UACD,MAAO,UAEnB,CAOUu3B,GACN7X,MAAO9jB,KAAKm4B,WACZxJ,IAAK3uB,KAAKk5B,OAGd,GADAl5B,KAAK04B,YAAYl0B,KAAKk3B,GAClBA,EAAct5B,iBACd,OAEJ,MAAM1B,EAAOG,IACb,GAAIH,GAAQA,EAAKd,SAAWI,KAAKowB,SAASrO,GAAI,CAC1C,GAAqB,OAAjBrhB,EAAKZ,QAAkB,CAEvB,MAAM,QAAED,GAAYa,EAMpB,YALAV,KAAKw4B,QAAQh0B,KAAK,CACdgjB,OAAQ/P,EACR5X,QAASA,EACTuE,SAGR,CAEA,IADoE,IAA9CpE,KAAK+3B,cAAc1zB,QAAQ3D,EAAKZ,UACL,IAA5BE,KAAK+3B,cAAc3yB,KACpC,OAEJ,MAAM,QAAEvF,EAAO,QAAEC,GAAYY,EAE7B,GADoBV,KAAK+hB,KAAOliB,IACZ4X,EAAU,CAE1B,GADiBzX,KAAK+3B,cAAc1zB,QAAQvE,KAC3BsE,EACb,MAER,CACApE,KAAKw4B,QAAQh0B,KAAK,CACdgjB,OAAQ/P,EACR5X,QAASa,EAAKb,QACd+7B,OAAQl7B,EAAKZ,QACbsE,SAER,MAEIpE,KAAKmxB,WAAW3sB,KAAK,IAAI8yB,GAAqB,CAC1CtP,YAAahkB,EACbyT,WACA0L,QACAxiB,QAASA,IAAME,IACfijB,MAAO9jB,KAAKm4B,WACZxJ,IAAK3uB,KAAKk5B,OAGtB,CACAn3B,OAAAA,GACI,IAAIa,EAAIgN,EAAI0T,EACZvjB,MAAMgC,UACoB,QAAzBa,EAAK5C,KAAK83B,iBAA8B,IAAPl1B,GAAyBA,EAAGiC,QAAQ6C,SACW,QAAhF4b,EAA+B,QAAzB1T,EAAK5P,KAAK83B,iBAA8B,IAAPloB,OAAgB,EAASA,EAAG7N,eAA4B,IAAPuhB,GAAyBA,EAAG/a,KAAKqH,GAC1H5P,KAAK83B,eAAYr3B,EACjB,IAAK,MAAM0iB,KAASnjB,KAAK0kB,OACrBvB,EAAMphB,UAEV/B,KAAK+3B,cAAch2B,UACnB/B,KAAKi4B,iBAAiBl2B,SAC1B,ECxnBG,MAAM85B,WAA6BnQ,GACtC/rB,WAAAA,CAAYoiB,EAAI0C,EAAWtB,GACvBpjB,MAAMgiB,EAAI0C,GACVzkB,KAAKutB,gCAAkC,IAAIjqB,EAC3CtD,KAAKwtB,+BAAiCxtB,KAAKutB,gCAAgCvpB,MAC3EhE,KAAKytB,wBAA0B,IAAInqB,EACnCtD,KAAK0tB,uBAAyB1tB,KAAKytB,wBAAwBzpB,MAC3DhE,KAAK2tB,iBAAmB,IAAIrqB,EAC5BtD,KAAK4tB,gBAAkB5tB,KAAK2tB,iBAAiB3pB,MAC7ChE,KAAKoG,eAAepG,KAAKutB,gCAAiCvtB,KAAKytB,wBAAyBztB,KAAK2tB,kBACzFxK,GACAnjB,KAAKitB,WAAW9J,EAExB,CACA0K,cAAAA,CAAe9qB,GACX/C,KAAKutB,gCAAgC/oB,KAAKzB,EAC9C,CACA+qB,OAAAA,CAAQ9pB,GACJhE,KAAK2tB,iBAAiBnpB,KAAKR,EAC/B,EClBG,MAAM83B,WAAsBrN,GAC/B,YAAIphB,GACA,OAAOrN,KAAK+7B,SAChB,CACA,QAAIzuB,GACA,OAAOtN,KAAKg8B,KAChB,CACA,gBAAIxiB,GAKA,OAAOxZ,KAAKi8B,gBAChB,CACA,iBAAIviB,GAKA,OAAO1Z,KAAKk8B,iBAChB,CACA,iBAAIviB,GAKA,OAAO3Z,KAAKm8B,iBAChB,CACA,gBAAI1iB,GAKA,OAAOzZ,KAAKo8B,gBAChB,CACAH,cAAAA,GACI,MAAMlyB,EAAsC,mBAAvB/J,KAAKq8B,cACpBr8B,KAAKq8B,gBACLr8B,KAAKq8B,cAKX,OAJItyB,IAAU/J,KAAKs8B,yBACft8B,KAAKs8B,uBAAyBvyB,EAC9B/J,KAAKu8B,qBAEFxyB,CACX,CACAqyB,cAAAA,GACI,MAAMryB,EAAsC,mBAAvB/J,KAAKw8B,cACpBx8B,KAAKw8B,gBACLx8B,KAAKw8B,cAKX,OAJIzyB,IAAU/J,KAAKy8B,yBACfz8B,KAAKy8B,uBAAyB1yB,EAC9B/J,KAAKu8B,qBAEFxyB,CACX,CACAmyB,eAAAA,GACI,MAAMlyB,EAAwC,mBAAxBhK,KAAK08B,eACrB18B,KAAK08B,iBACL18B,KAAK08B,eAKX,OAJI1yB,IAAWhK,KAAK28B,0BAChB38B,KAAK28B,wBAA0B3yB,EAC/BhK,KAAKu8B,qBAEFvyB,CACX,CACAmyB,eAAAA,GACI,MAAMnyB,EAAwC,mBAAxBhK,KAAK48B,eACrB58B,KAAK48B,iBACL58B,KAAK48B,eAKX,OAJI5yB,IAAWhK,KAAK68B,0BAChB78B,KAAK68B,wBAA0B7yB,EAC/BhK,KAAKu8B,qBAEFvyB,CACX,CACA,YAAI6hB,GACA,OAAO7rB,KAAK2uB,IAAI9C,QACpB,CACA,aAAIzI,GACA,OAAOpjB,KAAK2uB,IAAIvL,SACpB,CACAzjB,WAAAA,CAAYoiB,EAAI0C,EAAW5gB,EAAS8qB,GAChC5uB,MAAMgiB,EAAI0C,EAAWkK,QAAiCA,EAAM,IAAIkN,GAAqB9Z,EAAI0C,IACzFzkB,KAAKs8B,uBAAyB,EAC9Bt8B,KAAKy8B,uBAAyBxtB,OAAO6tB,iBACrC98B,KAAK28B,wBAA0B,EAC/B38B,KAAK68B,wBAA0B5tB,OAAO6tB,iBACtC98B,KAAKq8B,cAAgB,EACrBr8B,KAAK08B,eAAiB,EACtB18B,KAAKw8B,cAAgBvtB,OAAO6tB,iBAC5B98B,KAAK48B,eAAiB3tB,OAAO6tB,iBAC7B98B,KAAKg8B,OAAQ,EACbh8B,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACmD,iBAA5EH,aAAyC,EAASA,EAAQ2V,gBAClExZ,KAAKq8B,cAAgBx4B,EAAQ2V,cAEuD,iBAA5E3V,aAAyC,EAASA,EAAQ4V,gBAClEzZ,KAAKw8B,cAAgB34B,EAAQ4V,cAEwD,iBAA7E5V,aAAyC,EAASA,EAAQ6V,iBAClE1Z,KAAK08B,eAAiB74B,EAAQ6V,eAEuD,iBAA7E7V,aAAyC,EAASA,EAAQ8V,iBAClE3Z,KAAK48B,eAAiB/4B,EAAQ8V,eAElC3Z,KAAK2uB,IAAI1B,WAAWjtB,MACpBA,KAAKoG,eAAepG,KAAK2uB,IAAIhC,wBAAwB3oB,IACjD,MAAM,UAAEof,GAAcpf,GAChB,SAAEosB,GAAapwB,KAAK0uB,QAC1B0B,EAAS3iB,WAAWzN,KAAMojB,EAAU,IACpCpjB,KAAK2uB,IAAI9B,gBAAe,KACxB,MAAM,SAAEuD,GAAapwB,KAAK0uB,QAC1B0B,EAAS3M,iBAAiBzjB,KAAK,IAC/BA,KAAK2uB,IAAInB,gCAAgCxpB,IACP,iBAAvBA,EAAMwV,cACiB,mBAAvBxV,EAAMwV,eACbxZ,KAAKq8B,cAAgBr4B,EAAMwV,cAEI,iBAAxBxV,EAAM0V,eACkB,mBAAxB1V,EAAM0V,gBACb1Z,KAAK08B,eAAiB14B,EAAM0V,eAEE,iBAAvB1V,EAAMyV,cACiB,mBAAvBzV,EAAMyV,eACbzZ,KAAKw8B,cAAgBx4B,EAAMyV,cAEI,iBAAxBzV,EAAM2V,eACkB,mBAAxB3V,EAAM2V,gBACb3Z,KAAK48B,eAAiB54B,EAAM2V,cAChC,IACA3Z,KAAK2uB,IAAIf,iBAAiB5pB,IAC1BhE,KAAK4Y,aAAapU,KAAK,CACnBwF,OAAQhG,EAAMgG,OACdD,MAAO/F,EAAM+F,OACf,IACF/J,KAAK4Y,aACb,CACAnL,UAAAA,CAAW2V,GACPpjB,KAAK2uB,IAAIrU,uBAAuB9V,KAAK,CAAE4e,aAC3C,CACAe,SAAAA,CAAU0H,GACN7rB,KAAK2uB,IAAI9L,mBAAmBre,KAAK,CAAEqnB,YACvC,CACAoD,IAAAA,CAAK/B,GACGA,EAAWvT,gBACX3Z,KAAK48B,eAAiB1P,EAAWvT,eAEjCuT,EAAWxT,gBACX1Z,KAAK08B,eAAiBxP,EAAWxT,eAEjCwT,EAAWzT,eACXzZ,KAAKw8B,cAAgBtP,EAAWzT,cAEhCyT,EAAW1T,eACXxZ,KAAKq8B,cAAgBnP,EAAW1T,cAEpCxZ,KAAK+7B,UAAY7O,EAAW7f,SAC5BrN,KAAKg8B,QAAU9O,EAAW5f,KAC1BvN,MAAMkvB,KAAK/B,GACyB,kBAAzBA,EAAW9J,WAClBpjB,KAAKyN,WAAWyf,EAAW9J,UAEnC,CACAmZ,iBAAAA,GACIv8B,KAAK2uB,IAAIlB,wBAAwBjpB,KAAK,CAClCgV,aAAcxZ,KAAKs8B,uBACnB7iB,aAAczZ,KAAKy8B,uBACnB/iB,cAAe1Z,KAAK28B,wBACpBhjB,cAAe3Z,KAAK68B,yBAE5B,CACA1f,MAAAA,GACI,MAAMlF,EAAQlY,MAAMod,SACd4f,EAAWh6B,GAAUA,IAAUkM,OAAO6tB,sBAAmBr8B,EAAYsC,EACrEi6B,EAAWj6B,GAAWA,GAAS,OAAItC,EAAYsC,EACrD,OAAOuV,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGlX,GAAQ,CAAEyB,cAAesjB,EAAQh9B,KAAK0Z,eAAgBC,cAAeojB,EAAQ/8B,KAAK2Z,eAAgBH,aAAcwjB,EAAQh9B,KAAKwZ,cAAeC,aAAcsjB,EAAQ/8B,KAAKyZ,cAAenM,KAAMtN,KAAKsN,KAAMD,SAAUrN,KAAKqN,UACjQ,ECjLJ,MAAM4vB,GAA0B,sDACzB,MAAMC,WAAkCrB,GAC3C,YAAIpf,GACA,IAAKzc,KAAKm9B,OACN,MAAM,IAAIt6B,MAAMo6B,IAEpB,OAAOj9B,KAAKm9B,OAAOnT,MAAMvN,QAC7B,CACA9c,WAAAA,CAAYoiB,EAAIqO,GACZrwB,MAAMgiB,EAAI,qBACV/hB,KAAKowB,SAAWA,EAChBpwB,KAAKo4B,qBAAuB,IAAI90B,EAChCtD,KAAKo9B,oBAAsBp9B,KAAKo4B,qBAAqBp0B,MACrDhE,KAAKi5B,wBAA0B,IAAI31B,EACnCtD,KAAKwlB,uBAAyBxlB,KAAKi5B,wBAAwBj1B,MAC3DhE,KAAKoG,eAAepG,KAAKo4B,qBAAsBp4B,KAAKi5B,wBACxD,CACArC,KAAAA,GACI,GAAK52B,KAAKm9B,OAGV,OAAOn9B,KAAKowB,SAAShM,YAAYpkB,KAAKm9B,OAC1C,CACAE,SAAAA,GACI,MAA8B,WAAvBr9B,KAAKyc,SAAS3X,KACf9E,KAAKyc,SAAS4gB,YACdj0B,MACV,CACAk0B,MAAAA,CAAOz5B,GACH,IAAIjB,EAAIgN,EAAI0T,EACZ,IAAKtjB,KAAKm9B,OACN,MAAM,IAAIt6B,MAAMo6B,IAEpB,MAAMnZ,EAAiC,QAAxBlhB,EAAKiB,EAAQigB,aAA0B,IAAPlhB,EAAgBA,EAAK5C,KAAKowB,SAAS/J,SAAS,CACvF3J,UAAWwL,GAAgD,QAA3BtY,EAAK/L,EAAQ4T,gBAA6B,IAAP7H,EAAgBA,EAAK,SACxFwqB,eAAe,IAEnBp6B,KAAKowB,SAASmN,iBAAiB,CAC3B13B,KAAM,CAAEhG,QAASG,KAAKm9B,OAAOpb,IAC7BtV,GAAI,CACAqX,QACArM,SAAU5T,EAAQigB,OACgB,QAA3BR,EAAKzf,EAAQ4T,gBAA6B,IAAP6L,EAAgBA,EACpD,SACNlf,MAAOP,EAAQO,QAG3B,CACAo5B,QAAAA,GACI,IAAKx9B,KAAKm9B,OACN,MAAM,IAAIt6B,MAAMo6B,IAEO,SAAvBj9B,KAAKyc,SAAS3X,MAIlB9E,KAAKowB,SAAS5M,cAAcxjB,KAAKm9B,OACrC,CACA3e,WAAAA,GACI,IAAKxe,KAAKm9B,OACN,MAAM,IAAIt6B,MAAMo6B,IAEpB,OAAOj9B,KAAKowB,SAAS1M,iBAAiB1jB,KAAKm9B,OAC/C,CACAM,aAAAA,GACI,IAAKz9B,KAAKm9B,OACN,MAAM,IAAIt6B,MAAMo6B,IAEhBj9B,KAAKwe,eACLxe,KAAKowB,SAASzM,oBAEtB,CACAsJ,UAAAA,CAAWnJ,GACP9jB,KAAKm9B,OAASrZ,CAClB,ECxEG,MAAM4Z,WAA2B5B,GACpC,gBAAItiB,GACA,IAAI5W,EACJ,MAAM+6B,EAAsD,QAA3B/6B,EAAK5C,KAAKmmB,mBAAgC,IAAPvjB,OAAgB,EAASA,EAAG4W,aAChG,MAAuC,iBAA5BmkB,EACAA,EAEJ59B,MAAMk8B,gBACjB,CACA,iBAAIviB,GACA,IAAI9W,EACJ,MAAMg7B,EAAuD,QAA3Bh7B,EAAK5C,KAAKmmB,mBAAgC,IAAPvjB,OAAgB,EAASA,EAAG8W,cACjG,MAAwC,iBAA7BkkB,EACAA,EAEJ79B,MAAMm8B,iBACjB,CACA,gBAAIziB,GACA,IAAI7W,EACJ,MAAMi7B,EAAsD,QAA3Bj7B,EAAK5C,KAAKmmB,mBAAgC,IAAPvjB,OAAgB,EAASA,EAAG6W,aAChG,MAAuC,iBAA5BokB,EACAA,EAEJ99B,MAAMq8B,gBACjB,CACA,iBAAIziB,GACA,IAAI/W,EACJ,MAAMk7B,EAAuD,QAA3Bl7B,EAAK5C,KAAKmmB,mBAAgC,IAAPvjB,OAAgB,EAASA,EAAG+W,cACjG,MAAwC,iBAA7BmkB,EACAA,EAEJ/9B,MAAMo8B,iBACjB,CACA,UAAIzX,GACA,OAAO1kB,KAAK+9B,OAAOrZ,MACvB,CACA,eAAIyB,GACA,OAAOnmB,KAAK+9B,OAAO5X,WACvB,CACA,QAAI/gB,GACA,OAAOpF,KAAK+9B,OAAO34B,IACvB,CACA,SAAI4kB,GACA,OAAOhqB,KAAK+9B,MAChB,CACA,UAAIxgB,GACA,OAAOvd,KAAK+9B,OAAOxgB,MACvB,CACA,UAAIA,CAAOxa,GACP/C,KAAK+9B,OAAOxgB,OAASxa,CACzB,CACA,UAAI8sB,GACA,OAAO7vB,KAAK+9B,OAAOlO,MACvB,CACAlwB,WAAAA,CAAYywB,EAAUrO,EAAIle,GACtB,IAAIjB,EAAIgN,EAAI0T,EAAIC,EAAIya,EAAIC,EACxBl+B,MAAMgiB,EAAI,oBAAqB,CAC3BrI,cAA2G,QAA3F9J,EAAoC,QAA9BhN,EAAKiB,EAAQq6B,mBAAgC,IAAPt7B,OAAgB,EAASA,EAAG8W,qBAAkC,IAAP9J,EAAgBA,EA1DnG,IA2DhC4J,aAA0G,QAA3F+J,EAAoC,QAA9BD,EAAKzf,EAAQq6B,mBAAgC,IAAP5a,OAAgB,EAASA,EAAG3J,qBAAkC,IAAP4J,EAAgBA,EA5DnG,IA6D/B5J,cAA8C,QAA9BqkB,EAAKn6B,EAAQq6B,mBAAgC,IAAPF,OAAgB,EAASA,EAAGrkB,cAClFF,aAA6C,QAA9BwkB,EAAKp6B,EAAQq6B,mBAAgC,IAAPD,OAAgB,EAASA,EAAGxkB,cAClF,IAAIyjB,GAA0Bnb,EAAIqO,IACrCpwB,KAAK2uB,IAAI1B,WAAWjtB,MACpBA,KAAK+9B,OAAS,IAAItG,GAAwBz3B,KAAK6E,QAASurB,EAAUrO,EAAIle,EAAS7D,MAC/EA,KAAKoG,eAAepG,KAAKgqB,MAAMxE,wBAAwBxhB,IACnDhE,KAAK2uB,IAAIsK,wBAAwBz0B,KAAKR,EAAM,IAEpD,CACA6gB,KAAAA,GACS7kB,KAAK2uB,IAAI9C,UACV7rB,KAAK2uB,IAAIxK,YAEbpkB,MAAM8kB,OACV,CACAoI,UAAAA,GACIjtB,KAAK+9B,OAAO9Q,YAChB,CACA9I,SAAAA,CAAU0H,GACN9rB,MAAMokB,UAAU0H,GAChB7rB,KAAKgqB,MAAM7F,UAAU0H,EACzB,CACA3V,MAAAA,CAAOnM,EAAOC,GACVjK,MAAMmW,OAAOnM,EAAOC,GACpBhK,KAAKgqB,MAAM9T,OAAOnM,EAAOC,EAC7B,CACAklB,YAAAA,GACI,OAAOlvB,KAAK+9B,MAChB,CACA5gB,MAAAA,GACI,OAAOnd,KAAKgqB,MAAM7M,QACtB,EC5FG,MAAMghB,WAA6BtC,GACtC,YAAIpf,GACA,OAAOzc,KAAK8jB,MAAM6K,IAAIlS,QAC1B,CACA,SAAIqU,GACA,OAAO9wB,KAAKmjB,MAAM2N,KACtB,CACA,iBAAImK,GACA,OAAOj7B,KAAK8jB,MAAM+H,QACtB,CACA,YAAI4G,GACA,OAAOzyB,KAAKmjB,MAAMsP,QACtB,CACA,SAAI3O,CAAM/gB,GACN,MAAMq7B,EAAWp+B,KAAKm9B,OAClBn9B,KAAKm9B,SAAWp6B,IAChB/C,KAAKm9B,OAASp6B,EACd/C,KAAKq+B,kBAAkB75B,KAAK,CAAC,GAC7BxE,KAAKs+B,yBAAyBF,GAC9Bp+B,KAAKo4B,qBAAqB5zB,KAAK,CAC3BiY,SAAUzc,KAAK8jB,MAAM6K,IAAIlS,WAGrC,CACA,SAAIqH,GACA,OAAO9jB,KAAKm9B,MAChB,CACA,gBAAIoB,GACA,OAAOv+B,KAAKw+B,aAChB,CACA7+B,WAAAA,CAAYwjB,EAAOW,EAAOsM,EAAU3L,EAAW8Z,GAC3Cx+B,MAAMojB,EAAMpB,GAAI0C,GAChBzkB,KAAKmjB,MAAQA,EACbnjB,KAAKowB,SAAWA,EAChBpwB,KAAKy+B,kBAAoB,IAAIn7B,EAC7BtD,KAAKu7B,iBAAmBv7B,KAAKy+B,kBAAkBz6B,MAC/ChE,KAAK0+B,wBAA0B,IAAIp7B,EACnCtD,KAAKylB,uBAAyBzlB,KAAK0+B,wBAAwB16B,MAC3DhE,KAAKq+B,kBAAoB,IAAI/6B,EAC7BtD,KAAK2+B,iBAAmB3+B,KAAKq+B,kBAAkBr6B,MAC/ChE,KAAK4+B,qBAAuB,IAAIt7B,EAChCtD,KAAK6+B,oBAAsB7+B,KAAK4+B,qBAAqB56B,MACrDhE,KAAKo4B,qBAAuB,IAAI90B,EAChCtD,KAAKo9B,oBAAsBp9B,KAAKo4B,qBAAqBp0B,MACrDhE,KAAK8+B,sBAAwB,IAAIt4B,EACjCxG,KAAKw+B,cAAgBD,EACrBv+B,KAAKitB,WAAW9J,GAChBnjB,KAAKm9B,OAASrZ,EACd9jB,KAAKs+B,2BACLt+B,KAAKoG,eAAepG,KAAK8+B,sBAAuB9+B,KAAK4+B,qBAAsB5+B,KAAKy+B,kBAAmBz+B,KAAKq+B,kBAAmBr+B,KAAK0+B,wBAAyB1+B,KAAKo4B,qBAClK,CACAiF,SAAAA,GACI,OAAOr9B,KAAK8jB,MAAM6K,IAAI0O,WAC1B,CACAC,MAAAA,CAAOz5B,GACH,IAAIjB,EAAIgN,EACR5P,KAAKowB,SAASmN,iBAAiB,CAC3B13B,KAAM,CAAEhG,QAASG,KAAKm9B,OAAOpb,GAAIjiB,QAASE,KAAKmjB,MAAMpB,IACrDtV,GAAI,CACAqX,MAAgC,QAAxBlhB,EAAKiB,EAAQigB,aAA0B,IAAPlhB,EAAgBA,EAAK5C,KAAKm9B,OAClE1lB,SAAU5T,EAAQigB,OACgB,QAA3BlU,EAAK/L,EAAQ4T,gBAA6B,IAAP7H,EAAgBA,EACpD,SACNxL,MAAOP,EAAQO,QAG3B,CACA26B,QAAAA,CAASjO,GACL9wB,KAAKmjB,MAAM4b,SAASjO,EACxB,CACAkO,WAAAA,CAAYvM,GACRzyB,KAAKmjB,MAAM6b,YAAYvM,EAC3B,CACAmE,KAAAA,GACI52B,KAAK8jB,MAAMkG,MAAM+I,WAAW/yB,KAAKmjB,MACrC,CACAqa,QAAAA,GACIx9B,KAAK8jB,MAAM6K,IAAI6O,UACnB,CACAhf,WAAAA,GACI,OAAOxe,KAAK8jB,MAAM6K,IAAInQ,aAC1B,CACAif,aAAAA,GACIz9B,KAAK8jB,MAAM6K,IAAI8O,eACnB,CACAa,wBAAAA,CAAyBW,GACrB,IAAIr8B,EACJ,IAAIs8B,EAAoH,QAA/Ft8B,EAAKq8B,aAAqD,EAASA,EAAcpT,gBAA6B,IAAPjpB,GAAgBA,EAChJ5C,KAAK8+B,sBAAsB/7B,MAAQ,IAAIgD,EAAoB/F,KAAK8jB,MAAM6K,IAAIpU,uBAAuBvW,IAC7F,MAAMm7B,GAAmBn7B,EAAMof,WAAapjB,KAAKojB,UAC3Cgc,EAAmBp7B,EAAMof,YAAcpjB,KAAKojB,UAC5CoT,EAAgBx2B,KAAK8jB,MAAMkG,MAAMuI,cAAcvyB,KAAKmjB,QACtDgc,GAAoBC,GAAoB5I,IACxCx2B,KAAKsa,uBAAuB9V,KAAKR,EACrC,IACAhE,KAAK8jB,MAAM6K,IAAIyO,qBAAqBp5B,IAChChE,KAAK8jB,QAAU9jB,KAAKmjB,MAAMW,OAG9B9jB,KAAKo4B,qBAAqB5zB,KAAKR,EAAM,IACrChE,KAAK8jB,MAAM6K,IAAI7L,mBAAkB,KAC7B9iB,KAAK8jB,QAAU9jB,KAAKmjB,MAAMW,OAG1Bob,IAAsBl/B,KAAKi7B,gBAC3BiE,EAAoBl/B,KAAKi7B,cACzBj7B,KAAK0+B,wBAAwBl6B,KAAK,CAC9BqnB,SAAU7rB,KAAKi7B,gBAEvB,IAER,EC/GG,MAAMoE,WAAsBt5B,EAC/B,UAAIqnB,GACA,OAAOptB,KAAK0uB,OAChB,CACA,SAAIoC,GACA,OAAO9wB,KAAKs/B,MAChB,CACA,SAAIxb,GACA,OAAO9jB,KAAKm9B,MAChB,CACA,YAAI1K,GACA,IAAI7vB,EACJ,OAAiC,QAAzBA,EAAK5C,KAAKu/B,iBAA8B,IAAP38B,EAAgBA,EAAK5C,KAAKowB,SAASqC,QAChF,CACA,gBAAIjZ,GACA,OAAOxZ,KAAKq8B,aAChB,CACA,iBAAI3iB,GACA,OAAO1Z,KAAK08B,cAChB,CACA,gBAAIjjB,GACA,OAAOzZ,KAAKw8B,aAChB,CACA,iBAAI7iB,GACA,OAAO3Z,KAAK48B,cAChB,CACAj9B,WAAAA,CAAYoiB,EAAI0C,EAAW8Z,EAAcnO,EAAUsB,EAAc5N,EAAO7W,EAAMpJ,GAC1E9D,QACAC,KAAK+hB,GAAKA,EACV/hB,KAAKowB,SAAWA,EAChBpwB,KAAK0xB,aAAeA,EACpB1xB,KAAKiN,KAAOA,EACZjN,KAAKu/B,UAAY17B,EAAQ4uB,SACzBzyB,KAAKm9B,OAASrZ,EACd9jB,KAAKq8B,cAAgBx4B,EAAQ2V,aAC7BxZ,KAAK08B,eAAiB74B,EAAQ6V,cAC9B1Z,KAAKw8B,cAAgB34B,EAAQ4V,aAC7BzZ,KAAK48B,eAAiB/4B,EAAQ8V,cAC9B3Z,KAAK2uB,IAAM,IAAIwP,GAAqBn+B,KAAMA,KAAKm9B,OAAQ/M,EAAU3L,EAAW8Z,GAC5Ev+B,KAAKoG,eAAepG,KAAK2uB,IAAI9B,gBAAe,KACxCuD,EAASmG,eAAev2B,KAAK,IAC7BA,KAAK2uB,IAAIf,iBAAiB5pB,IAG1BhE,KAAK8jB,MAAM6K,IAAIb,QAAQ9pB,EAAM,IAC7BhE,KAAK2uB,IAAIkQ,qBAAoB,KAC7B7+B,KAAK8jB,MAAMkG,MAAMsP,SAASt5B,KAAK,IAEvC,CACAivB,IAAAA,CAAK7B,GACDptB,KAAK0uB,QAAUtB,EAAOA,OACtBptB,KAAKiN,KAAKgiB,KAAK3W,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAG/B,GAAS,CAAEuB,IAAK3uB,KAAK2uB,IAAK+C,aAAc1xB,KAAK0xB,gBAC5F1xB,KAAK++B,SAAS3R,EAAO0D,MACzB,CACAjM,KAAAA,GACI,MAAM7gB,EAAQ,IAAIynB,GAClBzrB,KAAK2uB,IAAInC,aAAahoB,KAAKR,GACvBA,EAAM5B,kBAGLpC,KAAK2uB,IAAI9C,UACV7rB,KAAK2uB,IAAIxK,WAEjB,CACAhH,MAAAA,GACI,MAAO,CACH4E,GAAI/hB,KAAK+hB,GACTyd,iBAAkBx/B,KAAKiN,KAAKuyB,iBAC5BjB,aAAcv+B,KAAKiN,KAAKsxB,aACxBnR,OAAQ9U,OAAOC,KAAKvY,KAAK0uB,SAAW,CAAC,GAAGntB,OAAS,EAC3CvB,KAAK0uB,aACLjuB,EACNqwB,MAAO9wB,KAAK8wB,MACZ2B,SAAUzyB,KAAKu/B,UACf7lB,cAAe1Z,KAAK08B,eACpB/iB,cAAe3Z,KAAK48B,eACpBpjB,aAAcxZ,KAAKq8B,cACnB5iB,aAAczZ,KAAKw8B,cAE3B,CACAuC,QAAAA,CAASjO,GACkBA,IAAU9wB,KAAK8wB,QAElC9wB,KAAKs/B,OAASxO,EACd9wB,KAAK2uB,IAAI8P,kBAAkBj6B,KAAK,CAAEssB,UAE1C,CACAkO,WAAAA,CAAYvM,GACUA,IAAazyB,KAAKyyB,WAEhCzyB,KAAKu/B,UAAY9M,EACjBzyB,KAAK2uB,IAAIiQ,qBAAqBp6B,KAAK,CAC/BiuB,SAAUA,IAGtB,CACAtF,MAAAA,CAAOnpB,GACH,IAAIpB,EAEJ5C,KAAK0uB,QAAUpW,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAA4B,QAAvBvsB,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,EAAgBA,EAAK,CAAC,GAAKoB,EAAMopB,QAKjH,IAAK,MAAMgC,KAAO9W,OAAOC,KAAKvU,EAAMopB,aACN3sB,IAAtBuD,EAAMopB,OAAOgC,WACNpvB,KAAK0uB,QAAQU,GAI5BpvB,KAAKiN,KAAKkgB,OAAO,CACbC,OAAQptB,KAAK0uB,SAErB,CACA2L,iBAAAA,CAAkBvW,EAAOjgB,GACrB7D,KAAKm9B,OAASrZ,EACd9jB,KAAK2uB,IAAI7K,MAAQ9jB,KAAKm9B,OACtB,MAAMsC,EAAiBz/B,KAAKm9B,OAAOnT,MAAMuI,cAAcvyB,MACjD6rB,EAAW7rB,KAAK8jB,MAAM6K,IAAI9C,UAAY4T,GACtC57B,aAAyC,EAASA,EAAQu2B,gBACxDp6B,KAAK2uB,IAAI9C,WAAaA,GACtB7rB,KAAK2uB,IAAI9L,mBAAmBre,KAAK,CAC7BqnB,SAAU7rB,KAAK8jB,MAAM6K,IAAI9C,UAAY4T,IAI7Cz/B,KAAK2uB,IAAIvL,YAAcqc,GACvBz/B,KAAK2uB,IAAIrU,uBAAuB9V,KAAK,CACjC4e,UAAWqc,GAGvB,CACAjE,SAAAA,GACI,MAAMiE,EAAiBz/B,KAAKm9B,OAAOnT,MAAMuI,cAAcvyB,MACjD6rB,EAAW7rB,KAAK8jB,MAAM6K,IAAI9C,UAAY4T,EACxCz/B,KAAK2uB,IAAI9C,WAAaA,GACtB7rB,KAAK2uB,IAAI9L,mBAAmBre,KAAK,CAC7BqnB,SAAU7rB,KAAK8jB,MAAM6K,IAAI9C,UAAY4T,IAGzCz/B,KAAK2uB,IAAIvL,YAAcqc,GACvBz/B,KAAK2uB,IAAIrU,uBAAuB9V,KAAK,CACjC4e,UAAWqc,GAGvB,CACAvpB,MAAAA,CAAOnM,EAAOC,GAEVhK,KAAK2uB,IAAIvC,sBAAsB5nB,KAAK,CAChCuF,QACAC,OAAQA,IAEZhK,KAAKiN,KAAKiJ,OAAOnM,EAAOC,EAC5B,CACAjI,OAAAA,GACI/B,KAAK2uB,IAAI5sB,UACT/B,KAAKiN,KAAKlL,SACd,EChKJ,MAAM29B,GAA4BtS,IAC9B,MAAMuS,EAAMn3B,SAASo3B,gBAAgB,6BAA8B,OACnED,EAAIE,eAAe,KAAM,SAAUzS,EAAOpjB,QAC1C21B,EAAIE,eAAe,KAAM,QAASzS,EAAOrjB,OACzC41B,EAAIE,eAAe,KAAM,UAAWzS,EAAO0S,SAC3CH,EAAIE,eAAe,KAAM,cAAe,SACxCF,EAAIE,eAAe,KAAM,YAAa,SACtCF,EAAIn4B,UAAUjD,IAAI,UAClB,MAAMsb,EAAOrX,SAASo3B,gBAAgB,6BAA8B,QAGpE,OAFA/f,EAAKggB,eAAe,KAAM,IAAKzS,EAAOvN,MACtC8f,EAAIhtB,YAAYkN,GACT8f,CAAG,ECRP,MAAMI,WAAmBh6B,EAC5B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,GACII,QACAC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,iBAC1B7H,KAAKggC,SAAWx3B,SAAS6L,cAAc,OACvCrU,KAAKggC,SAASn4B,UAAY,yBAC1B7H,KAAKigC,OAASz3B,SAAS6L,cAAc,OACrCrU,KAAKigC,OAAOp4B,UAAY,wBACxB7H,KAAKigC,OAAOttB,YDFmB+sB,GAAyB,CAC5D31B,MAAO,KACPC,OAAQ,KACR81B,QAAS,YACTjgB,KAAM,gICDF7f,KAAKkhB,SAASvO,YAAY3S,KAAKggC,UAC/BhgC,KAAKkhB,SAASvO,YAAY3S,KAAKigC,QAC/BjgC,KAAKkgC,QACT,CACAjR,IAAAA,CAAK7B,GACDptB,KAAKs/B,OAASlS,EAAO0D,MACrB9wB,KAAKoG,eAAegnB,EAAOuB,IAAI4M,kBAAkBv3B,IAC7ChE,KAAKs/B,OAASt7B,EAAM8sB,MACpB9wB,KAAKkgC,QAAQ,IACbj7B,EAAsBjF,KAAKigC,OAAQ,eAAgB5P,IACnDA,EAAGhuB,gBAAgB,IACnB4C,EAAsBjF,KAAKigC,OAAQ,SAAU5P,IACzCA,EAAGjuB,mBAGPiuB,EAAGhuB,iBACH+qB,EAAOuB,IAAIiI,QAAO,KAEtB52B,KAAKkgC,QACT,CACAA,MAAAA,GACI,IAAIt9B,EACA5C,KAAKggC,SAAS9L,cAAgBl0B,KAAKs/B,SACnCt/B,KAAKggC,SAAS9L,YAAqC,QAAtBtxB,EAAK5C,KAAKs/B,cAA2B,IAAP18B,EAAgBA,EAAK,GAExF,ECxCG,MAAMu9B,GACT,WAAI3N,GACA,OAAOxyB,KAAKggC,QAChB,CACA,OAAI5K,GACA,OAAOp1B,KAAKogC,IAChB,CACAzgC,WAAAA,CAAYywB,EAAUrO,EAAIyd,EAAkBjB,GACxCv+B,KAAKowB,SAAWA,EAChBpwB,KAAK+hB,GAAKA,EACV/hB,KAAKw/B,iBAAmBA,EACxBx/B,KAAKu+B,aAAeA,EACpBv+B,KAAKggC,SAAWhgC,KAAKqgC,uBAAuBrgC,KAAK+hB,GAAIyd,GACrDx/B,KAAKogC,KAAOpgC,KAAKsgC,mBAAmBtgC,KAAK+hB,GAAIwc,EACjD,CACAtP,IAAAA,CAAK7B,GACDptB,KAAKwyB,QAAQvD,KAAK7B,GAClBptB,KAAKo1B,IAAInG,KAAK7B,EAClB,CACAiN,iBAAAA,CAAkB8C,EAAQoD,GACtB,CAEJrqB,MAAAA,CAAOnM,EAAOC,GACV,IAAIpH,EAAIgN,EAC8B,QAArCA,GAAMhN,EAAK5C,KAAKwyB,SAAStc,cAA2B,IAAPtG,GAAyBA,EAAGrH,KAAK3F,EAAImH,EAAOC,EAC9F,CACAmjB,MAAAA,CAAOnpB,GACH,IAAIpB,EAAIgN,EAAI0T,EAAIC,EACsB,QAArC3T,GAAMhN,EAAK5C,KAAKwyB,SAASrF,cAA2B,IAAPvd,GAAyBA,EAAGrH,KAAK3F,EAAIoB,GACjD,QAAjCuf,GAAMD,EAAKtjB,KAAKo1B,KAAKjI,cAA2B,IAAP5J,GAAyBA,EAAGhb,KAAK+a,EAAItf,EACnF,CACAjC,OAAAA,GACI,IAAIa,EAAIgN,EAAI0T,EAAIC,EACuB,QAAtC3T,GAAMhN,EAAK5C,KAAKwyB,SAASzwB,eAA4B,IAAP6N,GAAyBA,EAAGrH,KAAK3F,GAC7C,QAAlC2gB,GAAMD,EAAKtjB,KAAKo1B,KAAKrzB,eAA4B,IAAPwhB,GAAyBA,EAAGhb,KAAK+a,EAChF,CACA+c,sBAAAA,CAAuBte,EAAIye,GACvB,OAAOxgC,KAAKowB,SAASvsB,QAAQ48B,gBAAgB,CACzC1e,KACA2e,KAAMF,GAEd,CACAF,kBAAAA,CAAmBve,EAAIye,GACnB,MAAME,EAAOF,QAAqDA,EAAgBxgC,KAAKowB,SAASvsB,QAAQ88B,oBACxG,GAAID,EAAM,CACN,GAAI1gC,KAAKowB,SAASvsB,QAAQy8B,mBAAoB,CAC1C,MAAM7b,EAAYzkB,KAAKowB,SAASvsB,QAAQy8B,mBAAmB,CACvDve,KACA2e,SAEJ,OAAIjc,GAIO,IAAIsb,EAEnB,CACA98B,QAAQC,KAAM,2BAA0Bs9B,qDAC5C,CACA,OAAO,IAAIT,EACf,EC1DG,MAAMa,GACTjhC,WAAAA,CAAYywB,GACRpwB,KAAKowB,SAAWA,CACpB,CACA9Q,QAAAA,CAASuhB,EAAW/c,GAChB,IAAIlhB,EAAIgN,EACR,MAAM9P,EAAU+gC,EAAU9e,GACpBqL,EAASyT,EAAUzT,OACnB0D,EAAQ+P,EAAU/P,MAClBgQ,EAAWD,EAAU5zB,KACrBuyB,EAAmBsB,EACnBA,EAAStO,QAAQzQ,GACqB,QAArCnf,EAAKi+B,EAAUrB,wBAAqC,IAAP58B,EAAgBA,EAAK,UACnE27B,EAAeuC,EACS,QAAvBlxB,EAAKkxB,EAAS1L,WAAwB,IAAPxlB,OAAgB,EAASA,EAAGmS,GAC5D8e,EAAUtC,aACVtxB,EAAO,IAAIkzB,GAAmBngC,KAAKowB,SAAUtwB,EAAS0/B,EAAkBjB,GACxEpb,EAAQ,IAAIkc,GAAcv/B,EAAS0/B,EAAkBjB,EAAcv+B,KAAKowB,SAAU,IAAIzK,GAAY3lB,KAAKowB,UAAWtM,EAAO7W,EAAM,CACjIwlB,SAAUoO,EAAUpO,SACpBjZ,aAAcqnB,EAAUrnB,aACxBE,cAAemnB,EAAUnnB,cACzBD,aAAconB,EAAUpnB,aACxBE,cAAeknB,EAAUlnB,gBAM7B,OAJAwJ,EAAM8L,KAAK,CACP6B,MAAOA,QAAqCA,EAAQhxB,EACpDstB,OAAQA,QAAuCA,EAAS,CAAC,IAEtDjK,CACX,EC/BG,MAAM4d,WAAkBh7B,EAC3B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,GACII,QACAC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,cAC9B,CACAonB,IAAAA,CAAKP,GACD,ECeR,MAAMsS,GAAoB,IAtB1B,MACIrhC,WAAAA,GACIK,KAAKihC,aAAe,EACxB,CACA98B,IAAAA,CAAKU,GACD7E,KAAKihC,aAAe,IACbjhC,KAAKihC,aAAa/1B,QAAQ8D,GAASA,IAASnK,IAC/CA,GAEJ7E,KAAKmtB,QACT,CACA+T,OAAAA,CAAQr8B,GACJ7E,KAAKihC,aAAejhC,KAAKihC,aAAa/1B,QAAQ8D,GAASA,IAASnK,IAChE7E,KAAKmtB,QACT,CACAA,MAAAA,GACI,IAAK,IAAIzhB,EAAI,EAAGA,EAAI1L,KAAKihC,aAAa1/B,OAAQmK,IAC1C1L,KAAKihC,aAAav1B,GAAGy1B,aAAa,aAAe,GAAEz1B,KACnD1L,KAAKihC,aAAav1B,GAAGjB,MAAM22B,OAAU,yCAA4C,EAAJ11B,IAErF,GAGG,MAAM21B,WAAgBt7B,EACzB,0BAAIu7B,CAAuBv+B,GACvB/C,KAAK6D,QAAQy9B,uBAAyBv+B,CAC1C,CACA,2BAAIw+B,CAAwBx+B,GACxB/C,KAAK6D,QAAQ09B,wBAA0Bx+B,CAC3C,CACA,WAAI8B,GACA,OAAO7E,KAAKkhB,QAChB,CACA,aAAIkC,GACA,OAAOpjB,KAAK+rB,UAChB,CACApsB,WAAAA,CAAYkE,GACR9D,QACAC,KAAK6D,QAAUA,EACf7D,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAKwhC,gBAAkB,IAAIl+B,EAC3BtD,KAAKyhC,eAAiBzhC,KAAKwhC,gBAAgBx9B,MAC3ChE,KAAKoG,eAAepG,KAAK4Y,aAAc5Y,KAAKwhC,iBAC5CxhC,KAAKkhB,SAASrZ,UAAY,sBAC1B7H,KAAK+rB,YAAa,EAClB/rB,KAAK0hC,YAAY,OACjB1hC,KAAK0hC,YAAY,UACjB1hC,KAAK0hC,YAAY,QACjB1hC,KAAK0hC,YAAY,SACjB1hC,KAAK0hC,YAAY,WACjB1hC,KAAK0hC,YAAY,YACjB1hC,KAAK0hC,YAAY,cACjB1hC,KAAK0hC,YAAY,eACjB1hC,KAAKkhB,SAASvO,YAAY3S,KAAK6D,QAAQ2uB,SACvCxyB,KAAK6D,QAAQ2J,UAAUmF,YAAY3S,KAAKkhB,UAExClhB,KAAK2hC,UAAUrpB,OAAO6W,OAAO7W,OAAO6W,OAAO7W,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAEnlB,OAAQhK,KAAK6D,QAAQmG,OAAQD,MAAO/J,KAAK6D,QAAQkG,OAAU,QAAS/J,KAAK6D,SAAW,CAAEiG,IAAK9J,KAAK6D,QAAQiG,MAAU,WAAY9J,KAAK6D,SAAW,CAAE+9B,OAAQ5hC,KAAK6D,QAAQ+9B,SAAa,SAAU5hC,KAAK6D,SAAW,CAAEgG,KAAM7J,KAAK6D,QAAQgG,OAAW,UAAW7J,KAAK6D,SAAW,CAAEg+B,MAAO7hC,KAAK6D,QAAQg+B,SACtWb,GAAkB78B,KAAKnE,KAAKkhB,SAChC,CACAzT,UAAAA,CAAW2V,GACHA,IAAcpjB,KAAKojB,YAGvBpjB,KAAK+rB,WAAa3I,EAClBxb,EAAY5H,KAAK6E,QAAS,aAAc7E,KAAKojB,WACjD,CACA0e,YAAAA,GACId,GAAkB78B,KAAKnE,KAAKkhB,SAChC,CACAygB,SAAAA,CAAUI,QAAM,IAANA,IAAAA,EAAS,CAAC,GACa,iBAAlBA,EAAO/3B,SACdhK,KAAKkhB,SAASzW,MAAMT,OAAU,GAAE+3B,EAAO/3B,YAEf,iBAAjB+3B,EAAOh4B,QACd/J,KAAKkhB,SAASzW,MAAMV,MAAS,GAAEg4B,EAAOh4B,WAEtC,QAASg4B,GAAgC,iBAAfA,EAAOj4B,MACjC9J,KAAKkhB,SAASzW,MAAMX,IAAO,GAAEi4B,EAAOj4B,QACpC9J,KAAKkhB,SAASzW,MAAMm3B,OAAS,OAC7B5hC,KAAKgiC,kBAAoB,OAEzB,WAAYD,GAAmC,iBAAlBA,EAAOH,SACpC5hC,KAAKkhB,SAASzW,MAAMm3B,OAAU,GAAEG,EAAOH,WACvC5hC,KAAKkhB,SAASzW,MAAMX,IAAM,OAC1B9J,KAAKgiC,kBAAoB,UAEzB,SAAUD,GAAiC,iBAAhBA,EAAOl4B,OAClC7J,KAAKkhB,SAASzW,MAAMZ,KAAQ,GAAEk4B,EAAOl4B,SACrC7J,KAAKkhB,SAASzW,MAAMo3B,MAAQ,OAC5B7hC,KAAKiiC,qBAAuB,QAE5B,UAAWF,GAAkC,iBAAjBA,EAAOF,QACnC7hC,KAAKkhB,SAASzW,MAAMo3B,MAAS,GAAEE,EAAOF,UACtC7hC,KAAKkhB,SAASzW,MAAMZ,KAAO,OAC3B7J,KAAKiiC,qBAAuB,SAEhC,MAAMC,EAAgBliC,KAAK6D,QAAQ2J,UAAUvD,wBACvCk4B,EAAcniC,KAAKkhB,SAASjX,wBAG5Bm4B,EAAUh2B,KAAKD,IAAI,EAAGnM,KAAKqiC,gBAAgBF,EAAYp4B,QAEvDu4B,EAAUl2B,KAAKD,IAAI,EAAGnM,KAAKuiC,iBAAiBJ,EAAYn4B,SAC9D,GAA+B,QAA3BhK,KAAKgiC,kBAA6B,CAClC,MAAMl4B,EAAMmC,EAAMk2B,EAAYr4B,IAAMo4B,EAAcp4B,KAAMw4B,EAASl2B,KAAKD,IAAI,EAAG+1B,EAAcl4B,OAASm4B,EAAYn4B,OAASs4B,IACzHtiC,KAAKkhB,SAASzW,MAAMX,IAAO,GAAEA,MAC7B9J,KAAKkhB,SAASzW,MAAMm3B,OAAS,MACjC,CACA,GAA+B,WAA3B5hC,KAAKgiC,kBAAgC,CACrC,MAAMJ,EAAS31B,EAAMi2B,EAAcN,OAASO,EAAYP,QAASU,EAASl2B,KAAKD,IAAI,EAAG+1B,EAAcl4B,OAASm4B,EAAYn4B,OAASs4B,IAClItiC,KAAKkhB,SAASzW,MAAMm3B,OAAU,GAAEA,MAChC5hC,KAAKkhB,SAASzW,MAAMX,IAAM,MAC9B,CACA,GAAkC,SAA9B9J,KAAKiiC,qBAAiC,CACtC,MAAMp4B,EAAOoC,EAAMk2B,EAAYt4B,KAAOq4B,EAAcr4B,MAAOu4B,EAASh2B,KAAKD,IAAI,EAAG+1B,EAAcn4B,MAAQo4B,EAAYp4B,MAAQq4B,IAC1HpiC,KAAKkhB,SAASzW,MAAMZ,KAAQ,GAAEA,MAC9B7J,KAAKkhB,SAASzW,MAAMo3B,MAAQ,MAChC,CACA,GAAkC,UAA9B7hC,KAAKiiC,qBAAkC,CACvC,MAAMJ,EAAQ51B,EAAMi2B,EAAcL,MAAQM,EAAYN,OAAQO,EAASh2B,KAAKD,IAAI,EAAG+1B,EAAcn4B,MAAQo4B,EAAYp4B,MAAQq4B,IAC7HpiC,KAAKkhB,SAASzW,MAAMo3B,MAAS,GAAEA,MAC/B7hC,KAAKkhB,SAASzW,MAAMZ,KAAO,MAC/B,CACA7J,KAAK4Y,aAAapU,MACtB,CACA2Y,MAAAA,GACI,MAAM3P,EAAYxN,KAAK6D,QAAQ2J,UAAUvD,wBACnCpF,EAAU7E,KAAKkhB,SAASjX,wBACxByC,EAAS,CAAC,EAqBhB,MApB+B,QAA3B1M,KAAKgiC,kBACLt1B,EAAO5C,IAAM04B,WAAWxiC,KAAKkhB,SAASzW,MAAMX,KAEZ,WAA3B9J,KAAKgiC,kBACVt1B,EAAOk1B,OAASY,WAAWxiC,KAAKkhB,SAASzW,MAAMm3B,QAG/Cl1B,EAAO5C,IAAMjF,EAAQiF,IAAM0D,EAAU1D,IAEP,SAA9B9J,KAAKiiC,qBACLv1B,EAAO7C,KAAO24B,WAAWxiC,KAAKkhB,SAASzW,MAAMZ,MAEV,UAA9B7J,KAAKiiC,qBACVv1B,EAAOm1B,MAAQW,WAAWxiC,KAAKkhB,SAASzW,MAAMo3B,OAG9Cn1B,EAAO7C,KAAOhF,EAAQgF,KAAO2D,EAAU3D,KAE3C6C,EAAO3C,MAAQlF,EAAQkF,MACvB2C,EAAO1C,OAASnF,EAAQmF,OACjB0C,CACX,CACA+1B,SAAAA,CAAUC,EAAY7+B,QAAO,IAAPA,IAAAA,EAAU,CAAEqyB,YAAY,IAC1C,MAAMyM,EAAO,IAAIn8B,EACXo8B,EAAQA,KACV,IAAI5rB,EAAS,KACb,MAAM3M,EAAUD,IAChBu4B,EAAK5/B,MAAQ,IAAIgD,EAAoB,CACjChE,QAASA,KACLsI,EAAQM,SAAS,GAEtB/F,EAA4BwE,OAAQ,eAAgB3E,IACnD,MAAMy9B,EAAgBliC,KAAK6D,QAAQ2J,UAAUvD,wBACvC6G,EAAIrM,EAAEoQ,QAAUqtB,EAAcr4B,KAC9Bqf,EAAIzkB,EAAEqQ,QAAUotB,EAAcp4B,IACpClC,EAAY5H,KAAKkhB,SAAU,gCAAgC,GAC3D,MAAMihB,EAAcniC,KAAKkhB,SAASjX,wBACnB,OAAX+M,IACAA,EAAS,CACLlG,EAAGrM,EAAEoQ,QAAUstB,EAAYt4B,KAC3Bqf,EAAGzkB,EAAEqQ,QAAUqtB,EAAYr4B,MAGnC,MAAMs4B,EAAUh2B,KAAKD,IAAI,EAAGnM,KAAKqiC,gBAAgBF,EAAYp4B,QACvDu4B,EAAUl2B,KAAKD,IAAI,EAAGnM,KAAKuiC,iBAAiBJ,EAAYn4B,SACxDF,EAAMmC,EAAMid,EAAIlS,EAAOkS,GAAIoZ,EAASl2B,KAAKD,IAAI,EAAG+1B,EAAcl4B,OAASm4B,EAAYn4B,OAASs4B,IAC5FV,EAAS31B,EAAM+K,EAAOkS,EACxBA,EACAgZ,EAAcl4B,OACdm4B,EAAYn4B,QAASs4B,EAASl2B,KAAKD,IAAI,EAAG+1B,EAAcl4B,OAASm4B,EAAYn4B,OAASs4B,IACpFz4B,EAAOoC,EAAM6E,EAAIkG,EAAOlG,GAAIsxB,EAASh2B,KAAKD,IAAI,EAAG+1B,EAAcn4B,MAAQo4B,EAAYp4B,MAAQq4B,IAC3FP,EAAQ51B,EAAM+K,EAAOlG,EAAIA,EAAIoxB,EAAcn4B,MAAQo4B,EAAYp4B,OAAQq4B,EAASh2B,KAAKD,IAAI,EAAG+1B,EAAcn4B,MAAQo4B,EAAYp4B,MAAQq4B,IACtIL,EAAS,CAAC,EAEZj4B,GAAO83B,EACPG,EAAOj4B,IAAMA,EAGbi4B,EAAOH,OAASA,EAGhB/3B,GAAQg4B,EACRE,EAAOl4B,KAAOA,EAGdk4B,EAAOF,MAAQA,EAEnB7hC,KAAK2hC,UAAUI,EAAO,IACtBn9B,EAA4BwE,OAAQ,aAAa,KACjDxB,EAAY5H,KAAKkhB,SAAU,gCAAgC,GAC3DyhB,EAAK5gC,UACL/B,KAAKwhC,gBAAgBh9B,MAAM,IAC5B,EAEPxE,KAAKoG,eAAeu8B,EAAM19B,EAAsBy9B,EAAY,eAAgB1+B,IACpEA,EAAM5B,iBACN4B,EAAM3B,iBAKNqH,EAAsB1F,IAG1B4+B,GAAO,IACP39B,EAAsBjF,KAAK6D,QAAQ2uB,QAAS,eAAgBxuB,IACxDA,EAAM5B,kBAKNsH,EAAsB1F,IAGtBA,EAAMiuB,UACN2Q,GACJ,IACA39B,EAAsBjF,KAAK6D,QAAQ2uB,QAAS,eAAe,KAC3DwO,GAAkB78B,KAAKnE,KAAKkhB,SAAS,IACtC,IACCrd,EAAQqyB,YACR0M,GAER,CACAlB,WAAAA,CAAYhlB,GACR,MAAMmmB,EAAsBr6B,SAAS6L,cAAc,OACnDwuB,EAAoBh7B,UAAa,oBAAmB6U,IACpD1c,KAAKkhB,SAASvO,YAAYkwB,GAC1B,MAAMF,EAAO,IAAIn8B,EACjBxG,KAAKoG,eAAeu8B,EAAM19B,EAAsB49B,EAAqB,eAAgBp+B,IACjFA,EAAEpC,iBACF,IAAIygC,EAAgB,KACpB,MAAMz4B,EAAUD,IAChBu4B,EAAK5/B,MAAQ,IAAIgD,EAAoBnB,EAA4BwE,OAAQ,eAAgB3E,IACrF,MAAMy9B,EAAgBliC,KAAK6D,QAAQ2J,UAAUvD,wBACvCk4B,EAAcniC,KAAKkhB,SAASjX,wBAC5Bif,EAAIzkB,EAAEqQ,QAAUotB,EAAcp4B,IAC9BgH,EAAIrM,EAAEoQ,QAAUqtB,EAAcr4B,KAUpC,IAAIC,EACA83B,EACA53B,EACAH,EACAg4B,EACA93B,EAdkB,OAAlB+4B,IAEAA,EAAgB,CACZC,UAAW7Z,EACX8Z,eAAgBb,EAAYn4B,OAC5Bi5B,UAAWnyB,EACXoyB,cAAef,EAAYp4B,QASnC,MAAMo5B,EAAUA,KACZr5B,EAAMmC,EAAMid,GAAIja,OAAOm0B,UAAWN,EAAcC,UAC5CD,EAAcE,eACdd,EAAcl4B,OACZhK,KAAKuiC,iBAAiBL,EAAcl4B,QACpCoC,KAAKD,IAAI,EAAG22B,EAAcC,UACxBD,EAAcE,eACd3B,GAAQgC,iBAChBr5B,EACI84B,EAAcC,UACVD,EAAcE,eACdl5B,EACR83B,EAASM,EAAcl4B,OAASF,EAAME,CAAM,EAE1Cs5B,EAAaA,KACfx5B,EACIg5B,EAAcC,UACVD,EAAcE,eACtBh5B,EAASiC,EAAMid,EAAIpf,EAAKA,EAAM,GAEO,iBAD1B9J,KAAK6D,QACP09B,yBACFz3B,EACC9J,KAAK6D,QAAQ09B,wBACfF,GAAQgC,eAAgBp0B,OAAOm0B,WACrCxB,EAASM,EAAcl4B,OAASF,EAAME,CAAM,EAE1Cu5B,EAAWA,KACb15B,EAAOoC,EAAM6E,GAAI7B,OAAOm0B,UAAWN,EAAcG,UAC7CH,EAAcI,cACdhB,EAAcn4B,MACZ/J,KAAKqiC,gBAAgBH,EAAcn4B,OACnCqC,KAAKD,IAAI,EAAG22B,EAAcG,UACxBH,EAAcI,cACd7B,GAAQmC,gBAChBz5B,EACI+4B,EAAcG,UACVH,EAAcI,cACdr5B,EACRg4B,EAAQK,EAAcn4B,MAAQF,EAAOE,CAAK,EAExC05B,EAAYA,KACd55B,EACIi5B,EAAcG,UACVH,EAAcI,cACtBn5B,EAAQkC,EAAM6E,EAAIjH,EAAMA,EAAO,GAEK,iBADzB7J,KAAK6D,QACPy9B,wBACFz3B,EACC7J,KAAK6D,QAAQy9B,uBACfD,GAAQmC,cAAev0B,OAAOm0B,WACpCvB,EAAQK,EAAcn4B,MAAQF,EAAOE,CAAK,EAE9C,OAAQ2S,GACJ,IAAK,MACDymB,IACA,MACJ,IAAK,SACDG,IACA,MACJ,IAAK,OACDC,IACA,MACJ,IAAK,QACDE,IACA,MACJ,IAAK,UACDN,IACAI,IACA,MACJ,IAAK,WACDJ,IACAM,IACA,MACJ,IAAK,aACDH,IACAC,IACA,MACJ,IAAK,cACDD,IACAG,IAGR,MAAM1B,EAAS,CAAC,EAEZj4B,GAAO83B,EACPG,EAAOj4B,IAAMA,EAGbi4B,EAAOH,OAASA,EAGhB/3B,GAAQg4B,EACRE,EAAOl4B,KAAOA,EAGdk4B,EAAOF,MAAQA,EAEnBE,EAAO/3B,OAASA,EAChB+3B,EAAOh4B,MAAQA,EACf/J,KAAK2hC,UAAUI,EAAO,IACtB,CACAhgC,QAASA,KACLsI,EAAQM,SAAS,GAEtB/F,EAA4BwE,OAAQ,aAAa,KAChDu5B,EAAK5gC,UACL/B,KAAKwhC,gBAAgBh9B,MAAM,IAC5B,IAEX,CACA69B,eAAAA,CAAgBt4B,GACZ,MAAmD,iBAAxC/J,KAAK6D,QAAQy9B,uBACbv3B,EAAQ/J,KAAK6D,QAAQy9B,uBAEzB,CACX,CACAiB,gBAAAA,CAAiBv4B,GACb,MAAoD,iBAAzChK,KAAK6D,QAAQ09B,wBACbv3B,EAAShK,KAAK6D,QAAQ09B,wBAE1B,CACX,CACAx/B,OAAAA,GACIi/B,GAAkBE,QAAQlhC,KAAKkhB,UAC/BlhB,KAAKkhB,SAASxZ,SACd3H,MAAMgC,SACV,EAEJs/B,GAAQgC,eAAiB,GACzBhC,GAAQmC,cAAgB,GC5YjB,MAAME,WAAmC39B,EAC5CpG,WAAAA,CAAYmkB,EAAO6f,GACf5jC,QACAC,KAAK8jB,MAAQA,EACb9jB,KAAK2jC,QAAUA,EACf3jC,KAAKoG,eAAeu9B,EACxB,CACAlsB,QAAAA,CAASsqB,GACL/hC,KAAK2jC,QAAQhC,UAAUI,EAC3B,ECVG,MAAM6B,GAAuC,IACvCC,GAA0C,IAA1CA,GAAoD,IAApDA,GAAgE,IAAhEA,GAA6E,ICOnF,MAAMC,WAA+B/9B,EACxCpG,WAAAA,CAAYkF,EAASurB,GACjBrwB,QACAC,KAAK6E,QAAUA,EACf7E,KAAKowB,SAAWA,EAChBpwB,KAAK6B,IAAM,CAAC,EACZ7B,KAAK+D,WAAY,EACjB/D,KAAKoG,eAAejF,EAAW0E,MAAK,KAChC,IAAK,MAAM9C,KAASuV,OAAO6J,OAAOniB,KAAK6B,KACnCkB,EAAM2D,WAAW3E,UACjBgB,EAAMm+B,QAAQn/B,UAElB/B,KAAK+D,WAAY,CAAI,IAE7B,CACA4uB,OAAAA,CAAQxP,GACJ,GAAInjB,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAK,CACxB,MAAM,WAAErb,EAAU,QAAEw6B,GAAYlhC,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAInD,OAHArb,EAAW3E,UACXm/B,EAAQn/B,iBACD/B,KAAK6B,IAAIshB,EAAMwL,IAAI5M,KACnB,CACX,CACA,OAAO,CACX,CACA6Q,MAAAA,CAAO/uB,GACH,MAAM,MAAEsf,EAAK,mBAAE0P,GAAuBhvB,EACtC,IAAK7D,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAK,CACzB,MAAMld,EAjClB,WACI,MAAMA,EAAU2D,SAAS6L,cAAc,OAEvC,OADAxP,EAAQ+pB,UAAY,EACb/pB,CACX,CA6B4Bk/B,GAChBl/B,EAAQgD,UAAY,oBACpB7H,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAM,CACrBoB,QACAzc,WAAYvF,EAAWyE,KACvBs7B,QAAS//B,EAAWyE,KACpBf,UAER,CACA,MAAMm/B,EAAiBhkC,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAIld,QAC1Cse,EAAMlW,KAAKulB,QAAQ3tB,QAAQmX,gBAAkBgoB,GAC7CA,EAAerxB,YAAYwQ,EAAMlW,KAAKulB,QAAQ3tB,SAE9Cm/B,EAAehoB,gBAAkBhc,KAAK6E,SACtC7E,KAAK6E,QAAQ8N,YAAYqxB,GAE7B,MAAM3zB,EAASA,KAEX,MAAM4M,EAAMtT,EAAuBkpB,EAAmBhuB,SAChDo/B,EAAOt6B,EAAuB3J,KAAK6E,SACzCm/B,EAAev5B,MAAMZ,KAAUoT,EAAIpT,KAAOo6B,EAAKp6B,KAAlB,KAC7Bm6B,EAAev5B,MAAMX,IAASmT,EAAInT,IAAMm6B,EAAKn6B,IAAjB,KAC5Bk6B,EAAev5B,MAAMV,MAAS,GAAEkT,EAAIlT,UACpCi6B,EAAev5B,MAAMT,OAAU,GAAEiT,EAAIjT,WACrCpC,EAAYo8B,EAAgB,0BAA6D,aAAlC7gB,EAAMW,MAAM6K,IAAIlS,SAAS3X,KAAoB,EAElGo/B,EAAoBA,KAClB/gB,EAAMwL,IAAIvL,WACV/S,IAEJ2zB,EAAev5B,MAAMqlB,QAAU3M,EAAMwL,IAAIvL,UAAY,GAAK,MAAM,EAE9D+gB,EAAqB,IAAI39B,EACzB49B,EAAuBA,KACO,aAA5BjhB,EAAMwL,IAAIlS,SAAS3X,KACnBJ,gBAAe,KACX,MAAM2/B,EAAgBrkC,KAAKowB,SAASkU,eAAe7N,MAAM3S,GAAUA,EAAMA,QAAUX,EAAMwL,IAAI7K,QAC7F,IAAKugB,EACD,OAEJ,MAAMx/B,EAAUw/B,EAAcV,QAAQ9+B,QAChCsoB,EAASA,KACX,MAAMoX,EAAQt1B,OAAOpK,EAAQ2/B,aAAa,eAC1CR,EAAev5B,MAAM22B,OAAU,yCAAgD,EAARmD,EAAY,IAAI,EAErF19B,EAAW,IAAI49B,kBAAiB,KAClCtX,GAAQ,IAEZgX,EAAmBphC,MAAQ5B,EAAW0E,MAAK,IAAMgB,EAASO,eAC1DP,EAASK,QAAQrC,EAAS,CACtB6/B,gBAAiB,CAAC,cAClBC,YAAY,IAEhBxX,GAAQ,IAIZ6W,EAAev5B,MAAM22B,OAAS,EAClC,EAEE16B,EAAa,IAAIX,EAAoBo+B,EAQ3C,IAAI7c,GAAoB0c,EAAgB,CACpCnc,UAAYpjB,IACRouB,EAAmBb,WAAWpJ,IAAIf,UAAUpjB,EAAE,EAElDijB,YAAcjjB,IACVouB,EAAmBb,WAAWpJ,IAAIlB,YAAYjjB,EAAE,EAEpDmjB,YAAcnjB,IACVouB,EAAmBb,WAAWpJ,IAAIhB,YAAYnjB,EAAE,EAEpDqjB,OAASrjB,IACLouB,EAAmBb,WAAWpJ,IAAId,OAAOrjB,EAAE,EAE/CkjB,WAAaljB,IACTouB,EAAmBb,WAAWpJ,IAAIjB,WAAWljB,EAAE,IAEnD0e,EAAMwL,IAAIpU,uBAAsB,KAMhC2pB,GAAmB,IACnB/gB,EAAMwL,IAAItC,uBAAsB,KAC3BlJ,EAAMwL,IAAIvL,WAGf/S,GAAQ,IACR8S,EAAMwL,IAAIyO,qBAAoB,KAC9BgH,GAAsB,KAyB1B,OAvBApkC,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAImf,QAAU//B,EAAW0E,MAAK,KAC7C,IAAIjD,EACAugB,EAAMlW,KAAKulB,QAAQ3tB,QAAQmX,gBAAkBgoB,GAC7CA,EAAexvB,YAAY2O,EAAMlW,KAAKulB,QAAQ3tB,SAEV,QAAvCjC,EAAKohC,EAAehoB,qBAAkC,IAAPpZ,GAAyBA,EAAG4R,YAAYwvB,EAAe,IAE3GI,IACA1/B,gBAAe,KACP1E,KAAKgG,YAQTk+B,GAAmB,IAGvBlkC,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAIrb,WAAW3E,UAElC/B,KAAK6B,IAAIshB,EAAMwL,IAAI5M,IAAIrb,WAAaA,EAC7Bs9B,CACX,EC/JJ,IAAIY,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUriC,GAAS,IAAMsiC,EAAKL,EAAU14B,KAAKvJ,GAAS,CAAE,MAAO0B,GAAK0gC,EAAO1gC,EAAI,CAAE,CAC1F,SAAS6gC,EAASviC,GAAS,IAAMsiC,EAAKL,EAAiB,MAAEjiC,GAAS,CAAE,MAAO0B,GAAK0gC,EAAO1gC,EAAI,CAAE,CAC7F,SAAS4gC,EAAK34B,GAJlB,IAAe3J,EAIa2J,EAAO64B,KAAOL,EAAQx4B,EAAO3J,QAJ1CA,EAIyD2J,EAAO3J,MAJhDA,aAAiBgiC,EAAIhiC,EAAQ,IAAIgiC,GAAE,SAAUG,GAAWA,EAAQniC,EAAQ,KAIjByiC,KAAKJ,EAAWE,EAAW,CAC7GD,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKx4B,OAClE,GACJ,EAIO,MAAMo5B,WAAqB3/B,EAC9B,UAAIqD,GACA,IAAIxG,EAAIgN,EACR,OAAoF,QAA5EA,EAA6B,QAAvBhN,EAAK5C,KAAK2lC,eAA4B,IAAP/iC,OAAgB,EAASA,EAAGG,aAA0B,IAAP6M,EAAgBA,EAAK,IACrH,CACAjQ,WAAAA,CAAY6nB,EAAQ3f,EAAWhE,GAC3B9D,QACAC,KAAKwnB,OAASA,EACdxnB,KAAK6H,UAAYA,EACjB7H,KAAK6D,QAAUA,EACf7D,KAAK4lC,aAAe,IAAItiC,EACxBtD,KAAK6lC,YAAc7lC,KAAK4lC,aAAa5hC,MACrChE,KAAK8lC,YAAc,IAAIxiC,EACvBtD,KAAK+lC,WAAa/lC,KAAK8lC,YAAY9hC,MACnChE,KAAK2lC,QAAU,KACf3lC,KAAKoG,eAAepG,KAAK4lC,aAAc5lC,KAAK8lC,YAAa,CACrD/jC,QAASA,KACL/B,KAAK42B,OAAO,GAGxB,CACAoP,UAAAA,GACI,IAAKhmC,KAAK2lC,QACN,OAAO,KAEX,MAAM97B,EAAO7J,KAAK2lC,QAAQ5iC,MAAMkjC,QAIhC,MAAO,CAAEn8B,IAHG9J,KAAK2lC,QAAQ5iC,MAAMmjC,QAGjBr8B,OAAME,MAFN/J,KAAK2lC,QAAQ5iC,MAAMojC,WAENn8B,OADZhK,KAAK2lC,QAAQ5iC,MAAMqjC,YAEtC,CACAxP,KAAAA,GACI,IAAIh0B,EAAIgN,EACJ5P,KAAK2lC,UACL3lC,KAAK4lC,aAAaphC,OACyB,QAA1CoL,GAAMhN,EAAK5C,KAAK6D,SAASgiC,mBAAgC,IAAPj2B,GAAyBA,EAAGrH,KAAK3F,EAAI,CACpFmf,GAAI/hB,KAAKwnB,OACTpe,OAAQpJ,KAAK2lC,QAAQ5iC,QAEzB/C,KAAK2lC,QAAQj/B,WAAW3E,UACxB/B,KAAK2lC,QAAU,KACf3lC,KAAK8lC,YAAYthC,OAEzB,CACA6hC,IAAAA,GACI,IAAIzjC,EAAIgN,EACR,OAAOg1B,GAAU5kC,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAK2lC,QACL,MAAM,IAAI9iC,MAAM,6CAEpB,MAAMyjC,EAAO,GAAEtmC,KAAK6D,QAAQyiC,MACtBC,EAAWjuB,OAAOkuB,QAAQ,CAC5B18B,IAAK9J,KAAK6D,QAAQiG,IAClBD,KAAM7J,KAAK6D,QAAQgG,KACnBE,MAAO/J,KAAK6D,QAAQkG,MACpBC,OAAQhK,KAAK6D,QAAQmG,SAEpBnI,KAAI0Z,IAAA,IAAE6T,EAAKrsB,GAAMwY,EAAA,MAAM,GAAE6T,KAAOrsB,GAAO,IACvC0jC,KAAK,KAIJC,EAAiBt9B,OAAOi9B,KAAKC,EAAKtmC,KAAKwnB,OAAQ+e,GACrD,IAAKG,EAID,OAAO,KAEX,MAAMhgC,EAAa,IAAIX,EACvB/F,KAAK2lC,QAAU,CAAE5iC,MAAO2jC,EAAgBhgC,cACxCA,EAAWN,eAAejF,EAAW0E,MAAK,KACtC6gC,EAAe9P,OAAO,IACtBhyB,EAA4BwE,OAAQ,gBAAgB,KAOpDpJ,KAAK42B,OAAO,KAEhB,MAAMppB,EAAYxN,KAAK2mC,8BAQvB,OAPI3mC,KAAK6H,WACL2F,EAAUhG,UAAUjD,IAAIvE,KAAK6H,WAEQ,QAAxC+H,GAAMhN,EAAK5C,KAAK6D,SAAS+iC,iBAA8B,IAAPh3B,GAAyBA,EAAGrH,KAAK3F,EAAI,CAClFmf,GAAI/hB,KAAKwnB,OACTpe,OAAQs9B,IAEL,IAAIzB,SAAQ,CAACC,EAASC,KACzBuB,EAAe3hC,iBAAiB,UAAWN,QAI3CiiC,EAAe3hC,iBAAiB,QAAQ,KAIpC,IACI,MAAM8hC,EAAmBH,EAAel+B,SACxCq+B,EAAiB/V,MAAQtoB,SAASsoB,MAClC+V,EAAiBpW,KAAK9d,YAAYnF,G/C0BnD,SAAmBhF,EAAUs+B,GAChC,MAAMC,EAActlC,MAAMoE,KAAKihC,GAC/B,IAAK,MAAME,KAAcD,EAAa,CAClC,GAAIC,EAAWC,KAAM,CACjB,MAAMC,EAAO1+B,EAAS6L,cAAc,QACpC6yB,EAAKD,KAAOD,EAAWC,KACvBC,EAAKpiC,KAAOkiC,EAAWliC,KACvBoiC,EAAKC,IAAM,aACX3+B,EAAS4+B,KAAKz0B,YAAYu0B,EAC9B,CACA,IAAIG,EAAW,GACf,IACQL,EAAWM,WACXD,EAAW5lC,MAAMoE,KAAKmhC,EAAWM,UAAUzlC,KAAK0lC,GAASA,EAAKC,UAEtE,CACA,MAAOC,GACH,CAEJ,IAAK,MAAMF,KAAQF,EAAU,CACzB,MAAM58B,EAAQjC,EAAS6L,cAAc,SACrC5J,EAAMkI,YAAYnK,EAASk/B,eAAeH,IAC1C/+B,EAAS4+B,KAAKz0B,YAAYlI,EAC9B,CACJ,CACJ,C+ClDwBk9B,CAAUd,EAAkBz9B,OAAOZ,SAASu+B,aAK5CniC,EAA4B8hC,EAAgB,gBAAgB,KAIxD1mC,KAAK42B,OAAO,IAEhBsO,EAAQ13B,EACZ,CACA,MAAOi6B,GAEHtC,EAAOsC,EACX,IACF,GAEV,GACJ,CACAd,2BAAAA,GACI,MAAMzqB,EAAK1T,SAAS6L,cAAc,OAQlC,OAPA6H,EAAG1U,UAAUjD,IAAI,oBACjB2X,EAAG6F,GAAK,mBACR7F,EAAGzR,MAAMgN,SAAW,WACpByE,EAAGzR,MAAMV,MAAQ,OACjBmS,EAAGzR,MAAMT,OAAS,OAClBkS,EAAGzR,MAAMX,IAAM,MACfoS,EAAGzR,MAAMZ,KAAO,MACTqS,CACX,ECjJG,MAAM0rB,WAA+B7hC,EACxCpG,WAAAA,CAAYywB,GACRrwB,QACAC,KAAKowB,SAAWA,EAChBpwB,KAAKivB,MACT,CACAA,IAAAA,GACI,MAAMvK,EAAS,IAAIgE,IACbxG,EAAS,IAAIwG,IACnB1oB,KAAKoG,eAAepG,KAAKowB,SAAShL,eAAejC,IAC7C,GAAIuB,EAAOV,IAAIb,EAAMwL,IAAI5M,IACrB,MAAM,IAAIlf,MAAO,sEAAqEsgB,EAAMwL,IAAI5M,+BAGhG2C,EAAOngB,IAAI4e,EAAMwL,IAAI5M,GACzB,IACA/hB,KAAKowB,SAAS9K,kBAAkBnC,IAChC,IAAKuB,EAAOV,IAAIb,EAAMwL,IAAI5M,IACtB,MAAM,IAAIlf,MAAO,yEAAwEsgB,EAAMwL,IAAI5M,gCAGnG2C,EAAO/f,OAAOwe,EAAMwL,IAAI5M,GAC5B,IACA/hB,KAAKowB,SAAS/K,eAAevB,IAC7B,GAAI5B,EAAO8B,IAAIF,EAAM6K,IAAI5M,IACrB,MAAM,IAAIlf,MAAO,sEAAqEihB,EAAM6K,IAAI5M,+BAGhGG,EAAO3d,IAAIuf,EAAM6K,IAAI5M,GACzB,IACA/hB,KAAKowB,SAAS7K,kBAAkBzB,IAChC,IAAK5B,EAAO8B,IAAIF,EAAM6K,IAAI5M,IACtB,MAAM,IAAIlf,MAAO,yEAAwEihB,EAAM6K,IAAI5M,gCAGnGG,EAAOvd,OAAOmf,EAAM6K,IAAI5M,GAC5B,IAER,ECfJ,MAAM8lB,GAA6B,CAC/B7c,eAAgB,CAAElmB,KAAM,SAAU/B,MAAO,IACzCqC,KAAM,CAAEN,KAAM,SAAU/B,MAAO,KAEnC,SAAS+kC,GAA2BjkC,GAChC,MAAMsiB,EAActiB,EAAQgC,KAAKsgB,YAClB,IAAItiB,EAAQgC,KAAK6e,QAAQ7iB,KAAKshB,IACzC,MAAM4kB,EAAelkC,EAAQgC,KAAKmkB,MAAMpF,YAAYzB,GAEpD,OADAtf,EAAQgC,KAAKmkB,MAAM0I,gBAAgBC,QAAQxP,GACpC4kB,CAAY,IAEhB/lC,SAASmhB,IACZtf,EAAQ4I,GAAGud,MAAM8I,UAAU3P,EAAO,CAC9BiX,cAAejU,IAAgBhD,EAC/BoX,oBAAoB,GACtB,GAEV,CACO,MAAMyN,WAA0BlmB,GACnC,eAAIpT,GACA,OAAO1O,KAAKoiB,SAAS1T,WACzB,CACA,eAAIkX,GACA,OAAO5lB,KAAK0kB,OAAOnjB,MACvB,CACA,UAAImjB,GACA,OAAO1kB,KAAKkiB,OAAO+lB,SAASnkB,GAAUA,EAAMY,QAChD,CACA,WAAI7gB,GACA,OAAO7D,KAAKkoC,QAChB,CACA,eAAI/hB,GACA,MAAM9D,EAAcriB,KAAKqiB,YACzB,GAAKA,EAGL,OAAOA,EAAY8D,WACvB,CACA,YAAIsM,GACA,IAAI7vB,EACJ,OAA+C,QAAvCA,EAAK5C,KAAK6D,QAAQqzB,uBAAoC,IAAPt0B,EAAgBA,EAAK,iBAChF,CACA,OAAI+rB,GACA,OAAO3uB,KAAKk5B,IAChB,CACA,OAAIrT,GACA,OAAO7lB,KAAKoiB,SAAS1S,MACzB,CACA,kBAAI40B,GACA,OAAOtkC,KAAKmoC,eAChB,CACAxoC,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,MAAMyN,EAAW,CACb8E,oBAAoB,EACpB5D,YAAaf,EAAYkB,WACzB+D,OAAQ/O,EAAQmd,YACV,CAAE7N,gBAAiB,oBACnB1S,EACN4X,oBAAqBxU,EAAQwU,oBAC7BkF,OAAQ1Z,EAAQ0Z,OAChB7N,OAAQ7L,EAAQgiB,IAChBhe,UAAWhE,EAAQgE,YAEvB7H,KAAKooC,YAAc/7B,IACnBrM,KAAKqoC,cAAgB,IAAIzH,GAA4B5gC,MACrDA,KAAK83B,UAAY,KACjB93B,KAAKsoC,iBAAmB,IAAIhlC,EAC5BtD,KAAKkmB,gBAAkBlmB,KAAKsoC,iBAAiBtkC,MAC7ChE,KAAKuoC,iBAAmB,IAAIjlC,EAC5BtD,KAAKimB,gBAAkBjmB,KAAKuoC,iBAAiBvkC,MAC7ChE,KAAKmxB,WAAa,IAAI7tB,EACtBtD,KAAKilB,UAAYjlB,KAAKmxB,WAAWntB,MACjChE,KAAK04B,YAAc,IAAIp1B,EACvBtD,KAAK+lB,WAAa/lB,KAAK04B,YAAY10B,MACnChE,KAAKwoB,mBAAqB,IAAIllB,EAC9BtD,KAAKgmB,kBAAoBhmB,KAAKwoB,mBAAmBxkB,MACjDhE,KAAKoxB,0BAA4B,IAAI9tB,EACrCtD,KAAKklB,yBAA2BllB,KAAKoxB,0BAA0BptB,MAC/DhE,KAAKg5B,kBAAoB,IAAI11B,EAC7BtD,KAAKslB,iBAAmBtlB,KAAKg5B,kBAAkBh1B,MAC/ChE,KAAK24B,eAAiB,IAAIr1B,EAC1BtD,KAAKolB,cAAgBplB,KAAK24B,eAAe30B,MACzChE,KAAKwoC,qBAAuB,IAAIllC,EAChCtD,KAAK2kB,oBAAsB3kB,KAAKwoC,qBAAqBxkC,MACrDhE,KAAKi5B,wBAA0B,IAAI31B,EACnCtD,KAAKwlB,uBAAyBxlB,KAAKi5B,wBAAwBj1B,MAC3DhE,KAAKyoC,gBAAkB,IAAInlC,EAC3BtD,KAAK8lB,eAAiB9lB,KAAKyoC,gBAAgBzkC,MAC3ChE,KAAK0oC,2BAA6B,IAAIplC,EACtCtD,KAAKymB,0BAA4BzmB,KAAK0oC,2BAA2B1kC,MACjEhE,KAAKmoC,gBAAkB,GACvBnoC,KAAK2oC,cAAgB,GACrB3oC,KAAK4oC,kBAAoB,IAAItlC,EAC7BtD,KAAKulB,iBAAmBvlB,KAAK4oC,kBAAkB5kC,MAC/ChE,KAAK6oC,eAAiB,IAAIvlC,EAC1BtD,KAAKqlB,cAAgBrlB,KAAK6oC,eAAe7kC,MACzChE,KAAK0+B,wBAA0B,IAAIp7B,EACnCtD,KAAKylB,uBAAyBzlB,KAAK0+B,wBAAwB16B,MAC3DhE,KAAK8oC,SAAU,EACf9oC,KAAKu5B,uBAAyB,IAAIuK,GAAuB9jC,KAAKoiB,SAASvd,QAAS7E,MAChF4H,EAAY5H,KAAKoiB,SAASvd,QAAS,eAAe,GAClD+C,EAAY5H,KAAK6E,QAAS,aAAchB,EAAQszB,OAC5CtzB,EAAQszB,OACRn3B,KAAKoG,eAAe,IAAIwhC,GAAuB5nC,OAEnDA,KAAKoG,eAAepG,KAAKu5B,uBAAwBv5B,KAAKsoC,iBAAkBtoC,KAAKuoC,iBAAkBvoC,KAAKwoB,mBAAoBxoB,KAAKi5B,wBAAyBj5B,KAAK24B,eAAgB34B,KAAKg5B,kBAAmBh5B,KAAKwoC,qBAAsBxoC,KAAKmxB,WAAYnxB,KAAK04B,YAAa14B,KAAKyoC,gBAAiBzoC,KAAK6oC,eAAgB7oC,KAAK4oC,kBAAmB5oC,KAAK0+B,wBAAyB1+B,KAAKoxB,0BAA2BpxB,KAAK0oC,2BAA4B1oC,KAAKkjB,yCAAwC,KAC5cljB,KAAK+oC,iBAAiB,IACtB/oC,KAAK0iB,UAAU1e,IACVhE,KAAK8oC,SACN9oC,KAAK6oC,eAAerkC,KAAKR,EAC7B,IACAhE,KAAKwiB,aAAaxe,IACbhE,KAAK8oC,SACN9oC,KAAK4oC,kBAAkBpkC,KAAKR,EAChC,IACAhE,KAAK8iB,mBAAmB9e,IACnBhE,KAAK8oC,SACN9oC,KAAK0+B,wBAAwBl6B,KAAKR,EACtC,IACAhE,KAAK4iB,sBAAsB5e,IAC3BhE,KAAK0oC,2BAA2BlkC,KAAK,CACjCsf,MAAO9f,EAAMmf,MACb3E,YAAaxa,EAAMwa,aACrB,IACFtd,EAAME,IAAIpB,KAAK0iB,SAAU1iB,KAAKwiB,YAA9BthB,EAA2C,KAC3ClB,KAAK+oC,iBAAiB,IACtB7nC,EAAME,IAAIpB,KAAKolB,cAAeplB,KAAKslB,iBAAkBtlB,KAAKqlB,cAAerlB,KAAKwiB,YAAaxiB,KAAK8lB,eAAgB9lB,KAAKwlB,uBAArHtkB,EAA6I,KAC7IlB,KAAK+iB,yBAAyBve,MAAM,IACpCrD,EAAW0E,MAAK,KAEhB,IAAK,MAAMie,IAAS,IAAI9jB,KAAKmoC,iBACzBrkB,EAAM/hB,UAGV,IAAK,MAAM+hB,IAAS,IAAI9jB,KAAK2oC,eACzB7kB,EAAMpd,WAAW3E,SACrB,KAEJ/B,KAAKkoC,SAAWrkC,EAChB7D,KAAKgpC,gBAAkB,IAAI3gB,GAAWroB,KAAK6E,QAAS,CAChDykB,kBAAmBA,CAACtlB,EAAOyT,KACvB,MAAM/W,EAAOG,IACb,GAAIH,EACA,OAAIA,EAAKd,SAAWI,KAAK+hB,KAGR,WAAbtK,GAGgC,IAAzBzX,KAAKoiB,SAAS7gB,QAI7B,GAAiB,WAAbkW,GAAkD,IAAzBzX,KAAKoiB,SAAS7gB,OAMvC,OAAO,EAEX,MAAMkwB,EAAa,IAAIqF,GAA+B9yB,EAAO,OAAQyT,EAAU5W,GAE/E,OADAb,KAAKoxB,0BAA0B5sB,KAAKitB,GAC7BA,EAAWjvB,UAAU,EAEhCmmB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDsB,aAAuD,QAAxCrnB,EAAK5C,KAAK6D,QAAQuzB,wBAAqC,IAAPx0B,EAAgBA,EAAKilC,KAExF7nC,KAAKoG,eAAepG,KAAKgpC,gBAAiBhpC,KAAKgpC,gBAAgBhjB,mBAAmBhiB,IAC1EhE,KAAKoiB,SAAS7gB,OAAS,GAAwB,WAAnByC,EAAMyT,UAItCzX,KAAKwoB,mBAAmBhkB,KAAK,IAAIqxB,GAA6B7xB,EAAO,CACjE8xB,KAAM,OACN3S,WAAO1iB,EACPkuB,IAAK3uB,KAAKk5B,KACVpV,WAAOrjB,EACPE,QAASE,IACV,IACHb,KAAKgpC,gBAAgBlhB,QAAQ9jB,IAC7B,IAAIpB,EACJ,MAAM84B,EAAgB,IAAInE,GAAsB,CAC5CvP,YAAahkB,EAAMgkB,YACnBvQ,SAAUzT,EAAMyT,SAChB0L,WAAO1iB,EACPkuB,IAAK3uB,KAAKk5B,KACVpV,WAAOrjB,EACPE,QAASE,EACTi1B,KAAM,SAGV,GADA91B,KAAK04B,YAAYl0B,KAAKk3B,GAClBA,EAAct5B,iBACd,OAEJ,MAAM1B,EAAOG,IACTH,EACAV,KAAKu9B,iBAAiB,CAClB13B,KAAM,CACFhG,QAASa,EAAKb,QACdC,QAAiC,QAAvB8C,EAAKlC,EAAKZ,eAA4B,IAAP8C,EAAgBA,OAAKnC,GAElEgM,GAAI,CACAqX,MAAO9jB,KAAKipC,cAAcjlC,EAAMyT,UAChCA,SAAU,YAKlBzX,KAAKmxB,WAAW3sB,KAAK,IAAI8yB,GAAqB,CAC1CtP,YAAahkB,EAAMgkB,YACnBvQ,SAAUzT,EAAMyT,SAChB0L,WAAO1iB,EACPkuB,IAAK3uB,KAAKk5B,KACVpV,WAAOrjB,EACPE,QAASE,IAEjB,IACAb,KAAKgpC,iBACThpC,KAAKk5B,KAAO,IAAIvT,GAAY3lB,MAC5BA,KAAK+oC,iBACT,CACAt7B,UAAAA,CAAW0V,EAAOpW,GACd,OAAQoW,EAAMwL,IAAIlS,SAAS3X,MACvB,IAAK,OACD/E,MAAM0N,WAAW0V,EAAOpW,GACxB,MACJ,IAAK,WAAY,CACb,MAAMiC,EAAOhP,KAAKskC,eAAe7N,MAAM4N,GAAkBA,EAAcvgB,QAAUX,IAC7EnU,IACAA,EAAK20B,QAAQl2B,WAAWV,GACxBoW,EAAMwL,IAAIrU,uBAAuB9V,KAAK,CAClC4e,UAAWrW,KAGnB,KACJ,CACA,IAAK,SACD9J,QAAQC,KAAK,gEAGzB,CACAwjB,cAAAA,CAAewiB,EAAcrlC,GACzB,IAAIjB,EAAIgN,EAAI0T,EAAIC,EAAIya,EACpB,GAAIkL,aAAwB7J,IACI,IAA5B6J,EAAaplB,MAAM1e,KACnB,OAAOpF,KAAK0mB,eAAewiB,EAAaplB,MAAOjgB,GAEnD,MAAMslC,EjDvDP,SAA0BtkC,GAC7B,SAASukC,EAAYvkC,GACjB,MAAMwkC,EAAO,GACb,IAAK,IAAI39B,EAAI,EAAGA,EAAI7G,EAAQ2C,UAAUjG,OAAQmK,IAC1C29B,EAAKllC,KAAKU,EAAQ2C,UAAUwH,KAAKtD,IAErC,OAAO29B,CACX,CACA,IAAIF,EACA9qB,EAASxZ,EACb,KAAkB,OAAXwZ,IACH8qB,EAAQC,EAAY/qB,GAAQoY,MAAM6S,GAAQA,EAAIC,WAAW,qBACpC,iBAAVJ,IAGX9qB,EAASA,EAAOrC,cAEpB,OAAOmtB,CACX,CiDqCsBK,CAAiBxpC,KAAKoiB,SAASvd,SACvCA,EAAU7E,KAAK6E,QAarB,MAAMoY,GAXEpZ,aAAyC,EAASA,EAAQ4T,UACnD5T,EAAQ4T,SAEfyxB,aAAwBxL,GACjBwL,EAAarkC,QAAQoF,wBAE5Bi/B,EAAaplB,MACNolB,EAAaplB,MAAMjf,QAAQoF,wBAE/BpF,EAAQoF,wBAGbpK,EAAqJ,QAA1I+P,EAA8F,QAAxFhN,EAAKiB,aAAyC,EAASA,EAAQ4lC,2BAAwC,IAAP7mC,OAAgB,EAASA,EAAGmf,UAAuB,IAAPnS,EAAgBA,EAAK5P,KAAK0pC,iBACvL/D,EAAU,IAAID,GAAc,GAAE1lC,KAAK+hB,MAAMliB,IAC/CspC,QAAqCA,EAAQ,GAAI,CAC7C7C,IAAkM,QAA5LtI,EAAoF,QAA9E1a,EAAKzf,aAAyC,EAASA,EAAQozB,iBAA8B,IAAP3T,EAAgBA,EAA6B,QAAvBC,EAAKvjB,KAAK6D,eAA4B,IAAP0f,OAAgB,EAASA,EAAG0T,iBAA8B,IAAP+G,EAAgBA,EAAK,eAC/Nn0B,KAAMT,OAAO68B,QAAUhpB,EAAIpT,KAC3BC,IAAKV,OAAO88B,QAAUjpB,EAAInT,IAC1BC,MAAOkT,EAAIlT,MACXC,OAAQiT,EAAIjT,OACZ48B,UAAW/iC,aAAyC,EAASA,EAAQ+iC,UACrEf,YAAahiC,aAAyC,EAASA,EAAQgiC,cAErE8D,EAAyB,IAAI5jC,EAAoB4/B,EAASA,EAAQI,YAAW,KAC/E4D,EAAuB5nC,SAAS,KAEpC,OAAO4jC,EACFU,OACAb,MAAMoE,IACP,IAAIhnC,EACJ,GAAI+iC,EAAQ3/B,WACR,OAAO,EAEX,GAAwB,OAApB4jC,EAEA,OADAD,EAAuB5nC,WAChB,EAEX,MAAM8nC,EAASrhC,SAAS6L,cAAc,OACtCw1B,EAAOhiC,UAAY,8BACnB,MAAM0xB,EAAyB,IAAIuK,GAAuB+F,EAAQ7pC,MAC5D8pC,EAAiBZ,aAAwB7J,GACzC6J,EAAaplB,MACbolB,EACAa,EAAoBb,EAAava,IAAIlS,SAAS3X,KAK9CklC,EAA6D,OAAzCF,EAAejlC,QAAQmX,cACjD,IAAI8H,EAaAmmB,EAkDAC,EAjDJ,GAbKF,GAGInmC,aAAyC,EAASA,EAAQ4lC,qBAC/D3lB,EAAQjgB,EAAQ4lC,qBAGhB3lB,EAAQ9jB,KAAKmqC,YAAY,CAAEpoB,GAAIliB,IAC/BG,KAAK6oC,eAAerkC,KAAKsf,IAPzBA,EAAQgmB,EASZhmB,EAAMkG,MAAM0I,gBAAkB6G,EAC9BzV,EAAM5N,OAAOyvB,EAAQv8B,OAAO+8B,WAAYR,EAAQv8B,OAAOg9B,eAEjDviC,aAAyC,EAASA,EAAQ4lC,sBAAwBO,EACpF,GAAId,aAAwB7J,GACxBr/B,KAAKoqC,YAAW,KACZ,MAAMjnB,EAAQ2mB,EAAe9f,MAAMpF,YAAYskB,GAC/CplB,EAAMkG,MAAM8I,UAAU3P,EAAM,SAQhC,OAJAnjB,KAAKoqC,YAAW,IAAMtC,GAA2B,CAC7CjiC,KAAMikC,EACNr9B,GAAIqX,MAEAimB,GACJ,IAAK,OACDD,EAAenb,IAAIlhB,YAAW,GAC9B,MACJ,IAAK,WACL,IAAK,SACDw8B,EAE8B,QAFfrnC,EAAK5C,KAAKmoC,gBACpB1R,MAAM1zB,GAAUA,EAAM+gB,MAAM6K,IAAI5M,KACjCmnB,EAAava,IAAI5M,YAAwB,IAAPnf,OAAgB,EAASA,EAAG+gC,QAAQxmB,SAC1End,KAAKokB,YAAY0lB,GAKjCF,EAAgBpiC,UAAUjD,IAAI,eAC9BqlC,EAAgBn/B,MAAMqkB,SAAW,SACjC8a,EAAgBj3B,YAAYk3B,GAC5BD,EAAgBj3B,YAAYmR,EAAMjf,SAClCif,EAAMkG,MAAMvN,SAAW,CACnB3X,KAAM,SACNu4B,UAAWA,IAAMsI,EAAQv8B,OACzB6tB,UAAWpzB,aAAyC,EAASA,EAAQozB,WAErE+S,GACmC,SAAnCd,EAAava,IAAIlS,SAAS3X,MAC1BokC,EAAava,IAAIlhB,YAAW,GAEhCzN,KAAKqqC,yBAAyBvmB,GAC9B6lB,EAAuBvjC,eAAe0d,EAAM6K,IAAI7L,mBAAmB9e,IAC/D,IAAIpB,EACAoB,EAAM6nB,WACoB,QAAzBjpB,EAAK+iC,EAAQv8B,cAA2B,IAAPxG,GAAyBA,EAAGiiB,QAClE,IACAf,EAAM6K,IAAIlC,aAAY,KACtB,IAAI7pB,EACsB,QAAzBA,EAAK+iC,EAAQv8B,cAA2B,IAAPxG,GAAyBA,EAAGiiB,OAAO,KAGzE,MAAMylB,EAAwBN,GAC1BF,GACA9pC,KAAKkkB,SAAS4lB,EAAe/nB,IAC3Bhf,EAAQ,CACVqG,OAAQu8B,EACR4E,YAAazmB,EACbgmB,eAAgBQ,EACVR,EAAe/nB,QACfthB,EACNiG,WAAY,CACR3E,QAASA,KACL4nC,EAAuB5nC,UAChBmoC,KAqEnB,OAjEAP,EAAuBvjC,eAMvBxB,EAA4B+gC,EAAQv8B,OAAQ,UAAU,KAClD0a,EAAM5N,OAAOyvB,EAAQv8B,OAAO+8B,WAAYR,EAAQv8B,OAAOg9B,YAAY,IACnE7M,EAAwBp4B,EAAW0E,MAAK,KACxC,IAAI7F,KAAKgG,WAGT,GAAIgkC,GACAhqC,KAAKkkB,SAAS4lB,EAAe/nB,IAC7B/hB,KAAKoqC,YAAW,IAAMtC,GAA2B,CAC7CjiC,KAAMie,EACNrX,GAAIq9B,MAEHA,EAAenb,IAAIvL,WACpB0mB,EAAenb,IAAIlhB,YAAW,GAE9BzN,KAAKkkB,SAASJ,EAAM/B,KACpB/hB,KAAK+jB,cAAcD,EAAO,CACtB0mB,sBAAsB,SAI7B,GAAIxqC,KAAKkkB,SAASJ,EAAM/B,IAAK,CAC9B+B,EAAMkG,MAAM0I,gBACR1yB,KAAKu5B,uBACT2Q,EAAgBpmB,EAEhB,IADwB9jB,KAAK2oC,cAAclS,MAAMtc,GAAMA,EAAEowB,cAAgBzmB,IAQrE,OAEAmmB,EACAjqC,KAAKwmB,iBAAiB1C,EAAO,CACzB9Z,OAAQigC,EAAYjgC,OACpBD,MAAOkgC,EAAYlgC,MACnB0N,SAAUwyB,KAIdjqC,KAAK+jB,cAAcD,EAAO,CACtB1K,aAAa,EACb6K,YAAY,EACZwmB,kBAAkB,IAEtB3mB,EAAMkG,MAAMvN,SAAW,CAAE3X,KAAM,QAC/B9E,KAAKoqC,YAAW,KAEZpqC,KAAK6jB,WAAWC,EAAO,CAAC,GAAG,KAGnC9jB,KAAKqqC,yBAAyBvmB,EAClC,MAEJ9jB,KAAK2oC,cAAcxkC,KAAKpB,GACxB/C,KAAK+oC,mBACE,CAAI,IAEV2B,OAAOjD,IACRxkC,QAAQ0nC,MAAM,2CAA4ClD,IACnD,IAEf,CACAjhB,gBAAAA,CAAiBxX,EAAMnL,GACnB,IAAIjB,EAAIgN,EAAI0T,EAAIC,EAAIya,EACpB,IAAIla,EACJ,GAAI9U,aAAgBqwB,GAChBvb,EAAQ9jB,KAAKmqC,cACbnqC,KAAK6oC,eAAerkC,KAAKsf,GACzB9jB,KAAKoqC,YAAW,IAAMpqC,KAAK4kB,YAAY5V,EAAM,CACzC+rB,kBAAkB,EAClB3hB,aAAa,EACbgiB,oBAAoB,MAExBp7B,KAAKoqC,YAAW,IAAMtmB,EAAMkG,MAAM8I,UAAU9jB,EAAM,CAAEurB,oBAAoB,UAEvE,CACDzW,EAAQ9U,EACR,MAAM47B,EAA4F,QAAlEhoC,EAAK5C,KAAK2oC,cAAclS,MAAMllB,GAAMA,EAAEg5B,cAAgBzmB,WAA2B,IAAPlhB,OAAgB,EAASA,EAAGknC,eAChIe,EAAuBD,EACvB5qC,KAAKkkB,SAAS0mB,QACdnqC,EAC8F,kBAA/EoD,aAAyC,EAASA,EAAQinC,kBAC3EjnC,EAAQinC,kBAEJD,GACA7qC,KAAKoqC,YAAW,IAAMtC,GAA2B,CAC7CjiC,KAAMmJ,EACNvC,GAAIo+B,MAER7qC,KAAK+jB,cAAc/U,EAAM,CACrBy7B,kBAAkB,EAClBD,sBAAsB,IAE1BxqC,KAAK+jB,cAAc8mB,EAAsB,CACrCzxB,aAAa,IAEjB0K,EAAQ+mB,GAGR7qC,KAAK+jB,cAAc/U,EAAM,CACrBoK,aAAa,EACbqxB,kBAAkB,EAClBD,sBAAsB,IAItC,CAmDA,MAAMO,EAlDN,WACI,GAAIlnC,aAAyC,EAASA,EAAQ4T,SAAU,CACpE,MAAM/K,EAAS,CAAC,EA+BhB,MA9BI,SAAU7I,EAAQ4T,SAClB/K,EAAO7C,KAAOuC,KAAKD,IAAItI,EAAQ4T,SAAS5N,KAAM,GAEzC,UAAWhG,EAAQ4T,SACxB/K,EAAOm1B,MAAQz1B,KAAKD,IAAItI,EAAQ4T,SAASoqB,MAAO,GAGhDn1B,EAAO7C,KAAOg6B,GAEd,QAAShgC,EAAQ4T,SACjB/K,EAAO5C,IAAMsC,KAAKD,IAAItI,EAAQ4T,SAAS3N,IAAK,GAEvC,WAAYjG,EAAQ4T,SACzB/K,EAAOk1B,OAASx1B,KAAKD,IAAItI,EAAQ4T,SAASmqB,OAAQ,GAGlDl1B,EAAO5C,IAAM+5B,GAEY,iBAAlBhgC,EAAQkG,MACf2C,EAAO3C,MAAQqC,KAAKD,IAAItI,EAAQkG,MAAO,GAGvC2C,EAAO3C,MAAQ85B,GAEW,iBAAnBhgC,EAAQmG,OACf0C,EAAO1C,OAASoC,KAAKD,IAAItI,EAAQmG,OAAQ,GAGzC0C,EAAO1C,OAAS65B,GAEbn3B,CACX,CACA,MAAO,CACH7C,KAA+E,iBAAjEhG,aAAyC,EAASA,EAAQiN,GAClE1E,KAAKD,IAAItI,EAAQiN,EAAG,GACpB+yB,GACN/5B,IAA8E,iBAAjEjG,aAAyC,EAASA,EAAQqlB,GACjE9c,KAAKD,IAAItI,EAAQqlB,EAAG,GACpB2a,GACN95B,MAAoF,iBAArElG,aAAyC,EAASA,EAAQkG,OACnEqC,KAAKD,IAAItI,EAAQkG,MAAO,GACxB85B,GACN75B,OAAsF,iBAAtEnG,aAAyC,EAASA,EAAQmG,QACpEoC,KAAKD,IAAItI,EAAQmG,OAAQ,GACzB65B,GAEd,CACoBmH,GACdrH,EAAU,IAAItC,GAAQ/oB,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAE3hB,UAAWxN,KAAKoiB,SAASvd,QAAS2tB,QAAS1O,EAAMjf,SAAWkmC,GAAc,CAAEzJ,uBAA6D,0BAArCthC,KAAK6D,QAAQmzB,yBACjKv2B,EACsH,QAArH6iB,EAAiD,QAA3C1T,EAAK5P,KAAK6D,QAAQmzB,2BAAwC,IAAPpnB,OAAgB,EAASA,EAAGq7B,kCAA+C,IAAP3nB,EAAgBA,EAAKsgB,GAAsCrC,wBAA8D,0BAArCvhC,KAAK6D,QAAQmzB,yBAC/Nv2B,EACuH,QAAtHu9B,EAAiD,QAA3Cza,EAAKvjB,KAAK6D,QAAQmzB,2BAAwC,IAAPzT,OAAgB,EAASA,EAAG2nB,mCAAgD,IAAPlN,EAAgBA,EAAK4F,MACxJ1nB,EAAK4H,EAAMjf,QAAQsmC,cAAc,sBACvC,IAAKjvB,EACD,MAAM,IAAIrZ,MAAM,8BAEpB8gC,EAAQlB,UAAUvmB,EAAI,CAClBga,WAA8F,kBAA1EryB,aAAyC,EAASA,EAAQqyB,aACxEryB,EAAQqyB,aAGlB,MAAMkV,EAAqB,IAAI1H,GAA2B5f,EAAO6f,GAC3Dj9B,EAAa,IAAIX,EAAoB+d,EAAM6K,IAAI7L,mBAAmB9e,IAChEA,EAAM6nB,UACN8X,EAAQ7B,cACZ,IACAn7B,EAAmBmd,EAAMjf,SAAUwc,IACnC,MAAM,MAAEtX,EAAK,OAAEC,GAAWqX,EAAMM,YAChCmC,EAAM5N,OAAOnM,EAAOC,EAAO,KAE/BohC,EAAmBhlC,eAAeu9B,EAAQxvB,aAAY,KAIlD2P,EAAM5N,OAAO4N,EAAM/Z,MAAO+Z,EAAM9Z,OAAO,IACvC25B,EAAQlC,gBAAe,KACvBzhC,KAAK+iB,yBAAyBve,MAAM,IACpCsf,EAAM3P,aAAanQ,IACnB2/B,EAAQhC,UAAU,CACd33B,OAAQhG,aAAqC,EAASA,EAAMgG,OAC5DD,MAAO/F,aAAqC,EAASA,EAAM+F,OAC7D,IACF,CACAhI,QAASA,KACL2E,EAAW3E,UACX2F,EAAO1H,KAAKmoC,gBAAiBiD,GAC7BtnB,EAAMkG,MAAMvN,SAAW,CAAE3X,KAAM,QAC/B9E,KAAK+oC,iBAAiB,IAG9B/oC,KAAKmoC,gBAAgBhkC,KAAKinC,GAC1BtnB,EAAMkG,MAAMvN,SAAW,CAAE3X,KAAM,aACzBjB,aAAyC,EAASA,EAAQwnC,kBAC5DrrC,KAAKqqC,yBAAyBvmB,GAElC9jB,KAAK+oC,iBACT,CACAE,aAAAA,CAAcxxB,GACV,OAAQA,GACJ,IAAK,MACL,IAAK,SACGzX,KAAKoiB,SAAS1T,cAAgBf,EAAYkB,YAG1C7O,KAAKoiB,SAAS5C,kCAElB,MACJ,IAAK,OACL,IAAK,QACGxf,KAAKoiB,SAAS1T,cAAgBf,EAAYyE,UAG1CpS,KAAKoiB,SAAS5C,kCAM1B,OAAQ/H,GACJ,IAAK,MACL,IAAK,OACL,IAAK,SACD,OAAOzX,KAAKsrC,sBAAsB,CAAC,IACvC,IAAK,SACL,IAAK,QACD,OAAOtrC,KAAKsrC,sBAAsB,CAACtrC,KAAKoiB,SAAS7gB,SACrD,QACI,MAAM,IAAIsB,MAAO,wBAAuB4U,KAEpD,CACA4L,aAAAA,CAAcxf,GACV,IAAIjB,EAAIgN,EAAI0T,EAAIC,EAEhB,GADAxjB,MAAMsjB,cAAcxf,GAChB,wBAAyBA,EACzB,IAAK,MAAMigB,KAAS9jB,KAAKmoC,gBAAiB,CACtC,OAAQtkC,EAAQmzB,qBACZ,IAAK,wBACDlT,EAAM6f,QAAQpC,6BAA0B9gC,EACxCqjB,EAAM6f,QAAQrC,4BAAyB7gC,EACvC,MACJ,UAAKA,EACDqjB,EAAM6f,QAAQpC,wBACVqC,GACJ9f,EAAM6f,QAAQrC,uBACVsC,GACJ,MACJ,QACI9f,EAAM6f,QAAQpC,wBAC6B,QAAtC3+B,EAAKiB,EAAQmzB,2BAAwC,IAAPp0B,OAAgB,EAASA,EAAGsoC,4BAC/EpnB,EAAM6f,QAAQrC,uBAC6B,QAAtC1xB,EAAK/L,EAAQmzB,2BAAwC,IAAPpnB,OAAgB,EAASA,EAAGq7B,2BAEvFnnB,EAAM6f,QAAQhC,WAClB,CAEA,qBAAsB99B,GACtB7D,KAAKgpC,gBAAgBjf,gBAAoD,QAAnCzG,EAAKzf,EAAQuzB,wBAAqC,IAAP9T,EAAgBA,EAAKukB,IAEtG,QAAShkC,IACT7D,KAAKoiB,SAAS1S,OAAgC,QAAtB6T,EAAK1f,EAAQgiB,WAAwB,IAAPtC,EAAgBA,EAAK,GAE/EvjB,KAAKkoC,SAAW5vB,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAK6D,SAAUA,GAC/D7D,KAAKkW,OAAOlW,KAAKoiB,SAASrY,MAAO/J,KAAKoiB,SAASpY,QAAQ,EAC3D,CACAkM,MAAAA,CAAOnM,EAAOC,EAAQua,GAElB,GADAxkB,MAAMmW,OAAOnM,EAAOC,EAAQua,GACxBvkB,KAAKmoC,gBACL,IAAK,MAAMoD,KAAYvrC,KAAKmoC,gBAExBoD,EAAS5H,QAAQhC,WAG7B,CACA9c,KAAAA,GACI,IAAIjiB,EACwB,QAA3BA,EAAK5C,KAAKqiB,mBAAgC,IAAPzf,GAAyBA,EAAGiiB,OACpE,CACAuB,aAAAA,CAAcrE,GACV,OAAO/hB,KAAK0kB,OAAO+R,MAAMtT,GAAUA,EAAMpB,KAAOA,GACpD,CACAwU,cAAAA,CAAepT,GACXA,EAAMW,MAAMkG,MAAM8I,UAAU3P,GAC5BnjB,KAAKqqC,yBAAyBlnB,EAAMW,MACxC,CACAO,UAAAA,CAAWxgB,GACP,IAAIjB,EACJ,QAFc,IAAPiB,IAAAA,EAAU,CAAC,IAEbA,EAAQigB,MAAO,CAChB,IAAK9jB,KAAKqiB,YACN,OAEJxe,EAAQigB,MAAQ9jB,KAAKqiB,WACzB,CACA,GAAIxe,EAAQ2nC,cAAgB3nC,EAAQigB,OAC5BjgB,EAAQigB,MAAMqC,cACdtiB,EAAQigB,MAAMY,OAAO7gB,EAAQigB,MAAMY,OAAOnjB,OAAS,GAEnD,YADAsC,EAAQigB,MAAMkG,MAAM3F,WAAW,CAAE6V,cAAc,IAIvD,MAAMzd,EAAWV,GAAgBlY,EAAQigB,MAAMjf,SACzCyH,EAA+C,QAAvC1J,EAAK5C,KAAKoiB,SAAS9V,KAAKmQ,UAA8B,IAAP7Z,OAAgB,EAASA,EAAGqK,KACzFjN,KAAKqqC,yBAAyB/9B,EAClC,CACAgY,cAAAA,CAAezgB,GACX,IAAIjB,EACJ,QAFkB,IAAPiB,IAAAA,EAAU,CAAC,IAEjBA,EAAQigB,MAAO,CAChB,IAAK9jB,KAAKqiB,YACN,OAEJxe,EAAQigB,MAAQ9jB,KAAKqiB,WACzB,CACA,GAAIxe,EAAQ2nC,cAAgB3nC,EAAQigB,OAC5BjgB,EAAQigB,MAAMqC,cAAgBtiB,EAAQigB,MAAMY,OAAO,GAEnD,YADA7gB,EAAQigB,MAAMkG,MAAM1F,eAAe,CAAE4V,cAAc,IAI3D,MAAMzd,EAAWV,GAAgBlY,EAAQigB,MAAMjf,SACzCyH,EAAmD,QAA3C1J,EAAK5C,KAAKoiB,SAASlL,SAASuF,UAA8B,IAAP7Z,OAAgB,EAASA,EAAGqK,KACzFX,GACAtM,KAAKqqC,yBAAyB/9B,EAEtC,CAMA6Q,MAAAA,GACI,IAAIva,EACJ,MAAMlC,EAAOV,KAAKoiB,SAASzD,YACrB+F,EAAS1kB,KAAK0kB,OAAO5V,QAAO,CAAC28B,EAAYtoB,KAC3CsoB,EAAWtoB,EAAMpB,IAAMoB,EAAMhG,SACtBsuB,IACR,CAAC,GACEC,EAAS1rC,KAAKmoC,gBAAgBtmC,KAAKiiB,IAC9B,CACHpjB,KAAMojB,EAAMA,MAAM3G,SAClB1F,SAAUqM,EAAM6f,QAAQxmB,aAG1BwuB,EAAe3rC,KAAK2oC,cAAc9mC,KAAKiiB,IAClC,CACHpjB,KAAMojB,EAAMymB,YAAYptB,SACxByuB,mBAAoB9nB,EAAMgmB,eAC1BryB,SAAUqM,EAAM1a,OAAO48B,aACvBM,IAA6C,WAAxCxiB,EAAMymB,YAAY5b,IAAIlS,SAAS3X,KAC9Bgf,EAAMymB,YAAY5b,IAAIlS,SAASwa,eAC/Bx2B,MAGRiM,EAAS,CACXm/B,KAAMnrC,EACNgkB,SACArC,YAAyC,QAA3Bzf,EAAK5C,KAAKqiB,mBAAgC,IAAPzf,OAAgB,EAASA,EAAGmf,IAQjF,OANI2pB,EAAOnqC,OAAS,IAChBmL,EAAO43B,eAAiBoH,GAExBC,EAAapqC,OAAS,IACtBmL,EAAOi/B,aAAeA,GAEnBj/B,CACX,CACA4S,QAAAA,CAAS5e,GACL,IAAIkC,EAAIgN,EAAI0T,EAEZ,GADAtjB,KAAK2D,QACe,iBAATjD,GAA8B,OAATA,EAC5B,MAAM,IAAImC,MAAM,+CAEpB,MAAM,KAAEgpC,EAAI,OAAEnnB,EAAM,YAAErC,GAAgB3hB,EACtC,GAAuB,WAAnBmrC,EAAKvuB,KAAKxY,OAAsBrD,MAAMqqC,QAAQD,EAAKvuB,KAAK5c,MACxD,MAAM,IAAImC,MAAM,+BAEpB,IAEI,MAAMkH,EAAQ/J,KAAK+J,MACbC,EAAShK,KAAKgK,OACd+hC,EAAkCrrC,IACpC,MAAM,GAAEqhB,EAAE,OAAExE,EAAM,WAAE4b,EAAU,MAAErmB,EAAK,WAAEknB,GAAet5B,EACtD,GAAkB,iBAAPqhB,EACP,MAAM,IAAIlf,MAAM,mCAEpB,MAAMihB,EAAQ9jB,KAAKmqC,YAAY,CAC3BpoB,KACAxE,SAAUA,EACV4b,aAAcA,IAElBn5B,KAAK6oC,eAAerkC,KAAKsf,GACzB,MAAMkoB,EAAgB,GACtB,IAAK,MAAMlqC,KAASgR,EAAO,CAMvB,MAAMqQ,EAAQnjB,KAAKqoC,cAAc/oB,SAASoF,EAAO5iB,GAAQgiB,GACzDkoB,EAAc7nC,KAAKgf,EACvB,CACA,IAAK,IAAIzX,EAAI,EAAGA,EAAIoH,EAAMvR,OAAQmK,IAAK,CACnC,MAAMyX,EAAQ6oB,EAActgC,GACtBmgB,EAAiC,iBAAfmO,GACpBA,IAAe7W,EAAMpB,GACzB+B,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,eAAgBvO,EAChB0O,oBAAoB,GAE5B,CAMA,OALKzW,EAAMqC,aAAerC,EAAMY,OAAOnjB,OAAS,GAC5CuiB,EAAMkG,MAAM8I,UAAUhP,EAAMY,OAAOZ,EAAMY,OAAOnjB,OAAS,GAAI,CACzDg5B,oBAAoB,IAGrBzW,CAAK,EAEhB9jB,KAAKoiB,SAASpD,YAAY6sB,EAAM,CAC5BvsB,SAAW7E,GACAsxB,EAA+BtxB,EAAK/Z,QAGnDV,KAAKkW,OAAOnM,EAAOC,GAAQ,GAC3B,MAAMiiC,EAA0D,QAA9BrpC,EAAKlC,EAAK4jC,sBAAmC,IAAP1hC,EAAgBA,EAAK,GAC7F,IAAK,MAAMspC,KAA2BD,EAA0B,CAC5D,MAAM,KAAEvrC,EAAI,SAAE+W,GAAay0B,EACrBpoB,EAAQioB,EAA+BrrC,GAC7CV,KAAKwmB,iBAAiB1C,EAAO,CACzBrM,SAAUA,EACV1N,MAAO0N,EAAS1N,MAChBC,OAAQyN,EAASzN,OACjB8gC,iBAAiB,EACjB5U,YAAY,GAEpB,CACA,MAAMiW,EAAsD,QAA5Bv8B,EAAKlP,EAAKirC,oBAAiC,IAAP/7B,EAAgBA,EAAK,GACzF,IAAK,MAAMw8B,KAAyBD,EAAwB,CACxD,MAAM,KAAEzrC,EAAI,SAAE+W,EAAQ,mBAAEm0B,EAAkB,IAAEtF,GAAQ8F,EAC9CtoB,EAAQioB,EAA+BrrC,GAC7CV,KAAK0mB,eAEiB,QAFDpD,EAAMsoB,EACrB5rC,KAAKkkB,SAAS0nB,QACdnrC,SAA+B,IAAP6iB,EAAgBA,EAAKQ,EAAO,CACtDrM,SAAUA,QAA2CA,OAAWhX,EAChEgpC,oBAAqBmC,EACf9nB,OACArjB,EACNw2B,UAAWqP,GAEnB,CACA,IAAK,MAAMjC,KAAiBrkC,KAAKmoC,gBAC7B9D,EAAcV,QAAQhC,YAE1B,GAA2B,iBAAhBtf,EAA0B,CACjC,MAAMc,EAAQnjB,KAAKkkB,SAAS7B,GACxBc,GACAnjB,KAAKqqC,yBAAyBlnB,EAEtC,CACJ,CACA,MAAOskB,GACHxkC,QAAQ0nC,MAAM,4DAA6DlD,GAI3E,IAAK,MAAM3jB,KAAS9jB,KAAKkiB,OACrB,IAAK,MAAMiB,KAASW,EAAMY,OACtB1kB,KAAK4kB,YAAYzB,EAAO,CACpB4X,kBAAkB,EAClB3hB,aAAa,IAQzB,IAAK,MAAM0K,KAAS9jB,KAAKkiB,OACrB4B,EAAM/hB,UACN/B,KAAKiiB,QAAQtd,OAAOmf,EAAM/B,IAC1B/hB,KAAK4oC,kBAAkBpkC,KAAKsf,GAGhC,IAAK,MAAMugB,IAAiB,IAAIrkC,KAAKmoC,iBACjC9D,EAActiC,UASlB,MANA/B,KAAK2D,QAMC8jC,CACV,CACAznC,KAAK+oC,kBACL/oC,KAAKwoC,qBAAqBhkC,MAC9B,CACAb,KAAAA,GACI,MAAMue,EAASzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UAAUtgB,KAAK0P,GAAMA,EAAExO,QACxDspC,IAAmBrsC,KAAKqiB,YAC9B,IAAK,MAAMyB,KAAS5B,EAEhBliB,KAAKokB,YAAYN,EAAO,CAAEG,YAAY,IAEtCooB,GACArsC,KAAKqqC,8BAAyB5pC,GAElCT,KAAKoiB,SAASze,OAClB,CACA2iB,cAAAA,GACI,IAAK,MAAMjF,KAASrhB,KAAKiiB,QAAQukB,UAAW,CACxC,MAAOj1B,EAAGuS,GAASzC,EACnByC,EAAM/gB,MAAMinB,MAAM2Q,gBACtB,CACJ,CACA7V,QAAAA,CAASjhB,GACL,IAAIjB,EAAIgN,EACR,GAAI5P,KAAK0kB,OAAO+R,MAAMllB,GAAMA,EAAEwQ,KAAOle,EAAQke,KACzC,MAAM,IAAIlf,MAAO,iBAAgBgB,EAAQke,qBAE7C,IAAI+nB,EACJ,GAAIjmC,EAAQ4T,UAAY5T,EAAQ0nC,SAC5B,MAAM,IAAI1oC,MAAM,kFAEpB,MAAMypC,EAAU,CACZviC,MAAOlG,EAAQ0oC,aACfviC,OAAQnG,EAAQ2oC,eAEpB,IAAIpoC,EACJ,GAAIP,EAAQ4T,SACR,GAA4B5T,EAAQ4T,SnBv5BnCg1B,emBu5B8C,CAC3C,MAAMA,EAA4D,iBAApC5oC,EAAQ4T,SAASg1B,eACzCzsC,KAAKomB,cAAcviB,EAAQ4T,SAASg1B,gBACpC5oC,EAAQ4T,SAASg1B,eAEvB,GADAroC,EAAQP,EAAQ4T,SAASrT,OACpBqoC,EACD,MAAM,IAAI5pC,MAAO,mBAAkBgB,EAAQ4T,SAASg1B,kCAExD3C,EAAiB9pC,KAAK0sC,UAAUD,EACpC,KACK,KnB55BV,SAAiC/rC,GACpC,QAAIA,EAAKopC,cAIb,CmBu5BqB6C,CAAwB9oC,EAAQ4T,UAUpC,CACD,MAAMqM,EAAQ9jB,KAAKipC,cAAchhB,GAAoBpkB,EAAQ4T,SAASiF,YAChEyG,EAAQnjB,KAAK4sC,YAAY/oC,EAASigB,GAaxC,OAZAA,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,UAECP,EAAQgpC,UACT7sC,KAAKqqC,yBAAyBvmB,GAElCA,EAAM6K,IAAIb,QAAQ,CACd9jB,OAAQsiC,aAAyC,EAASA,EAAQtiC,OAClED,MAAOuiC,aAAyC,EAASA,EAAQviC,QAE9DoZ,CACX,CApBI,GALA2mB,EAC+C,iBAApCjmC,EAAQ4T,SAASqyB,eAC2C,QAA5DlnC,EAAK5C,KAAKiiB,QAAQrX,IAAI/G,EAAQ4T,SAASqyB,uBAAoC,IAAPlnC,OAAgB,EAASA,EAAGG,MACjGc,EAAQ4T,SAASqyB,eAC3B1lC,EAAQP,EAAQ4T,SAASrT,OACpB0lC,EACD,MAAM,IAAIjnC,MAAO,mBAAkBgB,EAAQ4T,SAASqyB,iCAmB5D,MAGAA,EAAiB9pC,KAAKqiB,YAE1B,IAAIc,EACJ,GAAI2mB,EAAgB,CAChB,MAAMtiB,EAAS3F,IAAsC,QAA3BjS,EAAK/L,EAAQ4T,gBAA6B,IAAP7H,OAAgB,EAASA,EAAG8M,YAAc,UACvG,GAAI7Y,EAAQ0nC,SAAU,CAClB,MAAMznB,EAAQ9jB,KAAKmqC,cACnBnqC,KAAK6oC,eAAerkC,KAAKsf,GACzB,MAAMgpB,EAAmD,iBAArBjpC,EAAQ0nC,UACnB,OAArB1nC,EAAQ0nC,SACN1nC,EAAQ0nC,SACR,CAAC,EACPvrC,KAAKwmB,iBAAiB1C,EAAOxL,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAG2d,GAAuB,CAAE5W,YAAY,EAAO4U,iBAAiB,EAAMO,iBAAiB,KACjJloB,EAAQnjB,KAAK4sC,YAAY/oC,EAASigB,GAClCA,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,SAER,MACK,GAAyC,aAArC0lC,EAAenb,IAAIlS,SAAS3X,MACtB,WAAX0iB,EACArE,EAAQnjB,KAAK4sC,YAAY/oC,EAASimC,GAClCA,EAAe9f,MAAM8I,UAAU3P,EAAO,CAClCiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,UAEJ0lC,EAAenb,IAAIb,QAAQ,CACvB/jB,MAAOuiC,aAAyC,EAASA,EAAQviC,MACjEC,OAAQsiC,aAAyC,EAASA,EAAQtiC,SAEjEnG,EAAQgpC,UACT7sC,KAAKqqC,yBAAyBP,OAGjC,CACD,MAAMrtB,EAAWV,GAAgB+tB,EAAejlC,SAC1CkoC,EAAmBxwB,GAAoBvc,KAAKoiB,SAAS1T,YAAa+N,EAAU+K,GAC5E1D,EAAQ9jB,KAAKsrC,sBAAsByB,EAAkB/sC,KAAKgtC,sBAAsBD,KAClFp/B,EAAYyE,SACVk6B,aAAyC,EAASA,EAAQtiC,OAC1DsiC,aAAyC,EAASA,EAAQviC,OAChEoZ,EAAQnjB,KAAK4sC,YAAY/oC,EAASigB,GAClCA,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,UAECP,EAAQgpC,UACT7sC,KAAKqqC,yBAAyBvmB,EAEtC,CACJ,MACK,GAAIjgB,EAAQ0nC,SAAU,CACvB,MAAMznB,EAAQ9jB,KAAKmqC,cACnBnqC,KAAK6oC,eAAerkC,KAAKsf,GACzB,MAAMmpB,EAA0C,iBAArBppC,EAAQ0nC,UACV,OAArB1nC,EAAQ0nC,SACN1nC,EAAQ0nC,SACR,CAAC,EACPvrC,KAAKwmB,iBAAiB1C,EAAOxL,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAG8d,GAAc,CAAE/W,YAAY,EAAO4U,iBAAiB,EAAMO,iBAAiB,KACxIloB,EAAQnjB,KAAK4sC,YAAY/oC,EAASigB,GAClCA,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,SAER,KACK,CACD,MAAM0f,EAAQ9jB,KAAKsrC,sBAAsB,CAAC,GAAItrC,KAAKoiB,SAAS1T,cAAgBf,EAAYyE,SAClFk6B,aAAyC,EAASA,EAAQtiC,OAC1DsiC,aAAyC,EAASA,EAAQviC,OAChEoZ,EAAQnjB,KAAK4sC,YAAY/oC,EAASigB,GAClCA,EAAMkG,MAAM8I,UAAU3P,EAAO,CACzBiX,cAAev2B,EAAQgpC,SACvBtS,mBAAoB12B,EAAQgpC,SAC5BzoC,UAECP,EAAQgpC,UACT7sC,KAAKqqC,yBAAyBvmB,EAEtC,CACA,OAAOX,CACX,CACAyB,WAAAA,CAAYzB,EAAOtf,QAAO,IAAPA,IAAAA,EAAU,CACzBk3B,kBAAkB,IAElB,MAAMjX,EAAQX,EAAMW,MACpB,IAAKA,EACD,MAAM,IAAIjhB,MAAO,uBAAsBsgB,EAAMpB,6BAEjD+B,EAAMkG,MAAMpF,YAAYzB,EAAO,CAC3BiY,mBAAoBv3B,EAAQu3B,qBAE3Bv3B,EAAQuV,cACT+J,EAAMW,MAAMkG,MAAM0I,gBAAgBC,QAAQxP,GAC1CA,EAAMphB,WAES,IAAf+hB,EAAM1e,MAAcvB,EAAQk3B,kBAC5B/6B,KAAKokB,YAAYN,EAAO,CAAEG,WAAYpgB,EAAQu3B,oBAEtD,CACAK,wBAAAA,GACI,OAAIz7B,KAAK6D,QAAQ43B,yBACNz7B,KAAK6D,QAAQ43B,2BAEjB,IAAIsF,EACf,CACAgI,eAAAA,GACI,IAAInmC,EAAIgN,EjD54BmBmS,EiD64B3B,GAA4F,IAAxF/hB,KAAKkiB,OAAOhX,QAAQ4F,GAA8B,SAAxBA,EAAE6d,IAAIlS,SAAS3X,MAAmBgM,EAAE6d,IAAIvL,YAAW7hB,QAC7E,IAAKvB,KAAK83B,UAAW,CACjB93B,KAAK83B,UAAY93B,KAAKy7B,2BACtBz7B,KAAK83B,UAAU7I,KAAK,CAChByC,aAAc,IAAI/L,GAAY3lB,QAElC,MAAMktC,EAAqB1kC,SAAS6L,cAAc,OAClD64B,EAAmBrlC,UAAY,yBjDp5BZka,EiDq5BW,sBAApBmrB,EjDp5Bd/L,aAAa,cAAepf,GiDq5BxBmrB,EAAmBv6B,YAAY3S,KAAK83B,UAAUjzB,SAC9C7E,KAAKoiB,SAASvd,QAAQ8N,YAAYu6B,EACtC,OAEKltC,KAAK83B,YACV93B,KAAK83B,UAAUjzB,QAAQmX,cAActU,SACI,QAAxCkI,GAAMhN,EAAK5C,KAAK83B,WAAW/1B,eAA4B,IAAP6N,GAAyBA,EAAGrH,KAAK3F,GAClF5C,KAAK83B,UAAY,KAEzB,CACAzR,QAAAA,CAASxiB,GACL,IAAIjB,EACJ,GAAIiB,EAAS,CACT,IAAIimC,EACJ,GAA4BjmC,EnBxjC3B4oC,emBwjCqC,CAClC,MAAMA,EAAmD,iBAA3B5oC,EAAQ4oC,eAChCzsC,KAAK0kB,OAAO+R,MAAMtT,GAAUA,EAAMpB,KAAOle,EAAQ4oC,iBACjD5oC,EAAQ4oC,eACd,IAAKA,EACD,MAAM,IAAI5pC,MAAO,mBAAkBgB,EAAQ4oC,iCAG/C,GADA3C,EAAiB9pC,KAAK0sC,UAAUD,IAC3B3C,EACD,MAAM,IAAIjnC,MAAO,uCAAsCgB,EAAQ4oC,gCAEvE,KACK,KnB/jCV,SAAiC/rC,GACpC,QAAIA,EAAKopC,cAIb,CmB0jCqBqD,CAAwBtpC,GAS5B,CACD,MAAMigB,EAAQ9jB,KAAKipC,cAAchhB,GAAoBpkB,EAAQ6Y,YAI7D,OAHK7Y,EAAQu2B,eACTp6B,KAAKqqC,yBAAyBvmB,GAE3BA,CACX,CAVI,GAJAgmB,EACsC,iBAA3BjmC,EAAQimC,eAC2C,QAAnDlnC,EAAK5C,KAAKiiB,QAAQrX,IAAI/G,EAAQimC,uBAAoC,IAAPlnC,OAAgB,EAASA,EAAGG,MACxFc,EAAQimC,gBACbA,EACD,MAAM,IAAIjnC,MAAO,mBAAkBgB,EAAQimC,gCASnD,CACA,MAAMtiB,EAAS3F,GAAShe,EAAQ6Y,WAAa,UACvCD,EAAWV,GAAgB+tB,EAAejlC,SAC1CkoC,EAAmBxwB,GAAoBvc,KAAKoiB,SAAS1T,YAAa+N,EAAU+K,GAC5E1D,EAAQ9jB,KAAKmqC,YAAYtmC,GACzBuB,EAAOpF,KAAK2c,uBAAuBowB,KACrCp/B,EAAYyE,SACVvO,EAAQ2oC,cACR3oC,EAAQ0oC,aAKd,OAJAvsC,KAAK6jB,WAAWC,EAAOipB,EAAkB3nC,GACpCvB,EAAQu2B,eACTp6B,KAAKqqC,yBAAyBvmB,GAE3BA,CACX,CACK,CACD,MAAMA,EAAQ9jB,KAAKmqC,YAAYtmC,GAG/B,OAFA7D,KAAK6jB,WAAWC,GAChB9jB,KAAKqqC,yBAAyBvmB,GACvBA,CACX,CACJ,CACAnH,sBAAAA,CAAuBF,GACnB,OAAOA,EAASlb,OAAS,GAAK,GAC1BvB,KAAKoiB,SAAS1T,cAAgBf,EAAYkB,WACxClB,EAAYkB,WACZlB,EAAYyE,QACtB,CACAgS,WAAAA,CAAYN,EAAOjgB,GACf7D,KAAK+jB,cAAcD,EAAOjgB,EAC9B,CACAkgB,aAAAA,CAAcD,EAAOjgB,GACjB,IAAIjB,EACJ,MAAM8hB,EAAS,IAAIZ,EAAMY,QACzB,KAAM7gB,aAAyC,EAASA,EAAQuV,aAC5D,IAAK,MAAM+J,KAASuB,EAChB1kB,KAAK4kB,YAAYzB,EAAO,CACpB4X,kBAAkB,EAClB3hB,YAA8F,QAAhFxW,EAAKiB,aAAyC,EAASA,EAAQuV,mBAAgC,IAAPxW,GAAgBA,IAIlI,MAAMujB,EAAcnmB,KAAKmmB,YACzB,GAAgC,aAA5BrC,EAAM6K,IAAIlS,SAAS3X,KAAqB,CACxC,MAAMu/B,EAAgBrkC,KAAKmoC,gBAAgB1R,MAAMllB,GAAMA,EAAEuS,QAAUA,IACnE,GAAIugB,EAAe,CAQf,IAPMxgC,aAAyC,EAASA,EAAQuV,eAC5DirB,EAAcvgB,MAAM/hB,UACpB/B,KAAKiiB,QAAQtd,OAAOmf,EAAM/B,IAC1B/hB,KAAK4oC,kBAAkBpkC,KAAKsf,IAEhCpc,EAAO1H,KAAKmoC,gBAAiB9D,GAC7BA,EAActiC,YACR8B,aAAyC,EAASA,EAAQogB,aAAejkB,KAAKsiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UACvCniB,KAAKqqC,yBAAyBnoB,EAAO3gB,OAAS,EAAI2gB,EAAO,GAAGnf,WAAQtC,EACxE,CACA,OAAO4jC,EAAcvgB,KACzB,CACA,MAAM,IAAIjhB,MAAM,gCACpB,CACA,GAAgC,WAA5BihB,EAAM6K,IAAIlS,SAAS3X,KAAmB,CACtC,MAAMsoC,EAAgBptC,KAAK2oC,cAAclS,MAAMllB,GAAMA,EAAEg5B,cAAgBzmB,IACvE,GAAIspB,EAAe,CACf,KAAMvpC,aAAyC,EAASA,EAAQuV,aAAc,CAC1E,KAAMvV,aAAyC,EAASA,EAAQ2mC,sBAAuB,CACnF,MAAM6C,EAAWD,EAActD,eACzB9pC,KAAKkkB,SAASkpB,EAActD,qBAC5BrpC,EACF4sC,GAAuC,IAA3BA,EAAS3oB,OAAOnjB,QAC5BvB,KAAKokB,YAAYipB,EAEzB,CACAD,EAAc7C,YAAYxoC,UAC1B/B,KAAKiiB,QAAQtd,OAAOmf,EAAM/B,IAC1B/hB,KAAK4oC,kBAAkBpkC,KAAKsf,EAChC,CACApc,EAAO1H,KAAK2oC,cAAeyE,GAC3B,MAAME,EAAeF,EAAc1mC,WAAW3E,UAK9C,KAJM8B,aAAyC,EAASA,EAAQ4mC,mBAAqB6C,IACjFttC,KAAK6jB,WAAWypB,EAAc,CAAC,IAC/BttC,KAAKqqC,yBAAyBiD,MAE5BzpC,aAAyC,EAASA,EAAQogB,aAAejkB,KAAKsiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UACvCniB,KAAKqqC,yBAAyBnoB,EAAO3gB,OAAS,EAAI2gB,EAAO,GAAGnf,WAAQtC,EACxE,CAEA,OADAT,KAAK+oC,kBACEqE,EAAc7C,WACzB,CACA,MAAM,IAAI1nC,MAAM,8BACpB,CACA,MAAM0qC,EAAKxtC,MAAMgkB,cAAcD,EAAOjgB,GAMtC,OALMA,aAAyC,EAASA,EAAQogB,aACxDjkB,KAAKmmB,cAAgBA,GACrBnmB,KAAKi5B,wBAAwBz0B,KAAKxE,KAAKmmB,aAGxConB,CACX,CACAnD,UAAAA,CAAWtkC,GACP,MAAM0nC,EAAWxtC,KAAK8oC,QACtB,IAEI,OADA9oC,KAAK8oC,SAAU,EACRhjC,GACX,CAAC,QAEG9F,KAAK8oC,QAAU0E,CACnB,CACJ,CACAjQ,gBAAAA,CAAiB15B,GACb,IAAIjB,EACJ,MAAM6qC,EAAmB5pC,EAAQ4I,GAAGqX,MAC9B4pB,EAAgB7pC,EAAQgC,KAAKhG,QAC7B8tC,EAAe9pC,EAAQgC,KAAK/F,QAC5B8tC,EAAoB/pC,EAAQ4I,GAAGgL,SAC/Bo2B,EAAmBhqC,EAAQ4I,GAAGrI,MAC9B0pC,EAAcJ,EAC6B,QAA1C9qC,EAAK5C,KAAKiiB,QAAQrX,IAAI8iC,UAAmC,IAAP9qC,OAAgB,EAASA,EAAGG,WAC/EtC,EACN,IAAKqtC,EACD,MAAM,IAAIjrC,MAAO,2BAA0B6qC,KAE/C,QAAqBjtC,IAAjBktC,EAaJ,GAAKC,GAA2C,WAAtBA,EAyBrB,CAKD,MAAM7D,EAAoBhuB,GAAgB0xB,EAAiB5oC,SACrDkpC,EAAiBxxB,GAAoBvc,KAAKoiB,SAAS1T,YAAaq7B,EAAmB6D,GACzF,GAAIE,EAAY1oC,KAAO,EAAG,CAKtB,MAAO4oC,EAAsBvhC,GAAMpB,EAAK0iC,GACxC,GAAsC,SAAlCD,EAAYnf,IAAIlS,SAAS3X,KAAiB,CAC1C,MAAMmpC,EAAiBlyB,GAAgB+xB,EAAYjpC,UAC5CqpC,EAAsBroC,GAAQwF,EAAK4iC,GAC1C,GAAI1iC,EAAe2iC,EAAsBF,GASrC,OALAhuC,KAAKoiB,SAASnM,SAASi4B,EAAsBroC,EAAM4G,QACnDzM,KAAKyoC,gBAAgBjkC,KAAK,CACtB2e,MAAOnjB,KAAKomB,cAAcunB,GAC1B9nC,KAAMioC,GAIlB,CACA,GAAsC,WAAlCA,EAAYnf,IAAIlS,SAAS3X,KAAmB,CAQ5C,MAAMylC,EAAcvqC,KAAK2oC,cAAclS,MAAM3S,GAAUA,EAAMymB,cAAgBuD,IACvE/F,EAAe/nC,KAAKoqC,YAAW,IAAMG,EAAYA,YAAYvgB,MAAMpF,YAAY2lB,EAAYA,YAAY7lB,OAAO,GAAI,CACpH0V,eAAe,EACfgB,oBAAoB,MAExBp7B,KAAK+jB,cAAc+pB,EAAa,CAAE7pB,YAAY,IAC9C,MAAMkqB,EAAWnuC,KAAKsrC,sBAAsByC,GAO5C,OANA/tC,KAAKoqC,YAAW,IAAM+D,EAASnkB,MAAM8I,UAAUiV,KAC/C/nC,KAAKqqC,yBAAyB8D,QAC9BnuC,KAAKyoC,gBAAgBjkC,KAAK,CACtB2e,MAAOnjB,KAAKomB,cAAcunB,GAC1B9nC,KAAMioC,GAGd,CAEA,MAAMM,EAAcpuC,KAAKoqC,YAAW,IAAMpqC,KAAK+jB,cAAc+pB,EAAa,CACtE7pB,YAAY,EACZ7K,aAAa,MAGXi1B,EAA2BtyB,GAAgB0xB,EAAiB5oC,SAC5D4X,EAAWF,GAAoBvc,KAAKoiB,SAAS1T,YAAa2/B,EAA0BT,GAC1F5tC,KAAKoqC,YAAW,IAAMpqC,KAAK6jB,WAAWuqB,EAAa3xB,KACnDzc,KAAKqqC,yBAAyB+D,GAC9BpuC,KAAKyoC,gBAAgBjkC,KAAK,CACtB2e,MAAOnjB,KAAKomB,cAAcunB,GAC1B9nC,KAAMioC,GAEd,KACK,CAKD,MAAM/F,EAAe/nC,KAAKoqC,YAAW,IAAM0D,EAAY9jB,MAAMpF,YAAY+oB,EAAc,CACnFvT,eAAe,EACfgB,oBAAoB,MAExB,IAAK2M,EACD,MAAM,IAAIllC,MAAO,oBAAmB8qC,KAExC,MAAMW,EAAe/xB,GAAoBvc,KAAKoiB,SAAS1T,YAAaq7B,EAAmB6D,GACjF9pB,EAAQ9jB,KAAKsrC,sBAAsBgD,GACzCtuC,KAAKoqC,YAAW,IAAMtmB,EAAMkG,MAAM8I,UAAUiV,EAAc,CACtDxN,oBAAoB,MAExBv6B,KAAKqqC,yBAAyBvmB,GAC9B9jB,KAAKyoC,gBAAgBjkC,KAAK,CACtB2e,MAAO4kB,EACPliC,KAAMioC,GAEd,CACJ,KAlH0D,CAItD,MAAM/F,EAAe/nC,KAAKoqC,YAAW,IAAM0D,EAAY9jB,MAAMpF,YAAY+oB,EAAc,CACnFvT,eAAe,EACfgB,oBAAoB,MAExB,IAAK2M,EACD,MAAM,IAAIllC,MAAO,oBAAmB8qC,KAET,IAA3BG,EAAY9jB,MAAM5kB,MAElBpF,KAAK+jB,cAAc+pB,EAAa,CAAE7pB,YAAY,IAElDjkB,KAAKoqC,YAAW,IAAMqD,EAAiBzjB,MAAM8I,UAAUiV,EAAc,CACjE3jC,MAAOypC,EACPtT,oBAAoB,MAExBv6B,KAAKqqC,yBAAyBoD,GAC9BztC,KAAKyoC,gBAAgBjkC,KAAK,CACtB2e,MAAO4kB,EACPliC,KAAMioC,GAEd,MAjCI9tC,KAAKuuC,UAAU,CACX1oC,KAAM,CAAEie,MAAOgqB,GACfrhC,GAAI,CACAqX,MAAO2pB,EACPh2B,SAAUm2B,IAwH1B,CACAW,SAAAA,CAAU1qC,GACN,MAAMgC,EAAOhC,EAAQgC,KAAKie,MACpBrX,EAAK5I,EAAQ4I,GAAGqX,MAChB0D,EAAS3jB,EAAQ4I,GAAGgL,SAC1B,GAAe,WAAX+P,EAAqB,CACrB,MAAMrB,EAActgB,EAAKsgB,YACnBzB,EAAS1kB,KAAKoqC,YAAW,IAAM,IAAIvkC,EAAK6e,QAAQ7iB,KAAKsY,GAAMtU,EAAKmkB,MAAMpF,YAAYzK,EAAE4H,GAAI,CAC1FqY,eAAe,QAEmD,KAAjEv0B,aAAmC,EAASA,EAAKmkB,MAAM5kB,OACxDpF,KAAK+jB,cAAcle,EAAM,CAAEoe,YAAY,IAE3CjkB,KAAKoqC,YAAW,KACZ,IAAK,MAAMjnB,KAASuB,EAChBjY,EAAGud,MAAM8I,UAAU3P,EAAO,CACtBiX,cAAejX,IAAUgD,EACzBoU,oBAAoB,GAE5B,IAEJv6B,KAAKqqC,yBAAyB59B,EAClC,KACK,CACD,OAAQ5G,EAAK8oB,IAAIlS,SAAS3X,MACtB,IAAK,OACD9E,KAAKoiB,SAASrM,WAAWgG,GAAgBlW,EAAKhB,UAC9C,MACJ,IAAK,WAAY,CACb,MAAM2pC,EAAwBxuC,KAAKmoC,gBAAgB1R,MAAM3lB,GAAMA,EAAEgT,QAAUje,IAC3E,IAAK2oC,EACD,MAAM,IAAI3rC,MAAM,iCAEpB2rC,EAAsBzsC,UACtB,KACJ,CACA,IAAK,SAAU,CACX,MAAM0sC,EAAsBzuC,KAAK2oC,cAAclS,MAAM3lB,GAAMA,EAAEy5B,cAAgB1kC,IAC7E,IAAK4oC,EACD,MAAM,IAAI5rC,MAAM,+BAEpB4rC,EAAoB/nC,WAAW3E,SACnC,EAEJ,MAAMgoC,EAAoBhuB,GAAgBtP,EAAG5H,SACvCypC,EAAe/xB,GAAoBvc,KAAKoiB,SAAS1T,YAAaq7B,EAAmBviB,GACvF,IAAIpiB,EACJ,OAAQpF,KAAKoiB,SAAS1T,aAClB,KAAKf,EAAYyE,SACbhN,EACI2kC,EAAkBxoC,OAAS,GAAK,EAC1BsE,EAAK8oB,IAAI5kB,MACTlE,EAAK8oB,IAAI3kB,OACnB,MACJ,KAAK2D,EAAYkB,WACbzJ,EACI2kC,EAAkBxoC,OAAS,GAAK,EAC1BsE,EAAK8oB,IAAI3kB,OACTnE,EAAK8oB,IAAI5kB,MAG3B/J,KAAKoiB,SAASnP,QAAQpN,EAAMT,EAAMkpC,EACtC,CACAzoC,EAAK6e,OAAO1iB,SAASmhB,IACjBnjB,KAAKyoC,gBAAgBjkC,KAAK,CAAE2e,QAAOtd,QAAO,GAElD,CACA4d,gBAAAA,CAAiBK,GACb/jB,MAAM0jB,iBAAiBK,GACvB,MAAMqC,EAAcnmB,KAAKmmB,YACpBnmB,KAAK8oC,SACN3iB,IAAgBnmB,KAAKi5B,wBAAwBl2B,OAC7C/C,KAAKi5B,wBAAwBz0B,KAAK2hB,EAE1C,CACAkkB,wBAAAA,CAAyBvmB,GACrB/jB,MAAM0jB,iBAAiBK,GACvB,MAAMqC,EAAcnmB,KAAKmmB,YACrBrC,GACA9jB,KAAK4jB,sBACJ5jB,KAAK0jB,iBAAiBI,IACvB9jB,KAAK2jB,qBAEJ3jB,KAAK8oC,SACN3iB,IAAgBnmB,KAAKi5B,wBAAwBl2B,OAC7C/C,KAAKi5B,wBAAwBz0B,KAAK2hB,EAE1C,CACAujB,cAAAA,GACI,IAAI3nB,EAAK/hB,KAAKooC,YAAY97B,OAC1B,KAAOtM,KAAKiiB,QAAQ+B,IAAIjC,IACpBA,EAAK/hB,KAAKooC,YAAY97B,OAE1B,OAAOyV,CACX,CACAooB,WAAAA,CAAYtmC,GACHA,IACDA,EAAU,CAAC,GAEf,IAAIke,EAAKle,aAAyC,EAASA,EAAQke,GAKnE,GAJIA,GAAM/hB,KAAKiiB,QAAQ+B,IAAIngB,EAAQke,MAC/B9e,QAAQC,KAAM,gCAA+BW,aAAyC,EAASA,EAAQke,4CACvGA,OAAKthB,IAEJshB,EAED,IADAA,EAAK/hB,KAAKooC,YAAY97B,OACftM,KAAKiiB,QAAQ+B,IAAIjC,IACpBA,EAAK/hB,KAAKooC,YAAY97B,OAG9B,MAAMW,EAAO,IAAIywB,GAAmB19B,KAAM+hB,EAAIle,GAE9C,GADAoJ,EAAKgiB,KAAK,CAAE7B,OAAQ,CAAC,EAAGgD,SAAUpwB,QAC7BA,KAAKiiB,QAAQ+B,IAAI/W,EAAK8U,IAAK,CAC5B,MAAMrb,EAAa,IAAIX,EAAoBkH,EAAK+c,MAAMuL,gBAAgBvxB,IAClEhE,KAAKsoC,iBAAiB9jC,KAAKR,EAAM,IACjCiJ,EAAK+c,MAAMyL,kBAAkBzxB,IAC7BhE,KAAKuoC,iBAAiB/jC,KAAKR,EAAM,IACjCiJ,EAAK+c,MAAMyO,QAAQz0B,IACnB,MAAM,QAAEnE,EAAO,OAAE+7B,EAAM,OAAEpU,EAAM,MAAEpjB,GAAUJ,EAC3ChE,KAAKu9B,iBAAiB,CAClB13B,KAAM,CAAEhG,QAASA,EAASC,QAAS87B,GACnCnvB,GAAI,CACAqX,MAAO7W,EACPwK,SAAU+P,EACVpjB,UAEN,IACF6I,EAAK+c,MAAM/E,WAAWjhB,IACtBhE,KAAKmxB,WAAW3sB,KAAKR,EAAM,IAC3BiJ,EAAK+c,MAAMjE,YAAY/hB,IACvBhE,KAAK04B,YAAYl0B,KAAKR,EAAM,IAC5BiJ,EAAK+c,MAAMhE,mBAAmBhiB,IAC1BhE,KAAK6D,QAAQ0nB,WACbvnB,EAAM3B,iBAGVrC,KAAKwoB,mBAAmBhkB,KAAKR,EAAM,IACnCiJ,EAAK+c,MAAM9E,0BAA0BlhB,IACrChE,KAAKoxB,0BAA0B5sB,KAAKR,EAAM,IAC1CiJ,EAAK+c,MAAM5E,eAAephB,IACtBhE,KAAK8oC,SAGT9oC,KAAK24B,eAAen0B,KAAKR,EAAMmf,MAAM,IACrClW,EAAK+c,MAAM1E,kBAAkBthB,IACzBhE,KAAK8oC,SAGT9oC,KAAKg5B,kBAAkBx0B,KAAKR,EAAMmf,MAAM,IACxClW,EAAK+c,MAAMxE,wBAAwBxhB,IAC/BhE,KAAK8oC,SAGL9kC,EAAMmf,QAAUnjB,KAAKmmB,aAGrBnmB,KAAKi5B,wBAAwBl2B,QAAUiB,EAAMmf,OAC7CnjB,KAAKi5B,wBAAwBz0B,KAAKR,EAAMmf,MAC5C,IACAjiB,EAAME,IAAI6L,EAAK+c,MAAM6O,sBAAuB5rB,EAAK+c,MAAM+O,2BAAvD73B,EAAmF,KACnFlB,KAAK+iB,yBAAyBve,MAAM,KAExCxE,KAAKiiB,QAAQ5c,IAAI4H,EAAK8U,GAAI,CAAEhf,MAAOkK,EAAMvG,cAC7C,CAGA,OADAuG,EAAKggB,aACEhgB,CACX,CACA2/B,WAAAA,CAAY/oC,EAASigB,GACjB,IAAIlhB,EAAIgN,EAAI0T,EACZ,MAAMkc,EAAmB37B,EAAQ4gB,UAC3B8Z,EAA+C,QAA/B37B,EAAKiB,EAAQ06B,oBAAiC,IAAP37B,EAAgBA,EAAK5C,KAAK6D,QAAQ88B,oBACzF1zB,EAAO,IAAIkzB,GAAmBngC,KAAM6D,EAAQke,GAAIyd,EAAkBjB,GAClEpb,EAAQ,IAAIkc,GAAcx7B,EAAQke,GAAIyd,EAAkBjB,EAAcv+B,KAAMA,KAAKk5B,KAAMpV,EAAO7W,EAAM,CACtGwlB,SAAU5uB,EAAQ4uB,SAClBjZ,aAAc3V,EAAQ2V,aACtBE,cAAe7V,EAAQ6V,cACvBD,aAAc5V,EAAQ4V,aACtBE,cAAe9V,EAAQ8V,gBAM3B,OAJAwJ,EAAM8L,KAAK,CACP6B,MAAgC,QAAxBlhB,EAAK/L,EAAQitB,aAA0B,IAAPlhB,EAAgBA,EAAK/L,EAAQke,GACrEqL,OAAoF,QAA3E9J,EAAKzf,aAAyC,EAASA,EAAQupB,cAA2B,IAAP9J,EAAgBA,EAAK,CAAC,IAE/GH,CACX,CACAmoB,qBAAAA,CAAsB7uB,EAAUrX,GAC5B,MAAM0e,EAAQ9jB,KAAKmqC,cAEnB,OADAnqC,KAAK6jB,WAAWC,EAAOrH,EAAUrX,GAC1B0e,CACX,CACA4oB,SAAAA,CAAUvpB,GACN,IAAIvgB,EACJ,OAA4G,QAApGA,EAAKnB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UAAUsU,MAAM3S,GAAUA,EAAM/gB,MAAMinB,MAAMmQ,cAAchX,YAA4B,IAAPvgB,OAAgB,EAASA,EAAGG,KACpJ,CACAiqC,qBAAAA,CAAsBvwB,GAClB,MAAMD,EAAkBxc,KAAKoiB,SAAS1T,YACtC,OAAO+N,EAASlb,OAAS,GAAK,EACxBib,EACAZ,GAAWY,EACrB,EChkDG,MAAMkyB,WAA0B5sB,GACnC,eAAIpT,GACA,OAAO1O,KAAKoiB,SAAS1T,WACzB,CACA,eAAIA,CAAY3L,GACZ/C,KAAKoiB,SAAS1T,YAAc3L,CAChC,CACA,WAAIc,GACA,OAAO7D,KAAKkoC,QAChB,CACA,gBAAIhpB,GACA,OAAOlf,KAAKqoC,aAChB,CACA,gBAAInpB,CAAanc,GACb/C,KAAKqoC,cAAgBtlC,CACzB,CACApD,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,MAAMyN,EAAW,CACb8E,mBAA0D,QAArC1P,EAAKiB,EAAQyO,0BAAuC,IAAP1P,GAAgBA,EAClF8L,YAAa7K,EAAQ6K,YACrBkE,OAAQ/O,EAAQmd,YACV,CAAE7N,gBAAiB,oBACnB1S,EACN4X,oBAAqBxU,EAAQwU,oBAC7BxQ,UAAWhE,EAAQgE,YAEvB7H,KAAK2uC,qBAAuB,IAAIrrC,EAChCtD,KAAK2kB,oBAAsB3kB,KAAK2uC,qBAAqB3qC,MACrDhE,KAAK4oC,kBAAoB,IAAItlC,EAC7BtD,KAAKulB,iBAAmBvlB,KAAK4oC,kBAAkB5kC,MAC/ChE,KAAK6oC,eAAiB,IAAIvlC,EAC1BtD,KAAKqlB,cAAgBrlB,KAAK6oC,eAAe7kC,MACzChE,KAAK0+B,wBAA0B,IAAIp7B,EACnCtD,KAAKylB,uBAAyBzlB,KAAK0+B,wBAAwB16B,MAC3DhE,KAAKkoC,SAAWrkC,EAChB7D,KAAKoG,eAAepG,KAAK6oC,eAAgB7oC,KAAK4oC,kBAAmB5oC,KAAK0+B,wBAAyB1+B,KAAK0iB,UAAU1e,IAC1GhE,KAAK6oC,eAAerkC,KAAKR,EAAM,IAC/BhE,KAAKwiB,aAAaxe,IAClBhE,KAAK4oC,kBAAkBpkC,KAAKR,EAAM,IAClChE,KAAK8iB,mBAAmB9e,IACxBhE,KAAK0+B,wBAAwBl6B,KAAKR,EAAM,IAEhD,CACAqf,aAAAA,CAAcxf,GACV9D,MAAMsjB,cAAcxf,GACpB,MAAM+qC,EAAuD,iBAAxB/qC,EAAQ6K,aACzC1O,KAAKoiB,SAAS1T,cAAgB7K,EAAQ6K,YAC1C1O,KAAKkoC,SAAW5vB,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAK6D,SAAUA,GAC3D+qC,IACA5uC,KAAKoiB,SAAS1T,YAAc7K,EAAQ6K,aAExC1O,KAAKkW,OAAOlW,KAAKoiB,SAASrY,MAAO/J,KAAKoiB,SAASpY,QAAQ,EAC3D,CACA4a,WAAAA,CAAYzB,GACRnjB,KAAKokB,YAAYjB,EACrB,CAMAhG,MAAAA,GACI,IAAIva,EAEJ,MAAO,CACHipC,KAFS7rC,KAAKoiB,SAASzD,YAGvBwH,YAAyC,QAA3BvjB,EAAK5C,KAAKqiB,mBAAgC,IAAPzf,OAAgB,EAASA,EAAGmf,GAErF,CACAtU,UAAAA,CAAW0V,EAAOpW,GACd/M,KAAKoiB,SAAS7O,eAAewI,GAAgBoH,EAAMte,SAAUkI,EACjE,CACAoX,SAAAA,CAAUhB,GACNnjB,KAAKiiB,QAAQjgB,SAAQ,CAACe,EAAOrB,KACzBqB,EAAMA,MAAMohB,UAAUhB,IAAUpgB,EAAMA,MAAM,GAEpD,CACA8hB,KAAAA,GACI,IAAIjiB,EACwB,QAA3BA,EAAK5C,KAAKqiB,mBAAgC,IAAPzf,GAAyBA,EAAGiiB,OACpE,CACAvF,QAAAA,CAASuvB,GACL7uC,KAAK2D,QACL,MAAM,KAAEkoC,EAAI,YAAE1lB,GAAgB0oB,EAC9B,IACI,MAAMC,EAAQ,GAER/kC,EAAQ/J,KAAK+J,MACbC,EAAShK,KAAKgK,OA0BpB,GAzBAhK,KAAKoiB,SAASpD,YAAY6sB,EAAM,CAC5BvsB,SAAW7E,IACP,MAAM,KAAE/Z,GAAS+Z,EACXxN,EAAOjN,KAAK6D,QAAQ48B,gBAAgB,CACtC1e,GAAIrhB,EAAKqhB,GACT2e,KAAMhgC,EAAK+jB,YAef,OAbAqqB,EAAM3qC,MAAK,IAAM8I,EAAKgiB,KAAK,CACvB7B,OAAQ1sB,EAAK0sB,OACb5T,aAAc9Y,EAAK8Y,aACnBC,aAAc/Y,EAAK+Y,aACnBC,cAAehZ,EAAKgZ,cACpBC,cAAejZ,EAAKiZ,cACpBtM,SAAU3M,EAAK2M,SACfC,OAAQ5M,EAAK4M,KACb8iB,SAAUpwB,KACVojB,UAAW3I,EAAK1N,YAEpB/M,KAAK6oC,eAAerkC,KAAKyI,GACzBjN,KAAK+uC,cAAc9hC,GACZA,CAAI,IAGnBjN,KAAKkW,OAAOnM,EAAOC,GAAQ,GAC3B8kC,EAAM9sC,SAASgtC,GAAMA,MACM,iBAAhB7oB,EAA0B,CACjC,MAAMhD,EAAQnjB,KAAKkkB,SAASiC,GACxBhD,GACAnjB,KAAKyjB,iBAAiBN,EAE9B,CACJ,CACA,MAAOskB,GAKH,IAAK,MAAM3jB,KAAS9jB,KAAKkiB,OACrB4B,EAAM/hB,UACN/B,KAAKiiB,QAAQtd,OAAOmf,EAAM/B,IAC1B/hB,KAAK4oC,kBAAkBpkC,KAAKsf,GAShC,MANA9jB,KAAK2D,QAMC8jC,CACV,CACAznC,KAAK2uC,qBAAqBnqC,MAC9B,CACAb,KAAAA,GACI,MAAM0oC,EAAiBrsC,KAAKqiB,YACtBH,EAASzgB,MAAMoE,KAAK7F,KAAKiiB,QAAQE,UACvC,IAAK,MAAM2B,KAAS5B,EAChB4B,EAAMpd,WAAW3E,UACjB/B,KAAK+jB,cAAcD,EAAM/gB,MAAO,CAAEkhB,YAAY,IAE9CooB,GACArsC,KAAKyjB,sBAAiBhjB,GAE1BT,KAAKoiB,SAASze,OAClB,CACAohB,SAAAA,CAAU5B,EAAOtf,GACb,IAAIjB,EACJ,IAAImqC,EACJ,MAAMhF,EAAe/nC,KAAKoiB,SAAS1a,OAAOyb,GACpC2mB,EAAgE,QAA9ClnC,EAAK5C,KAAKiiB,QAAQrX,IAAI/G,EAAQorC,kBAA+B,IAAPrsC,OAAgB,EAASA,EAAGG,MAC1G,IAAK+mC,EACD,MAAM,IAAIjnC,MAAO,mBAAkBgB,EAAQorC,4BAE/C,MAAMznB,EAAS3F,GAAShe,EAAQ6Y,WAChC,GAAe,WAAX8K,EACA,MAAM,IAAI3kB,MAAO,GAAE2kB,gCAElB,CACD,MAAM/K,EAAWV,GAAgB+tB,EAAejlC,SAChDkoC,EAAmBxwB,GAAoBvc,KAAKoiB,SAAS1T,YAAa+N,EAAU+K,EAChF,CACAxnB,KAAK6jB,WAAWkkB,EAAcgF,EAAkBlpC,EAAQuB,KAC5D,CACA0f,QAAAA,CAASjhB,GACL,IAAIjB,EAAIgN,EAAI0T,EAAIC,EAChB,IAAIwpB,EAA+C,QAA3BnqC,EAAKiB,EAAQ4Y,gBAA6B,IAAP7Z,EAAgBA,EAAK,CAAC,GACjF,GAAgC,QAA3BgN,EAAK/L,EAAQ4T,gBAA6B,IAAP7H,OAAgB,EAASA,EAAG68B,eAAgB,CAChF,MAAM3C,EAA8E,QAA5DxmB,EAAKtjB,KAAKiiB,QAAQrX,IAAI/G,EAAQ4T,SAASg1B,uBAAoC,IAAPnpB,OAAgB,EAASA,EAAGvgB,MACxH,IAAK+mC,EACD,MAAM,IAAIjnC,MAAO,mBAAkBgB,EAAQ4T,SAASg1B,iCAExD,MAAMjlB,EAAS3F,GAAShe,EAAQ4T,SAASiF,WACzC,GAAe,WAAX8K,EACA,MAAM,IAAI3kB,MAAO,GAAE2kB,gCAElB,CACD,MAAM/K,EAAWV,GAAgB+tB,EAAejlC,SAChDkoC,EAAmBxwB,GAAoBvc,KAAKoiB,SAAS1T,YAAa+N,EAAU+K,EAChF,CACJ,CACA,MAAMva,EAAOjN,KAAK6D,QAAQ48B,gBAAgB,CACtC1e,GAAIle,EAAQke,GACZ2e,KAAM78B,EAAQ4gB,YAgBlB,OAdAxX,EAAKgiB,KAAK,CACN7B,OAAkC,QAAzB7J,EAAK1f,EAAQupB,cAA2B,IAAP7J,EAAgBA,EAAK,CAAC,EAChE/J,aAAc3V,EAAQ2V,aACtBC,aAAc5V,EAAQ4V,aACtBC,cAAe7V,EAAQ6V,cACvBC,cAAe9V,EAAQ8V,cACvBtM,SAAUxJ,EAAQwJ,SAClBC,OAAQzJ,EAAQyJ,KAChB8iB,SAAUpwB,KACVojB,WAAW,IAEfpjB,KAAK+uC,cAAc9hC,GACnBjN,KAAK6jB,WAAW5W,EAAM8/B,EAAkBlpC,EAAQuB,MAChDpF,KAAKyjB,iBAAiBxW,GACfA,CACX,CACA8hC,aAAAA,CAAc5rB,GACV,MAAMzc,EAAa,IAAIX,EAAoBod,EAAMwL,IAAIpC,kBAAkBvoB,IAC9DA,EAAM2nB,WAGX3rB,KAAKiiB,QAAQjgB,SAASktC,IAClB,MAAMprB,EAAQorB,EAAUnsC,MACpB+gB,IAAUX,EACVW,EAAMK,WAAU,GAGhBL,EAAMK,WAAU,EACpB,GACF,KAENnkB,KAAKiiB,QAAQ5c,IAAI8d,EAAMpB,GAAI,CACvBhf,MAAOogB,EACPzc,cAER,CACA6nC,SAAAA,CAAUzE,EAAgBjqC,EAAS2nB,GAC/B,MAAMsmB,EAAc9tC,KAAKkkB,SAASrkB,GAClC,IAAKiuC,EACD,MAAM,IAAIjrC,MAAM,qBAEpB,MAAMknC,EAAoBhuB,GAAgB+tB,EAAejlC,SACnDkpC,EAAiBxxB,GAAoBvc,KAAKoiB,SAAS1T,YAAaq7B,EAAmBviB,IAClFwmB,EAAsBvhC,GAAMpB,EAAK0iC,GAClCE,EAAiBlyB,GAAgB+xB,EAAYjpC,UAC5CqpC,EAAsBroC,GAAQwF,EAAK4iC,GAC1C,GAAI1iC,EAAe2iC,EAAsBF,GAKrC,YADAhuC,KAAKoiB,SAASnM,SAASi4B,EAAsBroC,EAAM4G,GAIvD,MAAM2hC,EAAcpuC,KAAK+jB,cAAc+pB,EAAa,CAChD7pB,YAAY,EACZ7K,aAAa,IAGXi1B,EAA2BtyB,GAAgB+tB,EAAejlC,SAC1D4X,EAAWF,GAAoBvc,KAAKoiB,SAAS1T,YAAa2/B,EAA0B7mB,GAC1FxnB,KAAK6jB,WAAWuqB,EAAa3xB,EACjC,CACA2H,WAAAA,CAAYN,GACR/jB,MAAMqkB,YAAYN,EACtB,CACA/hB,OAAAA,GACIhC,MAAMgC,UACN/B,KAAK2uC,qBAAqB5sC,SAC9B,ECpQG,MAAMotC,WAA2BluB,GACpC,UAAIyD,GACA,OAAO1kB,KAAKyY,UAAUvE,UAC1B,CACA,WAAIrQ,GACA,OAAO7D,KAAKkoC,QAChB,CACA,UAAI3mC,GACA,OAAOvB,KAAK23B,QAAQvyB,IACxB,CACA,eAAIsJ,GACA,OAAO1O,KAAKyY,UAAU/J,WAC1B,CACA,aAAI+J,GACA,OAAOzY,KAAKovC,UAChB,CACA,aAAI32B,CAAU1V,GACV/C,KAAKovC,WAAarsC,EAClB/C,KAAKqvC,2BAA2BtsC,MAAQ,IAAIgD,EAAoB/F,KAAKovC,WAAWp/B,cAAa,KACzFhQ,KAAKsvC,mBAAmB9qC,UAAK/D,EAAU,IACvCT,KAAKovC,WAAWl/B,cAAczL,GAAMzE,KAAKiQ,cAAczL,KAAKC,KAAKzE,KAAKovC,WAAWh/B,iBAAiB3L,GAAMzE,KAAKmQ,iBAAiB3L,KAAKC,KAC3I,CACA,eAAIuI,GACA,OAAOhN,KAAKyY,UAAUzL,WAC1B,CACA,eAAIG,GACA,OAAOnN,KAAKyY,UAAUtL,WAC1B,CACA,UAAInD,GACA,OAAOhK,KAAKyY,UAAU/J,cAAgBf,EAAYkB,WAC5C7O,KAAKyY,UAAUpK,eACfrO,KAAKyY,UAAUrT,IACzB,CACA,SAAI2E,GACA,OAAO/J,KAAKyY,UAAU/J,cAAgBf,EAAYkB,WAC5C7O,KAAKyY,UAAUrT,KACfpF,KAAKyY,UAAUpK,cACzB,CACA1O,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,MAAMyI,SAAS6L,cAAc,OAAQxQ,EAAQwU,qBAC7CrY,KAAKqvC,2BAA6B,IAAI7oC,EACtCxG,KAAK23B,QAAU,IAAIxyB,IACnBnF,KAAK2uC,qBAAuB,IAAIrrC,EAChCtD,KAAK2kB,oBAAsB3kB,KAAK2uC,qBAAqB3qC,MACrDhE,KAAKiQ,cAAgB,IAAI3M,EACzBtD,KAAKkQ,aAAelQ,KAAKiQ,cAAcjM,MACvChE,KAAKmQ,iBAAmB,IAAI7M,EAC5BtD,KAAKoQ,gBAAkBpQ,KAAKmQ,iBAAiBnM,MAC7ChE,KAAKsvC,mBAAqB,IAAIhsC,EAC9BtD,KAAKgjB,kBAAoBhjB,KAAKsvC,mBAAmBtrC,MACjDhE,KAAK6E,QAAQ4F,MAAMT,OAAS,OAC5BhK,KAAK6E,QAAQ4F,MAAMV,MAAQ,OAC3B/J,KAAK8K,YAAc,IAAID,EAAW7K,KAAK6E,SACvC7E,KAAK8K,YAAYC,cAA2C,QAA5BnI,EAAKiB,EAAQgE,iBAA8B,IAAPjF,EAAgBA,EAAK,IAEzF4K,EAAUmF,YAAY3S,KAAK6E,SAC3B7E,KAAKkoC,SAAWrkC,EAChB7D,KAAKyY,UAAY,IAAIvK,EAAUlO,KAAK6E,QAAShB,GAC7C7D,KAAKoG,eAAepG,KAAKiQ,cAAejQ,KAAK2uC,qBAAsB3uC,KAAKmQ,iBAAkBnQ,KAAKsvC,mBACnG,CACAjsB,aAAAA,CAAcxf,GACV,IAAIjB,EAAIgN,EACJ,cAAe/L,GACf7D,KAAK8K,YAAYC,cAA2C,QAA5BnI,EAAKiB,EAAQgE,iBAA8B,IAAPjF,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrB7D,KAAKmhB,gBAAyD,QAAtCvR,EAAK/L,EAAQwU,2BAAwC,IAAPzI,GAAgBA,GAEvD,iBAAxB/L,EAAQ6K,cACf1O,KAAKyY,UAAU/J,YAAc7K,EAAQ6K,aAEzC1O,KAAKkoC,SAAW5vB,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAK6D,SAAUA,GAC/D7D,KAAKyY,UAAUvC,OAAOlW,KAAKyY,UAAUrT,KAAMpF,KAAKyY,UAAUpK,eAC9D,CACAwW,KAAAA,GACI,IAAIjiB,EACyB,QAA5BA,EAAK5C,KAAK03B,oBAAiC,IAAP90B,GAAyBA,EAAGiiB,OACrE,CACAE,SAAAA,CAAUlf,EAAM4G,GACZzM,KAAKyY,UAAUxC,SAASpQ,EAAM4G,EAClC,CACAgB,UAAAA,CAAW0V,EAAOpW,GACd,MAAM3I,EAAQpE,KAAK0kB,OAAOrgB,QAAQ8e,GAClCnjB,KAAKyY,UAAUlF,eAAenP,EAAO2I,EACzC,CACAoX,SAAAA,CAAUhB,EAAOosB,GACbvvC,KAAK03B,aAAevU,EACpBnjB,KAAK0kB,OACAxZ,QAAQC,GAAMA,IAAMgY,IACpBnhB,SAASmJ,IACVA,EAAEwjB,IAAI9L,mBAAmBre,KAAK,CAAEqnB,UAAU,IACrC0jB,GACDpkC,EAAE0Z,OACN,IAEJ1B,EAAMwL,IAAI9L,mBAAmBre,KAAK,CAAEqnB,UAAU,IACzC0jB,GACDpsB,EAAM0B,OAEd,CACAD,WAAAA,CAAYzB,EAAOnQ,GACf,MAAMhE,EAAOhP,KAAK23B,QAAQ/sB,IAAIuY,EAAMpB,IACpC,IAAK/S,EACD,MAAM,IAAInM,MAAO,2BAA0BsgB,EAAMpB,MAErD/S,EAAKjN,UACL/B,KAAK23B,QAAQhzB,OAAOwe,EAAMpB,IAC1B,MAAM3d,EAAQpE,KAAK0kB,OAAO3Y,WAAWwF,GAAMA,IAAM4R,IAC7BnjB,KAAKyY,UAAU1C,WAAW3R,EAAO4O,GACzCjR,UACZ,MAAM2iB,EAAS1kB,KAAK0kB,OAChBA,EAAOnjB,OAAS,GAChBvB,KAAKmkB,UAAUO,EAAOA,EAAOnjB,OAAS,GAE9C,CACA2iB,QAAAA,CAASnC,GACL,OAAO/hB,KAAK0kB,OAAO+R,MAAMxpB,GAASA,EAAK8U,KAAOA,GAClD,CACA+C,QAAAA,CAASjhB,GACL,IAAIjB,EACJ,GAAI5C,KAAK23B,QAAQ3T,IAAIngB,EAAQke,IACzB,MAAM,IAAIlf,MAAO,SAAQgB,EAAQke,qBAErC,MAAM9U,EAAOjN,KAAK6D,QAAQ48B,gBAAgB,CACtC1e,GAAIle,EAAQke,GACZ2e,KAAM78B,EAAQ4gB,YAElBxX,EAAKyB,YAAc1O,KAAKyY,UAAU/J,YAClCzB,EAAKgiB,KAAK,CACN7B,OAAkC,QAAzBxqB,EAAKiB,EAAQupB,cAA2B,IAAPxqB,EAAgBA,EAAK,CAAC,EAChEoK,YAAanJ,EAAQmJ,YACrBG,YAAatJ,EAAQsJ,YACrBG,KAAMzJ,EAAQyJ,KACdD,SAAUxJ,EAAQwJ,SAClB+iB,SAAUpwB,OAEd,MAAMoF,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAO0I,EAAOC,WAChE3J,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQ3D,EAIlE,OAHAT,KAAKyY,UAAUxF,QAAQhG,EAAM7H,EAAMhB,GACnCpE,KAAKwvC,UAAUviC,GACfjN,KAAKmkB,UAAUlX,GACRA,CACX,CACAiJ,MAAAA,CAAOnM,EAAOC,GACV,MAAO5E,EAAMiJ,GAAkBrO,KAAKyY,UAAU/J,cAAgBf,EAAYkB,WACpE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACf/J,KAAKyY,UAAUvC,OAAO9Q,EAAMiJ,EAChC,CACAmhC,SAAAA,CAAUviC,GACN,MAAMvG,EAAauG,EAAK0hB,IAAIpC,kBAAkBvoB,IACrCA,EAAM2nB,WAGX3rB,KAAKmkB,UAAUlX,GAAM,EAAK,IAE9BjN,KAAK23B,QAAQtyB,IAAI4H,EAAK8U,GAAIrb,EAC9B,CACAyW,MAAAA,GACI,IAAIva,EAYJ,MAAO,CACHkQ,MAZU9S,KAAKyY,UACdvE,WACArS,KAAI,CAACoL,EAAMvB,KAEL,CACHtG,KAFSpF,KAAKyY,UAAU9E,YAAYjI,GAGpChL,KAAMuM,EAAKkQ,SACX7P,OAAQL,EAAKK,KACbD,SAAUJ,EAAKI,aAKnB2sB,WAAyC,QAA5Bp3B,EAAK5C,KAAK03B,oBAAiC,IAAP90B,OAAgB,EAASA,EAAGmf,GAC7E3c,KAAMpF,KAAKyY,UAAUrT,KACrBsJ,YAAa1O,KAAKyY,UAAU/J,YAEpC,CACA4Q,QAAAA,CAASmwB,GACLzvC,KAAK2D,QACL,MAAM,MAAEmP,EAAK,YAAEpE,EAAW,KAAEtJ,EAAI,WAAE40B,GAAeyV,EAC3CX,EAAQ,GAER/kC,EAAQ/J,KAAK+J,MACbC,EAAShK,KAAKgK,OAsCpB,GArCAhK,KAAKyY,UAAY,IAAIvK,EAAUlO,KAAK6E,QAAS,CACzC6J,cACA4D,mBAAoBtS,KAAK6D,QAAQyO,mBACjCO,WAAY,CACRzN,OACA0N,MAAOA,EAAMjR,KAAKoL,IACd,MAAMvM,EAAOuM,EAAKvM,KAClB,GAAIV,KAAK23B,QAAQ3T,IAAItjB,EAAKqhB,IACtB,MAAM,IAAIlf,MAAO,SAAQnC,EAAKqhB,qBAElC,MAAMoB,EAAQnjB,KAAK6D,QAAQ48B,gBAAgB,CACvC1e,GAAIrhB,EAAKqhB,GACT2e,KAAMhgC,EAAK+jB,YAmBf,OAjBAqqB,EAAM3qC,MAAK,KACP,IAAIvB,EACJugB,EAAM8L,KAAK,CACP7B,OAA+B,QAAtBxqB,EAAKlC,EAAK0sB,cAA2B,IAAPxqB,EAAgBA,EAAK,CAAC,EAC7DoK,YAAatM,EAAKsM,YAClBG,YAAazM,EAAKyM,YAClBG,KAAML,EAAKK,KACXD,SAAUJ,EAAKI,SACf+iB,SAAUpwB,MACZ,IAENmjB,EAAMzU,YAAcA,EACpB1O,KAAKwvC,UAAUrsB,GACf9Z,YAAW,KAEPrJ,KAAKiQ,cAAczL,KAAK2e,EAAM,GAC/B,GACI,CAAE/d,KAAM6H,EAAK7H,KAAM6H,KAAMkW,EAAO,OAInDnjB,KAAKkW,OAAOnM,EAAOC,GACnB8kC,EAAM9sC,SAASgtC,GAAMA,MACK,iBAAfhV,EAAyB,CAChC,MAAM7W,EAAQnjB,KAAKkkB,SAAS8V,GACxB7W,GACAnjB,KAAKmkB,UAAUhB,EAEvB,CACAnjB,KAAK2uC,qBAAqBnqC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAM+C,KAAc1G,KAAK23B,QAAQxV,SAClCzb,EAAW3E,UAGf,IADA/B,KAAK23B,QAAQh0B,QACN3D,KAAKyY,UAAUlX,OAAS,GAAG,CACjBvB,KAAKyY,UAAU1C,WAAW,EAAGjI,EAAOC,YAAY,GACxDhM,SACT,CACJ,CACAA,OAAAA,GACI,IAAK,MAAM2E,KAAc1G,KAAK23B,QAAQxV,SAClCzb,EAAW3E,UAEf/B,KAAK23B,QAAQh0B,QACb,MAAMmP,EAAQ9S,KAAKyY,UAAUvE,WAC7BlU,KAAKqvC,2BAA2BttC,UAChC/B,KAAKyY,UAAU1W,UACf,IAAK,MAAMkL,KAAQ6F,EACf7F,EAAKlL,UAEThC,MAAMgC,SACV,ECjQG,MAAM2tC,WAAsB3pC,EAC/B,WAAIlB,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,GACII,QACAC,KAAK2vC,cdS+BjQ,GAAyB,CACjE31B,MAAO,KACPC,OAAQ,KACR81B,QAAS,YACTjgB,KAAM,oEcZF7f,KAAK4vC,edciClQ,GAAyB,CACnE31B,MAAO,KACPC,OAAQ,KACR81B,QAAS,YACTjgB,KAAM,qEcjBF7f,KAAK0G,WAAa,IAAIF,EACtBxG,KAAK6vC,OAAS,CACVlhB,IAAK,MAET3uB,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAK6E,QAAQgD,UAAY,oBACzB7H,KAAKggC,SAAWx3B,SAAS6L,cAAc,QACvCrU,KAAK8vC,UAAYtnC,SAAS6L,cAAc,OACxCrU,KAAK8vC,UAAUjoC,UAAY,sBAC3B7H,KAAK6E,QAAQ8N,YAAY3S,KAAK8vC,WAC9B9vC,KAAK6E,QAAQ8N,YAAY3S,KAAKggC,UAC9BhgC,KAAKoG,eAAenB,EAAsBjF,KAAKkhB,SAAU,SAAS,KAC9D,IAAIte,EACuB,QAA1BA,EAAK5C,KAAK6vC,OAAOlhB,WAAwB,IAAP/rB,GAAyBA,EAAG2rB,aAAavuB,KAAK6vC,OAAOlhB,IAAIH,WAAW,IAE/G,CACAS,IAAAA,CAAK7B,GACDptB,KAAK6vC,OAAOlhB,IAAMvB,EAAOuB,IACzB3uB,KAAKggC,SAAS9L,YAAc9G,EAAO0D,MACnC9wB,KAAK+vC,aACL/vC,KAAK0G,WAAW3D,MAAQqqB,EAAOuB,IAAIT,sBAAqB,KACpDluB,KAAK+vC,YAAY,GAEzB,CACAA,UAAAA,GACI,IAAIntC,EACJ,MAAM4rB,KAA2C,QAA1B5rB,EAAK5C,KAAK6vC,OAAOlhB,WAAwB,IAAP/rB,OAAgB,EAASA,EAAG4rB,YACrF5mB,EAAY5H,KAAK8vC,UAAW,aAActhB,GACtCA,GACIxuB,KAAK8vC,UAAUroC,SAASzH,KAAK4vC,iBAC7B5vC,KAAK4vC,eAAeloC,SAEnB1H,KAAK8vC,UAAUroC,SAASzH,KAAK2vC,gBAC9B3vC,KAAK8vC,UAAUn9B,YAAY3S,KAAK2vC,iBAIhC3vC,KAAK8vC,UAAUroC,SAASzH,KAAK2vC,gBAC7B3vC,KAAK2vC,cAAcjoC,SAElB1H,KAAK8vC,UAAUroC,SAASzH,KAAK4vC,iBAC9B5vC,KAAK8vC,UAAUn9B,YAAY3S,KAAK4vC,gBAG5C,CACAziB,MAAAA,CAAOuB,GACH,CAEJ3sB,OAAAA,GACI/B,KAAK0G,WAAW3E,UAChBhC,MAAMgC,SACV,ECrDJ,MAAM6f,GAAevV,IACd,MAAM2jC,WAAsB9e,GAC/BvxB,WAAAA,CAAYkE,GACR9D,MAAM8D,EAAQusB,SAAUvsB,EAAQke,GAAIle,EAAQ4gB,UAAW5gB,EAAQksB,gBAAiBlsB,EAAQ6K,YAAa7K,EAAQ2qB,WAAY3qB,EAAQ0nB,YACjIvrB,KAAK6D,QAAUA,CACnB,CACA8sB,gBAAAA,GACI,OAAO3wB,KAAK6D,QAAQ4sB,IACxB,CACAI,kBAAAA,GACI,OAAO7wB,KAAK6D,QAAQgsB,MACxB,EAEG,MAAMogB,WAA0BhvB,GACnC,MAAIc,GACA,OAAO/hB,KAAKgiB,GAChB,CACA,UAAI0C,GACA,OAAO1kB,KAAKkwC,SAASr3B,UACzB,CACA,YAAIq3B,CAASntC,GACT/C,KAAKmwC,UAAYptC,EACjB/C,KAAKyG,YAAY1D,MAAQ,IAAIgD,EAAoB/F,KAAKmwC,UAAUh8B,aAAY,KACxEnU,KAAKsvC,mBAAmB9qC,UAAK/D,EAAU,IACvCT,KAAKmwC,UAAUjgC,cAAczL,GAAMzE,KAAKiQ,cAAczL,KAAKC,KAAKzE,KAAKmwC,UAAU//B,iBAAiB3L,GAAMzE,KAAKmQ,iBAAiB3L,KAAKC,KACzI,CACA,YAAIyrC,GACA,OAAOlwC,KAAKmwC,SAChB,CACA,eAAInjC,GACA,OAAOhN,KAAKkwC,SAASljC,WACzB,CACA,eAAIG,GACA,OAAOnN,KAAKkwC,SAAS/iC,WACzB,CACA,UAAInD,GACA,OAAOhK,KAAKkwC,SAASxhC,cAAgBf,EAAYkB,WAC3C7O,KAAKkwC,SAAS7hC,eACdrO,KAAKkwC,SAAS9qC,IACxB,CACA,SAAI2E,GACA,OAAO/J,KAAKkwC,SAASxhC,cAAgBf,EAAYkB,WAC3C7O,KAAKkwC,SAAS9qC,KACdpF,KAAKkwC,SAAS7hC,cACxB,CACA,WAAIxK,GACA,OAAO7D,KAAKkoC,QAChB,CACAvoC,WAAAA,CAAY6N,EAAW3J,GACnB,IAAIjB,EACJ7C,MAAMyI,SAAS6L,cAAc,OAAQxQ,EAAQwU,qBAC7CrY,KAAKgiB,IAAMJ,GAAatV,OACxBtM,KAAKyG,YAAc,IAAID,EACvBxG,KAAKowC,iBAAmB,IAAIjrC,IAC5BnF,KAAK2uC,qBAAuB,IAAIrrC,EAChCtD,KAAK2kB,oBAAsB3kB,KAAK2uC,qBAAqB3qC,MACrDhE,KAAKsvC,mBAAqB,IAAIhsC,EAC9BtD,KAAKgjB,kBAAoBhjB,KAAKsvC,mBAAmBtrC,MACjDhE,KAAKmxB,WAAa,IAAI7tB,EACtBtD,KAAKilB,UAAYjlB,KAAKmxB,WAAWntB,MACjChE,KAAKiQ,cAAgB,IAAI3M,EACzBtD,KAAKkQ,aAAelQ,KAAKiQ,cAAcjM,MACvChE,KAAKmQ,iBAAmB,IAAI7M,EAC5BtD,KAAKoQ,gBAAkBpQ,KAAKmQ,iBAAiBnM,MAC7ChE,KAAKoxB,0BAA4B,IAAI9tB,EACrCtD,KAAKklB,yBAA2BllB,KAAKoxB,0BAA0BptB,MAC/DhE,KAAK6E,QAAQ4F,MAAMT,OAAS,OAC5BhK,KAAK6E,QAAQ4F,MAAMV,MAAQ,OAC3B/J,KAAKoG,eAAepG,KAAKsvC,mBAAoBtvC,KAAK2uC,qBAAsB3uC,KAAKmxB,WAAYnxB,KAAKiQ,cAAejQ,KAAKmQ,iBAAkBnQ,KAAKoxB,2BACzIpxB,KAAK8K,YAAc,IAAID,EAAW7K,KAAK6E,SACvC7E,KAAK8K,YAAYC,cAA2C,QAA5BnI,EAAKiB,EAAQgE,iBAA8B,IAAPjF,EAAgBA,EAAK,IAEzF4K,EAAUmF,YAAY3S,KAAK6E,SAC3B7E,KAAKkoC,SAAWrkC,EAChB7D,KAAKkwC,SAAW,IAAI13B,EAASxY,KAAK6E,QAAS,CAEvC6J,YAAaf,EAAYyE,WAE7BpS,KAAKoG,eAAepG,KAAKyG,YAC7B,CACAgH,UAAAA,CAAW0V,EAAOpW,GACd,MAAM3I,EAAQpE,KAAK0kB,OAAOrgB,QAAQ8e,GAClCnjB,KAAKkwC,SAAS38B,eAAenP,EAAO2I,EACxC,CACA8X,KAAAA,GACI,CAEJxB,aAAAA,CAAcxf,GACV,IAAIjB,EAAIgN,EACJ,cAAe/L,GACf7D,KAAK8K,YAAYC,cAA2C,QAA5BnI,EAAKiB,EAAQgE,iBAA8B,IAAPjF,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrB7D,KAAKmhB,gBAAyD,QAAtCvR,EAAK/L,EAAQwU,2BAAwC,IAAPzI,GAAgBA,GAE1F5P,KAAKkoC,SAAW5vB,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAK6D,SAAUA,EACnE,CACAihB,QAAAA,CAASjhB,GACL,IAAIjB,EACJ,MAAM6tB,EAAOzwB,KAAK6D,QAAQ48B,gBAAgB,CACtC1e,GAAIle,EAAQke,GACZ2e,KAAM78B,EAAQ4gB,YAElB,IAAIoL,EACAhsB,EAAQksB,iBAAmB/vB,KAAK6D,QAAQwsC,wBACxCxgB,EAAS7vB,KAAK6D,QAAQwsC,sBAAsB,CACxCtuB,GAAIle,EAAQke,GACZ2e,KAAM78B,EAAQksB,mBAGjBF,IACDA,EAAS,IAAI6f,IAEjB,MAAMziC,EAAO,IAAI+iC,GAAc,CAC3BjuB,GAAIle,EAAQke,GACZ0C,UAAW5gB,EAAQ4gB,UACnBsL,gBAAiBlsB,EAAQksB,gBACzBF,SACAY,OACA/hB,YAAaf,EAAYyE,SACzBoc,aAAc3qB,EAAQ2qB,WACtBjD,aAAcvrB,KAAK6D,QAAQ0nB,WAC3B6E,SAAUpwB,OAEdA,KAAKw5B,WAAWvsB,GAChB,MAAM7H,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAO0I,EAAOC,WAChE3J,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQ3D,EAYlE,OAXAwM,EAAKgiB,KAAK,CACN7B,OAAkC,QAAzBxqB,EAAKiB,EAAQupB,cAA2B,IAAPxqB,EAAgBA,EAAK,CAAC,EAChE6sB,gBAAiB5rB,EAAQ4rB,gBACzBC,gBAAiB7rB,EAAQ6rB,gBACzBlB,WAAY3qB,EAAQ2qB,WACpBsC,MAAOjtB,EAAQitB,MACfY,aAAc,IAAI1M,GAAYhlB,MAC9BowB,SAAUpwB,OAEdA,KAAKkwC,SAASh3B,QAAQjM,EAAM7H,EAAMhB,GAClC6I,EAAKyB,YAAc1O,KAAKkwC,SAASxhC,YAC1BzB,CACX,CACA2X,WAAAA,CAAYzB,GACR,MACM/e,EADQpE,KAAK0kB,OACC3Y,WAAWwF,GAAMA,IAAM4R,IAC3CnjB,KAAKkwC,SAAS/2B,WAAW/U,GACzBpE,KAAKk7B,cAAc/X,EACvB,CACA4B,SAAAA,CAAUlf,EAAM4G,GACZzM,KAAKkwC,SAASj6B,SAASpQ,EAAM4G,EACjC,CACAyX,QAAAA,CAASnC,GACL,OAAO/hB,KAAK0kB,OAAO+R,MAAMxpB,GAASA,EAAK8U,KAAOA,GAClD,CACA7L,MAAAA,CAAOnM,EAAOC,GACV,MAAO5E,EAAMiJ,GAAkBrO,KAAKkwC,SAASxhC,cAAgBf,EAAYkB,WACnE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACf/J,KAAKkwC,SAASh6B,OAAO9Q,EAAMiJ,EAC/B,CACA8O,MAAAA,GACI,MAAM4f,EAAWh6B,GAAUA,IAAUkM,OAAO6tB,kBACxC/5B,IAAUkM,OAAOC,uBACfzO,EACAsC,EAcN,MAAO,CACH+P,MAbU9S,KAAKkwC,SACdr3B,WACAhX,KAAI,CAACoL,EAAMvB,KAEZ,MAAO,CACHtG,KAFSpF,KAAKkwC,SAASv8B,YAAYjI,GAGnChL,KAAMuM,EAAKkQ,SACXnQ,aARSjK,EAQYkK,EAAKwiB,gBARN1sB,GAAS,OAAItC,EAAYsC,GAS7CoK,YAAa4vB,EAAQ9vB,EAAKyiB,iBAC1Bc,SAAUvjB,EAAKuhB,cAVNzrB,KAWZ,IAIDqC,KAAMpF,KAAKkwC,SAAS9qC,KAE5B,CACAka,QAAAA,CAASgxB,GACLtwC,KAAK2D,QACL,MAAM,MAAEmP,EAAK,KAAE1N,GAASkrC,EAClBxB,EAAQ,GAER/kC,EAAQ/J,KAAK+J,MACbC,EAAShK,KAAKgK,OACpBhK,KAAKkwC,SAAW,IAAI13B,EAASxY,KAAK6E,QAAS,CACvC6J,YAAaf,EAAYyE,SACzBS,WAAY,CACRzN,OACA0N,MAAOA,EAAMjR,KAAKoL,IACd,MAAMvM,EAAOuM,EAAKvM,KACZ+vB,EAAOzwB,KAAK6D,QAAQ48B,gBAAgB,CACtC1e,GAAIrhB,EAAKqhB,GACT2e,KAAMhgC,EAAK+jB,YAEf,IAAIoL,EACAnvB,EAAKqvB,iBACL/vB,KAAK6D,QAAQwsC,wBACbxgB,EAAS7vB,KAAK6D,QAAQwsC,sBAAsB,CACxCtuB,GAAIrhB,EAAKqhB,GACT2e,KAAMhgC,EAAKqvB,mBAGdF,IACDA,EAAS,IAAI6f,IAEjB,MAAMvsB,EAAQ,IAAI6sB,GAAc,CAC5BjuB,GAAIrhB,EAAKqhB,GACT0C,UAAW/jB,EAAK+jB,UAChBsL,gBAAiBrvB,EAAKqvB,gBACtBF,SACAY,OACA/hB,YAAaf,EAAYyE,SACzBoc,aAAcvhB,EAAKujB,SACnBjF,aAAcvrB,KAAK6D,QAAQ0nB,WAC3B6E,SAAUpwB,OAoBd,OAlBAA,KAAKw5B,WAAWrW,GAChB2rB,EAAM3qC,MAAK,KACP,IAAIvB,EACJugB,EAAM8L,KAAK,CACP7B,OAA+B,QAAtBxqB,EAAKlC,EAAK0sB,cAA2B,IAAPxqB,EAAgBA,EAAK,CAAC,EAC7D6sB,gBAAiBxiB,EAAKD,YACtB0iB,gBAAiBziB,EAAKE,YACtB2jB,MAAOpwB,EAAKowB,MACZtC,aAAcvhB,EAAKujB,SACnBkB,aAAc,IAAI1M,GAAYhlB,MAC9BowB,SAAUpwB,OAEdmjB,EAAMzU,YAAc1O,KAAKkwC,SAASxhC,WAAW,IAEjDrF,YAAW,KAEPrJ,KAAKiQ,cAAczL,KAAK2e,EAAM,GAC/B,GACI,CAAE/d,KAAM6H,EAAK7H,KAAM6H,KAAMkW,EAAO,OAInDnjB,KAAKkW,OAAOnM,EAAOC,GACnB8kC,EAAM9sC,SAASgtC,GAAMA,MACrBhvC,KAAK2uC,qBAAqBnqC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAO4N,EAAGxO,KAAU/C,KAAKowC,iBAAiB5J,UAC3CzjC,EAAMhB,UAEV/B,KAAKowC,iBAAiBzsC,QACtB3D,KAAKkwC,SAASnuC,SAClB,CACAy3B,UAAAA,CAAWrW,GACP,MAAMzc,EAAa,IAAIX,EAAoBod,EAAM8B,WAAWjhB,IACxDhE,KAAKmxB,WAAW3sB,KAAKR,EAAM,IAC3Bmf,EAAM+B,0BAA0BlhB,IAChChE,KAAKoxB,0BAA0B5sB,KAAKR,EAAM,KAE9ChE,KAAKowC,iBAAiB/qC,IAAI8d,EAAMpB,GAAIrb,EACxC,CACAw0B,aAAAA,CAAc/X,GACV,MAAMzc,EAAa1G,KAAKowC,iBAAiBxlC,IAAIuY,EAAMpB,IAC/Crb,IACAA,EAAW3E,UACX/B,KAAKowC,iBAAiBzrC,OAAOwe,EAAMpB,IAE3C,CACAhgB,OAAAA,GACIhC,MAAMgC,UACN,IAAK,MAAOwP,EAAGxO,KAAU/C,KAAKowC,iBAAiB5J,UAC3CzjC,EAAMhB,UAEV/B,KAAKowC,iBAAiBzsC,QACtB3D,KAAKkwC,SAASnuC,SAClB,ECzRG,MAAMwuC,WAAuB9hB,GAChC,YAAIphB,GACA,OAAOrN,KAAK+7B,SAChB,CACA,eAAIrtB,CAAY3L,GACZ/C,KAAK2O,aAAe5L,CACxB,CACA,eAAI2L,GACA,OAAO1O,KAAK2O,YAChB,CACA,eAAI3B,GACA,MAAM5H,EAAoC,mBAAtBpF,KAAKwwC,aACnBxwC,KAAKwwC,eACLxwC,KAAKwwC,aAKX,OAJIprC,IAASpF,KAAKywC,wBACdzwC,KAAKywC,sBAAwBrrC,EAC7BpF,KAAKu8B,qBAEFn3B,CACX,CACA,eAAI+H,GACA,MAAM/H,EAAoC,mBAAtBpF,KAAK0wC,aACnB1wC,KAAK0wC,eACL1wC,KAAK0wC,aAKX,OAJItrC,IAASpF,KAAK2wC,wBACd3wC,KAAK2wC,sBAAwBvrC,EAC7BpF,KAAKu8B,qBAEFn3B,CACX,CACA,QAAIkI,GACA,OAAOtN,KAAKg8B,KAChB,CACAr8B,WAAAA,CAAYoiB,EAAIye,GACZzgC,MAAMgiB,EAAIye,EAAe,IAAIlT,GAAsBvL,EAAIye,IACvDxgC,KAAKywC,sBAAwB,EAC7BzwC,KAAK2wC,sBAAwB1hC,OAAOC,kBACpClP,KAAKwwC,aAAe,EACpBxwC,KAAK0wC,aAAezhC,OAAOC,kBAC3BlP,KAAKg8B,OAAQ,EACbh8B,KAAK4Y,aAAe,IAAItV,EACxBtD,KAAKmU,YAAcnU,KAAK4Y,aAAa5U,MACrChE,KAAK2uB,IAAI1B,WAAWjtB,MACpBA,KAAKoG,eAAepG,KAAK4Y,aAAc5Y,KAAK2uB,IAAIhC,wBAAwB3oB,IACpE,MAAM,UAAEof,GAAcpf,GAChB,SAAEosB,GAAapwB,KAAK0uB,QAC1B0B,EAAS3iB,WAAWzN,KAAMojB,EAAU,IACpCpjB,KAAK2uB,IAAI9B,gBAAe,KACxB,MAAM,SAAEuD,GAAapwB,KAAK0uB,QAC1B0B,EAASjM,UAAUnkB,KAAK,IACxBA,KAAK2uB,IAAInB,gCAAgCxpB,IACR,iBAAtBA,EAAMgJ,aACgB,mBAAtBhJ,EAAMgJ,cACbhN,KAAKwwC,aAAexsC,EAAMgJ,aAEG,iBAAtBhJ,EAAMmJ,aACgB,mBAAtBnJ,EAAMmJ,cACbnN,KAAK0wC,aAAe1sC,EAAMmJ,aAE9BnN,KAAKu8B,mBAAmB,IACxBv8B,KAAK2uB,IAAIf,iBAAiB5pB,IAC1BhE,KAAK4Y,aAAapU,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAEpD,CACAqI,UAAAA,CAAW2V,GACPpjB,KAAK2uB,IAAIrU,uBAAuB9V,KAAK,CAAE4e,aAC3C,CACAe,SAAAA,CAAU0H,GACN7rB,KAAK2uB,IAAI9L,mBAAmBre,KAAK,CAAEqnB,YACvC,CACA3V,MAAAA,CAAO9Q,EAAMiJ,GACT,MAAOtE,EAAOC,GAAUhK,KAAK0O,cAAgBf,EAAYkB,WACnD,CAACzJ,EAAMiJ,GACP,CAACA,EAAgBjJ,GACvBrF,MAAMmW,OAAOnM,EAAOC,EACxB,CACAilB,IAAAA,CAAK/B,GACDntB,MAAMkvB,KAAK/B,GACXltB,KAAK+7B,UAAY7O,EAAW7f,SACxB6f,EAAWlgB,cACXhN,KAAKwwC,aAAetjB,EAAWlgB,aAE/BkgB,EAAW/f,cACXnN,KAAK0wC,aAAexjB,EAAW/f,aAE/B+f,EAAW5f,OACXtN,KAAKg8B,MAAQ9O,EAAW5f,KAEhC,CACA6P,MAAAA,GAMI,OAAO7E,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGpvB,MAAMod,UAAW,CAAEnQ,aADzCjK,EAC8D/C,KAAKgN,YADxDjK,GAAS,OAAItC,EAAYsC,GAC6CoK,YALjFpK,IAAUA,IAAUkM,OAAO6tB,kBACxC/5B,IAAUkM,OAAOC,uBACfzO,EACAsC,EAEyGg6B,CAAQ/8B,KAAKmN,eAD3GpK,KAErB,CACAw5B,iBAAAA,GACIv8B,KAAK2uB,IAAIlB,wBAAwBjpB,KAAK,CAClC2I,YAAanN,KAAK2wC,sBAClB3jC,YAAahN,KAAKywC,uBAE1B,ECrGG,SAASG,GAAe/rC,EAAShB,GAEpC,OADkB,IAAImkC,GAAkBnjC,EAAShB,GAChC8qB,GACrB,CACO,SAASkiB,GAAgBhsC,EAAShB,GACrC,MAAM4gB,EAAY,IAAI0qB,GAAmBtqC,EAAShB,GAClD,OAAO,IAAI2gB,GAAaC,EAC5B,CACO,SAASqsB,GAAejsC,EAAShB,GACpC,MAAM4gB,EAAY,IAAIiqB,GAAkB7pC,EAAShB,GACjD,OAAO,IAAIshB,GAAYV,EAC3B,CACO,SAASssB,GAAelsC,EAAShB,GACpC,MAAM4gB,EAAY,IAAIwrB,GAAkBprC,EAAShB,GACjD,OAAO,IAAImhB,GAAYP,EAC3B,C,uJCTA,MAAMusB,EAAuBA,CAACC,EAAOC,KACjC,MAAO3/B,EAAG4/B,GAAiBC,EAAAA,WACrBC,EAASD,EAAAA,OAAaH,EAAMK,gBAalC,OAZAF,EAAAA,oBAA0BF,GAAK,MAC3B/jB,OAASmkB,IACLD,EAAOE,QAAUj5B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGkiB,EAAOE,SAAUD,GAOlEH,EAAcK,KAAKC,MAAM,KAE7B,IACGL,EAAAA,cAAoBH,EAAMxsB,UAAW4sB,EAAOE,QAAQ,EAE/DP,EAAqBU,YAAc,wBAMnC,MAAMC,EAA2B,MAC7B,IAAI5uC,EAAQ,EACZ,MAAO,CAAEuJ,KAAMA,IAAO,8BAA6BvJ,KAASwJ,aAC/D,EAHgC,GAIpBqlC,EAAmBR,EAAAA,cAAoB,CAAC,GAC9C,MAAMS,EACTlyC,WAAAA,CAAY0e,EAAQyzB,EAAartB,EAAWyI,EAAY6kB,GACpD/xC,KAAKqe,OAASA,EACdre,KAAK8xC,YAAcA,EACnB9xC,KAAKykB,UAAYA,EACjBzkB,KAAKktB,WAAaA,EAClBltB,KAAK+xC,QAAUA,EACf/xC,KAAKgyC,cAAgB,CAAC,EACtBhyC,KAAKiyC,UAAW,EAChBjyC,KAAKkyC,cACT,CACA/kB,MAAAA,CAAO8jB,GACH,GAAIjxC,KAAKiyC,SACL,MAAM,IAAIpvC,MAAM,mDAEf7C,KAAKmyC,kBAKNnyC,KAAKmyC,kBAAkBhlB,OAAO8jB,GAH9BjxC,KAAKgyC,cAAgB15B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAAGnvB,KAAKgyC,eAAgBf,EAKlF,CACAiB,YAAAA,GACI,GAAIlyC,KAAKiyC,SACL,MAAM,IAAIpvC,MAAM,mDAEpB,GA6DyB,mBALA4hB,EAxDHzkB,KAAKykB,cA8DxBA,aAA6C,EAASA,EAAU2tB,UAxD/D,MAAM,IAAIvvC,MAAM,8GAkDrB,IAA0B4hB,EAhDzB,MAAM4tB,EAAkBjB,EAAAA,cAAoBA,EAAAA,WAAiBJ,GAAuB,CAChFvsB,UAAWzkB,KACNykB,UACL6sB,eAAgBtxC,KAAKktB,WACrBgkB,IAAMrsC,IACF7E,KAAKmyC,kBAAoBttC,EACrByT,OAAOC,KAAKvY,KAAKgyC,eAAezwC,OAAS,IACzCvB,KAAKmyC,kBAAkBhlB,OAAOntB,KAAKgyC,eACnChyC,KAAKgyC,cAAgB,CAAC,EAC1B,IAGFv3B,EAAOza,KAAK+xC,QACZX,EAAAA,cAAoBQ,EAAiBU,SAAU,CAAEvvC,MAAO/C,KAAK+xC,SAAWM,GACxEA,EACAE,EAASC,EAAAA,aAAsB/3B,EAAMza,KAAKqe,OAAQszB,EAAyBrlC,QACjFtM,KAAKkxC,IAAM,CACPqB,SACA7rC,WAAY1G,KAAK8xC,YAAYW,UAAUF,GAE/C,CACAxwC,OAAAA,GACI,IAAIa,EACgB,QAAnBA,EAAK5C,KAAKkxC,WAAwB,IAAPtuC,GAAyBA,EAAG8D,WAAW3E,UACnE/B,KAAKiyC,UAAW,CACpB,EAOG,MAAMS,EAAsBA,KAC/B,MAAOC,EAASC,GAAcxB,EAAAA,SAAe,IAC7CA,EAAAA,cAAqB,iBAAgBuB,EAAQpxC,UAY7C,MAAO,CAACoxC,EAXUvB,EAAAA,aAAmBmB,IACjCK,GAAYC,GAAoB,IAAIA,EAAiBN,KACrD,IAAIN,GAAW,EACf,OAAOa,EAAAA,GAAmBjtC,MAAK,KAC3B,GAAIosC,EACA,MAAM,IAAIpvC,MAAM,gDAEpBovC,GAAW,EACXW,GAAYC,GAAoBA,EAAgB3nC,QAAQiP,GAAMA,IAAMo4B,KAAQ,GAC9E,GACH,IACwB,ECtHxB,MAAMQ,EACT,WAAIluC,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYoiB,EAAI0C,EAAWuuB,GACvBhzC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAKgzC,iBAAmBA,EACxBhzC,KAAK2I,YAAc,IAAIsqC,EAAAA,GACvBjzC,KAAK4I,WAAa5I,KAAK2I,YAAY3E,MACnChE,KAAK6I,WAAa,IAAIoqC,EAAAA,GACtBjzC,KAAK8I,UAAY9I,KAAK6I,WAAW7E,MACjChE,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,gBAC1B7H,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,MAChC,CACA8a,KAAAA,GACI,CAEJoK,IAAAA,CAAK/B,GACDltB,KAAKgvB,KAAO,IAAI6iB,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKykB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChB+C,aAAcxE,EAAWwE,cAEjC,CACAvE,MAAAA,CAAOnpB,GACH,IAAIpB,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGuqB,OAAO,CAAEC,OAAQppB,EAAMopB,QACpF,CACAlX,MAAAA,CAAO8V,EAAQC,GACX,CAEJlqB,OAAAA,GACI,IAAIa,EACJ5C,KAAK2I,YAAY5G,UACjB/B,KAAK6I,WAAW9G,UACK,QAApBa,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGb,SAC7D,ECxCG,MAAMmxC,EACT,WAAIruC,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYoiB,EAAI0C,EAAWuuB,GACvBhzC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAKgzC,iBAAmBA,EACxBhzC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,gBAC1B7H,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,MAChC,CACA8a,KAAAA,GACI,CAEJoK,IAAAA,CAAK/B,GACDltB,KAAKgvB,KAAO,IAAI6iB,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKykB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChB+C,aAAcxE,EAAWwE,cAEjC,CACAvE,MAAAA,CAAOnpB,GACH,IAAIpB,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGuqB,OAAO,CAAEC,OAAQppB,EAAMopB,QACpF,CACAlX,MAAAA,CAAO8V,EAAQC,GACX,CAEJlqB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGb,SAC7D,ECjCG,MAAMoxC,EACT,WAAItuC,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYoiB,EAAI0C,EAAWuuB,GACvBhzC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAKgzC,iBAAmBA,EACxBhzC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,gBAC1B7H,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,MAChC,CACAklB,IAAAA,CAAK/B,GACDltB,KAAKgvB,KAAO,IAAI6iB,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKykB,UAAW,CAC3EX,MAAOoJ,EAAWpJ,MAClB4N,aAAcxE,EAAWwE,cAEjC,CACA7M,KAAAA,GACI,CAEJsI,MAAAA,CAAOC,GACH,IAAIxqB,EAAIgN,EAAI0T,EACRtjB,KAAKktB,aACLltB,KAAKktB,WAAWE,OAASA,EAAOA,QAEf,QAApBxqB,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGuqB,OAAO,CAAEC,OAAyF,QAAhF9J,EAAgC,QAA1B1T,EAAK5P,KAAKktB,kBAA+B,IAAPtd,OAAgB,EAASA,EAAGwd,cAA2B,IAAP9J,EAAgBA,EAAK,CAAC,GAC7L,CACApN,MAAAA,CAAO8V,EAAQC,GACX,CAEJlqB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGb,SAC7D,EClCG,MAAMqxC,EACT,WAAIvuC,GACA,OAAO7E,KAAKkhB,QAChB,CACA,QAAI8N,GACA,OAAOhvB,KAAKqzC,KAChB,CACA1zC,WAAAA,CAAY8kB,EAAWuuB,EAAkB7V,GACrCn9B,KAAKykB,UAAYA,EACjBzkB,KAAKgzC,iBAAmBA,EACxBhzC,KAAKm9B,OAASA,EACdn9B,KAAKszC,kBAAoB,IAAIC,EAAAA,GAC7BvzC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASrZ,UAAY,gBAC1B7H,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,MAChC,CACAklB,IAAAA,CAAK/B,GACDltB,KAAKszC,kBAAkBvwC,MAAQ,IAAIywC,EAAAA,GAA4BxzC,KAAKm9B,OAAOnT,MAAM5E,eAAc,KAC3FplB,KAAKyzC,cAAc,IACnBzzC,KAAKm9B,OAAOnT,MAAM1E,kBAAiB,KACnCtlB,KAAKyzC,cAAc,IACnBzzC,KAAKm9B,OAAOnT,MAAMxE,wBAAuB,KACzCxlB,KAAK0zC,mBAAmB,IACxBxmB,EAAWyB,IAAI7L,mBAAkB,KACjC9iB,KAAK2zC,mBAAmB,KAE5B3zC,KAAKqzC,MAAQ,IAAIxB,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKykB,UAAW,CAC5EkK,IAAKzB,EAAWyB,IAChB+C,aAAcxE,EAAWwE,aACzBhN,OAAQ1kB,KAAKm9B,OAAOnT,MAAMtF,OAC1ByB,YAAanmB,KAAKm9B,OAAOnT,MAAM7D,YAC/B8U,cAAej7B,KAAKm9B,OAAOxO,IAAI9C,SAC/B/H,MAAO9jB,KAAKm9B,QAEpB,CACAp7B,OAAAA,GACI,IAAIa,EACJ5C,KAAKszC,kBAAkBvxC,UACD,QAArBa,EAAK5C,KAAKqzC,aAA0B,IAAPzwC,GAAyBA,EAAGb,SAC9D,CACAorB,MAAAA,CAAOnpB,GACH,IAAIpB,EACkB,QAArBA,EAAK5C,KAAKqzC,aAA0B,IAAPzwC,GAAyBA,EAAGuqB,OAAOnpB,EAAMopB,OAC3E,CACAqmB,YAAAA,GACIzzC,KAAKmtB,OAAO,CAAEC,OAAQ,CAAE1I,OAAQ1kB,KAAKm9B,OAAOnT,MAAMtF,SACtD,CACAgvB,iBAAAA,GACI1zC,KAAKmtB,OAAO,CACRC,OAAQ,CACJjH,YAAanmB,KAAKm9B,OAAOnT,MAAM7D,cAG3C,CACAwtB,iBAAAA,GACI3zC,KAAKmtB,OAAO,CACRC,OAAQ,CACJ6N,cAAej7B,KAAKm9B,OAAOxO,IAAI9C,WAG3C,ECxDJ,SAAS+nB,EAA0BnvB,EAAWovB,GAC1C,OAAOpvB,EACA0T,GACQ,IAAIib,EAA+B3uB,EAAWovB,EAAO1b,QAE9D13B,CACV,CACA,MAAMqzC,EAAoB,4BAUnB,MAAMC,EAAgB3C,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB6C,EAAc7C,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAqKhC,OApKAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjBpd,EAAAA,GAAuB/0B,SAASoyC,IAC5B,MAAMhlB,EAAMglB,EACNC,EAAYpD,EAAM7hB,GACpBA,KAAO6hB,GAASoD,IAAcH,EAAU3C,QAAQniB,KAChD+kB,EAAQ/kB,GAAOilB,EACnB,IAEAJ,EAAY1C,SACZ0C,EAAY1C,QAAQluB,cAAc8wB,GAKtCD,EAAU3C,QAAUN,CAAK,GAC1Bla,EAAAA,GAAuBl1B,KAAKutB,GAAQ6hB,EAAM7hB,MAC7CgiB,EAAAA,WAAgB,KACZ,IAAIxuC,EACJ,IAAKoxC,EAAOzC,QACR,OAEJ,MAAM+C,EAAwD,QAA9B1xC,EAAKquC,EAAMsD,qBAAkC,IAAP3xC,EAAgBA,EAAK,CAAC,EACxFquC,EAAMtQ,sBACN2T,EAAuBR,GACnB7C,EAAMtQ,qBAEd,MAAM6T,EAAmB,CACrB5a,gCAAiCga,EAA0B3C,EAAMwD,2BAA4B,CAAEhC,cAC/F/Y,iCAAkCka,EAA0B3C,EAAMyD,4BAA6B,CAAEjC,cACjG3Y,kCAAmC8Z,EAA0B3C,EAAM0D,6BAA8B,CAAElC,cACnGhS,gBAAkB58B,GACP,IAAIkvC,EAAsBlvC,EAAQke,GAAIkvB,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CACzE+R,cAGRnS,mBAAmBz8B,GACR,IAAIqvC,EAAqBrvC,EAAQke,GAAIuyB,EAAuBzwC,EAAQ68B,MAAO,CAC9E+R,cAGRhX,yBAA0BwV,EAAM4D,mBAC1B,IACS,IAAI1B,EAAmB,YAAalC,EAAM4D,mBAAoB,CACjEpC,mBAGNhyC,EACNkgC,oBAAqBsQ,EAAMtQ,oBACrBmT,OACArzC,GAEJkuB,GAAMiiB,EAAAA,EAAAA,IAAeoD,EAAOzC,QAASj5B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAnEhF,SAA4B8hB,GAOxB,OANoBla,EAAAA,GAAuBjoB,QAAO,CAACgmC,EAAK1lB,KAChDA,KAAO6hB,IACP6D,EAAI1lB,GAAO6hB,EAAM7hB,IAEd0lB,IACR,CAAC,EAER,CA2DmFC,CAAmB9D,IAASuD,KACjG,YAAE1rB,EAAW,aAAEC,GAAiBirB,EAAOzC,QAM7C,OALA5iB,EAAIzY,OAAO4S,EAAaC,GACpBkoB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAErmB,QAEpBslB,EAAY1C,QAAU5iB,EACf,KACHA,EAAI5sB,SAAS,CAChB,GACF,IACHqvC,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAM7qC,EAAautC,EAAY1C,QAAQtsB,WAAWjhB,IAC1CitC,EAAMhsB,WACNgsB,EAAMhsB,UAAUjhB,EACpB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACkvC,EAAMhsB,YACVmsB,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAM7qC,EAAautC,EAAY1C,QAAQxrB,YAAY/hB,IAC3CitC,EAAMlrB,YACNkrB,EAAMlrB,WAAW/hB,EACrB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACkvC,EAAMlrB,aACVqrB,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQluB,cAAc,CAC9Bod,gBAAkB58B,GACP,IAAIkvC,EAAsBlvC,EAAQke,GAAIkvB,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CACzE+R,eAGV,GACH,CAACxB,EAAM2D,aACVxD,EAAAA,WAAgB,KACZ,IAAIxuC,EACJ,IAAKqxC,EAAY1C,QACb,OAEJ,MAAM+C,EAAwD,QAA9B1xC,EAAKquC,EAAMsD,qBAAkC,IAAP3xC,EAAgBA,EAAK,CAAC,EACxFquC,EAAMtQ,sBACN2T,EAAuBR,GACnB7C,EAAMtQ,qBAEdsT,EAAY1C,QAAQluB,cAAc,CAC9Bsd,oBAAqBsQ,EAAMtQ,oBACrBmT,OACArzC,EACN6/B,mBAAmBz8B,GACR,IAAIqvC,EAAqBrvC,EAAQke,GAAIuyB,EAAuBzwC,EAAQ68B,MAAO,CAC9E+R,eAGV,GACH,CAACxB,EAAMsD,cAAetD,EAAMtQ,sBAC/ByQ,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQluB,cAAc,CAC9BoY,yBAA0BwV,EAAM4D,mBAC1B,IACS,IAAI1B,EAAmB,YAAalC,EAAM4D,mBAAoB,CACjEpC,mBAGNhyC,GACR,GACH,CAACwwC,EAAM4D,qBACVzD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQluB,cAAc,CAC9BqW,iCAAkCka,EAA0B3C,EAAMyD,4BAA6B,CAAEjC,eACnG,GACH,CAACxB,EAAMyD,8BACVtD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQluB,cAAc,CAC9BuW,gCAAiCga,EAA0B3C,EAAMwD,2BAA4B,CAAEhC,eACjG,GACH,CAACxB,EAAMwD,6BACVrD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQluB,cAAc,CAC9ByW,kCAAmC8Z,EAA0B3C,EAAM0D,6BAA8B,CAAElC,eACrG,GACH,CAACxB,EAAM0D,+BACFvD,EAAAA,cAAoB,MAAO,CAAE3mC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAUmnC,IAAK8C,GAAUrB,EAAQ,IAE1GoB,EAAcrC,YAAc,oBCnMrB,MAAMuD,EAAcA,IAAO7D,EAAAA,cAAoB,MAAO,CAAEpnC,OAAQ,KAAMD,MAAO,KAAMmrC,QAAS,YAAa,cAAe,QAASC,WAAW,EAAOttC,UAAW,gBACjKupC,EAAAA,cAAoB,OAAQ,CAAEnvC,EAAG,gICFrC,IAAImzC,EAAkC,SAAUlgC,EAAGzQ,GAC/C,IAAIuH,EAAI,CAAC,EACT,IAAK,IAAImO,KAAKjF,EAAOoD,OAAOvX,UAAUs0C,eAAe9sC,KAAK2M,EAAGiF,IAAM1V,EAAEJ,QAAQ8V,GAAK,IAC9EnO,EAAEmO,GAAKjF,EAAEiF,IACb,GAAS,MAALjF,GAAqD,mBAAjCoD,OAAOg9B,sBACtB,KAAI5pC,EAAI,EAAb,IAAgByO,EAAI7B,OAAOg9B,sBAAsBpgC,GAAIxJ,EAAIyO,EAAE5Y,OAAQmK,IAC3DjH,EAAEJ,QAAQ8V,EAAEzO,IAAM,GAAK4M,OAAOvX,UAAUw0C,qBAAqBhtC,KAAK2M,EAAGiF,EAAEzO,MACvEM,EAAEmO,EAAEzO,IAAMwJ,EAAEiF,EAAEzO,IAF4B,CAItD,OAAOM,CACX,EAeO,MAAMwpC,EAAsB5yC,IAC/B,IAAI,IAAE+rB,EAAK+C,aAAc+jB,EAAeroB,OAAQsB,EAAO,UAAEgnB,EAAS,oBAAEC,GAAwB/yC,EAAIka,EAAOs4B,EAAOxyC,EAAI,CAAC,MAAO,eAAgB,SAAU,YAAa,wBACjK,MAAMkuB,EAdV,SAAkBnC,GACd,MAAOmC,EAAOiO,GAAYqS,EAAAA,SAAeziB,EAAImC,OAS7C,OARAsgB,EAAAA,WAAgB,KACZ,MAAM1qC,EAAaioB,EAAI4M,kBAAkBv3B,IACrC+6B,EAAS/6B,EAAM8sB,MAAM,IAEzB,MAAO,KACHpqB,EAAW3E,SAAS,CACvB,GACF,CAAC4sB,IACGmC,CACX,CAGkB8kB,CAASjnB,GACjBknB,EAAUzE,EAAAA,aAAmBptC,IAC/BA,EAAM3B,iBACFszC,EACAA,IAGAhnB,EAAIiI,OACR,GACD,CAACjI,EAAKgnB,IACHG,EAAgB1E,EAAAA,aAAmB3sC,IACrCA,EAAEpC,gBAAgB,GACnB,IACH,OAAQ+uC,EAAAA,cAAoB,MAAO94B,OAAO6W,OAAO,CAAE,cAAe,2BAA6BrS,EAAM,CAAEjV,UAAW,mBAC9GupC,EAAAA,cAAoB,OAAQ,CAAEvpC,UAAW,0BAA4BipB,IACpE4kB,GAActE,EAAAA,cAAoB,MAAO,CAAEvpC,UAAW,wBAAyBiuC,cAAeA,EAAeC,QAASF,GACnHzE,EAAAA,cAAoB6D,EAAa,OAAQ,ECzC9C,MAAMe,UAAuBzF,EAAAA,GAChC5wC,WAAAA,CAAYoiB,EAAI0C,EAAWwxB,EAAgBjD,GACvCjzC,MAAMgiB,EAAI0C,GACVzkB,KAAKi2C,eAAiBA,EACtBj2C,KAAKgzC,iBAAmBA,CAC5B,CACA9jB,YAAAA,GACI,IAAItsB,EAAIgN,EACR,OAAO,IAAIiiC,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKi2C,eAAgB,CAC3E7oB,OAAsF,QAA7Exd,EAA6B,QAAvBhN,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,OAAgB,EAASA,EAAGwqB,cAA2B,IAAPxd,EAAgBA,EAAK,CAAC,EACpH+e,IAAK3uB,KAAK2uB,IACV+C,aAAc,IAAIlN,EAAAA,GAAaxkB,KAAK0uB,QAAQ0B,WAEpD,ECFG,MAAM8lB,EAAiB9E,EAAAA,YAAiB,CAACH,EAAOC,KACnD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB+E,EAAe/E,EAAAA,UACduB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkDhC,OAjDAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjBh8B,EAAAA,GAAwBnW,SAASoyC,IAC7B,MAAMhlB,EAAMglB,EACNC,EAAYpD,EAAM7hB,GACpBA,KAAO6hB,GAASoD,IAAcH,EAAU3C,QAAQniB,KAChD+kB,EAAQ/kB,GAAOilB,EACnB,IAEA8B,EAAa5E,SACb4E,EAAa5E,QAAQluB,cAAc8wB,GAKvCD,EAAU3C,QAAUN,CAAK,GAC1B94B,EAAAA,GAAwBtW,KAAKutB,GAAQ6hB,EAAM7hB,MAC9CgiB,EAAAA,WAAgB,KACZ,IAAK4C,EAAOzC,QACR,MAAO,OAIX,MAAMiD,EAAmB,CACrB/T,gBAAkB58B,GACP,IAAImyC,EAAenyC,EAAQke,GAAIle,EAAQ68B,KAAMuQ,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,eAGxF9jB,GAAMkiB,EAAAA,EAAAA,IAAgBmD,EAAOzC,QAASj5B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EA3CjF,SAA4B8hB,GAOxB,OANoB94B,EAAAA,GAAwBrJ,QAAO,CAACgmC,EAAK1lB,KACjDA,KAAO6hB,IACP6D,EAAI1lB,GAAO6hB,EAAM7hB,IAEd0lB,IACR,CAAC,EAER,CAmCoFC,CAAmB9D,IAASuD,KAClG,YAAE1rB,EAAW,aAAEC,GAAiBirB,EAAOzC,QAM7C,OALA5iB,EAAIzY,OAAO4S,EAAaC,GACpBkoB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAErmB,QAEpBwnB,EAAa5E,QAAU5iB,EAChB,KACHA,EAAI5sB,SAAS,CAChB,GACF,IACHqvC,EAAAA,WAAgB,KACP+E,EAAa5E,SAGlB4E,EAAa5E,QAAQluB,cAAc,CAC/Bod,gBAAkB58B,GACP,IAAImyC,EAAenyC,EAAQke,GAAIle,EAAQ68B,KAAMuQ,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,eAE5F,GACH,CAACxB,EAAM2D,aACFxD,EAAAA,cAAoB,MAAO,CAAE3mC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAUmnC,IAAK8C,GAAUrB,EAAQ,IAE1GuD,EAAexE,YAAc,qBCpEtB,MAAM0E,UAA2Bta,EAAAA,GACpCn8B,WAAAA,CAAYoiB,EAAI0C,EAAWwxB,EAAgBjD,GACvCjzC,MAAMgiB,EAAI0C,GACVzkB,KAAKi2C,eAAiBA,EACtBj2C,KAAKgzC,iBAAmBA,CAC5B,CACA9jB,YAAAA,GACI,IAAItsB,EAAIgN,EACR,OAAO,IAAIiiC,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKi2C,eAAgB,CAC3E7oB,OAAsF,QAA7Exd,EAA6B,QAAvBhN,EAAK5C,KAAK0uB,eAA4B,IAAP9rB,OAAgB,EAASA,EAAGwqB,cAA2B,IAAPxd,EAAgBA,EAAK,CAAC,EACpH+e,IAAK3uB,KAAK2uB,IAEV+C,aAAc,IAAIvM,EAAAA,GAAYnlB,KAAK0uB,QAC9B0B,WAEb,ECJG,MAAMimB,EAAgBjF,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBkF,EAAclF,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkDhC,OAjDAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjBpzB,EAAAA,GAAuB/e,SAASoyC,IAC5B,MAAMhlB,EAAMglB,EACNC,EAAYpD,EAAM7hB,GACpBA,KAAO6hB,GAASoD,IAAcH,EAAU3C,QAAQniB,KAChD+kB,EAAQ/kB,GAAOilB,EACnB,IAEAiC,EAAY/E,SACZ+E,EAAY/E,QAAQluB,cAAc8wB,GAKtCD,EAAU3C,QAAUN,CAAK,GAC1BlwB,EAAAA,GAAuBlf,KAAKutB,GAAQ6hB,EAAM7hB,MAC7CgiB,EAAAA,WAAgB,KACZ,IAAK4C,EAAOzC,QACR,MAAO,OAIX,MAAMiD,EAAmB,CACrB/T,gBAAkB58B,GACP,IAAIuyC,EAAmBvyC,EAAQke,GAAIle,EAAQ68B,KAAMuQ,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,eAG5F9jB,GAAMmiB,EAAAA,EAAAA,IAAekD,EAAOzC,QAASj5B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EA3ChF,SAA4B8hB,GAOxB,OANoBlwB,EAAAA,GAAuBjS,QAAO,CAACgmC,EAAK1lB,KAChDA,KAAO6hB,IACP6D,EAAI1lB,GAAO6hB,EAAM7hB,IAEd0lB,IACR,CAAC,EAER,CAmCmFC,CAAmB9D,IAASuD,KACjG,YAAE1rB,EAAW,aAAEC,GAAiBirB,EAAOzC,QAM7C,OALA5iB,EAAIzY,OAAO4S,EAAaC,GACpBkoB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAErmB,QAEpB2nB,EAAY/E,QAAU5iB,EACf,KACHA,EAAI5sB,SAAS,CAChB,GACF,IACHqvC,EAAAA,WAAgB,KACPkF,EAAY/E,SAGjB+E,EAAY/E,QAAQluB,cAAc,CAC9Bod,gBAAkB58B,GACP,IAAIuyC,EAAmBvyC,EAAQke,GAAIle,EAAQ68B,KAAMuQ,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,eAEhG,GACH,CAACxB,EAAM2D,aACFxD,EAAAA,cAAoB,MAAO,CAAE3mC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAUmnC,IAAK8C,GAAUrB,EAAQ,IAE1G0D,EAAc3E,YAAc,oBCrErB,MAAM6E,EACT,WAAI1xC,GACA,OAAO7E,KAAKkhB,QAChB,CACAvhB,WAAAA,CAAYoiB,EAAI0C,EAAWuuB,GACvBhzC,KAAK+hB,GAAKA,EACV/hB,KAAKykB,UAAYA,EACjBzkB,KAAKgzC,iBAAmBA,EACxBhzC,KAAKkhB,SAAW1Y,SAAS6L,cAAc,OACvCrU,KAAKkhB,SAASzW,MAAMT,OAAS,OAC7BhK,KAAKkhB,SAASzW,MAAMV,MAAQ,MAChC,CACAklB,IAAAA,CAAK/B,GACDltB,KAAKgvB,KAAO,IAAI6iB,EAAU7xC,KAAK6E,QAAS7E,KAAKgzC,iBAAkBhzC,KAAKykB,UAAW,CAC3E2I,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChBmC,MAAO5D,EAAW4D,MAClBY,aAAcxE,EAAWwE,cAEjC,CACAvU,MAAAA,GACI,MAAO,CACH4E,GAAI/hB,KAAK+hB,GAEjB,CACAoL,MAAAA,CAAOC,GACH,IAAIxqB,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGuqB,OAAOC,EAAOA,OAC3E,CACArrB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK5C,KAAKgvB,YAAyB,IAAPpsB,GAAyBA,EAAGb,SAC7D,ECpBG,MAAMy0C,EAAgBpF,EAAAA,YAAiB,CAACH,EAAOC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBqF,EAAcrF,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkFhC,OAjFAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjB7oB,EAAAA,GAAuBtpB,SAASoyC,IAC5B,MAAMhlB,EAAMglB,EACNC,EAAYpD,EAAM7hB,GACpBA,KAAO6hB,GAASoD,IAAcH,EAAU3C,QAAQniB,KAChD+kB,EAAQ/kB,GAAOilB,EACnB,IAEAoC,EAAYlF,SACZkF,EAAYlF,QAAQluB,cAAc8wB,GAKtCD,EAAU3C,QAAUN,CAAK,GAC1B3lB,EAAAA,GAAuBzpB,KAAKutB,GAAQ6hB,EAAM7hB,MAC7CgiB,EAAAA,WAAgB,KACZ,IAAIxuC,EACJ,IAAKoxC,EAAOzC,QACR,MAAO,OAIX,MAAMmF,EAAqD,QAAjC9zC,EAAKquC,EAAMyF,wBAAqC,IAAP9zC,EAAgBA,EAAK,CAAC,EACnF4xC,EAAmB,CACrB/T,gBAAkB58B,GACP,IAAI0yC,EAAiB1yC,EAAQke,GAAIkvB,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,cAE9EpC,sBAAwBxsC,GACb,IAAI0yC,EAAiB1yC,EAAQke,GAAI20B,EAAiB7yC,EAAQ68B,MAAO,CAAE+R,eAG5E9jB,GAAMoiB,EAAAA,EAAAA,IAAeiD,EAAOzC,QAASj5B,OAAO6W,OAAO7W,OAAO6W,OAAO,CAAC,EAhDhF,SAA4B8hB,GAOxB,OANoB3lB,EAAAA,GAAuBxc,QAAO,CAACgmC,EAAK1lB,KAChDA,KAAO6hB,IACP6D,EAAI1lB,GAAO6hB,EAAM7hB,IAEd0lB,IACR,CAAC,EAER,CAwCmFC,CAAmB9D,IAASuD,KACjG,YAAE1rB,EAAW,aAAEC,GAAiBirB,EAAOzC,QAM7C,OALA5iB,EAAIzY,OAAO4S,EAAaC,GACpBkoB,EAAM+D,SACN/D,EAAM+D,QAAQ,CAAErmB,QAEpB8nB,EAAYlF,QAAU5iB,EACf,KACHA,EAAI5sB,SAAS,CAChB,GACF,IACHqvC,EAAAA,WAAgB,KACPqF,EAAYlF,SAGjBkF,EAAYlF,QAAQluB,cAAc,CAC9Bod,gBAAkB58B,GACP,IAAI0yC,EAAiB1yC,EAAQke,GAAIkvB,EAAM2D,WAAW/wC,EAAQ68B,MAAO,CAAE+R,eAEhF,GACH,CAACxB,EAAM2D,aACVxD,EAAAA,WAAgB,KACZ,IAAIxuC,EACJ,IAAK6zC,EAAYlF,QACb,OAEJ,MAAMmF,EAAqD,QAAjC9zC,EAAKquC,EAAMyF,wBAAqC,IAAP9zC,EAAgBA,EAAK,CAAC,EACzF6zC,EAAYlF,QAAQluB,cAAc,CAC9BgtB,sBAAwBxsC,GACb,IAAI0yC,EAAiB1yC,EAAQke,GAAI20B,EAAiB7yC,EAAQ68B,MAAO,CAAE+R,eAEhF,GACH,CAACxB,EAAMyF,mBACVtF,EAAAA,WAAgB,KACZ,IAAKqF,EAAYlF,QACb,MAAO,OAIX,MAAM7qC,EAAa+vC,EAAYlF,QAAQtsB,WAAWjhB,IAC1CitC,EAAMhsB,WACNgsB,EAAMhsB,UAAUjhB,EACpB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACkvC,EAAMhsB,YACFmsB,EAAAA,cAAoB,MAAO,CAAE3mC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAUmnC,IAAK8C,GAAUrB,EAAQ,IAE1G6D,EAAc9E,YAAc,mB,2GCpGrB,MAAMiF,EAAQ1F,IAMb2F,EAAAA,EAAAA,KAAA,OACI9lB,MAAOmgB,EAAMngB,MACbrmB,MAAO,CACHqlB,QAAS,OACT+mB,eAAgB,SAChBC,WAAY,SACZ/sC,MAAO,OACPC,OAAQ,OAERgqB,SAAU,QAEd+hB,QAAS9E,EAAM8E,QAAQv0C,UAEvBo1C,EAAAA,EAAAA,KAAA,QACInsC,MAAO,CAAEupB,SAAU,UAAW+iB,OAAQ,WACtClvC,UAAU,4BAA2BrG,SAEpCyvC,EAAM+F,SCbjBpC,EAAa,CACfqC,QAAUhG,IAEF2F,EAAAA,EAAAA,KAAA,OACInsC,MAAO,CACHT,OAAQ,OACR+pB,QAAS,OACTmjB,WAAY,yCACd11C,SAEDyvC,EAAM7jB,OAAO0D,SAMd,MACZ,IAAIplB,EAAI,CAKX,EANe,GAQhB,SAASyrC,EAAkBxoB,GACvBA,EAAI7J,SAAS,CACT/C,GAAI,UACJ0C,UAAW,YAGfkK,EAAI7J,SAAS,CACT/C,GAAI,UACJ0C,UAAW,YAGfkK,EAAI7J,SAAS,CACT/C,GAAI,UACJ0C,UAAW,YAGf,MAAM2yB,EAASzoB,EAAI7J,SAAS,CACxB/C,GAAI,UACJ0C,UAAW,UACX8mB,UAAU,IAGd5c,EAAI7J,SAAS,CACT/C,GAAI,UACJ0C,UAAW,UACX8mB,UAAU,EACV9zB,SAAU,CAAEg1B,eAAgB2K,KAGhCzoB,EAAI7J,SAAS,CACT/C,GAAI,UACJ0C,UAAW,WAEnB,CAEA,IAAI4yB,EAAa,EA2BjB,MAAMC,EACFloB,IAEA,MAAOnX,EAAOs/B,GAAYnG,EAAAA,SAX9B,SAAsBruC,GAClB,IACI,OAAOy0C,KAAKC,MAAM10C,EACtB,CAAE,MAAO0kC,GACL,OAAO,IACX,CACJ,CAMQiQ,CAAUC,aAAaC,QAAQxoB,KAcnC,OAXAgiB,EAAAA,WAAgB,KACZ,MAAM9oB,EAASqvB,aAAaC,QAAQ,OACpC,IACmB,OAAXtvB,GACAivB,EAASC,KAAKC,MAAMnvB,GAE5B,CAAE,MAAOmf,GACL,IAEL,CAACrY,IAEG,CACHnX,EACCqQ,IACkB,OAAXA,EACAqvB,aAAaE,WAAWzoB,IAExBuoB,aAAaG,QAAQ1oB,EAAKooB,KAAKO,UAAUzvB,IACzCivB,EAASjvB,GACb,EAEP,EAGQ0vB,EAAuB/G,IAChC,MAAOtiB,EAAKspB,GAAU7G,EAAAA,YACfl7B,EAAQgiC,GACXZ,EAAoC,oBAEjCvhB,EAAuBoiB,GAC1B/G,EAAAA,UAAwB,GAEtBgH,EAAQzpB,IAEV,GADAA,EAAIhrB,QACAuS,EACA,IACIyY,EAAIrP,SAASpJ,EACjB,CAAE,MAAOuxB,GACLxkC,QAAQ0nC,MAAMlD,GACd9Y,EAAIhrB,QACJwzC,EAAkBxoB,EACtB,MAEAwoB,EAAkBxoB,EACtB,GAQG9qB,EAASw0C,GAAcjH,EAAAA,cAE5B3wC,GAEF,OACI63C,EAAAA,EAAAA,MAAA,OACI7tC,MAAO,CACHqlB,QAAS,OACTyoB,cAAe,SACfvuC,OAAQ,QACVxI,SAAA,EAEF82C,EAAAA,EAAAA,MAAA,OAAK7tC,MAAO,CAAET,OAAQ,QAASxI,SAAA,EAC3Bo1C,EAAAA,EAAAA,KAAA,UACIb,QAASA,KACDpnB,GACAupB,EAAUvpB,EAAIxR,SAClB,EACF3b,SACL,UAGDo1C,EAAAA,EAAAA,KAAA,UACIb,QAASA,KACDpnB,GACAypB,EAAKzpB,EACT,EACFntB,SACL,UAGDo1C,EAAAA,EAAAA,KAAA,UACIb,QAASA,KACLpnB,EAAKhrB,QACLu0C,EAAU,KAAK,EACjB12C,SACL,WAGDo1C,EAAAA,EAAAA,KAAA,UACIb,QAASA,MApH7B,SAA2BpnB,GACvBA,EAAI7J,SAAS,CACT/C,MAAOs1B,GAAY9qC,WACnBukB,MAAQ,OAAMumB,IACd5yB,UAAW,UACX8mB,SAAU,CAAExhC,MAAO,IAAKC,OAAQ,IAAKH,KAAM,GAAIC,IAAK,KAE5D,CA8GwB0uC,CAAkB7pB,EAAK,EACzBntB,SACL,wBAGDo1C,EAAAA,EAAAA,KAAA,UACIb,QAASA,KACLsC,OACgB53C,IAAZoD,EACM,6BACApD,EACT,EACHe,SAEA,YAAUqC,EAAU,SAAW,eAErC+yC,EAAAA,EAAAA,KAAA,UACIb,QAASA,KACLoC,GAA0BrnC,IAAOA,GAAE,EACrCtP,UAGEu0B,EAAwB,SAAW,WADrC,yBAKV6gB,EAAAA,EAAAA,KAAA,OACInsC,MAAO,CACHguC,SAAU,GACZj3C,UAEFo1C,EAAAA,EAAAA,KAAC7C,EAAAA,GAAa,CACViB,QA9EChxC,IACbo0C,EAAKp0C,EAAM2qB,KACXspB,EAAOj0C,EAAM2qB,IAAI,EA6ELimB,WAAYA,EACZC,mBAAoB9T,EACpB0T,2BAA4BiE,EAC5BhE,4BAA6BiE,EAC7B5iB,sBAAuBA,EACvBiB,oBAAqBnzB,EACrBgE,UAAY,GAAEopC,EAAM9H,OAAS,+BAGnC,EAIRuP,EAAiBzH,IAKf2F,EAAAA,EAAAA,KAAA,OAAKnsC,MAAO,CAAET,OAAQ,OAAQ4pB,MAAO,QAASG,QAAS,WAAYvyB,UAC/Do1C,EAAAA,EAAAA,KAACD,EAAI,CAACZ,QALEA,KACH9E,EAAMvf,aA5Kf5M,SAAS,CACT/C,MAAOs1B,GAAY9qC,WACnBukB,MAAQ,OAAMumB,IACd5yB,UAAW,WAyKiB,EAIAuyB,KAAM,UAKpC2B,EAAkB1H,IACpB,MAAO1F,EAAUqN,GAAexH,EAAAA,SACA,aAA5BH,EAAMtiB,IAAIlS,SAAS3X,MAGvBssC,EAAAA,WAAgB,KACZ,MAAM1qC,EAAauqC,EAAMntB,MAAM6K,IAAIyO,qBAAqBp5B,IACpD40C,EAAoC,aAAxB50C,EAAMyY,SAAS3X,KAAoB,IAGnD,MAAO,KACH4B,EAAW3E,SAAS,CACvB,GACF,CAACkvC,EAAMntB,MAAM6K,MAkBhB,OACIioB,EAAAA,EAAAA,KAAA,OAAKnsC,MAAO,CAAET,OAAQ,OAAQ4pB,MAAO,QAASG,QAAS,WAAYvyB,UAC/Do1C,EAAAA,EAAAA,KAACD,EAAI,CACDZ,QAnBIA,KACZ,GAAIxK,EAAU,CACV,MAAMznB,EAAQmtB,EAAMvf,aAAarL,WACjC4qB,EAAMntB,MAAM6K,IAAI2O,OAAO,CAAExZ,SAC7B,MACImtB,EAAMvf,aAAalL,iBAAiByqB,EAAMntB,MAAO,CAC7CrM,SAAU,CACN1N,MAAO,IACPC,OAAQ,IACR43B,OAAQ,GACRC,MAAO,KAGnB,EAOQmV,KAAMzL,EAAW,kBAAoB,iBAEvC,EAId,IAEMxK,EAAYA,KACP6V,EAAAA,EAAAA,KAAA,OAAKnsC,MAAO,CAAEmpB,MAAO,QAASG,QAAS,OAAQvyB,SAAC,a","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./sandboxes/react/dockview/floating-groups/src/utils.tsx","webpack://dockview-docs/./sandboxes/react/dockview/floating-groups/src/app.tsx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onChanged = new Emitter();\n        this.onChanged = this._onChanged.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onChanged, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            this._onChanged.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        if (!tabToRemove) {\n            throw new Error(`dockview: Tab not found`);\n        }\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onChanged((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n                case 1: // middle click\n                    panel.api.close();\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n        this.updateClassnames();\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\"]);\n    const title = useTitle(api);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onPointerDown = React.useCallback((e) => {\n        e.preventDefault();\n    }, []);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\n\nexport const Icon = (props: {\n    icon: string;\n    title?: string;\n    onClick?: (event: React.MouseEvent) => void;\n}) => {\n    return (\n        <div\n            title={props.title}\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '30px',\n                height: '100%',\n\n                fontSize: '18px',\n            }}\n            onClick={props.onClick}\n        >\n            <span\n                style={{ fontSize: 'inherit', cursor: 'pointer' }}\n                className=\"material-symbols-outlined\"\n            >\n                {props.icon}\n            </span>\n        </div>\n    );\n};\n","import {\n    DockviewApi,\n    DockviewGroupPanel,\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewHeaderActionsProps,\n    IDockviewPanelProps,\n    SerializedDockview,\n} from 'dockview';\nimport * as React from 'react';\nimport { Icon } from './utils';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string }>) => {\n        return (\n            <div\n                style={{\n                    height: '100%',\n                    padding: '20px',\n                    background: 'var(--dv-group-view-background-color)',\n                }}\n            >\n                {props.params.title}\n            </div>\n        );\n    },\n};\n\nconst counter = (() => {\n    let i = 0;\n\n    return {\n        next: () => ++i,\n    };\n})();\n\nfunction loadDefaultLayout(api: DockviewApi) {\n    api.addPanel({\n        id: 'panel_1',\n        component: 'default',\n    });\n\n    api.addPanel({\n        id: 'panel_2',\n        component: 'default',\n    });\n\n    api.addPanel({\n        id: 'panel_3',\n        component: 'default',\n    });\n\n    const panel4 = api.addPanel({\n        id: 'panel_4',\n        component: 'default',\n        floating: true,\n    });\n\n    api.addPanel({\n        id: 'panel_5',\n        component: 'default',\n        floating: false,\n        position: { referencePanel: panel4 },\n    });\n\n    api.addPanel({\n        id: 'panel_6',\n        component: 'default',\n    });\n}\n\nlet panelCount = 0;\n\nfunction addPanel(api: DockviewApi) {\n    api.addPanel({\n        id: (++panelCount).toString(),\n        title: `Tab ${panelCount}`,\n        component: 'default',\n    });\n}\n\nfunction addFloatingPanel2(api: DockviewApi) {\n    api.addPanel({\n        id: (++panelCount).toString(),\n        title: `Tab ${panelCount}`,\n        component: 'default',\n        floating: { width: 250, height: 150, left: 50, top: 50 },\n    });\n}\n\nfunction safeParse<T>(value: any): T | null {\n    try {\n        return JSON.parse(value) as T;\n    } catch (err) {\n        return null;\n    }\n}\n\nconst useLocalStorage = <T,>(\n    key: string\n): [T | null, (setter: T | null) => void] => {\n    const [state, setState] = React.useState<T | null>(\n        safeParse(localStorage.getItem(key))\n    );\n\n    React.useEffect(() => {\n        const _state = localStorage.getItem('key');\n        try {\n            if (_state !== null) {\n                setState(JSON.parse(_state));\n            }\n        } catch (err) {\n            //\n        }\n    }, [key]);\n\n    return [\n        state,\n        (_state: T | null) => {\n            if (_state === null) {\n                localStorage.removeItem(key);\n            } else {\n                localStorage.setItem(key, JSON.stringify(_state));\n                setState(_state);\n            }\n        },\n    ];\n};\n\nexport const DockviewPersistence = (props: { theme?: string }) => {\n    const [api, setApi] = React.useState<DockviewApi>();\n    const [layout, setLayout] =\n        useLocalStorage<SerializedDockview>('floating.layout');\n\n    const [disableFloatingGroups, setDisableFloatingGroups] =\n        React.useState<boolean>(false);\n\n    const load = (api: DockviewApi) => {\n        api.clear();\n        if (layout) {\n            try {\n                api.fromJSON(layout);\n            } catch (err) {\n                console.error(err);\n                api.clear();\n                loadDefaultLayout(api);\n            }\n        } else {\n            loadDefaultLayout(api);\n        }\n    };\n\n    const onReady = (event: DockviewReadyEvent) => {\n        load(event.api);\n        setApi(event.api);\n    };\n\n    const [options, setOptions] = React.useState<\n        'boundedWithinViewport' | undefined\n    >(undefined);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <div style={{ height: '25px' }}>\n                <button\n                    onClick={() => {\n                        if (api) {\n                            setLayout(api.toJSON());\n                        }\n                    }}\n                >\n                    Save\n                </button>\n                <button\n                    onClick={() => {\n                        if (api) {\n                            load(api);\n                        }\n                    }}\n                >\n                    Load\n                </button>\n                <button\n                    onClick={() => {\n                        api!.clear();\n                        setLayout(null);\n                    }}\n                >\n                    Clear\n                </button>\n                <button\n                    onClick={() => {\n                        addFloatingPanel2(api!);\n                    }}\n                >\n                    Add Floating Group\n                </button>\n                <button\n                    onClick={() => {\n                        setOptions(\n                            options === undefined\n                                ? 'boundedWithinViewport'\n                                : undefined\n                        );\n                    }}\n                >\n                    {`Bounds: ${options ? 'Within' : 'Overflow'}`}\n                </button>\n                <button\n                    onClick={() => {\n                        setDisableFloatingGroups((x) => !x);\n                    }}\n                >\n                    {`${\n                        disableFloatingGroups ? 'Enable' : 'Disable'\n                    } floating groups`}\n                </button>\n            </div>\n            <div\n                style={{\n                    flexGrow: 1,\n                }}\n            >\n                <DockviewReact\n                    onReady={onReady}\n                    components={components}\n                    watermarkComponent={Watermark}\n                    leftHeaderActionsComponent={LeftComponent}\n                    rightHeaderActionsComponent={RightComponent}\n                    disableFloatingGroups={disableFloatingGroups}\n                    floatingGroupBounds={options}\n                    className={`${props.theme || 'dockview-theme-abyss'}`}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst LeftComponent = (props: IDockviewHeaderActionsProps) => {\n    const onClick = () => {\n        addPanel(props.containerApi);\n    };\n    return (\n        <div style={{ height: '100%', color: 'white', padding: '0px 4px' }}>\n            <Icon onClick={onClick} icon={'add'} />\n        </div>\n    );\n};\n\nconst RightComponent = (props: IDockviewHeaderActionsProps) => {\n    const [floating, setFloating] = React.useState<boolean>(\n        props.api.location.type === 'floating'\n    );\n\n    React.useEffect(() => {\n        const disposable = props.group.api.onDidLocationChange((event) => {\n            setFloating(event.location.type === 'floating');\n        });\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.group.api]);\n\n    const onClick = () => {\n        if (floating) {\n            const group = props.containerApi.addGroup();\n            props.group.api.moveTo({ group });\n        } else {\n            props.containerApi.addFloatingGroup(props.group, {\n                position: {\n                    width: 400,\n                    height: 300,\n                    bottom: 50,\n                    right: 50,\n                },\n            });\n        }\n    };\n\n    return (\n        <div style={{ height: '100%', color: 'white', padding: '0px 4px' }}>\n            <Icon\n                onClick={onClick}\n                icon={floating ? 'jump_to_element' : 'back_to_tab'}\n            />\n        </div>\n    );\n};\n\nexport default DockviewPersistence;\n\nconst Watermark = () => {\n    return <div style={{ color: 'white', padding: '8px' }}>watermark</div>;\n};\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onChanged","onChanged","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","tabToRemove","updateClassnames","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","close","addTab","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","useTitle","onClose","onPointerDown","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","Icon","_jsx","justifyContent","alignItems","cursor","icon","default","background","loadDefaultLayout","panel4","panelCount","useLocalStorage","setState","JSON","parse","safeParse","localStorage","getItem","removeItem","setItem","stringify","DockviewPersistence","setApi","setLayout","setDisableFloatingGroups","load","setOptions","_jsxs","flexDirection","addFloatingPanel2","flexGrow","LeftComponent","RightComponent","setFloating"],"sourceRoot":""}