{"version":3,"file":"assets/js/a6aa9e1f.bebd1230.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction cloneNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(node.orientation, node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            result.addChild(cloneNode(child, child.size, child.orthogonalSize), child.size, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, node.orientation, orthogonalSize);\n    }\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    normalize() {\n        if (!this._root) {\n            return;\n        }\n        if (this._root.children.length !== 1) {\n            return;\n        }\n        const oldRoot = this.root;\n        // can remove one level of redundant branching if there is only a single child\n        const childReference = oldRoot.children[0];\n        if (childReference instanceof LeafNode) {\n            return;\n        }\n        oldRoot.element.remove();\n        const child = oldRoot.removeChild(0); // Remove child to prevent double disposal\n        oldRoot.dispose(); // Dispose old root (won't dispose removed child)\n        child.dispose(); // Dispose the removed child\n        this._root = cloneNode(childReference, childReference.size, childReference.orthogonalSize);\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\nexport const DESERIALIZATION_POPOUT_DELAY_MS = 100;\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    updateAllPositions() {\n        if (this._disposed) {\n            return;\n        }\n        // Invalidate position cache to force recalculation\n        this.positionCache.invalidate();\n        // Call resize function directly for all visible panels\n        for (const entry of Object.values(this.map)) {\n            if (entry.panel.api.isVisible && entry.resize) {\n                entry.resize();\n            }\n        }\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        // store the resize function for direct access\n        this.map[panel.api.id].resize = resize;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, DESERIALIZATION_POPOUT_DELAY_MS, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    /**\n     * Promise that resolves when all popout groups from the last fromJSON call are restored.\n     * Useful for tests that need to wait for delayed popout creation.\n     */\n    get popoutRestorationPromise() {\n        return this._popoutRestorationPromise;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._popoutRestorationPromise = Promise.resolve();\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        this.gridview.normalize();\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            // Create a promise that resolves when all popout groups are created\n            const popoutPromises = [];\n            // Queue popup group creation with delays to avoid browser blocking\n            serializedPopoutGroups.forEach((serializedPopoutGroup, index) => {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                // Add a small delay for each popup after the first to avoid browser popup blocking\n                const popoutPromise = new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.addPopoutGroup(group, {\n                            position: position !== null && position !== void 0 ? position : undefined,\n                            overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                            referenceGroup: gridReferenceGroup\n                                ? this.getPanel(gridReferenceGroup)\n                                : undefined,\n                            popoutUrl: url,\n                        });\n                        resolve();\n                    }, index * DESERIALIZATION_POPOUT_DELAY_MS); // 100ms delay between each popup\n                });\n                popoutPromises.push(popoutPromise);\n            });\n            // Store the promise for tests to wait on\n            this._popoutRestorationPromise = Promise.all(popoutPromises).then(() => void 0);\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        // Force position updates for always visible panels after DOM layout is complete\n        requestAnimationFrame(() => {\n            this.overlayRenderContainer.updateAllPositions();\n        });\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            // Ensure group becomes active after move\n            if (options.skipSetActive !== true) {\n                // For center moves (merges), we need to ensure the target group is active\n                // unless explicitly told not to (skipSetActive: true)\n                this.doSetGroupAndPanelActive(to);\n            }\n            else if (!this.activePanel) {\n                // Even with skipSetActive: true, ensure there's an active panel if none exists\n                // This maintains basic functionality while respecting skipSetActive\n                this.doSetGroupAndPanelActive(to);\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, {\n                                skipActive: true,\n                            });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        // Ensure group becomes active after move\n        if (options.skipSetActive === false) {\n            // Only activate when explicitly requested (skipSetActive: false)\n            // Use 'to' group for non-center moves since 'from' may have been destroyed\n            const targetGroup = to !== null && to !== void 0 ? to : from;\n            this.doSetGroupAndPanelActive(targetGroup);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableListener","element","type","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","cloneNode","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","normalize","childReference","insertOrthogonalSplitviewAtRoot","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","updateAllPositions","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","popoutRestorationPromise","_popoutRestorationPromise","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","popoutPromises","serializedPopoutGroup","popoutPromise","all","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","frameworkName","toLowerCase"],"sourceRoot":""}