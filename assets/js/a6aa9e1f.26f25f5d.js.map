{"version":3,"file":"assets/js/a6aa9e1f.26f25f5d.js","mappings":"sPAkBA,SAASA,EAAqBC,GAC5B,MAAM,SAACC,GAAYD,GAEjBE,YAAaC,MAAOC,KAClBC,EAAAA,EAAAA,MACE,gBAACC,EAAe,UAAEC,EAAS,UAAEC,GAAaP,EAE1CE,EAD+B,MAAdK,EACQJ,EAAYG,EAC3C,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACV,MAAOA,EAAOW,YAAaR,KACzCM,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,IAAI,sBAG1B,CACA,SAASC,EAAoBjB,GAC3B,MAAM,SAACC,EAAQ,MAAEiB,EAAK,QAAEC,GAAWnB,EACnC,OACES,EAAAA,EAAAA,MAACW,EAAAA,EAAU,CAACD,QAASA,EAAQR,SAAA,EAC3BC,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAACH,MAAOA,KACtBN,EAAAA,EAAAA,KAACU,EAAAA,EAAiB,CAACrB,SAAUA,MAGnC,CACe,SAASsB,EAAavB,GACnC,OACES,EAAAA,EAAAA,MAACe,EAAAA,GAAqB,CACpBC,WAAWC,EAAAA,EAAAA,GACTC,EAAAA,EAAgBC,QAAQC,UACxBF,EAAAA,EAAgBG,KAAKC,cACrBpB,SAAA,EACFC,EAAAA,EAAAA,KAACb,EAAoB,IAAKC,KAC1BY,EAAAA,EAAAA,KAACK,EAAmB,IAAKjB,MAG/B,C,2EC5Ce,SAASsB,EAAkBtB,GACxC,MAAM,SAACC,GAAYD,GACb,aAACgC,EAAY,SAAEC,GAAYhC,EACjC,OACEQ,EAAAA,EAAAA,MAAA,OACEgB,UAAU,iBACV,cAAYS,EAAAA,EAAAA,GAAU,CACpBC,GAAI,oCACJC,QAAS,4BACTtB,YAAa,2CACZH,SAAA,CACFqB,IACCpB,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CACf7B,UAAWwB,EACX7B,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,oCACHrB,YAAY,0EAAyEH,SAAC,oBAM7FsB,IACCrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAgB,CACf7B,UAAWyB,EACX9B,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,oCACHrB,YAAY,sEAAqEH,SAAC,kBAItF4B,QAAM,MAKhB,C,4ECtCe,SAASlB,EAAamB,GAGjC,IAHkC,MACpCtB,EACAuB,UAAWC,EAAwBC,EAAAA,GACpCH,EACC,OACE5B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACGO,EAAM0B,KAAIC,IAAA,IAAEC,QAASC,GAAgBF,EAAA,OACpCjC,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAEfF,QAASC,EAAgBpC,UACzBC,EAAAA,EAAAA,KAAC8B,EAAqB,CAAA/B,UACpBC,EAAAA,EAAAA,KAACmC,EAAe,OAHbA,EAAgB9C,SAASO,UAKb,KAI3B,C,0NC1BA,MAAMyC,GAEC,MAAMC,UAAsBD,EAC/BE,WAAAA,CAAYC,EAAQC,EAASC,GACzBC,QACAC,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,CACnB,EAEG,MAAMG,UAAqBR,EAC9BE,WAAAA,CAAYC,EAAQM,GAChBH,QACAC,KAAKJ,OAASA,EACdI,KAAKE,OAASA,CAClB,EAKG,MAAMC,EACTR,WAAAA,GACI,CAEJ,kBAAOS,GACH,OAAOD,EAAuBE,QAClC,CACAC,OAAAA,CAAQC,GACJ,OAAOA,GAASA,IAAUP,KAAKO,KACnC,CACAC,SAAAA,CAAUD,GACFP,KAAKM,QAAQC,KACbP,KAAKO,WAAQE,EACbT,KAAKU,UAAOD,EAEpB,CACAE,OAAAA,CAAQJ,GACJ,GAAIP,KAAKM,QAAQC,GACb,OAAOP,KAAKU,IAGpB,CACAE,OAAAA,CAAQF,EAAMH,GACNA,IACAP,KAAKU,KAAOA,EACZV,KAAKO,MAAQA,EAErB,EAGG,SAASM,IACZ,MAAMC,EAAgBX,EAAuBC,cAE7C,GADqBU,EAAcR,QAAQZ,EAAcqB,WAIzD,OAAOD,EAAcH,QAAQjB,EAAcqB,WAAW,EAC1D,CACO,SAASC,IACZ,MAAMC,EAAed,EAAuBC,cAE5C,GADqBa,EAAaX,QAAQL,EAAac,WAIvD,OAAOE,EAAaN,QAAQV,EAAac,WAAW,EACxD,CCjEO,IAAIG,ECAAC,EFiDXhB,EAAuBE,SAAW,IAAIF,EChDtC,SAAWe,GACPA,EAAME,IAAM,WAAkB,IAAD,IAAAC,EAAAC,UAAAC,OAAbpE,EAAQ,IAAAqE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAARtE,EAAQsE,GAAAH,UAAAG,GACpB,OAAQC,IACJ,MAAMC,EAAcxE,EAASiC,KAAKwC,GAAUA,EAAMF,KAClD,MAAO,CACHG,QAASA,KACLF,EAAYG,SAASC,IACjBA,EAAEF,SAAS,GACb,EAET,CAET,CACH,CAbD,CAaGX,IAAUA,EAAQ,CAAC,IACf,MAAMc,EACTrC,WAAAA,GACIK,KAAKiC,mBAAoB,CAC7B,CACA,oBAAIC,GACA,OAAOlC,KAAKiC,iBAChB,CACAE,cAAAA,GACInC,KAAKiC,mBAAoB,CAC7B,EAEG,MAAMG,EACTzC,WAAAA,GACIK,KAAKqC,aAAc,CACvB,CACA,cAAIC,GACA,OAAOtC,KAAKqC,WAChB,CACAE,MAAAA,GACIvC,KAAKqC,aAAc,CACvB,EAmBJ,MAAMG,EACF,aAAOC,GACH,IAAIC,EACJ,OAAO,IAAIF,EAAwC,QAA5BE,GAAK,IAAIC,OAAQC,aAA0B,IAAPF,EAAgBA,EAAK,GACpF,CACA/C,WAAAA,CAAYkD,GACR7C,KAAK6C,MAAQA,CACjB,CACAC,KAAAA,GACIC,QAAQC,KAAK,uBAAwBhD,KAAK6C,MAC9C,EAEJ,MAAMI,EACFtD,WAAAA,CAAYuD,EAAUC,GAClBnD,KAAKkD,SAAWA,EAChBlD,KAAKmD,WAAaA,CACtB,EAGG,MAAMC,EACT,+BAAOC,CAAyBC,GACxBA,IAAcF,EAAQG,iBACtBH,EAAQI,oBAAoBC,QAEhCL,EAAQG,gBAAkBD,CAC9B,CACA,SAAIT,GACA,OAAO7C,KAAK0D,KAChB,CACA/D,WAAAA,CAAYgE,GACR3D,KAAK2D,QAAUA,EACf3D,KAAK4D,WAAa,GAClB5D,KAAK6D,WAAY,CACrB,CACA,SAAIC,GA4BA,OA3BK9D,KAAK+D,SACN/D,KAAK+D,OAAUb,IACX,IAAIR,GACyB,QAAvBA,EAAK1C,KAAK2D,eAA4B,IAAPjB,OAAgB,EAASA,EAAGsB,cAA0BvD,IAAfT,KAAK0D,OAC7ER,EAASlD,KAAK0D,OAElB,MAAMhC,EAAW,IAAIuB,EAASC,EAAUE,EAAQG,gBAAkBf,EAAWC,cAAWhC,GAExF,OADAT,KAAK4D,WAAWK,KAAKvC,GACd,CACHG,QAASA,KACL,MAAMqC,EAAQlE,KAAK4D,WAAWO,QAAQzC,GAClCwC,GAAS,EACTlE,KAAK4D,WAAWQ,OAAOF,EAAO,GAEzBd,EAAQG,eAIb,EAGX,EAEDH,EAAQG,iBACRH,EAAQI,oBAAoBa,IAAIrE,KAAK+D,OAAQvB,EAAWC,WAGzDzC,KAAK+D,MAChB,CACAO,IAAAA,CAAKC,GACDvE,KAAK0D,MAAQa,EACb,IAAK,MAAM7C,KAAY1B,KAAK4D,WACxBlC,EAASwB,SAASqB,EAE1B,CACA1C,OAAAA,GACS7B,KAAK6D,YACN7D,KAAK6D,WAAY,EACb7D,KAAK4D,WAAWrC,OAAS,IACrB6B,EAAQG,iBACRiB,gBAAe,KACX,IAAI9B,EAEJ,IAAK,MAAMhB,KAAY1B,KAAK4D,WACxBb,QAAQC,KAAK,uBAAuD,QAA9BN,EAAKhB,EAASyB,kBAA+B,IAAPT,OAAgB,EAASA,EAAGI,QAC5G,IAGR9C,KAAK4D,WAAa,IAElBR,EAAQG,iBAAmBvD,KAAK+D,QAChCX,EAAQI,oBAAoBiB,OAAOzE,KAAK+D,QAGpD,EAIG,SAASW,EAA4BC,EAASC,EAAMlD,EAAUiC,GAEjE,OADAgB,EAAQE,iBAAiBD,EAAMlD,EAAUiC,GAClC,CACH9B,QAASA,KACL8C,EAAQG,oBAAoBF,EAAMlD,EAAUiC,EAAQ,EAGhE,CACO,SAASoB,EAAsBJ,EAASC,EAAMlD,EAAUiC,GAE3D,OADAgB,EAAQE,iBAAiBD,EAAMlD,EAAUiC,GAClC,CACH9B,QAASA,KACL8C,EAAQG,oBAAoBF,EAAMlD,EAAUiC,EAAQ,EAGhE,CAjBAP,EAAQG,iBAAkB,EAC1BH,EAAQI,oBAAsB,IA7G9B,MACI7D,WAAAA,GACIK,KAAKgF,OAAS,IAAIC,GACtB,CACA,QAAIC,GACA,OAAOlF,KAAKgF,OAAOE,IACvB,CACAb,GAAAA,CAAIP,EAAOX,GACPnD,KAAKgF,OAAOG,IAAIrB,EAAOX,EAC3B,CACAsB,OAAOX,GACH9D,KAAKgF,OAAOP,OAAOX,EACvB,CACAL,KAAAA,GACIzD,KAAKgF,OAAOvB,OAChB,GAyHG,MAAM2B,EACTzF,WAAAA,GACIK,KAAKqF,SAAW,IAAIjC,EACpBpD,KAAKsF,kBAAoB,EACzBtF,KAAKuF,SAAU,EACfvF,KAAKwF,QAAWjB,IAIZ,MAAMkB,EAAqCzF,KAAKsF,kBAChD,OAAOtF,KAAKqF,SAASvB,OAAM,KAQnB9D,KAAKsF,kBAAoBG,GACzBlB,GACJ,GACF,CAEV,CACAD,IAAAA,GACItE,KAAKsF,oBACDtF,KAAKuF,UAGTvF,KAAKuF,SAAU,EACff,gBAAe,KACXxE,KAAKuF,SAAU,EACfvF,KAAKqF,SAASf,MAAM,IAE5B,CACAzC,OAAAA,GACI7B,KAAKqF,SAASxD,SAClB,GCjNJ,SAAWV,GACPA,EAAWuE,KAAO,CACd7D,QAASA,QAWbV,EAAWwE,KAPX,SAAcC,GACV,MAAO,CACH/D,QAASA,KACL+D,GAAM,EAGlB,CAEH,CAdD,CAcGzE,IAAeA,EAAa,CAAC,IACzB,MAAM0E,EACT,cAAIC,GACA,OAAO9F,KAAK+F,WAChB,CACApG,WAAAA,GACIK,KAAK+F,aAAc,EAAM,QAAA1E,EAAAC,UAAAC,OADdyE,EAAI,IAAAxE,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJuE,EAAIvE,GAAAH,UAAAG,GAEfzB,KAAKiG,aAAeD,CACxB,CACAE,cAAAA,GAAyB,IAAD,IAAAC,EAAA7E,UAAAC,OAANyE,EAAI,IAAAxE,MAAA2E,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJJ,EAAII,GAAA9E,UAAA8E,GAClBJ,EAAKlE,SAASuE,GAAQrG,KAAKiG,aAAahC,KAAKoC,IACjD,CACAxE,OAAAA,GACQ7B,KAAK+F,cAGT/F,KAAK+F,aAAc,EACnB/F,KAAKiG,aAAanE,SAASuE,GAAQA,EAAIxE,YACvC7B,KAAKiG,aAAe,GACxB,EAEG,MAAMK,EACT3G,WAAAA,GACIK,KAAKuG,YAAcpF,EAAWuE,IAClC,CACA,SAAI7C,CAAM2D,GACFxG,KAAKuG,aACLvG,KAAKuG,YAAY1E,UAErB7B,KAAKuG,YAAcC,CACvB,CACA3E,OAAAA,GACQ7B,KAAKuG,cACLvG,KAAKuG,YAAY1E,UACjB7B,KAAKuG,YAAcpF,EAAWuE,KAEtC,ECnCG,SAASe,EAAmB9B,EAAS+B,GACxC,MAAMC,EAAW,IAAIC,gBAAgBC,IAMjCC,uBAAsB,KAClB,MAAMC,EAAaF,EAAQ,GAC3BH,EAAGK,EAAW,GAChB,IAGN,OADAJ,EAASK,QAAQrC,GACV,CACH9C,QAASA,KACL8E,EAASM,UAAUtC,GACnBgC,EAASO,YAAY,EAGjC,CACO,MAAMC,EAAgB,SAACxC,GAAyB,IAAD,IAAAtD,EAAAC,UAAAC,OAAZ6F,EAAO,IAAA5F,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAP2F,EAAO3F,EAAA,GAAAH,UAAAG,GAC7C,IAAK,MAAM4F,KAAaD,EAChBzC,EAAQ2C,UAAUC,SAASF,IAC3B1C,EAAQ2C,UAAUE,OAAOH,EAGrC,EACaI,EAAa,SAAC9C,GAAyB,IAAD,IAAAwB,EAAA7E,UAAAC,OAAZ6F,EAAO,IAAA5F,MAAA2E,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAPgB,EAAOhB,EAAA,GAAA9E,UAAA8E,GAC1C,IAAK,MAAMiB,KAAaD,EACfzC,EAAQ2C,UAAUC,SAASF,IAC5B1C,EAAQ2C,UAAUjD,IAAIgD,EAGlC,EACaK,EAAcA,CAAC/C,EAAS1G,EAAW0J,KAC5C,MAAMC,EAAWjD,EAAQ2C,UAAUC,SAAStJ,GACxC0J,IAAcC,GACdjD,EAAQ2C,UAAUjD,IAAIpG,IAErB0J,GAAaC,GACdjD,EAAQ2C,UAAUE,OAAOvJ,EAC7B,EAEG,SAAS4J,EAAWC,EAAWC,GAClC,KAAOD,GAAW,CACd,GAAIA,IAAcC,EACd,OAAO,EAEXD,EAAYA,EAAUE,UAC1B,CACA,OAAO,CACX,CACO,SAASC,EAAqBzK,GACjC,OAAOgE,MAAMT,UAAUmH,MAAMC,KAAKC,SAASH,qBAAqBzK,GAAM,EAC1E,CACO,SAAS6K,EAAW1D,GACvB,OAAO,IAAI2D,EAAa3D,EAC5B,CAIA,MAAM2D,UAAqBzC,EACvBlG,WAAAA,CAAYgF,GACR5E,QACAC,KAAKuI,YAAc,IAAInF,EACvBpD,KAAKwI,WAAaxI,KAAKuI,YAAYzE,MACnC9D,KAAKyI,WAAa,IAAIrF,EACtBpD,KAAK0I,UAAY1I,KAAKyI,WAAW3E,MACjC9D,KAAKkG,eAAelG,KAAKuI,YAAavI,KAAKyI,YAC3C,IAAIE,EAAWd,EAAWO,SAASQ,cAAejE,GAC9CkE,GAAe,EACnB,MAAMC,EAAUA,KACZD,GAAe,EACVF,IACDA,GAAW,EACX3I,KAAKuI,YAAYjE,OACrB,EAEEyE,EAASA,KACPJ,IACAE,GAAe,EACfG,OAAOC,YAAW,KACVJ,IACAA,GAAe,EACfF,GAAW,EACX3I,KAAKyI,WAAWnE,OACpB,GACD,GACP,EAEJtE,KAAKkJ,qBAAuB,KACIrB,EAAWO,SAASQ,cAAejE,KACnCgE,IACpBA,EACAI,IAGAD,IAER,EAEAnE,aAAmBwE,aACnBnJ,KAAKkG,eAAenB,EAAsBJ,EAAS,QAASmE,GAAS,IACrE9I,KAAKkG,eAAenB,EAAsBJ,EAAS,OAAQoE,GAAQ,MAGnE/I,KAAKkG,eAAexB,EAA4BC,EAAS,QAASmE,GAAS,IAC3E9I,KAAKkG,eAAexB,EAA4BC,EAAS,OAAQoE,GAAQ,IAEjF,CACAK,YAAAA,GACIpJ,KAAKkJ,sBACT,EAGJ,MAAMG,EAA4B,yBAM3B,SAASC,EAAsBxF,GAClC,OAAOA,EAAMuF,EACjB,CA2BO,SAASE,EAAuBC,GACnC,MAAM,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,OAAEC,GAAWJ,EAAQK,wBAC7C,MAAO,CACHJ,KAAMA,EAAOT,OAAOc,QACpBJ,IAAKA,EAAMV,OAAOe,QAClBJ,MAAOA,EACPC,OAAQA,EAEhB,CAwBO,SAASI,IACZ,MAAMC,EAAU,IACThC,EAAqB,aACrBA,EAAqB,YAEtBiC,EAAW,IAAIC,QACrB,IAAK,MAAMC,KAAUH,EACjBC,EAAS/E,IAAIiF,EAAQA,EAAOC,MAAMC,eAClCF,EAAOC,MAAMC,cAAgB,OAEjC,MAAO,CACHC,QAASA,KACL,IAAI7H,EACJ,IAAK,MAAM0H,KAAUH,EACjBG,EAAOC,MAAMC,cAAgD,QAA/B5H,EAAKwH,EAASM,IAAIJ,UAA4B,IAAP1H,EAAgBA,EAAK,OAE9FuH,EAAQ7F,OAAO,EAAG6F,EAAQ1I,OAAO,EAG7C,CAoBO,MAAMkJ,EACT9K,WAAAA,CAAYgF,GACR3E,KAAK2E,QAAUA,EACf3E,KAAK0K,YAAc,EACvB,CACAC,aAAAA,CAAcC,GACV,IAAK,MAAM3M,KAAa+B,KAAK0K,YACzBhD,EAAY1H,KAAK2E,QAAS1G,GAAW,GAEzC+B,KAAK0K,YAAcE,EACdC,MAAM,KACNC,QAAQC,GAAMA,EAAEC,OAAOzJ,OAAS,IACrC,IAAK,MAAMtD,KAAa+B,KAAK0K,YACzBhD,EAAY1H,KAAK2E,QAAS1G,GAAW,EAE7C,EC5PG,SAASgN,EAAKC,GACjB,GAAmB,IAAfA,EAAI3J,OACJ,MAAM,IAAIoB,MAAM,qBAEpB,MAAO,CAACuI,EAAIhD,MAAM,EAAGgD,EAAI3J,OAAS,GAAI2J,EAAIA,EAAI3J,OAAS,GAC3D,CAIO,SAAS4J,EAAeC,EAAMC,GACjC,GAAID,EAAK7J,SAAW8J,EAAK9J,OACrB,OAAO,EAEX,IAAK,IAAI+J,EAAI,EAAGA,EAAIF,EAAK7J,OAAQ+J,IAC7B,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,CACX,CAIO,SAASC,EAAYL,EAAKrI,GAC7B,MAAMqB,EAAQgH,EAAI/G,QAAQtB,GACtBqB,GAAS,IACTgH,EAAI9G,OAAOF,EAAO,GAClBgH,EAAIM,QAAQ3I,GAEpB,CAIO,SAAS4I,EAAUP,EAAKrI,GAC3B,MAAMqB,EAAQgH,EAAI/G,QAAQtB,GACtBqB,GAAS,IACTgH,EAAI9G,OAAOF,EAAO,GAClBgH,EAAIjH,KAAKpB,GAEjB,CAUO,SAAS2E,EAAOkE,EAAO7I,GAC1B,MAAMqB,EAAQwH,EAAMC,WAAWC,GAAMA,IAAM/I,IAC3C,OAAIqB,GAAS,IACTwH,EAAMtH,OAAOF,EAAO,IACb,EAGf,CCxDO,MAAM2H,EAAQA,CAAChJ,EAAOiJ,EAAKC,IAC1BD,EAAMC,EAKCD,EAEJE,KAAKF,IAAIC,EAAKC,KAAKD,IAAIlJ,EAAOiJ,IAE5BG,EAA4BA,KACrC,IAAIpJ,EAAQ,EACZ,MAAO,CAAEqJ,KAAMA,KAAOrJ,KAASsJ,WAAY,EAElCC,EAAQA,CAACzG,EAAM0G,KACxB,MAAMC,EAAS,GAKf,GAJkB,iBAAPD,IACPA,EAAK1G,EACLA,EAAO,GAEPA,GAAQ0G,EACR,IAAK,IAAIf,EAAI3F,EAAM2F,EAAIe,EAAIf,IACvBgB,EAAOrI,KAAKqH,QAIhB,IAAK,IAAIA,EAAI3F,EAAM2F,EAAIe,EAAIf,IACvBgB,EAAOrI,KAAKqH,GAGpB,OAAOgB,CAAM,EC7BV,MAAMC,EACT,QAAIrH,CAAKA,GACLlF,KAAKwM,MAAQtH,CACjB,CACA,QAAIA,GACA,OAAOlF,KAAKwM,KAChB,CACA,qBAAIC,GACA,OAAOzM,KAAK0M,kBAChB,CACA,WAAIC,GACA,YAA0C,IAA5B3M,KAAK0M,kBACvB,CACA,eAAIE,GACA,OAAO5M,KAAK2M,QAAU3M,KAAK6M,KAAKD,YAAc,CAClD,CACA,mBAAIE,GACA,OAAO9M,KAAK6M,KAAKD,WACrB,CACA,eAAIG,GACA,OAAO/M,KAAK2M,QAAU3M,KAAK6M,KAAKE,YAAc,CAClD,CACA,mBAAIC,GACA,OAAOhN,KAAK6M,KAAKE,WACrB,CACA,YAAIE,GACA,OAAOjN,KAAK6M,KAAKI,QACrB,CACA,QAAIC,GACA,QAASlN,KAAK6M,KAAKK,IACvB,CACA,WAAIC,CAAQA,GACRnN,KAAKoN,UAAU/C,MAAMC,cAAgB6C,EAAU,GAAK,MACxD,CACAxN,WAAAA,CAAYyN,EAAWP,EAAM3H,EAAMsB,GAC/BxG,KAAKoN,UAAYA,EACjBpN,KAAK6M,KAAOA,EACZ7M,KAAKwG,WAAaA,EAClBxG,KAAK0M,wBAAqBjM,EACN,iBAATyE,GACPlF,KAAKwM,MAAQtH,EACblF,KAAK0M,wBAAqBjM,EAC1B2M,EAAU9F,UAAUjD,IAAI,aAGxBrE,KAAKwM,MAAQ,EACbxM,KAAK0M,mBAAqBxH,EAAKuH,kBAEvC,CACAY,UAAAA,CAAWV,EAASzH,GAChB,IAAIxC,EACAiK,IAAY3M,KAAK2M,UAGjBA,GACA3M,KAAKkF,KAAO2G,EAAyC,QAAlCnJ,EAAK1C,KAAK0M,0BAAuC,IAAPhK,EAAgBA,EAAK,EAAG1C,KAAK8M,gBAAiB9M,KAAKgN,iBAChHhN,KAAK0M,wBAAqBjM,IAG1BT,KAAK0M,mBACe,iBAATxH,EAAoBA,EAAOlF,KAAKkF,KAC3ClF,KAAKkF,KAAO,GAEhBlF,KAAKoN,UAAU9F,UAAUgG,OAAO,UAAWX,GACvC3M,KAAK6M,KAAKQ,YACVrN,KAAK6M,KAAKQ,WAAWV,GAE7B,CACA9K,OAAAA,GAEI,OADA7B,KAAKwG,WAAW3E,UACT7B,KAAK6M,IAChB,EC/DG,IAAIU,EAKAC,EAOAC,EAMAC,GAjBX,SAAWH,GACPA,EAAwB,WAAI,aAC5BA,EAAsB,SAAI,UAC7B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAElC,SAAWC,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,SACzC,CALD,CAKGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAqB,KAAI,OACzBA,EAAuB,OAAI,QAC9B,CAJD,CAIGA,IAAmBA,EAAiB,CAAC,IAExC,SAAWC,GACPA,EAAOC,WAAa,CAAE/I,KAAM,cAI5B8I,EAAOE,MAHP,SAAe1J,GACX,MAAO,CAAEU,KAAM,QAASV,QAC5B,EAKAwJ,EAAOG,UAHP,SAAmBpB,GACf,MAAO,CAAE7H,KAAM,YAAa6H,oBAChC,CAEH,CAVD,CAUGiB,IAAWA,EAAS,CAAC,IACjB,MAAMI,EACT,eAAIC,GACA,OAAO/N,KAAKgO,YAChB,CACA,QAAI9I,GACA,OAAOlF,KAAKwM,KAChB,CACA,QAAItH,CAAKrC,GACL7C,KAAKwM,MAAQ3J,CACjB,CACA,kBAAIoL,GACA,OAAOjO,KAAKkO,eAChB,CACA,kBAAID,CAAepL,GACf7C,KAAKkO,gBAAkBrL,CAC3B,CACA,UAAItB,GACA,OAAOvB,KAAKmO,UAAU5M,MAC1B,CACA,eAAI6M,GACA,OAAOpO,KAAKqO,aAAe,IAAIrO,KAAKqO,mBAAgB5N,CACxD,CACA,eAAI6N,GACA,OAAOtO,KAAKuO,YAChB,CACA,eAAID,CAAYzL,GACZ7C,KAAKuO,aAAe1L,EACpB,MAAM2L,EAAMxO,KAAKkF,KACjBlF,KAAKkF,KAAOlF,KAAKiO,eACjBjO,KAAKiO,eAAiBO,EACtBrH,EAAcnH,KAAK2E,QAAS,gBAAiB,eAC7C3E,KAAK2E,QAAQ2C,UAAUjD,IAAIrE,KAAKsO,aAAef,EAAYkB,WACrD,gBACA,cACV,CACA,eAAI7B,GACA,OAAO5M,KAAKmO,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAKhC,aAAa,EACpE,CACA,eAAIG,GACA,OAAuB,IAAhB/M,KAAKuB,OACNsN,OAAOC,kBACP9O,KAAKmO,UAAUO,QAAO,CAACC,EAAGC,IAASD,EAAIC,EAAK7B,aAAa,EACnE,CACA,wBAAIgC,GACA,OAAO/O,KAAKgP,qBAChB,CACA,wBAAID,CAAqBA,GACjB/O,KAAKgP,wBAA0BD,IAGnC/O,KAAKgP,sBAAwBD,EAC7B/O,KAAKiP,uBACT,CACA,sBAAIC,GACA,OAAOlP,KAAKmP,mBAChB,CACA,sBAAID,CAAmBA,GACflP,KAAKmP,sBAAwBD,IAGjClP,KAAKmP,oBAAsBD,EAC3BlP,KAAKiP,uBACT,CACA,YAAIG,GACA,OAAOpP,KAAKqP,SAChB,CACA,YAAID,CAASvM,GACT7C,KAAKqP,UAAYxM,EACjB6E,EAAY1H,KAAK2E,QAAS,wBAAyB9B,EACvD,CACA,UAAIyM,GACA,OAAOtP,KAAKuP,OAChB,CACA,UAAID,CAAOzM,GACP7C,KAAKuP,QAAU1M,CACnB,CACAlD,WAAAA,CAAYyN,EAAWzJ,GAAU,IACzBjB,EAAI8M,EADoBC,EAAA,KAE5BzP,KAAKoN,UAAYA,EACjBpN,KAAKmO,UAAY,GACjBnO,KAAK0P,OAAS,GACd1P,KAAKwM,MAAQ,EACbxM,KAAKkO,gBAAkB,EACvBlO,KAAKgO,aAAe,EACpBhO,KAAKqO,kBAAe5N,EACpBT,KAAKgP,uBAAwB,EAC7BhP,KAAKmP,qBAAsB,EAC3BnP,KAAKqP,WAAY,EACjBrP,KAAKuP,QAAU,EACfvP,KAAK2P,cAAgB,IAAIvM,EACzBpD,KAAK4P,aAAe5P,KAAK2P,cAAc7L,MACvC9D,KAAK6P,cAAgB,IAAIzM,EACzBpD,KAAK8P,aAAe9P,KAAK6P,cAAc/L,MACvC9D,KAAK+P,iBAAmB,IAAI3M,EAC5BpD,KAAKgQ,gBAAkBhQ,KAAK+P,iBAAiBjM,MAC7C9D,KAAKiQ,OAAS,SAAC/L,EAAOgM,EAAOC,EAA2CC,EAAoBC,EAAqBC,EAA6CC,EAA6CC,EAAYC,GACnN,QAD8B,IAALN,IAAAA,EAAQV,EAAKtB,UAAU/O,KAAKsR,GAAMA,EAAExL,aAAgE,IAAhBoL,IAAAA,EAAmBzB,OAAO8B,wBAAmC,IAAhBJ,IAAAA,EAAmB1B,OAAOC,mBAChL5K,EAAQ,GAAKA,EAAQuL,EAAKtB,UAAU5M,OACpC,OAAO,EAEX,MAAMqP,EAAYxE,EAAMlI,GAAQ,GAC1B2M,EAAczE,EAAMlI,EAAQ,EAAGuL,EAAKtB,UAAU5M,QAEpD,GAAI8O,EACA,IAAK,MAAM/E,KAAK+E,EACZ9E,EAAYqF,EAAWtF,GACvBC,EAAYsF,EAAavF,GAGjC,GAAI8E,EACA,IAAK,MAAM9E,KAAK8E,EACZ3E,EAAUmF,EAAWtF,GACrBG,EAAUoF,EAAavF,GAI/B,MAAMwF,EAAUF,EAAUxR,KAAKkM,GAAMmE,EAAKtB,UAAU7C,KAC9CyF,EAAUH,EAAUxR,KAAKkM,GAAM6E,EAAM7E,KAErC0F,EAAYH,EAAYzR,KAAKkM,GAAMmE,EAAKtB,UAAU7C,KAClD2F,EAAYJ,EAAYzR,KAAKkM,GAAM6E,EAAM7E,KAEzC4F,EAAaN,EAAUlC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAI1B,EAAKtB,UAAU7C,GAAGsB,YAAcuD,EAAM7E,IAAI,GACtF8F,EAAaR,EAAUlC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAI1B,EAAKtB,UAAU7C,GAAGyB,YAAcoD,EAAM7E,IAAI,GAEtF+F,EAAsC,IAAvBR,EAAYtP,OAC3BsN,OAAOC,kBACP+B,EAAYnC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAIhB,EAAM7E,GAAKmE,EAAKtB,UAAU7C,GAAGsB,aAAa,GAC3E0E,EAAsC,IAAvBT,EAAYtP,OAC3BsN,OAAO8B,kBACPE,EAAYnC,QAAO,CAACyC,EAAG7F,IAAM6F,EAAIhB,EAAM7E,GAAKmE,EAAKtB,UAAU7C,GAAGyB,aAAa,GAE3EwE,EAAWvF,KAAKD,IAAImF,EAAYI,GAChCE,EAAWxF,KAAKF,IAAIuF,EAAcD,GAExC,IAAIK,GAAU,EACd,GAAIjB,EAAY,CACZ,MAAMkB,EAAWjC,EAAKtB,UAAUqC,EAAWtM,OACrCyI,EAAUuD,GAASM,EAAWmB,WACpCF,EAAU9E,IAAY+E,EAAS/E,QAC/B+E,EAASrE,WAAWV,EAAS6D,EAAWtL,KAC5C,CACA,IAAKuM,GAAWhB,EAAW,CACvB,MAAMiB,EAAWjC,EAAKtB,UAAUsC,EAAUvM,OACpCyI,EAAUuD,EAAQO,EAAUkB,WAClCF,EAAU9E,IAAY+E,EAAS/E,QAC/B+E,EAASrE,WAAWV,EAAS8D,EAAUvL,KAC3C,CACA,GAAIuM,EACA,OAAOhC,EAAKQ,OAAO/L,EAAOgM,EAAOC,EAAOC,EAAoBC,EAAqBC,EAAkBC,GAIvG,IAAIqB,EAAc,EAEdC,EAHmBhG,EAAMqE,EAAOqB,EAAUC,GAI9C,IAAK,IAAIlG,EAAI,EAAGA,EAAIwF,EAAQvP,OAAQ+J,IAAK,CACrC,MAAMsD,EAAOkC,EAAQxF,GACfpG,EAAO2G,EAAMkF,EAAQzF,GAAKuG,EAASjD,EAAKhC,YAAagC,EAAK7B,aAC1D+E,EAAY5M,EAAO6L,EAAQzF,GACjCsG,GAAeE,EACfD,GAAWC,EACXlD,EAAK1J,KAAOA,CAChB,CAEA,IAAI6M,EAAYH,EAChB,IAAK,IAAItG,EAAI,EAAGA,EAAI0F,EAAUzP,OAAQ+J,IAAK,CACvC,MAAMsD,EAAOoC,EAAU1F,GACjBpG,EAAO2G,EAAMoF,EAAU3F,GAAKyG,EAAWnD,EAAKhC,YAAagC,EAAK7B,aAEpEgF,GADkB7M,EAAO+L,EAAU3F,GAEnCsD,EAAK1J,KAAOA,CAChB,CAEA,OAAOgL,CACX,EACAlQ,KAAKuO,aAA8C,QAA9B7L,EAAKiB,EAAQ2K,mBAAgC,IAAP5L,EAAgBA,EAAK6K,EAAYyE,SAC5FhS,KAAK2E,QAAU3E,KAAKiS,kBACpBjS,KAAKsP,OAAmC,QAAzBE,EAAK7L,EAAQ2L,cAA2B,IAAPE,EAAgBA,EAAK,EACrExP,KAAKkS,wBAC8BzR,IAA/BkD,EAAQuO,sBAEAvO,EAAQuO,mBACpBlS,KAAKmS,cAAgBnS,KAAKoS,sBAC1BpS,KAAKqS,cAAgBrS,KAAKsS,sBAC1BtS,KAAK2E,QAAQ4N,YAAYvS,KAAKqS,eAC9BrS,KAAK2E,QAAQ4N,YAAYvS,KAAKmS,eAC9BnS,KAAKoN,UAAUmF,YAAYvS,KAAK2E,SAChC3E,KAAKqK,MAAM1G,EAAQ6O,QAEf7O,EAAQ8O,aACRzS,KAAKwM,MAAQ7I,EAAQ8O,WAAWvN,KAChCvB,EAAQ8O,WAAWC,MAAM5Q,SAAQ,CAAC6Q,EAAgBzO,KAC9C,MAAM0O,OAAoCnS,IAA3BkS,EAAehG,SAC1BgG,EAAehG,QACbgG,EAAezN,KACf,CACEN,KAAM,YACN6H,kBAAmBkG,EAAezN,MAEpC2H,EAAO8F,EAAe9F,KAC5B7M,KAAK6S,QAAQhG,EAAM+F,EAAQ1O,GAAO,EAEjC,IAGLlE,KAAKgO,aAAehO,KAAKmO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChElF,KAAK8S,kBAEb,CACAzI,KAAAA,CAAMmI,GAC+E,iBAA5EA,aAAuC,EAASA,EAAOO,kBACxD5L,EAAcnH,KAAK2E,QAAS,uBAC5B3E,KAAK2E,QAAQ0F,MAAM2I,eAAe,2BAGlCvL,EAAWzH,KAAK2E,QAAS,wBACrB6N,aAAuC,EAASA,EAAOO,kBACvD/S,KAAK2E,QAAQ0F,MAAM4I,YAAY,wBAAyBT,EAAOO,iBAG3E,CACAG,aAAAA,CAAchP,GACV,GAAIA,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,OACrC,MAAM,IAAIoB,MAAM,uBAGpB,OADiB3C,KAAKmO,UAAUjK,GAChByI,OACpB,CACAwG,cAAAA,CAAejP,EAAOyI,GAClB,GAAIzI,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,OACrC,MAAM,IAAIoB,MAAM,uBAEpB,MAAMyQ,EAAWpT,KAAKmO,UAAUjK,GAChCkP,EAAS/F,WAAWV,EAASyG,EAASlO,MACtClF,KAAKqT,qBAAqBnP,GAC1BlE,KAAKsT,cACLtT,KAAK8S,iBACT,CACAS,WAAAA,CAAYrP,GACR,OAAIA,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,QAC7B,EAELvB,KAAKmO,UAAUjK,GAAOgB,IACjC,CACAsO,UAAAA,CAAWtP,EAAOgB,GACd,GAAIhB,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,OACrC,OAEJ,MAAMkS,EAAUrH,EAAMpM,KAAKmO,UAAU5M,QAAQuJ,QAAQQ,GAAMA,IAAMpH,IAC3DkM,EAAqB,IACpBqD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACvExP,GAEEmM,EAAsBoD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAC1F/E,EAAO5O,KAAKmO,UAAUjK,GAC5BgB,EAAO8G,KAAK4H,MAAM1O,GAClBA,EAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAaZ,KAAKF,IAAI8C,EAAK7B,YAAa/M,KAAKwM,QACrEoC,EAAK1J,KAAOA,EACZlF,KAAK6T,SAASzD,EAAoBC,EACtC,CACAyD,QAAAA,GACI,OAAO9T,KAAKmO,UAAU/O,KAAKsR,GAAMA,EAAE7D,MACvC,CACAkH,WAAAA,CAAYnF,EAAM1J,GACd,MAAMhB,EAAQlE,KAAKmO,UAAUhK,QAAQyK,GACrC,GAAI1K,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,OACrC,OAEJ2D,EAAuB,iBAATA,EAAoBA,EAAO0J,EAAK1J,KAC9CA,EAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAagC,EAAK7B,aAC1C6B,EAAK1J,KAAOA,EACZ,MAAMuO,EAAUrH,EAAMpM,KAAKmO,UAAU5M,QAAQuJ,QAAQQ,GAAMA,IAAMpH,IAC3DkM,EAAqB,IACpBqD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACvExP,GAEEmM,EAAsBoD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAKhG3T,KAAK6T,SAAS,IAAIzD,EAAoBlM,GAAQmM,EAClD,CACAwC,OAAAA,CAAQhG,EAAM3H,EAA+BhB,EAA+B8P,QAA1D,IAAJ9O,IAAAA,EAAO,CAAEN,KAAM,oBAAqB,IAALV,IAAAA,EAAQlE,KAAKmO,UAAU5M,QAChE,MAAM6L,EAAYhF,SAAS6L,cAAc,OAGzC,IAAIC,EAFJ9G,EAAUnP,UAAY,UACtBmP,EAAUmF,YAAY1F,EAAKlI,SAGvBuP,EADgB,iBAAThP,EACIA,EAEQ,UAAdA,EAAKN,KACC5E,KAAKuT,YAAYrO,EAAKhB,OAAS,EAEvB,cAAdgB,EAAKN,KACC,CAAE6H,kBAAmBvH,EAAKuH,mBAG1BI,EAAKD,YAEpB,MAAMpG,EAAaqG,EAAKkH,aAAaI,GAAYnU,KAAK+T,YAAYX,EAAUe,EAAQjP,QAC9EkO,EAAW,IAAI7G,EAASa,EAAWP,EAAMqH,EAAU,CACrDrS,QAASA,KACL2E,EAAW3E,UACX7B,KAAKmS,cAAciC,YAAYhH,EAAU,IAUjD,GAPIlJ,IAAUlE,KAAKmO,UAAU5M,OACzBvB,KAAKmS,cAAcI,YAAYnF,GAG/BpN,KAAKmS,cAAckC,aAAajH,EAAWpN,KAAKmS,cAAchV,SAASyR,KAAK1K,IAEhFlE,KAAKmO,UAAU/J,OAAOF,EAAO,EAAGkP,GAC5BpT,KAAKmO,UAAU5M,OAAS,EAAG,CAE3B,MAAM+S,EAAOlM,SAAS6L,cAAc,OACpCK,EAAKrW,UAAY,UACjB,MAAMsW,EAAkBzQ,IACpB,IAAK,MAAM8K,KAAQ5O,KAAKmO,UACpBS,EAAKzB,SAAU,EAEnB,MAAMlD,EAAUD,IACVwK,EAAQxU,KAAKuO,eAAiBhB,EAAYkB,WAC1C3K,EAAM2Q,QACN3Q,EAAM4Q,QACNC,EHrUf,SAAoBjJ,EAAOkJ,GAC9B,IAAK,IAAItJ,EAAI,EAAGA,EAAII,EAAMnK,OAAQ+J,IAE9B,GAAIsJ,EADYlJ,EAAMJ,IAElB,OAAOA,EAGf,OAAQ,CACZ,CG6TkCuJ,CAAW7U,KAAK0P,QAASoF,GAAMA,EAAE1H,YAAckH,IAE3DnE,EAAQnQ,KAAKmO,UAAU/O,KAAKsR,GAAMA,EAAExL,OAE1C,IAAIsL,EACAC,EACJ,MAAMG,EAAYxE,EAAMuI,GAAY,GAC9B9D,EAAczE,EAAMuI,EAAY,EAAG3U,KAAKmO,UAAU5M,QAClD2P,EAAaN,EAAUlC,QAAO,CAACC,EAAGrD,IAAMqD,GAAK3O,KAAKmO,UAAU7C,GAAGsB,YAAcuD,EAAM7E,KAAK,GACxF8F,EAAaR,EAAUlC,QAAO,CAACC,EAAGrD,IAAMqD,GAAK3O,KAAKmO,UAAU7C,GAAG0B,gBAAkBmD,EAAM7E,KAAK,GAC5F+F,EAAsC,IAAvBR,EAAYtP,OAC3BsN,OAAOC,kBACP+B,EAAYnC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BwB,EAAM7E,GAAKtL,KAAKmO,UAAU7C,GAAGsB,cAAc,GAC9C0E,EAAsC,IAAvBT,EAAYtP,OAC3BsN,OAAO8B,kBACPE,EAAYnC,QAAO,CAACC,EAAGrD,IAAMqD,GAC1BwB,EAAM7E,GACHtL,KAAKmO,UAAU7C,GAAG0B,kBAAkB,GAC1CuE,EAAWvF,KAAKD,IAAImF,EAAYI,GAChCE,EAAWxF,KAAKF,IAAIuF,EAAcD,GAClC2D,EAAkB/U,KAAKgV,mBAAmBpE,GAC1CqE,EAAiBjV,KAAKgV,mBAAmBnE,GAC/C,GAA+B,iBAApBkE,EAA8B,CACrC,MAAMG,EAAkBlV,KAAKmO,UAAU4G,GACjCI,EAAWnJ,KAAKoJ,MAAMF,EAAgBpI,gBAAkB,GAC9D0D,EAAa,CACTtM,MAAO6Q,EACPpD,WAAYuD,EAAgBvI,QACtB4E,EAAW4D,EACX5D,EAAW4D,EACjBjQ,KAAMgQ,EAAgBhQ,KAE9B,CACA,GAA8B,iBAAnB+P,EAA6B,CACpC,MAAMC,EAAkBlV,KAAKmO,UAAU8G,GACjCE,EAAWnJ,KAAKoJ,MAAMF,EAAgBpI,gBAAkB,GAC9D2D,EAAY,CACRvM,MAAO+Q,EACPtD,WAAYuD,EAAgBvI,QACtB6E,EAAW2D,EACX3D,EAAW2D,EACjBjQ,KAAMgQ,EAAgBhQ,KAE9B,CACA,MAAMmQ,EAAiBvR,IACnB,MAGMoM,GAHUlQ,KAAKuO,eAAiBhB,EAAYkB,WAC5C3K,EAAM2Q,QACN3Q,EAAM4Q,SACYF,EACxBxU,KAAKiQ,OAAO0E,EAAWzE,EAAOC,OAAO1P,OAAWA,EAAW8Q,EAAUC,EAAUhB,EAAYC,GAC3FzQ,KAAKqT,uBACLrT,KAAKsT,aAAa,EAEhBgC,EAAMA,KACR,IAAK,MAAM1G,KAAQ5O,KAAKmO,UACpBS,EAAKzB,SAAU,EAEnBlD,EAAQM,UACRvK,KAAK8S,kBACL1K,SAAStD,oBAAoB,cAAeuQ,GAC5CjN,SAAStD,oBAAoB,YAAawQ,GAC1ClN,SAAStD,oBAAoB,gBAAiBwQ,GAC9CtV,KAAK2P,cAAcrL,UAAK7D,EAAU,EAEtC2H,SAASvD,iBAAiB,cAAewQ,GACzCjN,SAASvD,iBAAiB,YAAayQ,GACvClN,SAASvD,iBAAiB,gBAAiByQ,EAAI,EAEnDhB,EAAKzP,iBAAiB,cAAe0P,GACrC,MAAMgB,EAAW,CACbnI,UAAWkH,EACX9N,WAAYA,KACR8N,EAAKxP,oBAAoB,cAAeyP,GACxCvU,KAAKqS,cAAc+B,YAAYE,EAAK,GAG5CtU,KAAKqS,cAAcE,YAAY+B,GAC/BtU,KAAK0P,OAAOzL,KAAKsR,EACrB,CACKvB,GACDhU,KAAK6T,SAAS,CAAC3P,IAEd8P,GACe,iBAAT9O,GACO,eAAdA,EAAKN,MACL5E,KAAKwV,sBAETxV,KAAK6P,cAAcvL,KAAKuI,EAC5B,CACA2I,mBAAAA,GACI,MAAMC,EAAoB,GAC1B,IAAIC,EAAe,EACnB,IAAK,MAAM9G,KAAQ5O,KAAKmO,UAChBS,EAAK7B,YAAc6B,EAAKhC,YAAc,IACtC6I,EAAkBxR,KAAK2K,GACvB8G,GAAgB9G,EAAK1J,MAG7B,MAAMA,EAAO8G,KAAKoJ,MAAMM,EAAeD,EAAkBlU,QACzD,IAAK,MAAMqN,KAAQ6G,EACf7G,EAAK1J,KAAO2G,EAAM3G,EAAM0J,EAAKhC,YAAagC,EAAK7B,aAEnD,MAAM0G,EAAUrH,EAAMpM,KAAKmO,UAAU5M,QAC/B6O,EAAqBqD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG3T,KAAK6T,SAASzD,EAAoBC,EACtC,CACAsF,UAAAA,CAAWzR,EAAO0O,EAAQoB,QAAU,IAAVA,IAAAA,GAAa,GAEnC,MAAMZ,EAAWpT,KAAKmO,UAAU/J,OAAOF,EAAO,GAAG,GAGjD,GAFAkP,EAASvR,UAEL7B,KAAKmO,UAAU5M,QAAU,EAAG,CAC5B,MAAMoT,EAAY3I,KAAKD,IAAI7H,EAAQ,EAAG,GACrBlE,KAAK0P,OAAOtL,OAAOuQ,EAAW,GAAG,GACzCnO,YACb,CAQA,OAPKwN,GACDhU,KAAK6T,WAELjB,GAA0B,eAAhBA,EAAOhO,MACjB5E,KAAKwV,sBAETxV,KAAK+P,iBAAiBzL,KAAK8O,EAASvG,MAC7BuG,EAASvG,IACpB,CACA+I,wBAAAA,CAAyB1R,GACrB,GAAIA,EAAQ,GAAKA,GAASlE,KAAKmO,UAAU5M,OACrC,MAAM,IAAIoB,MAAM,uBAGpB,OADiB3C,KAAKmO,UAAUjK,GAChBuI,iBACpB,CACAoJ,QAAAA,CAASlQ,EAAM0G,GACX,MAAMI,EAAoBzM,KAAK4V,yBAAyBjQ,GAClDiN,OAAsC,IAAtBnG,EAChBzM,KAAKuT,YAAY5N,GACjB+H,EAAOG,UAAUpB,GACjBI,EAAO7M,KAAK2V,WAAWhQ,OAAMlF,GAAW,GAC9CT,KAAK6S,QAAQhG,EAAM+F,EAAQvG,EAC/B,CACAyJ,MAAAA,CAAO5Q,EAAM+I,GACT,MAAM8H,EAAe/J,KAAKD,IAAI/L,KAAKkF,KAAMlF,KAAKgO,cAG9C,GAFAhO,KAAKkF,KAAOA,EACZlF,KAAKiO,eAAiBA,EACjBjO,KAAKoO,YAML,CACD,IAAI4H,EAAQ,EACZ,IAAK,IAAI1K,EAAI,EAAGA,EAAItL,KAAKmO,UAAU5M,OAAQ+J,IAAK,CAC5C,MAAMsD,EAAO5O,KAAKmO,UAAU7C,GACtB2K,EAAajW,KAAKoO,YAAY9C,GACV,iBAAf2K,EACPD,GAASC,EAGT/Q,GAAQ0J,EAAK1J,IAErB,CACA,IAAK,IAAIoG,EAAI,EAAGA,EAAItL,KAAKmO,UAAU5M,OAAQ+J,IAAK,CAC5C,MAAMsD,EAAO5O,KAAKmO,UAAU7C,GACtB2K,EAAajW,KAAKoO,YAAY9C,GACV,iBAAf2K,GAA2BD,EAAQ,IAC1CpH,EAAK1J,KAAO2G,EAAMG,KAAK4H,MAAOqC,EAAa/Q,EAAQ8Q,GAAQpH,EAAKhC,YAAagC,EAAK7B,aAE1F,CACJ,KAzBuB,CACnB,MAAM0G,EAAUrH,EAAMpM,KAAKmO,UAAU5M,QAC/B6O,EAAqBqD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG3T,KAAKiQ,OAAOjQ,KAAKmO,UAAU5M,OAAS,EAAG2D,EAAO6Q,OAActV,EAAW2P,EAAoBC,EAC/F,CAqBArQ,KAAKqT,uBACLrT,KAAKsT,aACT,CACAO,QAAAA,CAASzD,EAAoBC,GACzB,MAAMtC,EAAc/N,KAAKmO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChElF,KAAKiQ,OAAOjQ,KAAKmO,UAAU5M,OAAS,EAAGvB,KAAKwM,MAAQuB,OAAatN,EAAW2P,EAAoBC,GAChGrQ,KAAKqT,uBACLrT,KAAKsT,cACLtT,KAAK8S,iBACT,CACAO,oBAAAA,CAAqB6C,GACjB,MAAMnI,EAAc/N,KAAKmO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChE,IAAIiR,EAAanW,KAAKkF,KAAO6I,EAC7B,MAAM0F,EAAUrH,EAAMpM,KAAKmO,UAAU5M,OAAS,GAAI,GAC5C6O,EAAqBqD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAeiG,MACzFrD,EAAsBoD,EAAQ3I,QAAQQ,GAAMtL,KAAKmO,UAAU7C,GAAG2B,WAAaQ,EAAekG,OAChG,IAAK,MAAMzP,KAASmM,EAChB9E,EAAYkI,EAASvP,GAEzB,IAAK,MAAMA,KAASkM,EAChB3E,EAAUgI,EAASvP,GAES,iBAArBgS,GACPzK,EAAUgI,EAASyC,GAEvB,IAAK,IAAI5K,EAAI,EAAkB,IAAf6K,GAAoB7K,EAAImI,EAAQlS,OAAQ+J,IAAK,CACzD,MAAMsD,EAAO5O,KAAKmO,UAAUsF,EAAQnI,IAC9BpG,EAAO2G,EAAM+C,EAAK1J,KAAOiR,EAAYvH,EAAKhC,YAAagC,EAAK7B,aAElEoJ,GADkBjR,EAAO0J,EAAK1J,KAE9B0J,EAAK1J,KAAOA,CAChB,CACJ,CACA4N,eAAAA,GACQ9S,KAAKkS,oBAAsBlS,KAAKgO,aAAe,IAC/ChO,KAAKqO,aAAerO,KAAKmO,UAAU/O,KAAKkM,GAAMA,EAAEqB,QAAUrB,EAAEpG,KAAOlF,KAAKgO,kBAAevN,IAE/F,CAUA6S,WAAAA,GAGI,GAFAtT,KAAKgO,aAAehO,KAAKmO,UAAUO,QAAO,CAACC,EAAGrD,IAAMqD,EAAIrD,EAAEpG,MAAM,GAChElF,KAAKiP,uBACyB,IAA1BjP,KAAKmO,UAAU5M,OACf,OAEJ,MAAM6U,EAAmBpW,KAAKmO,UAAUrD,QAAQQ,GAAMA,EAAEqB,UAClD0J,EAAYrK,KAAKD,IAAI,EAAGqK,EAAiB7U,OAAS,GAClD+U,EAAqBtW,KAAKsP,OAAS+G,EAAarK,KAAKD,IAAI,EAAGqK,EAAiB7U,QACnF,IAAIgV,EAAkB,EACtB,MAAMC,EAAkB,GAElBC,EAA2BzW,KAAKmO,UAAUO,QAAO,CAACxD,EAAKkI,EAAU9H,KACnE,MAAMoL,EAAOtD,EAASzG,QAAU,EAAI,EAOpC,OANU,IAANrB,EACAJ,EAAIjH,KAAKyS,GAGTxL,EAAIjH,KAAKiH,EAAII,EAAI,GAAKoL,GAEnBxL,CAAG,GACX,IAEHlL,KAAKmO,UAAUrM,SAAQ,CAAC+K,EAAMvB,KAC1BiL,GAAmBvW,KAAKmO,UAAU7C,GAAGpG,KACrCsR,EAAgBvS,KAAKsS,GACrB,MAAMrR,EAAO2H,EAAKF,QAAUE,EAAK3H,KAAOoR,EAAoB,EACtDK,EAA8B3K,KAAKD,IAAI,EAAG0K,EAAyBnL,GAAK,GACxEsL,EAAe,IAANtL,GAA2C,IAAhCqL,EACpB,EACAH,EAAgBlL,EAAI,GACjBqL,EAA8BN,EAC3BC,EACZ,GAAIhL,EAAItL,KAAKmO,UAAU5M,OAAS,EAAG,CAE/B,MAAM4S,EAAUtH,EAAKF,QACfiK,EAAS1R,EAAO2R,EAAgB7W,KAAKsP,OAAS,EAC9CsH,EACF5W,KAAKuO,eAAiBhB,EAAYkB,aAClCzO,KAAK0P,OAAOpE,GAAG8B,UAAU/C,MAAMZ,KAAQ,GAAE0K,MACzCnU,KAAK0P,OAAOpE,GAAG8B,UAAU/C,MAAMX,IAAO,OAEtC1J,KAAKuO,eAAiBhB,EAAYyE,WAClChS,KAAK0P,OAAOpE,GAAG8B,UAAU/C,MAAMZ,KAAQ,MACvCzJ,KAAK0P,OAAOpE,GAAG8B,UAAU/C,MAAMX,IAAO,GAAEyK,MAEhD,CAEInU,KAAKuO,eAAiBhB,EAAYkB,aAClC5B,EAAKO,UAAU/C,MAAMV,MAAS,GAAEzE,MAChC2H,EAAKO,UAAU/C,MAAMZ,KAAQ,GAAEmN,MAC/B/J,EAAKO,UAAU/C,MAAMX,IAAM,GAC3BmD,EAAKO,UAAU/C,MAAMT,OAAS,IAE9B5J,KAAKuO,eAAiBhB,EAAYyE,WAClCnF,EAAKO,UAAU/C,MAAMT,OAAU,GAAE1E,MACjC2H,EAAKO,UAAU/C,MAAMX,IAAO,GAAEkN,MAC9B/J,EAAKO,UAAU/C,MAAMV,MAAQ,GAC7BkD,EAAKO,UAAU/C,MAAMZ,KAAO,IAEhCoD,EAAKA,KAAKiJ,OAAOjJ,EAAK3H,KAAOoR,EAAmBtW,KAAKkO,gBAAgB,GAE7E,CACA8G,kBAAAA,CAAmBvB,GAEf,IAAK,MAAMvP,KAASuP,EAAS,CACzB,MAAML,EAAWpT,KAAKmO,UAAUjK,GAChC,GAAKkP,EAASzG,SAGVyG,EAASlG,KACT,OAAOhJ,CAEf,CAEA,IAAK,MAAMA,KAASuP,EAAS,CACzB,MAAML,EAAWpT,KAAKmO,UAAUjK,GAChC,GAAIkP,EAASzG,SACTyG,EAASrG,YAAcqG,EAASxG,YAAc,EAC9C,OAEJ,IAAKwG,EAASzG,SAAWyG,EAASlG,KAC9B,OAAOhJ,CAEf,CAEJ,CACA+K,oBAAAA,GACI,IAAI6H,GAAW,EACf,MAAMC,EAAgB/W,KAAKmO,UAAU/O,KAAKkM,GAAOwL,EAAWxL,EAAEpG,KAAOoG,EAAEsB,YAAc,GAAKkK,IAC1FA,GAAW,EACX,MAAME,EAAchX,KAAKmO,UAAU/O,KAAKkM,GAAOwL,EAAWxL,EAAEyB,YAAczB,EAAEpG,KAAO,GAAK4R,IAClFG,EAAe,IAAIjX,KAAKmO,WAAW+I,UACzCJ,GAAW,EACX,MAAMK,EAAcF,EACf7X,KAAKkM,GAAOwL,EAAWxL,EAAEpG,KAAOoG,EAAEsB,YAAc,GAAKkK,IACrDI,UACLJ,GAAW,EACX,MAAMM,EAAYH,EACb7X,KAAKkM,GAAOwL,EAAWxL,EAAEyB,YAAczB,EAAEpG,KAAO,GAAK4R,IACrDI,UACL,IAAIG,EAAW,EACf,IAAK,IAAInT,EAAQ,EAAGA,EAAQlE,KAAK0P,OAAOnO,OAAQ2C,IAAS,CACrD,MAAMoQ,EAAOtU,KAAK0P,OAAOxL,GAEzBmT,GADiBrX,KAAKmO,UAAUjK,GACXgB,KACrB,MAAM4G,IAAQiL,EAAc7S,IAAUkT,EAAUlT,EAAQ,IAClD6H,IAAQiL,EAAY9S,IAAUiT,EAAYjT,EAAQ,IACxD,GAAI4H,GAAOC,EAAK,CACZ,MAAM6E,EAAYxE,EAAMlI,GAAQ,GAC1B2M,EAAczE,EAAMlI,EAAQ,EAAGlE,KAAKmO,UAAU5M,QAC9CwT,EAAkB/U,KAAKgV,mBAAmBpE,GAC1CqE,EAAiBjV,KAAKgV,mBAAmBnE,GACzCyG,EAA2C,iBAApBvC,IACxB/U,KAAKmO,UAAU4G,GAAiBpI,QAC/B4K,EAAyC,iBAAnBtC,IACvBjV,KAAKmO,UAAU8G,GAAgBtI,QAChC2K,GACAH,EAAYjT,KACXmT,EAAW,GAAKrX,KAAK+O,sBACtB/O,KAAKwX,WAAWlD,EAAM9G,EAAUiK,SAE3BF,GACLR,EAAc7S,KACbmT,EAAWrX,KAAKgO,cAAgBhO,KAAKkP,oBACtClP,KAAKwX,WAAWlD,EAAM9G,EAAUkK,SAGhC1X,KAAKwX,WAAWlD,EAAM9G,EAAUmK,SAExC,MACS7L,IAAQC,EACb/L,KAAKwX,WAAWlD,EAAM9G,EAAUiK,UAE1B3L,GAAOC,EACb/L,KAAKwX,WAAWlD,EAAM9G,EAAUkK,SAGhC1X,KAAKwX,WAAWlD,EAAM9G,EAAUoK,QAExC,CACJ,CACAJ,UAAAA,CAAWlD,EAAMuD,GACbnQ,EAAY4M,EAAKlH,UAAW,cAAeyK,IAAUrK,EAAUmK,UAC/DjQ,EAAY4M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUoK,SAC9DlQ,EAAY4M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUkK,SAC9DhQ,EAAY4M,EAAKlH,UAAW,aAAcyK,IAAUrK,EAAUiK,QAClE,CACArF,mBAAAA,GACI,MAAMzN,EAAUyD,SAAS6L,cAAc,OAEvC,OADAtP,EAAQ1G,UAAY,oBACb0G,CACX,CACA2N,mBAAAA,GACI,MAAM3N,EAAUyD,SAAS6L,cAAc,OAEvC,OADAtP,EAAQ1G,UAAY,oBACb0G,CACX,CACAsN,eAAAA,GACI,MAAMtN,EAAUyD,SAAS6L,cAAc,OACjC6D,EAAuB9X,KAAKuO,eAAiBhB,EAAYkB,WACzD,gBACA,cAEN,OADA9J,EAAQ1G,UAAa,2BAA0B6Z,IACxCnT,CACX,CACA9C,OAAAA,GACI7B,KAAK2P,cAAc9N,UACnB7B,KAAK6P,cAAchO,UACnB7B,KAAK+P,iBAAiBlO,UACtB,IAAK,IAAIyJ,EAAI,EAAGA,EAAItL,KAAK2E,QAAQxH,SAASoE,OAAQ+J,IAC9C,GAAItL,KAAK2E,QAAQxH,SAASyR,KAAKtD,KAAOtL,KAAK2E,QAAS,CAChD3E,KAAK2E,QAAQyP,YAAYpU,KAAK2E,SAC9B,KACJ,CAEJ,IAAK,MAAMyO,KAAYpT,KAAKmO,UACxBiF,EAASvR,UAEb7B,KAAK2E,QAAQ6C,QACjB,EC5vBG,MAAMuQ,EAA0B,MAKnC,MAAMC,EAAa,CACf1J,iBAAa7N,EACbgS,gBAAYhS,EACZyR,wBAAoBzR,EACpB+R,YAAQ/R,EACR6O,YAAQ7O,EACRwX,yBAAqBxX,EACrBxC,eAAWwC,GAEf,OAAOyX,OAAOC,KAAKH,EACtB,EAfsC,GCIhC,MAAMI,UAAiBvS,EAC1B,gBAAIiK,GACA,OAAO9P,KAAKqY,UAAUvI,YAC1B,CACA,mBAAIE,GACA,OAAOhQ,KAAKqY,UAAUrI,eAC1B,CACA,eAAIpD,GACA,OAAO5M,KAAKqY,UAAUzL,WAC1B,CACA,eAAIG,GACA,OAAO/M,KAAKqY,UAAUtL,WAC1B,CACA,eAAIuB,GACA,OAAOtO,KAAKqY,UAAU/J,WAC1B,CACA,QAAIpJ,GACA,OAAOlF,KAAKqY,UAAUnT,IAC1B,CACA,kBAAI+I,GACA,OAAOjO,KAAKqY,UAAUpK,cAC1B,CACAtO,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,QACAC,KAAKsY,UAAY,GACjBtY,KAAKuY,eAAgB,EACrBvY,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAKuO,aAA8C,QAA9B7L,EAAKiB,EAAQ2K,mBAAgC,IAAP5L,EAAgBA,EAAK6K,EAAYyE,SAC5FhS,KAAK2E,QAAUyD,SAAS6L,cAAc,OACtCjU,KAAK2E,QAAQ1G,UAAY,oBACzBmP,EAAUmF,YAAYvS,KAAK2E,SAC3B3E,KAAKqY,UAAY,IAAIvK,EAAU9N,KAAK2E,QAAS,CACzC2J,YAAatO,KAAKuO,aAClB2D,oBAAoB,EACpBO,WAAY9O,EAAQ8O,aAIxBzS,KAAKyY,WAAW3W,SAAS4W,IACrB,MAAMlS,EAAa,IAAIX,EAAoB6S,EAAKC,2BAA0B,KACtE3Y,KAAK4Y,iBACL5Y,KAAKwY,aAAalU,UAAK7D,EAAU,KAE/BoY,EAAW,CACbH,OACAlS,WAAY,CACR3E,QAASA,KACL2E,EAAW3E,SAAS,IAIhC7B,KAAKsY,UAAUrU,KAAK4U,GACpBH,EAAKzK,eAAiBjO,KAAKqY,UAAUpK,cAAc,IAEvDjO,KAAKkG,eAAelG,KAAKwY,aAAcxY,KAAKqY,UAAUzI,cAAa,KAC/D5P,KAAKwY,aAAalU,UAAK7D,EAAU,IACjCT,KAAKqY,UAAUvI,cAAa,KAC5B9P,KAAKwY,aAAalU,MAAM,IACxBtE,KAAKqY,UAAUrI,iBAAgB,KAC/BhQ,KAAKwY,aAAalU,MAAM,IAEhC,CACA6O,cAAAA,CAAejP,EAAOyI,GAClB3M,KAAKqY,UAAUlF,eAAejP,EAAOyI,EACzC,CACAmM,OAAAA,CAAQJ,EAAMxT,EAAMhB,EAA+B8P,QAA1B,IAAL9P,IAAAA,EAAQlE,KAAKqY,UAAU9W,aAAkB,IAAVyS,IAAAA,GAAa,GAC5D,MAAMxN,EAAakS,EAAKC,2BAA0B,KAC9C3Y,KAAK4Y,iBACL5Y,KAAKwY,aAAalU,UAAK7D,EAAU,IAE/BoY,EAAW,CACbH,OACAlS,WAAY,CACR3E,QAASA,KACL2E,EAAW3E,SAAS,IAIhC7B,KAAKsY,UAAUlU,OAAOF,EAAO,EAAG2U,GAChCH,EAAKzK,eAAiBjO,KAAKqY,UAAUpK,eACrCjO,KAAKqY,UAAUxF,QAAQ6F,EAAMxT,EAAMhB,EAAO8P,EAC9C,CACAT,WAAAA,CAAYrP,GACR,OAAOlE,KAAKqY,UAAU9E,YAAYrP,EACtC,CACAuU,QAAAA,GACI,OAAOzY,KAAKqY,UAAUvE,UAC1B,CACAiF,UAAAA,CAAW7U,EAAOP,QAAO,IAAPA,IAAAA,EAAU,CAAEqV,aAAa,IACvC,MAAMH,EAAW7Y,KAAKsY,UAAUlU,OAAOF,EAAO,GAAG,GAMjD,OALAlE,KAAKqY,UAAU1C,WAAWzR,GACrBP,EAAQqV,cACTH,EAASrS,WAAW3E,UACpBgX,EAASH,KAAK7W,WAEXgX,CACX,CACAhD,QAAAA,CAASlQ,EAAM0G,GACX,GAAI1G,IAAS0G,EACT,OAEJ,MAAMQ,EAAO7M,KAAK+Y,WAAWpT,EAAM,CAAEqT,aAAa,IAClDhZ,KAAKuY,eAAgB,EACrB,IACIvY,KAAK8Y,QAAQjM,EAAK6L,KAAM7L,EAAK6L,KAAKxT,KAAMmH,GAAI,EAChD,CAAC,QAEGrM,KAAKuY,eAAgB,CACzB,CACJ,CACAzC,MAAAA,CAAO5Q,EAAM+I,GACTjO,KAAKqY,UAAUvC,OAAO5Q,EAAM+I,EAChC,CACA2K,cAAAA,GACQ5Y,KAAKuY,gBAGLvY,KAAKiZ,iBACLC,aAAalZ,KAAKiZ,gBAClBjZ,KAAKiZ,oBAAiBxY,GAE1BgH,EAAWzH,KAAK2E,QAAS,eACzB3E,KAAKiZ,eAAiBhQ,YAAW,KAC7BjJ,KAAKiZ,oBAAiBxY,EACtB0G,EAAcnH,KAAK2E,QAAS,cAAc,GAC3C,KACP,CACA9C,OAAAA,GACI9B,MAAM8B,UACF7B,KAAKiZ,iBACLC,aAAalZ,KAAKiZ,gBAClBjZ,KAAKiZ,oBAAiBxY,GAE1BT,KAAKsY,UAAUxW,SAAS+W,IACpBA,EAASrS,WAAW3E,UACpBgX,EAASH,KAAK7W,SAAS,IAE3B7B,KAAKsY,UAAY,GACjBtY,KAAKqY,UAAUxW,UACf7B,KAAK2E,QAAQ6C,QACjB,EC5IG,MAAM2R,EACT,gBAAIC,GACA,OAAOpZ,KAAK6M,KAAKuM,YACrB,CACA,gBAAIC,GACA,OAAOrZ,KAAK6M,KAAKwM,YACrB,CACA,iBAAIC,GACA,OAAOtZ,KAAK6M,KAAKyM,aACrB,CACA,iBAAIC,GACA,OAAOvZ,KAAK6M,KAAK0M,aACrB,CACA,YAAItM,GACA,OAAOjN,KAAK6M,KAAKI,QACrB,CACA,QAAIC,GACA,OAAOlN,KAAK6M,KAAKK,IACrB,CACA,eAAIN,GACA,OAAO5M,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKsZ,cACLtZ,KAAKoZ,YACf,CACA,eAAIrM,GACA,OAAO/M,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKuZ,cACLvZ,KAAKqZ,YACf,CACA,yBAAIG,GACA,OAAOxZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKoZ,aACLpZ,KAAKsZ,aACf,CACA,yBAAIG,GACA,OAAOzZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKqZ,aACLrZ,KAAKuZ,aACf,CACA,kBAAItL,GACA,OAAOjO,KAAKkO,eAChB,CACA,QAAIhJ,GACA,OAAOlF,KAAKwM,KAChB,CACA,WAAI7H,GACA,OAAO3E,KAAK6M,KAAKlI,OACrB,CACA,SAAIgF,GACA,OAAO3J,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKiO,eACLjO,KAAKkF,IACf,CACA,UAAI0E,GACA,OAAO5J,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKkF,KACLlF,KAAKiO,cACf,CACAtO,WAAAA,CAAYkN,EAAMyB,EAAaL,EAAgB/I,QAAI,IAAJA,IAAAA,EAAO,GAClDlF,KAAK6M,KAAOA,EACZ7M,KAAKsO,YAAcA,EACnBtO,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAKkO,gBAAkBD,EACvBjO,KAAKwM,MAAQtH,EACblF,KAAKuG,YAAcvG,KAAK6M,KAAKkH,aAAajQ,IAClCA,EACA9D,KAAKwY,aAAalU,KAAK,CACnBY,KAAMlF,KAAKsO,cAAgBf,EAAYyE,SACjClO,EAAM6F,MACN7F,EAAM8F,OACZqE,eAAgBjO,KAAKsO,cAAgBf,EAAYyE,SAC3ClO,EAAM8F,OACN9F,EAAM6F,QAIhB3J,KAAKwY,aAAalU,KAAK,CAAC,EAC5B,GAER,CACA+I,UAAAA,CAAWV,GACH3M,KAAK6M,KAAKQ,YACVrN,KAAK6M,KAAKQ,WAAWV,EAE7B,CACAmJ,MAAAA,CAAO5Q,EAAM+I,GACTjO,KAAKwM,MAAQtH,EACblF,KAAKkO,gBAAkBD,EACvBjO,KAAK6M,KAAKiJ,OAAO9V,KAAK2J,MAAO3J,KAAK4J,OACtC,CACA/H,OAAAA,GACI7B,KAAKwY,aAAa3W,UAClB7B,KAAKuG,YAAY1E,SACrB,EC5FG,MAAM6X,UAAmB7T,EAC5B,SAAI8D,GACA,OAAO3J,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKkF,KACLlF,KAAKiO,cACf,CACA,UAAIrE,GACA,OAAO5J,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKiO,eACLjO,KAAKkF,IACf,CACA,eAAI0H,GACA,OAAgC,IAAzB5M,KAAK7C,SAASoE,OACf,EACAyK,KAAKD,OAAO/L,KAAK7C,SAASiC,KAAI,CAACua,EAAGzV,IAAUlE,KAAKqY,UAAUnF,cAAchP,GACrEyV,EAAEH,sBACF,IACd,CACA,eAAIzM,GACA,OAAOf,KAAKF,OAAO9L,KAAK7C,SAASiC,KAAI,CAACua,EAAGzV,IAAUlE,KAAKqY,UAAUnF,cAAchP,GAC1EyV,EAAEF,sBACF5K,OAAOC,oBACjB,CACA,yBAAI0K,GACA,OAAOxZ,KAAKqY,UAAUzL,WAC1B,CACA,yBAAI6M,GACA,OAAOzZ,KAAKqY,UAAUtL,WAC1B,CACA,kBAAIkB,GACA,OAAOjO,KAAKkO,eAChB,CACA,QAAIhJ,GACA,OAAOlF,KAAKwM,KAChB,CACA,gBAAI4M,GACA,OAAOpZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKwZ,sBACLxZ,KAAK4M,WACf,CACA,iBAAI0M,GACA,OAAOtZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAK4M,YACL5M,KAAKwZ,qBACf,CACA,gBAAIH,GACA,OAAOrZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAKyZ,sBACLzZ,KAAK+M,WACf,CACA,iBAAIwM,GACA,OAAOvZ,KAAKsO,cAAgBf,EAAYkB,WAClCzO,KAAK+M,YACL/M,KAAKyZ,qBACf,CACA,YAAIxM,GACA,GAA6B,IAAzBjN,KAAK7C,SAASoE,OACd,OAAOkM,EAAemM,OAE1B,MAAMC,EAAa7Z,KAAK7C,SAASiC,KAAKua,QAA4B,IAAfA,EAAE1M,SAC/CQ,EAAemM,OACfD,EAAE1M,WACR,OAAI4M,EAAWC,MAAMC,GAAMA,IAAMtM,EAAekG,OACrClG,EAAekG,KAEjBkG,EAAWC,MAAMC,GAAMA,IAAMtM,EAAeiG,MAC1CjG,EAAeiG,IAEnBjG,EAAemM,MAC1B,CACA,YAAIxK,GACA,OAAOpP,KAAKqY,UAAUjJ,QAC1B,CACA,YAAIA,CAASvM,GACT7C,KAAKqY,UAAUjJ,SAAWvM,CAC9B,CACA,UAAIyM,GACA,OAAOtP,KAAKqY,UAAU/I,MAC1B,CACA,UAAIA,CAAOzM,GACP7C,KAAKqY,UAAU/I,OAASzM,EACxB7C,KAAK7C,SAAS2E,SAASF,IACfA,aAAiB8X,IACjB9X,EAAM0N,OAASzM,EACnB,GAER,CACAlD,WAAAA,CAAY2O,EAAa4D,EAAoBM,EAAQtN,EAAM+I,EAAgBmB,EAAUE,EAAQ0K,GAezF,GAdAja,QACAC,KAAKsO,YAAcA,EACnBtO,KAAKkS,mBAAqBA,EAC1BlS,KAAKwS,OAASA,EACdxS,KAAKia,oBAAsB9Y,EAAWuE,KACtC1F,KAAK7C,SAAW,GAChB6C,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAKka,uBAAyB,IAAI9W,EAClCpD,KAAKma,sBAAwBna,KAAKka,uBAAuBpW,MACzD9D,KAAKkO,gBAAkBD,EACvBjO,KAAKwM,MAAQtH,EACblF,KAAK2E,QAAUyD,SAAS6L,cAAc,OACtCjU,KAAK2E,QAAQ1G,UAAY,iBACpB+b,EASA,CACD,MAAMvH,EAAa,CACfC,MAAOsH,EAAiB5a,KAAKgb,IAClB,CACHvN,KAAMuN,EAAgBC,KACtBnV,KAAMkV,EAAgBC,KAAKnV,KAC3ByH,UAASyN,EAAgBC,gBAAgBlB,QACT1Y,IAA5B2Z,EAAgBzN,UACdyN,EAAgBzN,YAI9BzH,KAAMlF,KAAKiO,gBAEfjO,KAAK7C,SAAW6c,EAAiB5a,KAAKua,GAAMA,EAAEU,OAC9Cra,KAAKqY,UAAY,IAAIvK,EAAU9N,KAAK2E,QAAS,CACzC2J,YAAatO,KAAKsO,YAClBmE,aACAP,qBACAM,SACAlD,UAER,MA9BItP,KAAKqY,UAAY,IAAIvK,EAAU9N,KAAK2E,QAAS,CACzC2J,YAAatO,KAAKsO,YAClB4D,qBACAM,SACAlD,WAEJtP,KAAKqY,UAAUvC,OAAO9V,KAAKkF,KAAMlF,KAAKiO,gBAyB1CjO,KAAKoP,SAAWA,EAChBpP,KAAKkG,eAAelG,KAAKwY,aAAcxY,KAAKka,uBAAwBla,KAAKqY,UAAUzI,cAAa,KAC5F5P,KAAKwY,aAAalU,KAAK,CAAC,EAAE,KAE9BtE,KAAKsa,qBACT,CACAjN,UAAAA,CAAWkN,GACP,CAEJC,cAAAA,CAAetW,GACX,GAAIA,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAEpB,OAAO3C,KAAKqY,UAAUnF,cAAchP,EACxC,CACAuW,eAAAA,CAAgBvW,EAAOyI,GACnB,GAAIzI,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAEpB,GAAI3C,KAAKqY,UAAUnF,cAAchP,KAAWyI,EACxC,OAEJ,MAAM+N,EAAuD,IAA/B1a,KAAKqY,UAAUtK,YAC7C/N,KAAKqY,UAAUlF,eAAejP,EAAOyI,GAErC,MAAMgO,EAAsD,IAA/B3a,KAAKqY,UAAUtK,aAGvCpB,GAAW+N,IACV/N,GAAWgO,IACb3a,KAAKka,uBAAuB5V,KAAK,CAAEqI,WAE3C,CACAiO,SAAAA,CAAUjV,EAAM0G,GACZ,GAAI1G,IAAS0G,EACT,OAEJ,GAAI1G,EAAO,GAAKA,GAAQ3F,KAAK7C,SAASoE,OAClC,MAAM,IAAIoB,MAAM,sBAEhBgD,EAAO0G,GACPA,IAEJrM,KAAKqY,UAAUxC,SAASlQ,EAAM0G,GAC9B,MAAMzK,EAAQ5B,KAAK6a,aAAalV,GAChC3F,KAAK8a,UAAUlZ,EAAOyK,EAC1B,CACA0O,YAAAA,CAAa7W,GACT,GAAIA,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAEpB,OAAO3C,KAAKqY,UAAU9E,YAAYrP,EACtC,CACA8W,WAAAA,CAAY9W,EAAOgB,GACf,GAAIhB,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAEpB3C,KAAKqY,UAAU7E,WAAWtP,EAAOgB,EACrC,CACA4Q,MAAAA,CAAO5Q,EAAM+I,GACTjO,KAAKwM,MAAQyB,EACbjO,KAAKkO,gBAAkBhJ,EACvBlF,KAAKqY,UAAUvC,OAAO7H,EAAgB/I,EAC1C,CACA+V,QAAAA,CAASZ,EAAMnV,EAAMhB,EAAO8P,GACxB,GAAI9P,EAAQ,GAAKA,EAAQlE,KAAK7C,SAASoE,OACnC,MAAM,IAAIoB,MAAM,iBAEpB3C,KAAKqY,UAAUxF,QAAQwH,EAAMnV,EAAMhB,EAAO8P,GAC1ChU,KAAK8a,UAAUT,EAAMnW,EACzB,CACAgX,yBAAAA,CAA0BhX,GACtB,GAAIA,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAEpB,OAAO3C,KAAKqY,UAAUzC,yBAAyB1R,EACnD,CACAkQ,WAAAA,CAAYlQ,EAAO0O,GACf,GAAI1O,EAAQ,GAAKA,GAASlE,KAAK7C,SAASoE,OACpC,MAAM,IAAIoB,MAAM,iBAGpB,OADA3C,KAAKqY,UAAU1C,WAAWzR,EAAO0O,GAC1B5S,KAAK6a,aAAa3W,EAC7B,CACA4W,SAAAA,CAAUT,EAAMnW,GACZlE,KAAK7C,SAASiH,OAAOF,EAAO,EAAGmW,GAC/Bra,KAAKsa,qBACT,CACAO,YAAAA,CAAa3W,GACT,MAAOtC,GAAS5B,KAAK7C,SAASiH,OAAOF,EAAO,GAE5C,OADAlE,KAAKsa,sBACE1Y,CACX,CACA0Y,mBAAAA,GACIta,KAAKia,oBAAoBpY,UACzB7B,KAAKia,oBAAsB,IAAIpU,EAAoB3E,EAAME,OAAOpB,KAAK7C,SAASiC,KAAKua,GAAMA,EAAE5F,cAAxC7S,EAAuDqD,IAKtGvE,KAAKwY,aAAalU,KAAK,CAAEY,KAAMX,EAAE0J,gBAAiB,OAC/CjO,KAAK7C,SAASiC,KAAI,CAACua,EAAGrO,IACrBqO,aAAaD,EACNC,EAAEQ,uBAAsBnb,IAAkB,IAAjB,QAAE2N,GAAS3N,EACvCgB,KAAKya,gBAAgBnP,EAAGqB,EAAQ,IAGjCxL,EAAWuE,OAE1B,CACA7D,OAAAA,GACI7B,KAAKia,oBAAoBpY,UACzB7B,KAAKqY,UAAUxW,UACf7B,KAAK7C,SAAS2E,SAASF,GAAUA,EAAMC,YACvC9B,MAAM8B,SACV,ECvPJ,SAASsZ,EAASC,EAAcC,GAC5B,GAAID,aAAwBjC,EACxB,OAAOiC,EAEX,GAAIA,aAAwB1B,EACxB,OAAOyB,EAASC,EAAaje,SAASke,EAAOD,EAAaje,SAASoE,OAAS,EAAI,GAAI8Z,GAExF,MAAM,IAAI1Y,MAAM,eACpB,CACA,SAAS2Y,EAASjB,EAAMnV,EAAM+I,GAC1B,GAAIoM,aAAgBX,EAAY,CAC5B,MAAMpN,EAAS,IAAIoN,EAAW6B,GAAWlB,EAAK/L,aAAc+L,EAAKnI,mBAAoBmI,EAAK7H,OAAQtN,EAAM+I,EAAgBoM,EAAKjL,SAAUiL,EAAK/K,QAC5I,IAAIkM,EAAY,EAChB,IAAK,IAAIlQ,EAAI+O,EAAKld,SAASoE,OAAS,EAAG+J,GAAK,EAAGA,IAAK,CAChD,MAAM1J,EAAQyY,EAAKld,SAASmO,GACtBmQ,EAAY7Z,aAAiB8X,EAAa9X,EAAMqM,eAAiBrM,EAAMsD,KAC7E,IAAIiP,EAAwB,IAAdkG,EAAKnV,KACb,EACA8G,KAAK4H,MAAO1O,EAAOuW,EAAapB,EAAKnV,MAC3CsW,GAAarH,EAEH,IAAN7I,IACA6I,GAAWjP,EAAOsW,GAEtBlP,EAAO2O,SAASK,EAAS1Z,EAAOqM,EAAgBkG,GAAUA,EAAS,GAAG,EAC1E,CACA,OAAO7H,CACX,CAEI,OAAO,IAAI6M,EAASkB,EAAKxN,KAAM0O,GAAWlB,EAAK/L,aAAcL,EAErE,CAoBO,SAASyN,GAAgB/W,GAC5B,MAAMgX,EAAgBhX,EAAQgX,cAC9B,IAAKA,EACD,MAAM,IAAIhZ,MAAM,wBAEpB,GAAI,mBAAmBiZ,KAAKD,EAAc1d,WACtC,MAAO,GAEX,MAAMiG,EA3BH,SAAuBS,GAC1B,MAAMgX,EAAgBhX,EAAQgX,cAC9B,IAAKA,EACD,MAAM,IAAIhZ,MAAM,wBAEpB,IAAIkZ,EAAKF,EAAcG,kBACnB5X,EAAQ,EACZ,KAAO2X,IAAOlX,GAAWkX,IAAOF,EAAcI,kBAAoBF,GAC9DA,EAAKA,EAAGG,mBACR9X,IAEJ,OAAOA,CACX,CAekB+X,CAAcN,GAE5B,MAAO,IAAID,GADMC,EAAcA,cAAcA,cAAcA,eACrBzX,EAC1C,CACO,SAASgY,GAAoBC,EAAiBC,EAAUC,GAC3D,MAAM/N,EAoBH,SAAgC6N,EAAiBC,GACpD,OAAOA,EAAS7a,OAAS,GAAM,EACzBga,GAAWY,GACXA,CACV,CAxBwBG,CAAuBH,EAAiBC,GACtDG,EAcH,SAAiCF,GACpC,MAAqB,QAAdA,GAAqC,WAAdA,EACxB9O,EAAYyE,SACZzE,EAAYkB,UACtB,CAlBiC+N,CAAwBH,GACrD,GAAI/N,IAAgBiO,EAAsB,CACtC,MAAOE,EAAMC,GAAUzR,EAAKmR,GAC5B,IAAIlY,EAAQwY,EAIZ,MAHkB,UAAdL,GAAuC,WAAdA,IACzBnY,GAAS,GAEN,IAAIuY,EAAMvY,EACrB,CACK,CACD,MAAMA,EAAsB,UAAdmY,GAAuC,WAAdA,EAAyB,EAAI,EACpE,MAAO,IAAID,EAAUlY,EACzB,CACJ,CAWO,MAAMqX,GAAcjN,GAAgBA,IAAgBf,EAAYkB,WACjElB,EAAYyE,SACZzE,EAAYkB,WAIlB,MAAMkO,GAAsBA,CAACtC,EAAM/L,KAC/B,MAAMpJ,EAAOoJ,IAAgBf,EAAYyE,SAAWqI,EAAKuC,IAAIjT,MAAQ0Q,EAAKuC,IAAIhT,OAC9E,OALG,SAA0ByQ,GAC7B,QAASA,EAAKld,QAClB,CAGS0f,CAAiBxC,GAWf,CACHzV,KAAM,SACNlE,KAAM2Z,EAAKld,SAASiC,KAAKua,GAAMgD,GAAoBhD,EAAG4B,GAAWjN,MACjEpJ,QAbsC,iBAA3BmV,EAAK5N,kBACL,CACH7H,KAAM,OACNlE,KAAM2Z,EAAKxN,KAAKiQ,SAChB5X,KAAMmV,EAAK5N,kBACXE,SAAS,GAGV,CAAE/H,KAAM,OAAQlE,KAAM2Z,EAAKxN,KAAKiQ,SAAU5X,OAMpD,EAEE,MAAM6X,GACT,UAAIxb,GACA,OAAOvB,KAAKgd,MAAQhd,KAAKgd,MAAM7f,SAASoE,OAAS,CACrD,CACA,eAAI+M,GACA,OAAOtO,KAAKid,KAAK3O,WACrB,CACA,eAAIA,CAAYA,GACZ,GAAItO,KAAKid,KAAK3O,cAAgBA,EAC1B,OAEJ,MAAM,KAAEpJ,EAAI,eAAE+I,GAAmBjO,KAAKid,KACtCjd,KAAKid,KAAO3B,EAAStb,KAAKid,KAAMhP,EAAgB/I,GAChDlF,KAAKid,KAAKnH,OAAO5Q,EAAM+I,EAC3B,CACA,SAAItE,GACA,OAAO3J,KAAKid,KAAKtT,KACrB,CACA,UAAIC,GACA,OAAO5J,KAAKid,KAAKrT,MACrB,CACA,gBAAIwP,GACA,OAAOpZ,KAAKid,KAAK7D,YACrB,CACA,iBAAIE,GACA,OAAOtZ,KAAKid,KAAK3D,aACrB,CACA,gBAAID,GACA,OAAOrZ,KAAKid,KAAK1D,aACrB,CACA,iBAAIA,GACA,OAAOvZ,KAAKid,KAAK1D,aACrB,CACA,UAAI2D,GACA,OAAOld,KAAKmd,OAChB,CACA,UAAID,CAAOra,GACP7C,KAAKmd,QAAUta,EACf,MAAMua,EAAS,CAACpd,KAAKid,MAMrB,KAAOG,EAAO7b,OAAS,GAAG,CACtB,MAAM8Y,EAAO+C,EAAOC,MAChBhD,aAAgBX,IAChBW,EAAKjL,SAAWvM,EAChBua,EAAOnZ,QAAQoW,EAAKld,UAE5B,CACJ,CACA,UAAImS,GACA,OAAOtP,KAAKuP,OAChB,CACA,UAAID,CAAOzM,GACP7C,KAAKuP,QAAU1M,EACf7C,KAAKid,KAAK3N,OAASzM,CACvB,CACAya,aAAAA,GACI,IAAI5a,EACJ,OAAsC,QAA9BA,EAAK1C,KAAKud,sBAAmC,IAAP7a,OAAgB,EAASA,EAAG8a,KAAK3Q,IACnF,CACA4Q,gBAAAA,GACI,YAA+Bhd,IAAxBT,KAAKud,cAChB,CACAG,YAAAA,CAAa7Q,GACT,IAAInK,EACJ,MAAM0Z,EAAWV,GAAgB7O,EAAKlI,UAC/BwM,EAAGkJ,GAAQra,KAAK2d,QAAQvB,GAC/B,KAAM/B,aAAgBlB,GAClB,OAEJ,IAAoC,QAA9BzW,EAAK1C,KAAKud,sBAAmC,IAAP7a,OAAgB,EAASA,EAAG8a,QAAUnD,EAC9E,OAEAra,KAAKyd,oBACLzd,KAAK4d,oBAETjB,GAAoB3c,KAAK6d,UAAW7d,KAAKsO,aACzC,MAAMwP,EAAmB,IACzB,SAASC,EAAgBC,EAAQC,GAC7B,IAAK,IAAI3S,EAAI,EAAGA,EAAI0S,EAAO7gB,SAASoE,OAAQ+J,IAAK,CAC7C,MAAM1J,EAAQoc,EAAO7gB,SAASmO,GAC1B1J,aAAiBuX,EACbvX,IAAUqc,IACND,EAAOxD,eAAelP,GACtB0S,EAAOvD,gBAAgBnP,GAAG,GAG1BwS,EAAiB7Z,KAAKrC,IAK9Bmc,EAAgBnc,EAAOqc,EAE/B,CACJ,CACAF,CAAgB/d,KAAKid,KAAM5C,GAC3Bra,KAAKud,eAAiB,CAAEC,KAAMnD,EAAMyD,oBACpC9d,KAAKke,0BAA0B5Z,KAAK,CAChCuI,KAAMwN,EAAKxN,KACXsR,aAAa,GAErB,CACAP,iBAAAA,GACI,IAAK5d,KAAKud,eACN,OAEJ,MAAMO,EAAmB9d,KAAKud,eAAeO,kBAC7C,SAASM,EAAwBJ,GAC7B,IAAK,IAAI9Z,EAAQ8Z,EAAO7gB,SAASoE,OAAS,EAAG2C,GAAS,EAAGA,IAAS,CAC9D,MAAMtC,EAAQoc,EAAO7gB,SAAS+G,GAC1BtC,aAAiBuX,EACZ2E,EAAiBO,SAASzc,IAC3Boc,EAAOvD,gBAAgBvW,GAAO,GAIlCka,EAAwBxc,EAEhC,CACJ,CACAwc,CAAwBpe,KAAKid,MAC7B,MAAMzO,EAAMxO,KAAKud,eAAeC,KAChCxd,KAAKud,oBAAiB9c,EACtBT,KAAKke,0BAA0B5Z,KAAK,CAChCuI,KAAM2B,EAAI3B,KACVsR,aAAa,GAErB,CACAG,SAAAA,GACI,MAAMhB,EAAgBtd,KAAKsd,gBAC3B,IAAIiB,EACAjB,IAKAiB,EAAuB7C,GAAgB4B,EAAc3Y,UAErD3E,KAAKyd,oBASLzd,KAAK4d,oBAET,MACMY,EAAU,CACZvB,KAFSN,GAAoB3c,KAAK6d,UAAW7d,KAAKsO,aAGlD3E,MAAO3J,KAAK2J,MACZC,OAAQ5J,KAAK4J,OACb0E,YAAatO,KAAKsO,aAWtB,OATIiQ,IACAC,EAAQC,cAAgB,CACpBrC,SAAUmC,IAGdjB,GAEAtd,KAAK0d,aAAaJ,GAEfkB,CACX,CACA3c,OAAAA,GACI7B,KAAKwG,WAAW3E,UAChB7B,KAAKwY,aAAa3W,UAClB7B,KAAKke,0BAA0Brc,UAC/B7B,KAAK0e,2BAA2B7c,UAChC7B,KAAKid,KAAKpb,UACV7B,KAAKud,oBAAiB9c,EACtBT,KAAK2E,QAAQ6C,QACjB,CACA/D,KAAAA,GACI,MAAM6K,EAActO,KAAKid,KAAK3O,YAC9BtO,KAAKid,KAAO,IAAIvD,EAAWpL,EAAatO,KAAKkS,mBAAoBlS,KAAKwS,OAAQxS,KAAKid,KAAK/X,KAAMlF,KAAKid,KAAKhP,eAAgBjO,KAAKkd,OAAQld,KAAKsP,OAC9I,CACAqP,WAAAA,CAAYC,EAAMC,GACd,MAAMvQ,EAAcsQ,EAAKtQ,YACnB1E,EAAS0E,IAAgBf,EAAYyE,SAAW4M,EAAKhV,OAASgV,EAAKjV,MAOzE,GANA3J,KAAK8e,aAAaF,EAAK3B,KAAM3O,EAAauQ,EAAcjV,GAKxD5J,KAAK8V,OAAO8I,EAAKjV,MAAOiV,EAAKhV,QACzBgV,EAAKH,cAAe,CACpB,MAAMrC,EAAWwC,EAAKH,cAAcrC,UAC7BjL,EAAGkJ,GAAQra,KAAK2d,QAAQvB,GAC/B,KAAM/B,aAAgBlB,GAClB,OAEJnZ,KAAK0d,aAAarD,EAAKxN,KAC3B,CACJ,CACAiS,YAAAA,CAAa7B,EAAM3O,EAAauQ,EAAc5Q,GAC1CjO,KAAKid,KAAOjd,KAAK+e,iBAAiB9B,EAAM3O,EAAauQ,EAAc5Q,EACvE,CACA8Q,gBAAAA,CAAiB1E,EAAM/L,EAAauQ,EAAc5Q,GAC9C,IAAIvL,EACJ,IAAI4J,EACJ,GAAkB,WAAd+N,EAAKzV,KAAmB,CACxB,MACMzH,EADqBkd,EAAK3Z,KACItB,KAAK4f,IAC9B,CACH3E,KAAMra,KAAK+e,iBAAiBC,EAAiBzD,GAAWjN,GAAcuQ,EAAcxE,EAAKnV,MACzFyH,QAASqS,EAAgBrS,YAGjCL,EAAS,IAAIoN,EAAWpL,EAAatO,KAAKkS,mBAAoBlS,KAAKwS,OAAQ6H,EAAKnV,KAChF+I,EACAjO,KAAKkd,OAAQld,KAAKsP,OAAQnS,EAC9B,KACK,CACD,MAAM0P,EAAOgS,EAAaI,SAAS5E,GACP,kBAAjBA,EAAK1N,UACe,QAA1BjK,EAAKmK,EAAKQ,kBAA+B,IAAP3K,GAAyBA,EAAGyF,KAAK0E,EAAMwN,EAAK1N,UAEnFL,EAAS,IAAI6M,EAAStM,EAAMyB,EAAaL,EAAgBoM,EAAKnV,KAClE,CACA,OAAOoH,CACX,CACA,QAAI2Q,GACA,OAAOjd,KAAKgd,KAChB,CACA,QAAIC,CAAKA,GACL,MAAMiC,EAAUlf,KAAKgd,MACjBkC,IACAA,EAAQrd,UACR7B,KAAKud,oBAAiB9c,EACtBT,KAAK2E,QAAQyP,YAAY8K,EAAQva,UAErC3E,KAAKgd,MAAQC,EACbjd,KAAK2E,QAAQ4N,YAAYvS,KAAKgd,MAAMrY,SACpC3E,KAAKwG,WAAW3D,MAAQ7C,KAAKgd,MAAMjJ,aAAaxP,IAC5CvE,KAAKwY,aAAalU,KAAKC,EAAE,GAEjC,CAKA4a,+BAAAA,GACI,IAAKnf,KAAKgd,MACN,OAEJ,MAAMkC,EAAUlf,KAAKid,KAGrB,GAFAiC,EAAQva,QAAQ6C,SAChBxH,KAAKgd,MAAQ,IAAItD,EAAW6B,GAAW2D,EAAQ5Q,aAActO,KAAKkS,mBAAoBlS,KAAKwS,OAAQxS,KAAKid,KAAKhP,eAAgBjO,KAAKid,KAAK/X,KAAMlF,KAAKkd,OAAQld,KAAKsP,QAC/H,IAA5B4P,EAAQ/hB,SAASoE,aAGhB,GAAgC,IAA5B2d,EAAQ/hB,SAASoE,OAAc,CAEpC,MAAM6d,EAAiBF,EAAQ/hB,SAAS,GAC1B+hB,EAAQ9K,YAAY,GAC5BvS,UACNqd,EAAQrd,UACR7B,KAAKgd,MAAM/B,SAOXK,EAAS8D,EAAgBA,EAAenR,eAAgBmR,EAAela,MAAOwI,EAAOC,WAAY,EACrG,MAEI3N,KAAKgd,MAAM/B,SAASiE,EAASxR,EAAOC,WAAY,GAEpD3N,KAAK2E,QAAQ4N,YAAYvS,KAAKgd,MAAMrY,SACpC3E,KAAKwG,WAAW3D,MAAQ7C,KAAKgd,MAAMjJ,aAAaxP,IAC5CvE,KAAKwY,aAAalU,KAAKC,EAAE,GAEjC,CACA2H,IAAAA,CAAKkQ,GACD,OAAOpc,KAAKqf,gBAAgBjD,EAChC,CACAtF,QAAAA,CAASsF,GACL,OAAOpc,KAAKqf,gBAAgBjD,GAAU,EAC1C,CACAyB,OAAAA,CAAQzB,GACJ,MAAM/B,EAAO+B,EAAWpc,KAAK2d,QAAQvB,GAAU,GAAKpc,KAAKid,KACzD,OAAOjd,KAAKsf,UAAUjF,EAAMra,KAAKsO,YACrC,CACAgR,SAAAA,CAAUjF,EAAM/L,EAAa7B,GACzB,MAAMmQ,EAAM,CAAEhT,OAAQyQ,EAAKzQ,OAAQD,MAAO0Q,EAAK1Q,OAC/C,GAAI0Q,aAAgBlB,EAChB,MAAO,CAAEyD,MAAK/P,KAAMwN,EAAKxN,KAAMJ,qBAEnC,MAAMtP,EAAW,GACjB,IAAK,IAAImO,EAAI,EAAGA,EAAI+O,EAAKld,SAASoE,OAAQ+J,IAAK,CAC3C,MAAM1J,EAAQyY,EAAKld,SAASmO,GACtBiU,EAAwBlF,EAAKa,0BAA0B5P,GAC7DnO,EAAS8G,KAAKjE,KAAKsf,UAAU1d,EAAO2Z,GAAWjN,GAAciR,GACjE,CACA,MAAO,CAAE3C,MAAKzf,WAClB,CACAkiB,eAAAA,CAAgBjD,EAAUlF,QAAO,IAAPA,IAAAA,GAAU,GAChC,MAAOsI,EAAMnF,GAAQra,KAAK2d,QAAQvB,GAClC,KAAM/B,aAAgBlB,GAClB,MAAM,IAAIxW,MAAM,oBAEpB,IAAK,IAAI2I,EAAIkU,EAAKje,OAAS,EAAG+J,GAAK,EAAGA,IAAK,CACvC,MAAMmU,EAAID,EAAKlU,GACToU,EAAItD,EAAS9Q,IAAM,EAIzB,GAHkC4L,EAC5BwI,EAAI,GAAK,EACTA,EAAI,EAAID,EAAEtiB,SAASoE,OAErB,OAAO4Z,EAASsE,EAAEtiB,SAAS+Z,EAAUwI,EAAI,EAAIA,EAAI,GAAIxI,EAE7D,CACA,OAAOiE,EAASnb,KAAKid,KAAM/F,EAC/B,CACAvX,WAAAA,CAAYuS,EAAoBM,EAAQlE,EAAa4O,EAAQ5N,GACzDtP,KAAKkS,mBAAqBA,EAC1BlS,KAAKwS,OAASA,EACdxS,KAAKmd,SAAU,EACfnd,KAAKuP,QAAU,EACfvP,KAAKud,oBAAiB9c,EACtBT,KAAKwG,WAAa,IAAIF,EACtBtG,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAK0e,2BAA6B,IAAItb,EACtCpD,KAAK2f,0BAA4B3f,KAAK0e,2BAA2B5a,MACjE9D,KAAKke,0BAA4B,IAAI9a,EACrCpD,KAAK4f,yBAA2B5f,KAAKke,0BAA0Bpa,MAC/D9D,KAAK2E,QAAUyD,SAAS6L,cAAc,OACtCjU,KAAK2E,QAAQ1G,UAAY,eACzB+B,KAAKmd,QAAUD,SAAuCA,EACtDld,KAAKuP,QAAUD,QAAuCA,EAAS,EAC/DtP,KAAKid,KAAO,IAAIvD,EAAWpL,EAAa4D,EAAoBM,EAAQ,EAAG,EAAGxS,KAAKkd,OAAQld,KAAKsP,OAChG,CACA4D,aAAAA,CAAckJ,GACV,MAAOK,EAAMvY,GAAS+G,EAAKmR,IACpB,CAAE4B,GAAUhe,KAAK2d,QAAQlB,GAChC,KAAMuB,aAAkBtE,GACpB,MAAM,IAAI/W,MAAM,yBAEpB,OAAOqb,EAAOxD,eAAetW,EACjC,CACAiP,cAAAA,CAAeiJ,EAAUzP,GACjB3M,KAAKyd,oBACLzd,KAAK4d,oBAET,MAAOnB,EAAMvY,GAAS+G,EAAKmR,IACpB,CAAE4B,GAAUhe,KAAK2d,QAAQlB,GAChC,KAAMuB,aAAkBtE,GACpB,MAAM,IAAI/W,MAAM,yBAEpB3C,KAAK0e,2BAA2Bpa,OAChC0Z,EAAOvD,gBAAgBvW,EAAOyI,EAClC,CACAkJ,QAAAA,CAASgK,EAAgBla,EAAM0G,GACvBrM,KAAKyd,oBACLzd,KAAK4d,oBAET,MAAO,CAAEI,GAAUhe,KAAK2d,QAAQkC,GAChC,KAAM7B,aAAkBtE,GACpB,MAAM,IAAI/W,MAAM,oBAEpBqb,EAAOpD,UAAUjV,EAAM0G,EAC3B,CACAwG,OAAAA,CAAQhG,EAAM3H,EAAMkX,GACZpc,KAAKyd,oBACLzd,KAAK4d,oBAET,MAAOnB,EAAMvY,GAAS+G,EAAKmR,IACpB0D,EAAc9B,GAAUhe,KAAK2d,QAAQlB,GAC5C,GAAIuB,aAAkBtE,EAAY,CAC9B,MAAMW,EAAO,IAAIlB,EAAStM,EAAM0O,GAAWyC,EAAO1P,aAAc0P,EAAO/P,gBACvE+P,EAAO/C,SAASZ,EAAMnV,EAAMhB,EAChC,KACK,CACD,MAAO6b,KAAgB5O,GAAK,IAAI2O,GAAc5I,WACvC8I,KAAgBC,GAAM,IAAIxD,GAAMvF,UACvC,IAAIgJ,EAAiB,EACrB,MAAMC,EAA8BJ,EAAY7E,0BAA0B8E,GAC/B,iBAAhCG,IACPD,EAAiBxS,EAAOG,UAAUsS,IAExBJ,EAAY3L,YAAY4L,GAChCne,UACN,MAAMue,EAAY,IAAI1G,EAAWsE,EAAO1P,YAAatO,KAAKkS,mBAAoBlS,KAAKwS,OAAQwL,EAAO9Y,KAAM8Y,EAAO/P,eAAgBjO,KAAKkd,OAAQld,KAAKsP,QACjJyQ,EAAY9E,SAASmF,EAAWpC,EAAO9Y,KAAM8a,GAC7C,MAAMK,EAAa,IAAIlH,EAAS6E,EAAOnR,KAAMkT,EAAYzR,YAAa0P,EAAO9Y,MAC7Ekb,EAAUnF,SAASoF,EAAYH,EAAgB,GAC3B,iBAAThb,GAAmC,UAAdA,EAAKN,OACjCM,EAAO,CAAEN,KAAM,QAASV,MAAO,IAEnC,MAAMmW,EAAO,IAAIlB,EAAStM,EAAMkT,EAAYzR,YAAa0P,EAAO9Y,MAChEkb,EAAUnF,SAASZ,EAAMnV,EAAMhB,EACnC,CACJ,CACAsD,MAAAA,CAAOqF,EAAM+F,GACT,MAAMwJ,EAAWV,GAAgB7O,EAAKlI,SACtC,OAAO3E,KAAK2V,WAAWyG,EAAUxJ,EACrC,CACA+C,UAAAA,CAAWyG,EAAUxJ,GACb5S,KAAKyd,oBACLzd,KAAK4d,oBAET,MAAOnB,EAAMvY,GAAS+G,EAAKmR,IACpB0D,EAAc9B,GAAUhe,KAAK2d,QAAQlB,GAC5C,KAAMuB,aAAkBtE,GACpB,MAAM,IAAI/W,MAAM,oBAEpB,MAAM2d,EAAetC,EAAO7gB,SAAS+G,GACrC,KAAMoc,aAAwBnH,GAC1B,MAAM,IAAIxW,MAAM,oBAIpB,GAFAqb,EAAO5J,YAAYlQ,EAAO0O,GAC1B0N,EAAaze,UACkB,IAA3Bmc,EAAO7gB,SAASoE,OAChB,OAAO+e,EAAazT,KAOxB,MAAM0T,EAAUvC,EAAO7gB,SAAS,GAChC,GAA4B,IAAxB2iB,EAAave,OAEb,OAAIgf,aAAmBpH,IAOvB6E,EAAO5J,YAAY,EAAGxB,GAEtB5S,KAAKid,KAAOsD,GAPDD,EAAazT,KAW5B,MAAOkT,KAAgB5O,GAAK,IAAI2O,GAAc5I,WACvC8I,KAAgBC,GAAM,IAAIxD,GAAMvF,UACjCsJ,EAAmBxC,EAAOxD,eAAe,GAE/CwD,EAAO5J,YAAY,EAAGxB,GAEtB,MAAMzC,EAAQ4P,EAAY5iB,SAASiC,KAAI,CAACoN,EAAOlB,IAAMyU,EAAYhF,aAAazP,KAI9E,GADAyU,EAAY3L,YAAY4L,EAAapN,GAAQ/Q,UACzC0e,aAAmB7G,EAAY,CAE/BvJ,EAAM/L,OAAO4b,EAAa,KAAMO,EAAQpjB,SAASiC,KAAKua,GAAMA,EAAEzU,QAE9D,IAAK,IAAIoG,EAAI,EAAGA,EAAIiV,EAAQpjB,SAASoE,OAAQ+J,IAAK,CAC9C,MAAM1J,EAAQ2e,EAAQpjB,SAASmO,GAC/ByU,EAAY9E,SAASrZ,EAAOA,EAAMsD,KAAM8a,EAAc1U,EAC1D,CAMA,KAAOiV,EAAQpjB,SAASoE,OAAS,GAC7Bgf,EAAQnM,YAAY,EAE5B,KACK,CAED,MAAMiM,EAAa,IAAIlH,EAASoH,EAAQ1T,KAAM0O,GAAWgF,EAAQjS,aAAciS,EAAQrb,MACjFub,EAAgBD,EAChBD,EAAQtS,eACRP,EAAOG,UAAU0S,EAAQtS,gBAC/B8R,EAAY9E,SAASoF,EAAYI,EAAeT,EACpD,CAEAO,EAAQ1e,UAER,IAAK,IAAIyJ,EAAI,EAAGA,EAAI6E,EAAM5O,OAAQ+J,IAC9ByU,EAAY/E,YAAY1P,EAAG6E,EAAM7E,IAErC,OAAOgV,EAAazT,IACxB,CACAiJ,MAAAA,CAAOnM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkBjO,KAAKid,KAAK3O,cAAgBf,EAAYkB,WAC/D,CAAC7E,EAAQD,GACT,CAACA,EAAOC,GACd5J,KAAKid,KAAKnH,OAAO5Q,EAAM+I,EAC3B,CACA0P,OAAAA,CAAQvB,EAAU/B,EAAkBmF,GAChC,QADkB,IAAJnF,IAAAA,EAAOra,KAAKid,WAAU,IAAJuC,IAAAA,EAAO,IACf,IAApBpD,EAAS7a,OACT,MAAO,CAACie,EAAMnF,GAElB,KAAMA,aAAgBX,GAClB,MAAM,IAAI/W,MAAM,oBAEpB,MAAOuB,KAAUuY,GAAQL,EACzB,GAAIlY,EAAQ,GAAKA,GAASmW,EAAKld,SAASoE,OACpC,MAAM,IAAIoB,MAAM,oBAEpB,MAAMf,EAAQyY,EAAKld,SAAS+G,GAE5B,OADAsb,EAAKvb,KAAKoW,GACHra,KAAK2d,QAAQlB,EAAM7a,EAAO4d,EACrC,ECxnBG,MAAMkB,GAAyB,MAKlC,MAAM1I,EAAa,CACfC,yBAAqBxX,EACrByR,wBAAoBzR,EACpB6N,iBAAa7N,EACbkgB,iBAAalgB,EACbxC,eAAWwC,GAEf,OAAOyX,OAAOC,KAAKH,EACtB,EAbqC,GCE/B,MAAM4I,WAAkB/a,EAC3B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACA,mBAAIC,GACA,OAAO9gB,KAAK+gB,gBAChB,CACA,mBAAID,CAAgBje,GAChB7C,KAAK+gB,iBAAmBle,CAC5B,CACAlD,WAAAA,CAAYgc,EAAemF,QAAe,IAAfA,IAAAA,GAAkB,GACzC/gB,QACAC,KAAK+gB,iBAAmBD,EACxB9gB,KAAK6gB,SAAWlF,EAChB3b,KAAKkG,eAAeO,EAAmBzG,KAAK6gB,UAAWG,IACnD,GAAIhhB,KAAK8F,WAKL,OAEJ,GAAI9F,KAAK8gB,gBACL,OAEJ,IAAK9gB,KAAK6gB,SAASI,aAaf,OAEJ,IXyIL,SAAsBtc,GACzB,IAAIuc,EAAiBvc,EACrB,KAAOuc,aAAuD,EAASA,EAAelZ,YAAY,CAC9F,GAAIkZ,EAAelZ,aAAeI,SAC9B,OAAO,EAIP8Y,EAFKA,EAAelZ,sBAAsBmZ,iBAEzBD,EAAelZ,WAAWoZ,KAG1BF,EAAelZ,UAExC,CACA,OAAO,CACX,CWxJiBqZ,CAAarhB,KAAK6gB,UAMnB,OAEJ,MAAM,MAAElX,EAAK,OAAEC,GAAWoX,EAAMM,YAChCthB,KAAK8V,OAAOnM,EAAOC,EAAO,IAElC,EC9CJ,MAAM2X,GAAetV,IACd,SAASuV,GAASnF,GACrB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SAEX,QACI,MAAO,SAEnB,CACO,MAAMoF,WAAiBb,GAC1B,MAAIjiB,GACA,OAAOqB,KAAK0hB,GAChB,CACA,QAAIxc,GACA,OAAOlF,KAAK2hB,QAAQzc,IACxB,CACA,UAAI0c,GACA,OAAOpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UAAUziB,KAAK+R,GAAMA,EAAEtO,OAC1D,CACA,SAAI8G,GACA,OAAO3J,KAAK8hB,SAASnY,KACzB,CACA,UAAIC,GACA,OAAO5J,KAAK8hB,SAASlY,MACzB,CACA,iBAAI0P,GACA,OAAOtZ,KAAK8hB,SAASxI,aACzB,CACA,iBAAIC,GACA,OAAOvZ,KAAK8hB,SAASvI,aACzB,CACA,gBAAIH,GACA,OAAOpZ,KAAK8hB,SAAS1I,YACzB,CACA,gBAAIC,GACA,OAAOrZ,KAAK8hB,SAASzI,YACzB,CACA,eAAI0I,GACA,OAAO/hB,KAAKgiB,YAChB,CACA,UAAI9E,GACA,OAAOld,KAAK8hB,SAAS5E,MACzB,CACA,UAAIA,CAAOra,GACP7C,KAAK8hB,SAAS5E,OAASra,CAC3B,CACAlD,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,MAAMqI,SAAS6L,cAAc,OAAQtQ,EAAQsU,qBAC7CjY,KAAK0hB,IAAMH,GAAarV,OACxBlM,KAAK2hB,QAAU,IAAI1c,IACnBjF,KAAKiiB,aAAe,IAAI7e,EACxBpD,KAAKkiB,YAAcliB,KAAKiiB,aAAane,MACrC9D,KAAKmiB,UAAY,IAAI/e,EACrBpD,KAAKoiB,SAAWpiB,KAAKmiB,UAAUre,MAC/B9D,KAAKqiB,sBAAwB,IAAIjf,EACjCpD,KAAKsiB,qBAAuBtiB,KAAKqiB,sBAAsBve,MACvD9D,KAAKuiB,mBAAqB,IAAInf,EAC9BpD,KAAKwiB,kBAAoBxiB,KAAKuiB,mBAAmBze,MACjD9D,KAAKyiB,yBAA2B,IAAIrd,EACpCpF,KAAK0iB,kBAAoB1iB,KAAKyiB,yBAAyBjd,QACvDxF,KAAK2iB,yCAA2C,IAAIvd,EACpDpF,KAAK4iB,wCAA0C5iB,KAAK2iB,yCAAyCnd,QAC7FxF,KAAK2E,QAAQ0F,MAAMT,OAAS,OAC5B5J,KAAK2E,QAAQ0F,MAAMV,MAAQ,OAC3B3J,KAAK0K,YAAc,IAAID,EAAWzK,KAAK2E,SACvC3E,KAAK0K,YAAYC,cAA2C,QAA5BjI,EAAKiB,EAAQ1F,iBAA8B,IAAPyE,EAAgBA,EAAK,IAEzF0K,EAAUmF,YAAYvS,KAAK2E,SAC3B3E,KAAK8hB,SAAW,IAAI/E,KAAWpZ,EAAQuO,mBAAoBvO,EAAQ6O,OAAQ7O,EAAQ2K,YAAa3K,EAAQuZ,OAAQvZ,EAAQ2L,QACxHtP,KAAK8hB,SAAS5E,SAAWvZ,EAAQuZ,OACjCld,KAAK2E,QAAQ4N,YAAYvS,KAAK8hB,SAASnd,SACvC3E,KAAK8V,OAAO,EAAG,GAAG,GAClB9V,KAAKkG,eAAelG,KAAK8hB,SAASlC,0BAA0B9b,IACxD9D,KAAKqiB,sBAAsB/d,KAAK,CAC5Bue,MAAO/e,EAAM+I,KACbsR,YAAara,EAAMqa,aACrB,IACFne,KAAK8hB,SAASnC,2BAA0B,IAAM3f,KAAK2iB,yCAAyCre,SAAStE,KAAK4iB,yCAAwC,KAClJ5iB,KAAK8V,OAAO9V,KAAK2J,MAAO3J,KAAK4J,QAAQ,EAAK,IAC1CzI,EAAWwE,MAAK,KAChB,IAAIjD,EACkC,QAArCA,EAAK1C,KAAK2E,QAAQgX,qBAAkC,IAAPjZ,GAAyBA,EAAG0R,YAAYpU,KAAK2E,QAAQ,IACnG3E,KAAK8hB,SAAS/N,aAAY,KAC1B/T,KAAKyiB,yBAAyBne,MAAM,IACpCpD,EAAME,IAAIpB,KAAKoiB,SAAUpiB,KAAKkiB,YAAaliB,KAAKwiB,kBAAhDthB,EAAmE,KACnElB,KAAKyiB,yBAAyBne,MAAM,IACpCtE,KAAKqiB,sBAAuBriB,KAAK2iB,yCAA0C3iB,KAAKyiB,yBACxF,CACApV,UAAAA,CAAWwV,EAAOlW,GACd3M,KAAK8hB,SAAS3O,eAAeuI,GAAgBmH,EAAMle,SAAUgI,GAC7D3M,KAAKyiB,yBAAyBne,MAClC,CACAwe,SAAAA,CAAUD,GACN,OAAO7iB,KAAK8hB,SAAS5O,cAAcwI,GAAgBmH,EAAMle,SAC7D,CACAoe,aAAAA,CAAcpf,GACV,IAAIjB,EAAI8M,EAAIwT,EAAIC,EACLtf,EAAQuO,mBAGfvO,EAAQ2K,cACRtO,KAAK8hB,SAASxT,YAAc3K,EAAQ2K,aAKpC,oBAAqB3K,IACrB3D,KAAK8gB,gBAAyD,QAAtCpe,EAAKiB,EAAQsU,2BAAwC,IAAPvV,GAAgBA,GAEtF,WAAYiB,IACZ3D,KAAKkd,OAAmC,QAAzB1N,EAAK7L,EAAQuZ,cAA2B,IAAP1N,GAAgBA,GAEhE,WAAY7L,IACZ3D,KAAK8hB,SAASxS,OAAmC,QAAzB0T,EAAKrf,EAAQ2L,cAA2B,IAAP0T,EAAgBA,EAAK,GAE9E,cAAerf,GACf3D,KAAK0K,YAAYC,cAA2C,QAA5BsY,EAAKtf,EAAQ1F,iBAA8B,IAAPglB,EAAgBA,EAAK,GAEjG,CACAC,aAAAA,CAAcL,GACV7iB,KAAK8hB,SAASpE,aAAamF,GAC3B7iB,KAAKmjB,iBAAiBN,EAC1B,CACAO,gBAAAA,CAAiBP,GACb,OAAO7iB,KAAK8hB,SAASxE,kBAAoBuF,CAC7C,CACAQ,kBAAAA,GACIrjB,KAAK8hB,SAASlE,mBAClB,CACA0F,iBAAAA,GACI,OAAOtjB,KAAK8hB,SAASrE,kBACzB,CACA8F,UAAAA,CAAWC,EAAOpH,EAAgBlX,QAAR,IAARkX,IAAAA,EAAW,CAAC,IAC1Bpc,KAAK8hB,SAASjP,QAAQ2Q,EAAOte,QAAmCA,EAAOwI,EAAOC,WAAYyO,GAC1Fpc,KAAKmiB,UAAU7d,KAAKkf,EACxB,CACAC,aAAAA,CAAcD,EAAO7f,GACjB,IAAK3D,KAAK2hB,QAAQ+B,IAAIF,EAAM7kB,IACxB,MAAM,IAAIgE,MAAM,qBAEpB,MAAMiM,EAAO5O,KAAK2hB,QAAQnX,IAAIgZ,EAAM7kB,IAC9BkO,EAAO7M,KAAK8hB,SAASta,OAAOgc,EAAO9V,EAAOC,YAOhD,GANIiB,KAAUjL,aAAyC,EAASA,EAAQqV,eACpEpK,EAAKpI,WAAW3E,UAChB+M,EAAK/L,MAAMhB,UACX7B,KAAK2hB,QAAQld,OAAO+e,EAAM7kB,IAC1BqB,KAAKiiB,aAAa3d,KAAKkf,MAErB7f,aAAyC,EAASA,EAAQggB,aAAe3jB,KAAKgiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UACvC7hB,KAAKmjB,iBAAiBvB,EAAOrgB,OAAS,EAAIqgB,EAAO,GAAG/e,WAAQpC,EAChE,CACA,OAAOoM,CACX,CACA+W,QAAAA,CAASjlB,GACL,IAAI+D,EACJ,OAAuC,QAA/BA,EAAK1C,KAAK2hB,QAAQnX,IAAI7L,UAAwB,IAAP+D,OAAgB,EAASA,EAAGG,KAC/E,CACAsgB,gBAAAA,CAAiBK,GACTxjB,KAAKgiB,eAAiBwB,IAGtBxjB,KAAKgiB,cACLhiB,KAAKgiB,aAAa6B,WAAU,GAE5BL,GACAA,EAAMK,WAAU,GAEpB7jB,KAAKgiB,aAAewB,EACpBxjB,KAAKuiB,mBAAmBje,KAAKkf,GACjC,CACAM,WAAAA,CAAYN,GACRxjB,KAAKyjB,cAAcD,EACvB,CACAO,UAAAA,CAAWpgB,GACP,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQ6f,MAAO,CAChB,IAAKxjB,KAAK+hB,YACN,OAEJpe,EAAQ6f,MAAQxjB,KAAK+hB,WACzB,CACA,MAAM3F,EAAWV,GAAgB/X,EAAQ6f,MAAM7e,SACzCuH,EAA+C,QAAvCxJ,EAAK1C,KAAK8hB,SAAS5V,KAAKkQ,UAA8B,IAAP1Z,OAAgB,EAASA,EAAGmK,KACzF7M,KAAKmjB,iBAAiBjX,EAC1B,CACA8X,cAAAA,CAAergB,GACX,IAAIjB,EAIJ,GAHKiB,IACDA,EAAU,CAAC,IAEVA,EAAQ6f,MAAO,CAChB,IAAKxjB,KAAK+hB,YACN,OAEJpe,EAAQ6f,MAAQxjB,KAAK+hB,WACzB,CACA,MAAM3F,EAAWV,GAAgB/X,EAAQ6f,MAAM7e,SACzCuH,EAAmD,QAA3CxJ,EAAK1C,KAAK8hB,SAAShL,SAASsF,UAA8B,IAAP1Z,OAAgB,EAASA,EAAGmK,KAC7F7M,KAAKmjB,iBAAiBjX,EAC1B,CACA4J,MAAAA,CAAOnM,EAAOC,EAAQqa,IACAA,GAAeta,IAAU3J,KAAK2J,OAASC,IAAW5J,KAAK4J,UAIzE5J,KAAK8hB,SAASnd,QAAQ0F,MAAMT,OAAU,GAAEA,MACxC5J,KAAK8hB,SAASnd,QAAQ0F,MAAMV,MAAS,GAAEA,MACvC3J,KAAK8hB,SAAShM,OAAOnM,EAAOC,GAChC,CACA/H,OAAAA,GACI7B,KAAKuiB,mBAAmB1gB,UACxB7B,KAAKmiB,UAAUtgB,UACf7B,KAAKiiB,aAAapgB,UAClB,IAAK,MAAM2hB,KAASxjB,KAAK4hB,OACrB4B,EAAM3hB,UAEV7B,KAAK8hB,SAASjgB,UACd9B,MAAM8B,SACV,EC7OG,MAAMqiB,GAIT,eAAItX,GACA,OAAO5M,KAAKf,UAAU2N,WAC1B,CAIA,eAAIG,GACA,OAAO/M,KAAKf,UAAU8N,WAC1B,CAIA,SAAIpD,GACA,OAAO3J,KAAKf,UAAU0K,KAC1B,CAIA,UAAIC,GACA,OAAO5J,KAAKf,UAAU2K,MAC1B,CAIA,UAAIrI,GACA,OAAOvB,KAAKf,UAAUsC,MAC1B,CAIA,eAAI+M,GACA,OAAOtO,KAAKf,UAAUqP,WAC1B,CAIA,UAAI6V,GACA,OAAOnkB,KAAKf,UAAUklB,MAC1B,CAIA,uBAAIC,GACA,OAAOpkB,KAAKf,UAAUmlB,mBAC1B,CAKA,qBAAI1B,GACA,OAAO1iB,KAAKf,UAAUyjB,iBAC1B,CAIA,gBAAI5S,GACA,OAAO9P,KAAKf,UAAU6Q,YAC1B,CAIA,mBAAIE,GACA,OAAOhQ,KAAKf,UAAU+Q,eAC1B,CACArQ,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAKAolB,WAAAA,CAAYxB,EAAOjQ,GACf5S,KAAKf,UAAUolB,YAAYxB,EAAOjQ,EACtC,CAIA0R,KAAAA,GACItkB,KAAKf,UAAUqlB,OACnB,CAIAV,QAAAA,CAASjlB,GACL,OAAOqB,KAAKf,UAAU2kB,SAASjlB,EACnC,CAIAmX,MAAAA,CAAOnM,EAAOC,GACV,OAAO5J,KAAKf,UAAU6W,OAAOnM,EAAOC,EACxC,CAIA2a,QAAAA,CAAS5gB,GACL,OAAO3D,KAAKf,UAAUslB,SAAS5gB,EACnC,CAIA6gB,SAAAA,CAAU7e,EAAM0G,GACZrM,KAAKf,UAAUulB,UAAU7e,EAAM0G,EACnC,CAIA4S,QAAAA,CAASve,GACLV,KAAKf,UAAUggB,SAASve,EAC5B,CAEAoc,MAAAA,GACI,OAAO9c,KAAKf,UAAU6d,QAC1B,CAIArZ,KAAAA,GACIzD,KAAKf,UAAUwE,OACnB,CAIAsf,aAAAA,CAAcpf,GACV3D,KAAKf,UAAU8jB,cAAcpf,EACjC,CAIA9B,OAAAA,GACI7B,KAAKf,UAAU4C,SACnB,EAEG,MAAM4iB,GAIT,eAAI7X,GACA,OAAO5M,KAAKf,UAAU2N,WAC1B,CAIA,eAAIG,GACA,OAAO/M,KAAKf,UAAU8N,WAC1B,CAIA,SAAIpD,GACA,OAAO3J,KAAKf,UAAU0K,KAC1B,CAIA,UAAIC,GACA,OAAO5J,KAAKf,UAAU2K,MAC1B,CAIA,UAAIua,GACA,OAAOnkB,KAAKf,UAAUklB,MAC1B,CAIA,qBAAIzB,GACA,OAAO1iB,KAAKf,UAAUyjB,iBAC1B,CAIA,uBAAI0B,GACA,OAAOpkB,KAAKf,UAAUmlB,mBAC1B,CAIA,gBAAItU,GACA,OAAO9P,KAAKf,UAAU6Q,YAC1B,CAIA,mBAAIE,GACA,OAAOhQ,KAAKf,UAAU+Q,eAC1B,CAIA,aAAI0U,GACA,OAAO1kB,KAAKf,UAAUylB,SAC1B,CACA,4BAAIC,GACA,OAAO3kB,KAAKf,UAAU0lB,wBAC1B,CACAhlB,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAolB,WAAAA,CAAYxB,GACR7iB,KAAKf,UAAUolB,YAAYxB,EAC/B,CAIAe,QAAAA,CAASjlB,GACL,OAAOqB,KAAKf,UAAU2kB,SAASjlB,EACnC,CAIA6lB,SAAAA,CAAU7e,EAAM0G,GACZrM,KAAKf,UAAUulB,UAAU7e,EAAM0G,EACnC,CAIAiY,KAAAA,GACItkB,KAAKf,UAAUqlB,OACnB,CAIAxO,MAAAA,CAAOnM,EAAOC,GACV5J,KAAKf,UAAU6W,OAAOnM,EAAOC,EACjC,CAIA2a,QAAAA,CAAS5gB,GACL,OAAO3D,KAAKf,UAAUslB,SAAS5gB,EACnC,CAIAsb,QAAAA,CAASve,GACLV,KAAKf,UAAUggB,SAASve,EAC5B,CAIAoc,MAAAA,GACI,OAAO9c,KAAKf,UAAU6d,QAC1B,CAIArZ,KAAAA,GACIzD,KAAKf,UAAUwE,OACnB,CAIAsf,aAAAA,CAAcpf,GACV3D,KAAKf,UAAU8jB,cAAcpf,EACjC,CAIA9B,OAAAA,GACI7B,KAAKf,UAAU4C,SACnB,EAEG,MAAM+iB,GAIT,SAAIjb,GACA,OAAO3J,KAAKf,UAAU0K,KAC1B,CAIA,UAAIC,GACA,OAAO5J,KAAKf,UAAU2K,MAC1B,CAIA,iBAAI0P,GACA,OAAOtZ,KAAKf,UAAUqa,aAC1B,CAIA,iBAAIC,GACA,OAAOvZ,KAAKf,UAAUsa,aAC1B,CAIA,gBAAIH,GACA,OAAOpZ,KAAKf,UAAUma,YAC1B,CAIA,gBAAIC,GACA,OAAOrZ,KAAKf,UAAUoa,YAC1B,CAIA,qBAAIqJ,GACA,OAAO1iB,KAAKf,UAAUyjB,iBAC1B,CAIA,iBAAImC,GACA,OAAO7kB,KAAKf,UAAU6lB,aAC1B,CAIA,oBAAIC,GACA,OAAO/kB,KAAKf,UAAU+lB,gBAC1B,CAIA,0BAAIC,GACA,OAAOjlB,KAAKf,UAAUimB,sBAC1B,CAIA,uBAAId,GACA,OAAOpkB,KAAKf,UAAUmlB,mBAC1B,CAIA,UAAID,GACA,OAAOnkB,KAAKf,UAAU2iB,MAC1B,CAIA,eAAItT,GACA,OAAOtO,KAAKf,UAAUqP,WAC1B,CACA,eAAIA,CAAYzL,GACZ7C,KAAKf,UAAU8jB,cAAc,CAAEzU,YAAazL,GAChD,CACAlD,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAqlB,KAAAA,GACItkB,KAAKf,UAAUqlB,OACnB,CAIAxO,MAAAA,CAAOnM,EAAOC,EAAQub,QAAK,IAALA,IAAAA,GAAQ,GAC1BnlB,KAAKf,UAAU6W,OAAOnM,EAAOC,EAAQub,EACzC,CAIAZ,QAAAA,CAAS5gB,GACL,OAAO3D,KAAKf,UAAUslB,SAAS5gB,EACnC,CAIA0gB,WAAAA,CAAYxB,EAAOjQ,GACf5S,KAAKf,UAAUolB,YAAYxB,EAAOjQ,EACtC,CAIA4R,SAAAA,CAAU3B,EAAOlf,GACb3D,KAAKf,UAAUulB,UAAU3B,EAAOlf,EACpC,CAIAigB,QAAAA,CAASjlB,GACL,OAAOqB,KAAKf,UAAU2kB,SAASjlB,EACnC,CAIAsgB,QAAAA,CAASve,GACL,OAAOV,KAAKf,UAAUggB,SAASve,EACnC,CAIAoc,MAAAA,GACI,OAAO9c,KAAKf,UAAU6d,QAC1B,CAIArZ,KAAAA,GACIzD,KAAKf,UAAUwE,OACnB,CACAsf,aAAAA,CAAcpf,GACV3D,KAAKf,UAAU8jB,cAAcpf,EACjC,CAIA9B,OAAAA,GACI7B,KAAKf,UAAU4C,SACnB,EAEG,MAAMujB,GAIT,MAAIzmB,GACA,OAAOqB,KAAKf,UAAUN,EAC1B,CAIA,SAAIgL,GACA,OAAO3J,KAAKf,UAAU0K,KAC1B,CAIA,UAAIC,GACA,OAAO5J,KAAKf,UAAU2K,MAC1B,CAIA,iBAAI0P,GACA,OAAOtZ,KAAKf,UAAUqa,aAC1B,CAIA,iBAAIC,GACA,OAAOvZ,KAAKf,UAAUsa,aAC1B,CAIA,gBAAIH,GACA,OAAOpZ,KAAKf,UAAUma,YAC1B,CAIA,gBAAIC,GACA,OAAOrZ,KAAKf,UAAUoa,YAC1B,CAIA,QAAInU,GACA,OAAOlF,KAAKf,UAAUiG,IAC1B,CAIA,eAAImgB,GACA,OAAOrlB,KAAKf,UAAUomB,WAC1B,CACA,OAAIC,GACA,OAAOtlB,KAAKf,UAAUqmB,GAC1B,CAIA,0BAAIJ,GACA,OAAOllB,KAAKf,UAAUimB,sBAC1B,CAIA,iBAAIJ,GACA,OAAO9kB,KAAKf,UAAU6lB,aAC1B,CAIA,oBAAIE,GACA,OAAOhlB,KAAKf,UAAU+lB,gBAC1B,CAIA,0BAAIC,GACA,OAAOjlB,KAAKf,UAAUgmB,sBAC1B,CAIA,iBAAIJ,GACA,OAAO7kB,KAAKf,UAAU4lB,aAC1B,CAIA,oBAAIE,GACA,OAAO/kB,KAAKf,UAAU8lB,gBAC1B,CACA,kBAAIQ,GACA,OAAOvlB,KAAKf,UAAUsmB,cAC1B,CAIA,uBAAInB,GACA,OAAOpkB,KAAKf,UAAUmlB,mBAC1B,CAIA,qBAAI1B,GACA,OAAO1iB,KAAKf,UAAUyjB,iBAC1B,CAIA,aAAIgC,GACA,OAAO1kB,KAAKf,UAAUylB,SAC1B,CAOA,cAAIc,GACA,OAAOxlB,KAAKf,UAAUumB,UAC1B,CAOA,qBAAIC,GACA,OAAOzlB,KAAKf,UAAUwmB,iBAC1B,CAOA,mBAAIC,GACA,OAAO1lB,KAAKf,UAAUymB,eAC1B,CAMA,mBAAIC,GACA,OAAO3lB,KAAKf,UAAU0mB,eAC1B,CACA,4BAAIhB,GACA,OAAO3kB,KAAKf,UAAU0lB,wBAC1B,CAIA,UAAIR,GACA,OAAOnkB,KAAKf,UAAUklB,MAC1B,CAIA,UAAIvC,GACA,OAAO5hB,KAAKf,UAAU2iB,MAC1B,CAIA,eAAIgE,GACA,OAAO5lB,KAAKf,UAAU2mB,WAC1B,CAIA,eAAI7D,GACA,OAAO/hB,KAAKf,UAAU8iB,WAC1B,CACApiB,WAAAA,CAAYV,GACRe,KAAKf,UAAYA,CACrB,CAIAqlB,KAAAA,GACItkB,KAAKf,UAAUqlB,OACnB,CAIAV,QAAAA,CAASjlB,GACL,OAAOqB,KAAKf,UAAU4mB,cAAclnB,EACxC,CAIAmX,MAAAA,CAAOnM,EAAOC,EAAQub,QAAK,IAALA,IAAAA,GAAQ,GAC1BnlB,KAAKf,UAAU6W,OAAOnM,EAAOC,EAAQub,EACzC,CAIAZ,QAAAA,CAAS5gB,GACL,OAAO3D,KAAKf,UAAUslB,SAAS5gB,EACnC,CAIA0gB,WAAAA,CAAYxB,GACR7iB,KAAKf,UAAUolB,YAAYxB,EAC/B,CAIAiD,QAAAA,CAASniB,GACL,OAAO3D,KAAKf,UAAU6mB,SAASniB,EACnC,CAIAoiB,cAAAA,GACI,OAAO/lB,KAAKf,UAAU8mB,gBAC1B,CAIAjC,WAAAA,CAAYN,GACRxjB,KAAKf,UAAU6kB,YAAYN,EAC/B,CAIAwC,QAAAA,CAASrnB,GACL,OAAOqB,KAAKf,UAAU2kB,SAASjlB,EACnC,CAIAsnB,gBAAAA,CAAiBrX,EAAMjL,GACnB,OAAO3D,KAAKf,UAAUgnB,iBAAiBrX,EAAMjL,EACjD,CAIAsb,QAAAA,CAASve,GACLV,KAAKf,UAAUggB,SAASve,EAC5B,CAIAoc,MAAAA,GACI,OAAO9c,KAAKf,UAAU6d,QAC1B,CAIArZ,KAAAA,GACIzD,KAAKf,UAAUwE,OACnB,CAIAsgB,UAAAA,CAAWpgB,GACP3D,KAAKf,UAAU8kB,WAAWpgB,EAC9B,CAIAqgB,cAAAA,CAAergB,GACX3D,KAAKf,UAAU+kB,eAAergB,EAClC,CACAuf,aAAAA,CAAcL,GACV7iB,KAAKf,UAAUikB,cAAcL,EAAMW,MACvC,CACAF,iBAAAA,GACI,OAAOtjB,KAAKf,UAAUqkB,mBAC1B,CACAD,kBAAAA,GACIrjB,KAAKf,UAAUokB,oBACnB,CACA,6BAAI6C,GACA,OAAOlmB,KAAKf,UAAUinB,yBAC1B,CAIAC,cAAAA,CAAevX,EAAMjL,GACjB,OAAO3D,KAAKf,UAAUknB,eAAevX,EAAMjL,EAC/C,CACAyiB,MAAAA,CAAOd,GACHtlB,KAAKf,UAAU8jB,cAAc,CAAEuC,OACnC,CACAvC,aAAAA,CAAcpf,GACV3D,KAAKf,UAAU8jB,cAAcpf,EACjC,CAIA9B,OAAAA,GACI7B,KAAKf,UAAU4C,SACnB,EC5sBG,MAAMwkB,WAAoBxgB,EAC7BlG,WAAAA,CAAYkc,GACR9b,QACAC,KAAK6b,GAAKA,EACV7b,KAAKsmB,eAAiB,IAAIhgB,EAC1BtG,KAAKumB,wBAA0B,IAAIjgB,EACnCtG,KAAKwmB,aAAe,IAAIpjB,EACxBpD,KAAKymB,YAAczmB,KAAKwmB,aAAa1iB,MACrC9D,KAAKkG,eAAelG,KAAKwmB,aAAcxmB,KAAKsmB,eAAgBtmB,KAAKumB,yBACjEvmB,KAAK0mB,WACT,CACAC,WAAAA,CAAY5iB,GACR,OAAO,CACX,CACA2iB,SAAAA,GACI1mB,KAAKkG,eAAelG,KAAKwmB,aAAczhB,EAAsB/E,KAAK6b,GAAI,aAAc/X,IAChF,GAAIA,EAAM5B,kBAAoBlC,KAAK2mB,YAAY7iB,GAE3C,YADAA,EAAM3B,iBAGV,MAAM8H,EAAUD,IAUhB,GATAhK,KAAKumB,wBAAwB1jB,MAAQ,CACjChB,QAASA,KACLoI,EAAQM,SAAS,GAGzBvK,KAAK6b,GAAGvU,UAAUjD,IAAI,cACtB4E,YAAW,IAAMjJ,KAAK6b,GAAGvU,UAAUE,OAAO,eAAe,GACzDxH,KAAKsmB,eAAezjB,MAAQ7C,KAAKW,QAAQmD,GACzC9D,KAAKwmB,aAAaliB,KAAKR,GACnBA,EAAM8iB,aAAc,CACpB9iB,EAAM8iB,aAAaC,cAAgB,OACnB/iB,EAAM8iB,aAAalpB,MAAM6D,OAAS,GAW9CuC,EAAM8iB,aAAahmB,QAAQ,aAAc,GAEjD,KACAmE,EAAsB/E,KAAK6b,GAAI,WAAW,KAC1C7b,KAAKumB,wBAAwB1kB,UAC7B7B,KAAKsmB,eAAezkB,SAAS,IAErC,ECnDG,MAAMilB,WAA4BjhB,EACrClG,WAAAA,CAAYgF,EAASoiB,GACjBhnB,QACAC,KAAK2E,QAAUA,EACf3E,KAAK+mB,UAAYA,EACjB/mB,KAAKgnB,OAAS,KACdhnB,KAAKinB,mBACT,CACAC,WAAAA,CAAY3iB,GACRvE,KAAKgnB,OAASziB,EAAEyiB,OAChBhnB,KAAK+mB,UAAUG,YAAY3iB,EAC/B,CACA4iB,UAAAA,CAAW5iB,GACPA,EAAEpC,iBACEnC,KAAK+mB,UAAUI,YACfnnB,KAAK+mB,UAAUI,WAAW5iB,EAElC,CACA6iB,WAAAA,CAAY7iB,GACJvE,KAAKgnB,SAAWziB,EAAEyiB,SAClBhnB,KAAKgnB,OAAS,KACdhnB,KAAK+mB,UAAUK,YAAY7iB,GAEnC,CACA8iB,SAAAA,CAAU9iB,GACNvE,KAAKgnB,OAAS,KACdhnB,KAAK+mB,UAAUM,UAAU9iB,EAC7B,CACA+iB,MAAAA,CAAO/iB,GACHvE,KAAK+mB,UAAUO,OAAO/iB,EAC1B,CACA0iB,iBAAAA,GACIjnB,KAAKkG,eAAenB,EAAsB/E,KAAK2E,QAAS,aAAcJ,IAClEvE,KAAKknB,YAAY3iB,EAAE,IACpB,IACHvE,KAAKkG,eAAenB,EAAsB/E,KAAK2E,QAAS,YAAaJ,IACjEvE,KAAKmnB,WAAW5iB,EAAE,IACnB,IACHvE,KAAKkG,eAAenB,EAAsB/E,KAAK2E,QAAS,aAAcJ,IAClEvE,KAAKonB,YAAY7iB,EAAE,KAEvBvE,KAAKkG,eAAenB,EAAsB/E,KAAK2E,QAAS,WAAYJ,IAChEvE,KAAKqnB,UAAU9iB,EAAE,KAErBvE,KAAKkG,eAAenB,EAAsB/E,KAAK2E,QAAS,QAASJ,IAC7DvE,KAAKsnB,OAAO/iB,EAAE,IAEtB,EC5CG,MAAMgjB,WAA6BvlB,EACtC,eAAIwlB,GACA,OAAOxnB,KAAK2D,QAAQ6jB,WACxB,CACA,YAAInQ,GACA,OAAOrX,KAAK2D,QAAQ0T,QACxB,CACA1X,WAAAA,CAAYgE,GACR5D,QACAC,KAAK2D,QAAUA,CACnB,EAEG,SAAS8jB,GAAoBpL,GAChC,OAAQA,GACJ,IAAK,QACD,MAAO,MACX,IAAK,QACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI1Z,MAAO,sBAAqB0Z,MAElD,CACO,SAASqL,GAAoBrQ,GAChC,OAAQA,GACJ,IAAK,MACD,MAAO,QACX,IAAK,SACD,MAAO,QACX,IAAK,OACD,MAAO,OACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,QACI,MAAM,IAAI1U,MAAO,qBAAoB0U,MAEjD,CACA,MAAMsQ,GAA0B,CAC5B9kB,MAAO,GACP+B,KAAM,cAEJgjB,GAAe,CACjB/kB,MAAO,GACP+B,KAAM,cAIH,MAAMijB,WAAmBhiB,EAC5B,SAAIgS,GACA,OAAO7X,KAAK8nB,MAChB,CACAnoB,WAAAA,CAAYgF,EAAShB,GACjB5D,QACAC,KAAK2E,QAAUA,EACf3E,KAAK2D,QAAUA,EACf3D,KAAK+nB,QAAU,IAAI3kB,EACnBpD,KAAKsnB,OAAStnB,KAAK+nB,QAAQjkB,MAC3B9D,KAAKgoB,mBAAqB,IAAI5kB,EAC9BpD,KAAKylB,kBAAoBzlB,KAAKgoB,mBAAmBlkB,MAEjD9D,KAAKioB,wBAA0B,IAAIC,IAAIloB,KAAK2D,QAAQwkB,qBACpDnoB,KAAKooB,IAAM,IAAItB,GAAoB9mB,KAAK2E,QAAS,CAC7CuiB,YAAaA,KAAe,EAC5BC,WAAa5iB,IACT,GAA0C,IAAtCvE,KAAKioB,wBAAwB/iB,KAE7B,YADAlF,KAAKqoB,mBAGT,MAAM1e,EAAQ3J,KAAK2E,QAAQ2jB,YACrB1e,EAAS5J,KAAK2E,QAAQ4jB,aAC5B,GAAc,IAAV5e,GAA0B,IAAXC,EACf,OAEJ,MAAM4e,EAAOjkB,EAAEkkB,cAAc5e,wBACvB6G,EAAInM,EAAEkQ,QAAU+T,EAAK/e,KACrBif,EAAInkB,EAAEmQ,QAAU8T,EAAK9e,IACrBif,EAAW3oB,KAAK4oB,kBAAkB5oB,KAAKioB,wBAAyBvX,EAAGgY,EAAG/e,EAAOC,GAMnF,GAAI5J,KAAK6oB,cAActkB,IAAmB,OAAbokB,EAGzB,YADA3oB,KAAKqoB,mBAGT,IAAKroB,KAAK2D,QAAQmlB,kBAAkBvkB,EAAGokB,GAEnC,YADA3oB,KAAKqoB,mBAGT,MAAMU,EAAuB,IAAIxB,GAAqB,CAClDC,YAAajjB,EACb8S,SAAUsR,IAMd3oB,KAAKgoB,mBAAmB1jB,KAAKykB,GACzBA,EAAqB7mB,iBACrBlC,KAAKqoB,oBAGTroB,KAAKgpB,WAAWzkB,GACXvE,KAAKipB,gBACNjpB,KAAKipB,cAAgB7gB,SAAS6L,cAAc,OAC5CjU,KAAKipB,cAAchrB,UAAY,0BAC/B+B,KAAKkpB,eAAiB9gB,SAAS6L,cAAc,OAC7CjU,KAAKkpB,eAAejrB,UAAY,2BAChC+B,KAAK8nB,OAAS,SACd9nB,KAAKipB,cAAc1W,YAAYvS,KAAKkpB,gBACpClpB,KAAK2E,QAAQ2C,UAAUjD,IAAI,kBAC3BrE,KAAK2E,QAAQwkB,OAAOnpB,KAAKipB,gBAE7BjpB,KAAKopB,cAAcT,EAAUhf,EAAOC,GACpC5J,KAAK8nB,OAASa,EAAQ,EAE1BvB,YAAaA,KACTpnB,KAAKqoB,kBAAkB,EAE3BhB,UAAWA,KACPrnB,KAAKqoB,kBAAkB,EAE3Bf,OAAS/iB,IACLA,EAAEpC,iBACF,MAAM0V,EAAQ7X,KAAK8nB,OACnB9nB,KAAKqoB,mBACDxQ,IAGAtT,EAAE8kB,kBACFrpB,KAAK+nB,QAAQzjB,KAAK,CAAE+S,SAAUQ,EAAO2P,YAAajjB,IACtD,IAGRvE,KAAKkG,eAAelG,KAAK+nB,QAAS/nB,KAAKgoB,mBAAoBhoB,KAAKooB,IACpE,CACAkB,cAAAA,CAAenB,GACXnoB,KAAKioB,wBAA0B,IAAIC,IAAIC,EAC3C,CACAoB,eAAAA,CAAgBC,GACZxpB,KAAK2D,QAAQ8lB,aAAeD,CAChC,CACA3nB,OAAAA,GACI7B,KAAKqoB,mBACLtoB,MAAM8B,SACV,CAIAmnB,UAAAA,CAAWllB,GACPA,EAAM+jB,GAAW6B,gBAAiB,CACtC,CAIAb,aAAAA,CAAc/kB,GACV,MAAMjB,EAAQiB,EAAM+jB,GAAW6B,eAC/B,MAAwB,kBAAV7mB,GAAuBA,CACzC,CACAumB,aAAAA,CAAcT,EAAUhf,EAAOC,GAC3B,IAAIlH,EAAI8M,EACR,IAAKxP,KAAKkpB,eACN,OAEJ,MAAMS,EAAWhgB,EAzHI,IA0HfigB,EAAWhgB,EAzHK,IA0HhBigB,EAAsB,SAAblB,EACTmB,EAAuB,UAAbnB,EACVoB,EAAqB,QAAbpB,EACRqB,EAAwB,WAAbrB,EACXsB,GAAcN,GAAYG,EAC1BI,GAAaP,GAAYE,EACzBM,GAAYP,GAAYG,EACxBK,GAAeR,GAAYI,EACjC,IAAI9kB,EAAO,EACX,MAAMmlB,EAAuG,QAAxF7a,EAA0C,QAApC9M,EAAK1C,KAAK2D,QAAQ8lB,oBAAiC,IAAP/mB,OAAgB,EAASA,EAAGwC,YAAyB,IAAPsK,EAAgBA,EAAKoY,GACjH,eAArByC,EAAYzlB,KACZM,EAAO2G,EAAMwe,EAAYxnB,MAAO,EAAG,KAAO,MAGtConB,GAAcC,KACdhlB,EAAO2G,EAAM,EAAGwe,EAAYxnB,MAAO8G,GAASA,IAE5CwgB,GAAYC,KACZllB,EAAO2G,EAAM,EAAGwe,EAAYxnB,MAAO+G,GAAUA,IAGrD,MAAMgT,EAAM,CAAElT,IAAK,MAAOD,KAAM,MAAOE,MAAO,OAAQC,OAAQ,QAoB1DqgB,GACArN,EAAInT,KAAU,KAAO,EAAIvE,GAAb,IACZ0X,EAAIjT,MAAW,IAAMzE,EAAR,KAERglB,EACLtN,EAAIjT,MAAW,IAAMzE,EAAR,IAERilB,EACLvN,EAAIhT,OAAY,IAAM1E,EAAR,IAETklB,IACLxN,EAAIlT,IAAS,KAAO,EAAIxE,GAAb,IACX0X,EAAIhT,OAAY,IAAM1E,EAAR,KAElBlF,KAAKkpB,eAAe7e,MAAMX,IAAMkT,EAAIlT,IACpC1J,KAAKkpB,eAAe7e,MAAMZ,KAAOmT,EAAInT,KACrCzJ,KAAKkpB,eAAe7e,MAAMV,MAAQiT,EAAIjT,MACtC3J,KAAKkpB,eAAe7e,MAAMT,OAASgT,EAAIhT,OACvClC,EAAY1H,KAAKkpB,eAAgB,gCAAiCU,GAClEliB,EAAY1H,KAAKkpB,eAAgB,kCAAmCS,GACpEjiB,EAAY1H,KAAKkpB,eAAgB,sBAAuBW,GACxDniB,EAAY1H,KAAKkpB,eAAgB,uBAAwBY,GACzDpiB,EAAY1H,KAAKkpB,eAAgB,qBAAsBa,GACvDriB,EAAY1H,KAAKkpB,eAAgB,wBAAyBc,GAC1DtiB,EAAY1H,KAAKkpB,eAAgB,wBAAsC,WAAbP,EAC9D,CACAC,iBAAAA,CAAkB0B,EAAa5Z,EAAGgY,EAAG/e,EAAOC,GACxC,IAAIlH,EAAI8M,EACR,MAAM+a,EAA2H,QAAlG/a,EAA0C,QAApC9M,EAAK1C,KAAK2D,QAAQ8lB,oBAAiC,IAAP/mB,OAAgB,EAASA,EAAG8nB,sBAAmC,IAAPhb,EAAgBA,EAAKmY,GAE9J,MADoD,eAA/B4C,EAAsB3lB,KAiB5C,SAAuC0lB,EAAa5Z,EAAGgY,EAAG/e,EAAOC,EAAQ6gB,GAC5E,MAAMC,EAAM,IAAMha,EAAK/G,EACjBghB,EAAM,IAAMjC,EAAK9e,EACvB,GAAI0gB,EAAY5G,IAAI,SAAWgH,EAAKD,EAChC,MAAO,OAEX,GAAIH,EAAY5G,IAAI,UAAYgH,EAAK,IAAMD,EACvC,MAAO,QAEX,GAAIH,EAAY5G,IAAI,QAAUiH,EAAKF,EAC/B,MAAO,MAEX,GAAIH,EAAY5G,IAAI,WAAaiH,EAAK,IAAMF,EACxC,MAAO,SAEX,IAAKH,EAAY5G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlCmBkH,CAA8BN,EAAa5Z,EAAGgY,EAAG/e,EAAOC,EAAQ2gB,EAAsB1nB,OAmClG,SAAmCynB,EAAa5Z,EAAGgY,EAAG/e,EAAOC,EAAQ6gB,GACxE,GAAIH,EAAY5G,IAAI,SAAWhT,EAAI+Z,EAC/B,MAAO,OAEX,GAAIH,EAAY5G,IAAI,UAAYhT,EAAI/G,EAAQ8gB,EACxC,MAAO,QAEX,GAAIH,EAAY5G,IAAI,QAAUgF,EAAI+B,EAC9B,MAAO,MAEX,GAAIH,EAAY5G,IAAI,WAAagF,EAAI9e,EAAS6gB,EAC1C,MAAO,SAEX,IAAKH,EAAY5G,IAAI,UACjB,OAAO,KAEX,MAAO,QACX,CAlDemH,CAA0BP,EAAa5Z,EAAGgY,EAAG/e,EAAOC,EAAQ2gB,EAAsB1nB,MAC7F,CACAwlB,gBAAAA,GACQroB,KAAKipB,gBACLjpB,KAAK8nB,YAASrnB,EACdT,KAAK2E,QAAQyP,YAAYpU,KAAKipB,eAC9BjpB,KAAKipB,mBAAgBxoB,EACrBT,KAAKkpB,oBAAiBzoB,EACtBT,KAAK2E,QAAQ2C,UAAUE,OAAO,kBAEtC,EAEJqgB,GAAW6B,cAAgB,wCCzQpB,MAAMoB,GAAyB,MAKlC,MAAM9S,EAAa,CACfC,yBAAqBxX,EACrBsqB,gBAAYtqB,EACZxC,eAAWwC,GAEf,OAAOyX,OAAOC,KAAKH,EACtB,EAXqC,GAY/B,MAAMgT,WAAuC5oB,EAChDzC,WAAAA,CAAY6nB,EAAanQ,EAAU1W,EAASkiB,GACxC9iB,QACAC,KAAKwnB,YAAcA,EACnBxnB,KAAKqX,SAAWA,EAChBrX,KAAKW,QAAUA,EACfX,KAAK6iB,MAAQA,CACjB,EClBG,MAAMoI,WAAuBjpB,EAChCrC,WAAAA,GACII,OACJ,EAKG,MAAMmrB,WAAqBrlB,EAC9B,aAAIslB,GACA,OAAOnrB,KAAKorB,UAChB,CACA,YAAIC,GACA,OAAOrrB,KAAKsrB,SAChB,CACA,aAAIxI,GACA,OAAO9iB,KAAKurB,UAChB,CACA,SAAI5hB,GACA,OAAO3J,KAAKwrB,MAChB,CACA,UAAI5hB,GACA,OAAO5J,KAAKyrB,OAChB,CACA9rB,WAAAA,CAAYhB,EAAIM,GACZc,QACAC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKorB,YAAa,EAClBprB,KAAKsrB,WAAY,EACjBtrB,KAAKurB,YAAa,EAClBvrB,KAAKwrB,OAAS,EACdxrB,KAAKyrB,QAAU,EACfzrB,KAAK0rB,YAAc,CAAC,EACpB1rB,KAAK2rB,uBAAyB,IAAIrlB,EAClCtG,KAAK4rB,sBAAwB,IAAIxoB,EACjCpD,KAAK6rB,sBAAwB7rB,KAAK4rB,sBAAsB9nB,MACxD9D,KAAK8rB,kBAAoB,IAAI1oB,EAC7BpD,KAAK+rB,iBAAmB/rB,KAAK8rB,kBAAkBhoB,MAE/C9D,KAAKgsB,aAAe,IAAI5oB,EACxBpD,KAAKisB,YAAcjsB,KAAKgsB,aAAaloB,MAErC9D,KAAKka,uBAAyB,IAAI9W,EAClCpD,KAAKma,sBAAwBna,KAAKka,uBAAuBpW,MACzD9D,KAAKksB,wBAA0B,IAAI9oB,EACnCpD,KAAKmsB,uBAAyBnsB,KAAKksB,wBAAwBpoB,MAC3D9D,KAAKuiB,mBAAqB,IAAInf,EAC9BpD,KAAKwiB,kBAAoBxiB,KAAKuiB,mBAAmBze,MACjD9D,KAAKosB,gBAAkB,IAAIhpB,EAC3BpD,KAAKqsB,eAAiBrsB,KAAKosB,gBAAgBtoB,MAC3C9D,KAAKssB,uBAAyB,IAAIlpB,EAClCpD,KAAKusB,sBAAwBvsB,KAAKssB,uBAAuBxoB,MACzD9D,KAAKkG,eAAelG,KAAK+rB,kBAAkBjoB,IACvC9D,KAAKorB,WAAatnB,EAAMqnB,SAAS,IACjCnrB,KAAKwiB,mBAAmB1e,IACxB9D,KAAKsrB,UAAYxnB,EAAMunB,QAAQ,IAC/BrrB,KAAKma,uBAAuBrW,IAC5B9D,KAAKurB,WAAaznB,EAAMgf,SAAS,IACjC9iB,KAAK6rB,uBAAuB/nB,IAC5B9D,KAAKwrB,OAAS1nB,EAAM6F,MACpB3J,KAAKyrB,QAAU3nB,EAAM8F,MAAM,IAC3B5J,KAAK2rB,uBAAwB3rB,KAAK4rB,sBAAuB5rB,KAAK8rB,kBAAmB9rB,KAAKka,uBAAwBla,KAAKuiB,mBAAoBviB,KAAKgsB,aAAchsB,KAAKosB,gBAAiBpsB,KAAKgsB,aAAchsB,KAAKksB,wBAAyBlsB,KAAKssB,uBAC9O,CACAE,aAAAA,GACI,OAAOxsB,KAAK0rB,WAChB,CACAe,UAAAA,CAAW5J,GACP7iB,KAAK2rB,uBAAuB9oB,MAAQ7C,KAAKssB,uBAAuBxoB,OAAO4oB,IACnE1sB,KAAK0rB,YAAcgB,EACnB7J,EAAM8J,OAAO,CACTC,OAAQF,GACV,GAEV,CACArf,UAAAA,CAAWyV,GACP9iB,KAAKksB,wBAAwB5nB,KAAK,CAAEwe,aACxC,CACAe,SAAAA,GACI7jB,KAAKosB,gBAAgB9nB,MACzB,CACAuoB,gBAAAA,CAAiBH,GACb1sB,KAAKssB,uBAAuBhoB,KAAKooB,EACrC,ECnFG,MAAMI,WAA8B5B,GAEvCvrB,WAAAA,CAAYhB,EAAIM,GACZc,MAAMpB,EAAIM,GACVe,KAAK+sB,gCAAkC,IAAI3pB,EAC3CpD,KAAKgtB,+BAAiChtB,KAAK+sB,gCAAgCjpB,MAE3E9D,KAAKitB,wBAA0B,IAAI7pB,EAAQ,CACvCY,QAAQ,IAEZhE,KAAKktB,uBAAyBltB,KAAKitB,wBAAwBnpB,MAE3D9D,KAAKmtB,iBAAmB,IAAI/pB,EAC5BpD,KAAKotB,gBAAkBptB,KAAKmtB,iBAAiBrpB,MAC7C9D,KAAKkG,eAAelG,KAAK+sB,gCAAiC/sB,KAAKitB,wBAAyBjtB,KAAKmtB,iBACjG,CACAE,cAAAA,CAAexqB,GACX7C,KAAK+sB,gCAAgCzoB,KAAKzB,EAC9C,CACAyqB,OAAAA,CAAQxpB,GACJ9D,KAAKmtB,iBAAiB7oB,KAAKR,EAC/B,ECrBG,MAAMypB,WAA6BT,GACtC,QAAIpU,CAAKA,GACL1Y,KAAKwtB,MAAQ9U,CACjB,CACA/Y,WAAAA,CAAYhB,EAAIM,GACZc,MAAMpB,EAAIM,GACVe,KAAKytB,sBAAwB,IAAIrqB,EAAQ,CACrCY,QAAQ,IAEZhE,KAAK0tB,qBAAuB1tB,KAAKytB,sBAAsB3pB,MACvD9D,KAAK2tB,cAAgB,IAAIvqB,EAAQ,CAAC,GAClCpD,KAAK4tB,aAAe5tB,KAAK2tB,cAAc7pB,MACvC9D,KAAK6tB,cAAgB,IAAIzqB,EAAQ,CAAC,GAClCpD,KAAK8tB,aAAe9tB,KAAK6tB,cAAc/pB,MACvC9D,KAAKkG,eAAelG,KAAKytB,sBAAuBztB,KAAK2tB,cAAe3tB,KAAK6tB,cAC7E,CACAE,WAAAA,CAAYC,GACR,IAAItrB,EACkB,QAArBA,EAAK1C,KAAKwtB,aAA0B,IAAP9qB,GAAyBA,EAAGqrB,YAAYC,EAC1E,CACA,cAAIA,GACA,IAAItrB,EACJ,SAAgC,QAArBA,EAAK1C,KAAKwtB,aAA0B,IAAP9qB,OAAgB,EAASA,EAAGsrB,aACxE,ECtBG,MAAMC,WAAsBpoB,EAC/B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACA,SAAIlX,GACA,OAAO3J,KAAKwrB,MAChB,CACA,UAAI5hB,GACA,OAAO5J,KAAKyrB,OAChB,CACA,UAAImB,GACA,IAAIlqB,EACJ,OAA+B,QAAvBA,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,OAAgB,EAASA,EAAGkqB,MACvE,CACAjtB,WAAAA,CAAYhB,EAAIM,EAAWkvB,GACvBpuB,QACAC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKmuB,IAAMA,EACXnuB,KAAKyrB,QAAU,EACfzrB,KAAKwrB,OAAS,EACdxrB,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAASuN,UAAY,EAC1BpuB,KAAK6gB,SAASxW,MAAMgkB,QAAU,OAC9BruB,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,OAC5B3J,KAAK6gB,SAASxW,MAAMikB,SAAW,SAC/B,MAAMC,EAAelmB,EAAWrI,KAAK6gB,UACrC7gB,KAAKkG,eAAelG,KAAKmuB,IAAKI,EAAa/lB,YAAW,KAClDxI,KAAKmuB,IAAIrC,kBAAkBxnB,KAAK,CAAE6mB,WAAW,GAAO,IACpDoD,EAAa7lB,WAAU,KACvB1I,KAAKmuB,IAAIrC,kBAAkBxnB,KAAK,CAAE6mB,WAAW,GAAQ,IACrDoD,EACR,CACAjK,KAAAA,GACI,MAAMxgB,EAAQ,IAAImnB,GAClBjrB,KAAKmuB,IAAInC,aAAa1nB,KAAKR,GACvBA,EAAM5B,kBAGVlC,KAAK6gB,SAASyD,OAClB,CACAxO,MAAAA,CAAOnM,EAAOC,GACV5J,KAAKwrB,OAAS7hB,EACd3J,KAAKyrB,QAAU7hB,EACf5J,KAAKmuB,IAAIvC,sBAAsBtnB,KAAK,CAAEqF,QAAOC,WACzC5J,KAAKwuB,MACDxuB,KAAKkuB,SACLluB,KAAKwuB,KAAK7B,OAAO3sB,KAAKkuB,QAAQtB,OAG1C,CACA6B,IAAAA,CAAK/B,GACD1sB,KAAKkuB,QAAUxB,EACf1sB,KAAKwuB,KAAOxuB,KAAK0uB,cACrB,CACA/B,MAAAA,CAAO7oB,GACH,IAAIpB,EAAI8M,EAERxP,KAAKkuB,QAAUhW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAKkuB,SAAU,CAAEtB,OAAQ1U,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAA2B,QAAvBjsB,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,OAAgB,EAASA,EAAGkqB,QAAS9oB,EAAM8oB,UAKnL,IAAK,MAAMgC,KAAO1W,OAAOC,KAAKrU,EAAM8oB,aACNnsB,IAAtBqD,EAAM8oB,OAAOgC,WACN5uB,KAAKkuB,QAAQtB,OAAOgC,GAId,QAApBpf,EAAKxP,KAAKwuB,YAAyB,IAAPhf,GAAyBA,EAAGmd,OAAO,CAAEC,OAAQ5sB,KAAKkuB,QAAQtB,QAC3F,CACA9P,MAAAA,GACI,IAAIpa,EAAI8M,EACR,MAAMod,EAAuF,QAA7Epd,EAA6B,QAAvB9M,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,OAAgB,EAASA,EAAGkqB,cAA2B,IAAPpd,EAAgBA,EAAK,CAAC,EAC3H,MAAO,CACH7Q,GAAIqB,KAAKrB,GACTM,UAAWe,KAAKf,UAChB2tB,OAAQ1U,OAAOC,KAAKyU,GAAQrrB,OAAS,EAAIqrB,OAASnsB,EAE1D,CACAoB,OAAAA,GACI,IAAIa,EACJ1C,KAAKmuB,IAAItsB,UACY,QAApBa,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGb,UACzD9B,MAAM8B,SACV,ECpFG,MAAMgtB,WAAsBZ,GAC/B,eAAI3f,CAAYzL,GACZ7C,KAAKuO,aAAe1L,CACxB,CACA,eAAIyL,GACA,OAAOtO,KAAKuO,YAChB,CACA,eAAI3B,GAIA,OAHmB5M,KAAK8uB,YACP9uB,KAAKguB,aACahuB,KAAK+uB,iBAAmB,EAE/D,CACA,eAAIhiB,GAIA,OAHmB/M,KAAK8uB,YACP9uB,KAAKguB,aACahuB,KAAKgvB,iBAAmB,EAE/D,CACA,QAAI9pB,GACA,OAAOlF,KAAKwM,KAChB,CACA,kBAAIyB,GACA,OAAOjO,KAAKkO,eAChB,CACA,kBAAID,CAAe/I,GACflF,KAAKkO,gBAAkBhJ,CAC3B,CACA,mBAAI+pB,GACA,OAAOjvB,KAAK+uB,gBAChB,CACA,mBAAIE,CAAgBpsB,GAChB7C,KAAK+uB,iBAAoC,iBAAVlsB,EAAqBA,EAAQ,CAChE,CACA,mBAAIqsB,GACA,OAAOlvB,KAAKgvB,gBAChB,CACA,mBAAIE,CAAgBrsB,GAChB7C,KAAKgvB,iBACgB,iBAAVnsB,EAAqBA,EAAQgM,OAAOC,iBACnD,CACA,iBAAIqgB,GACA,OAAOnvB,KAAKovB,cAChB,CACA,iBAAID,CAActsB,GACd7C,KAAKovB,eAAiBvsB,EACtB7C,KAAKqvB,OAAOhlB,MAAMilB,QAAUzsB,EAAQ,GAAK,MAC7C,CACAlD,WAAAA,CAAYhB,EAAIM,EAAWswB,EAAiBjhB,EAAa0f,EAAYwB,GACjEzvB,MAAMpB,EAAIM,EAAW,IAAIsuB,GAAqB5uB,EAAIM,IAClDe,KAAKuvB,gBAAkBA,EACvBvvB,KAAKyvB,2BAA6B,IAAIrsB,EAAQ,CAAEY,QAAQ,IACxDhE,KAAK2Y,0BAA4B3Y,KAAKyvB,2BAA2B3rB,MACjE9D,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAK8uB,WAAa,GAClB9uB,KAAKkO,gBAAkB,EACvBlO,KAAKwM,MAAQ,EACbxM,KAAK+uB,iBAAmB,IACxB/uB,KAAKgvB,iBAAmBngB,OAAOC,kBAC/B9O,KAAK0vB,aAAc,EACnB1vB,KAAK2vB,aAAe,EACpB3vB,KAAKmuB,IAAIzV,KAAO1Y,KAChBA,KAAKmuB,IAAI1B,WAAWzsB,MACpBA,KAAK0vB,YAAc1B,EACnBhuB,KAAKovB,eAAiBI,EACtBxvB,KAAKyvB,2BAA2BnrB,KAAKtE,KAAKguB,cAC1ChuB,KAAKuO,aAAeD,EACpBtO,KAAK2E,QAAQ2C,UAAUjD,IAAI,WAC3BrE,KAAKkG,eAAelG,KAAKmuB,IAAIhC,wBAAwBroB,IACjD,MAAM,UAAEgf,GAAchf,GAChB,SAAE8rB,GAAa5vB,KAAKkuB,QAC1B0B,EAASviB,WAAWrN,KAAM8iB,EAAU,IACpC9iB,KAAKmuB,IAAIf,iBAAiBtpB,IAC1B9D,KAAKwY,aAAalU,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAC5CH,EAAsB/E,KAAK2E,QAAS,cAAekrB,IACnD7vB,KAAKmuB,IAAIR,cAAcrpB,KAAKurB,EAAG,IAC/B9qB,EAAsB/E,KAAK2E,QAAS,cAAekrB,IACnD7vB,KAAKmuB,IAAIN,cAAcvpB,KAAKurB,EAAG,KAEnC7vB,KAAKkG,eAAelG,KAAKyvB,2BAA4BzvB,KAAK2Y,2BAA2BmX,IACjF9vB,KAAKmuB,IAAIV,sBAAsBnpB,KAAK,CAChC0pB,WAAY8B,GACd,IACF9vB,KAAKmuB,IAAIpC,kBAAkBxnB,IACtBvE,KAAKqvB,SAGN9qB,EAAE4mB,UACF1jB,EAAWzH,KAAKqvB,OAAQ,WAGxBloB,EAAcnH,KAAKqvB,OAAQ,WAC/B,KAEJrvB,KAAK+vB,YACT,CACA1iB,UAAAA,CAAWyV,GACP9iB,KAAKmuB,IAAIjU,uBAAuB5V,KAAK,CAAEwe,aAC3C,CACAe,SAAAA,CAAUwH,GACNrrB,KAAKmuB,IAAI5L,mBAAmBje,KAAK,CAAE+mB,YACvC,CACA2C,UAAAA,GACI,OAAOhuB,KAAK0vB,WAChB,CACA3B,WAAAA,CAAYiC,GACJhwB,KAAK0vB,cAAgBM,IAGzBhwB,KAAK0vB,YAAcM,EACfA,GACIhwB,KAAKiZ,gBACLC,aAAalZ,KAAKiZ,gBAElBjZ,KAAKiwB,MACLjwB,KAAK2E,QAAQ4N,YAAYvS,KAAKiwB,OAIlCjwB,KAAKiZ,eAAiBhQ,YAAW,KAC7B,IAAIvG,EACiB,QAApBA,EAAK1C,KAAKiwB,YAAyB,IAAPvtB,GAAyBA,EAAG8E,QAAQ,GAClE,KAEPxH,KAAKwY,aAAalU,KAAK0rB,EAAW,CAAE9qB,KAAMlF,KAAK2J,OAAU,CAAC,GAC1D3J,KAAKyvB,2BAA2BnrB,KAAK0rB,GACzC,CACAla,MAAAA,CAAO5Q,EAAM+I,GACTjO,KAAKwM,MAAQtH,EACblF,KAAKkO,gBAAkBD,EACvB,MAAOtE,EAAOC,GAAU5J,KAAKsO,cAAgBf,EAAYkB,WACnD,CAACvJ,EAAM+I,GACP,CAACA,EAAgB/I,GACnBlF,KAAKguB,eACLhuB,KAAK2vB,aAAehmB,GAExB5J,MAAM+V,OAAOnM,EAAOC,EACxB,CACA6kB,IAAAA,CAAK/B,GACD,IAAIhqB,EAAI8M,EACRzP,MAAM0uB,KAAK/B,GAC+B,iBAA/BA,EAAWuC,kBAClBjvB,KAAKivB,gBAAkBvC,EAAWuC,iBAEI,iBAA/BvC,EAAWwC,kBAClBlvB,KAAKkvB,gBAAkBxC,EAAWwC,iBAEtClvB,KAAKkwB,SAAWlwB,KAAKmwB,mBACrBnwB,KAAKowB,WAAapwB,KAAKqwB,qBACvBrwB,KAAKkwB,SAASzB,KAAKvW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAGjC,GAAa,CAAEyB,IAAKnuB,KAAKmuB,OAC5EnuB,KAAKowB,WAAW3B,KAAKvW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAGjC,GAAa,CAAEyB,IAAKnuB,KAAKmuB,OACzD,QAApBzrB,EAAK1C,KAAKiwB,YAAyB,IAAPvtB,GAAyBA,EAAGymB,OAAOnpB,KAAKkwB,SAASvrB,SACvD,QAAtB6K,EAAKxP,KAAKqvB,cAA2B,IAAP7f,GAAyBA,EAAG2Z,OAAOnpB,KAAKowB,WAAWzrB,SAC7C,kBAA1B+nB,EAAWsB,YAClBhuB,KAAK+tB,YAAYrB,EAAWsB,WAEpC,CACAlR,MAAAA,GACI,MAAM8P,EAAS5sB,KAAKkuB,QACpB,OAAOhW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG5uB,MAAM+c,UAAW,CAAEyS,gBAAiBvvB,KAAKuvB,gBAAiB5yB,MAAOiwB,EAAOjwB,OACnH,CACAozB,UAAAA,GACI/vB,KAAKqvB,OAASjnB,SAAS6L,cAAc,OACrCjU,KAAKqvB,OAAOjB,SAAW,EACvBpuB,KAAKqvB,OAAOpxB,UAAY,iBACxB+B,KAAKqvB,OAAOhlB,MAAMT,OAAU,GAAE5J,KAAK8uB,eACnC9uB,KAAKqvB,OAAOhlB,MAAMimB,WAAc,GAAEtwB,KAAK8uB,eACvC9uB,KAAKqvB,OAAOhlB,MAAMkmB,UAAa,GAAEvwB,KAAK8uB,eACtC9uB,KAAKqvB,OAAOhlB,MAAMmmB,UAAa,GAAExwB,KAAK8uB,eACtC9uB,KAAK2E,QAAQ4N,YAAYvS,KAAKqvB,QAC9BrvB,KAAKiwB,KAAO7nB,SAAS6L,cAAc,OACnCjU,KAAKiwB,KAAKhyB,UAAY,eACtB+B,KAAK2E,QAAQ4N,YAAYvS,KAAKiwB,KAClC,CAEAvB,YAAAA,GACI,MAAO,CACH/B,OAASC,IACL,IAAIlqB,EAAI8M,EACiB,QAAxB9M,EAAK1C,KAAKkwB,gBAA6B,IAAPxtB,GAAyBA,EAAGiqB,OAAO,CAAEC,WAC3C,QAA1Bpd,EAAKxP,KAAKowB,kBAA+B,IAAP5gB,GAAyBA,EAAGmd,OAAO,CAAEC,UAAS,EAErF/qB,QAASA,KACL,IAAIa,EAAI8M,EACiB,QAAxB9M,EAAK1C,KAAKkwB,gBAA6B,IAAPxtB,GAAyBA,EAAGb,UAClC,QAA1B2N,EAAKxP,KAAKowB,kBAA+B,IAAP5gB,GAAyBA,EAAG3N,SAAS,EAGpF,EC3LG,MAAM4uB,WAA+B5B,GACxClvB,WAAAA,CAAYiwB,EAAUjxB,EAAIM,EAAWswB,EAAiBjhB,EAAa0f,EAAYjD,GAC3EhrB,MAAMpB,EAAIM,EAAWswB,EAAiBjhB,EAAa0f,GAAY,GAC/DhuB,KAAK4vB,SAAWA,EAChB5vB,KAAK0wB,WAAa,IAAIttB,EACtBpD,KAAK0kB,UAAY1kB,KAAK0wB,WAAW5sB,MACjC9D,KAAK2wB,0BAA4B,IAAIvtB,EACrCpD,KAAK2kB,yBAA2B3kB,KAAK2wB,0BAA0B7sB,MAC/D9D,KAAKkG,eAAelG,KAAK0wB,WAAY1wB,KAAK2wB,2BACrC5F,GACD/qB,KAAK4wB,kBAEb,CACAA,gBAAAA,GACI,IAAK5wB,KAAKqvB,OACN,OAEJ,MAAM1wB,EAAKqB,KAAKrB,GACVkyB,EAAa7wB,KAAK4vB,SAASjxB,GACjCqB,KAAKqvB,OAAOyB,WAAY,EACxB9wB,KAAK+wB,QAAU,IAAK,cAA8B1K,GAC9C1lB,OAAAA,GAEI,OADAR,EAAuBC,cAAcQ,QAAQ,CAAC,IAAIX,EAAa4wB,EAAYlyB,IAAMsB,EAAac,WACvF,CACHc,QAASA,KACL1B,EAAuBC,cAAcI,UAAUP,EAAac,UAAU,EAGlF,GACDf,KAAKqvB,QACRrvB,KAAKgnB,OAAS,IAAIa,GAAW7nB,KAAK2E,QAAS,CACvCwjB,oBAAqB,CAAC,MAAO,UAC7BsB,aAAc,CACVe,eAAgB,CAAE5lB,KAAM,aAAc/B,MAAO,KAEjDimB,kBAAmBA,CAAChlB,EAAOuT,KACvB,MAAM3W,EAAOM,IACb,GAAIN,GACIA,EAAKR,SAAWF,KAAKrB,IACrB+B,EAAKd,SAAWI,KAAK4vB,SAASjxB,GAC9B,OAAO,EAGf,MAAMqyB,EAAa,IAAIhG,GAA+BlnB,EAAOuT,EAAUrW,EAAahB,MAEpF,OADAA,KAAK2wB,0BAA0BrsB,KAAK0sB,GAC7BA,EAAW1uB,UAAU,IAGpCtC,KAAKkG,eAAelG,KAAK0wB,WAAY1wB,KAAK+wB,QAAS/wB,KAAKgnB,OAAQhnB,KAAKgnB,OAAOM,QAAQxjB,IAChF9D,KAAKsnB,OAAOxjB,EAAM,IAE1B,CACAwjB,MAAAA,CAAOxjB,GACH,MAAMpD,EAAOM,IACb,IAAKN,GAAQA,EAAKd,SAAWI,KAAK4vB,SAASjxB,GAIvC,YADAqB,KAAK0wB,WAAWpsB,KAAK4T,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG7qB,GAAQ,CAAE+e,MAAO7iB,KAAMmuB,IAAK,IAAI1J,GAAYzkB,KAAK4vB,UAAWjvB,QAASK,KAG9H,MAAMiwB,EAAejxB,KAAKkuB,QACrB+C,aACCnxB,EAAUY,EAAKR,OACfgxB,EAAgBD,EAAarN,SAAS9jB,GAC5C,IAAKoxB,EAGD,YADAlxB,KAAK0wB,WAAWpsB,KAAK4T,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG7qB,GAAQ,CAAE+e,MAAO7iB,KAAMW,QAASK,EAAamtB,IAAK,IAAI1J,GAAYzkB,KAAK4vB,aAGhI,MAAMuB,EAAYF,EAAa9M,OACzBiN,EAAYD,EAAUhtB,QAAQ+sB,GACpC,IAAIG,EAAUJ,EAAa9M,OAAOhgB,QAAQnE,MACnB,SAAnB8D,EAAMuT,UAA0C,QAAnBvT,EAAMuT,WACnCga,EAAUrlB,KAAKD,IAAI,EAAGslB,EAAU,IAEb,UAAnBvtB,EAAMuT,UAA2C,WAAnBvT,EAAMuT,WAChC+Z,EAAYC,GACZA,IAEJA,EAAUrlB,KAAKF,IAAIqlB,EAAU5vB,OAAS,EAAG8vB,IAE7CJ,EAAazM,UAAU4M,EAAWC,EACtC,ECpFG,MAAMC,WAAyBzrB,EAClC,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYiwB,EAAUpM,GAClBzjB,QACAC,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAKwG,WAAa,IAAIF,EACtBtG,KAAKuI,YAAc,IAAInF,EACvBpD,KAAKwI,WAAaxI,KAAKuI,YAAYzE,MACnC9D,KAAKyI,WAAa,IAAIrF,EACtBpD,KAAK0I,UAAY1I,KAAKyI,WAAW3E,MACjC9D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,uBAC1B+B,KAAK6gB,SAASuN,UAAY,EAC1BpuB,KAAKkG,eAAelG,KAAKuI,YAAavI,KAAKyI,YAC3CzI,KAAKuxB,WAAa,IAAI1J,GAAW7nB,KAAK2E,QAAS,CAC3CwjB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDW,kBAAmBA,CAAChlB,EAAOuT,KACvB,GAA0B,mBAAtBrX,KAAKwjB,MAAMtG,QACVld,KAAKwjB,MAAMtG,QAAuB,WAAb7F,EACtB,OAAO,EAEX,MAAM3W,EAAOG,IACb,IAAKH,GACDoD,EAAM0tB,UACuB,aAA7BxxB,KAAKwjB,MAAMpH,SAASxX,KACpB,OAAO,EAEX,GAAIlE,GAAQA,EAAKd,SAAWI,KAAK4vB,SAASjxB,GAAI,CAC1C,GAAI+B,EAAKb,UAAYG,KAAKwjB,MAAM7kB,GAAI,CAChC,GAAiB,WAAb0Y,EAEA,OAAO,EAEX,GAAqB,OAAjB3W,EAAKZ,QAEL,OAAO,CAEf,CAGA,QAF4E,IAA7BE,KAAKwjB,MAAMW,OAAO5iB,QAC7Db,EAAKb,UAAYG,KAAKwjB,MAAM7kB,GAEpC,CACA,OAAOqB,KAAKwjB,MAAMsF,kBAAkBhlB,EAAOuT,EAAU,UAAU,IAGvErX,KAAKkG,eAAelG,KAAKuxB,WAC7B,CACAE,IAAAA,GACIzxB,KAAK2E,QAAQ0F,MAAMilB,QAAU,EACjC,CACAoC,IAAAA,GACI1xB,KAAK2E,QAAQ0F,MAAMilB,QAAU,MACjC,CACAqC,WAAAA,CAAY9O,EAAOlf,QAAO,IAAPA,IAAAA,EAAU,CAAEiuB,UAAU,IACrC,MAAMC,EAAWluB,EAAQiuB,UACpB5xB,KAAK6iB,OAAS7iB,KAAKwjB,MAAMsO,cAAc9xB,KAAK6iB,OASjD,IAAIzV,EACJ,OATIpN,KAAK6iB,OACL7iB,KAAK6iB,MAAMhW,KAAKvN,QAAQqF,QAAQgX,gBAAkB3b,KAAK6gB,UAIvD7gB,KAAK6gB,SAASzM,YAAYpU,KAAK6iB,MAAMhW,KAAKvN,QAAQqF,SAEtD3E,KAAK6iB,MAAQA,EAELA,EAAMsL,IAAI4D,UACd,IAAK,kBACD/xB,KAAKwjB,MAAMwO,gBAAgBC,QAAQpP,GAC/B7iB,KAAK6iB,OACDgP,GACA7xB,KAAK6gB,SAAStO,YAAYvS,KAAK6iB,MAAMhW,KAAKvN,QAAQqF,SAG1DyI,EAAYpN,KAAK6gB,SACjB,MACJ,IAAK,SACGgC,EAAMhW,KAAKvN,QAAQqF,QAAQgX,gBAAkB3b,KAAK6gB,UAClD7gB,KAAK6gB,SAASzM,YAAYyO,EAAMhW,KAAKvN,QAAQqF,SAEjDyI,EAAYpN,KAAKwjB,MAAMwO,gBAAgBE,OAAO,CAC1CrP,QACAsP,mBAAoBnyB,OAExB,MACJ,QACI,MAAM,IAAI2C,MAAO,oCAAmCkgB,EAAMsL,IAAI4D,aAEtE,GAAIF,EAAU,CACV,MAAMtD,EAAelmB,EAAW+E,GAC1B5G,EAAa,IAAIX,EACvBW,EAAWN,eAAeqoB,EAAcA,EAAa/lB,YAAW,IAAMxI,KAAKuI,YAAYjE,SAASiqB,EAAa7lB,WAAU,IAAM1I,KAAKyI,WAAWnE,UAC7ItE,KAAKwG,WAAW3D,MAAQ2D,CAC5B,CACJ,CACA4rB,SAAAA,CAAUvP,GACF7iB,KAAK6iB,QAAUA,GAGnB7iB,KAAK2xB,YAAY9O,EACrB,CACA/M,MAAAA,CAAO0V,EAAQC,GACX,CAEJ4G,UAAAA,GACI,IAAI3vB,EACA1C,KAAK6iB,OAC2B,oBAA5B7iB,KAAK6iB,MAAMsL,IAAI4D,WAC0C,QAAxDrvB,EAAK1C,KAAK6iB,MAAMhW,KAAKvN,QAAQqF,QAAQgX,qBAAkC,IAAPjZ,GAAyBA,EAAG0R,YAAYpU,KAAK6iB,MAAMhW,KAAKvN,QAAQqF,UAGzI3E,KAAK6iB,WAAQpiB,CACjB,CACAoB,OAAAA,GACI7B,KAAKwG,WAAW3E,UAChB9B,MAAM8B,SACV,ECrHJ,MAAMywB,WAAuBjM,GACzB1mB,WAAAA,CAAYgF,EAASirB,EAAUpM,EAAOX,GAClC9iB,MAAM4E,GACN3E,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAK6iB,MAAQA,EACb7iB,KAAKc,cAAgBX,EAAuBC,aAChD,CACAO,OAAAA,CAAQmD,GAEJ,OADA9D,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK4vB,SAASjxB,GAAIqB,KAAKwjB,MAAM7kB,GAAIqB,KAAK6iB,MAAMlkB,KAAMe,EAAcqB,WACvG,CACHc,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EAEG,MAAMwxB,WAAY1sB,EACrB,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYkjB,EAAO+M,EAAUpM,GACzBzjB,QACAC,KAAK6iB,MAAQA,EACb7iB,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAKV,aAAUmB,EACfT,KAAKwyB,aAAe,IAAIpvB,EACxBpD,KAAKyyB,cAAgBzyB,KAAKwyB,aAAa1uB,MACvC9D,KAAK0yB,WAAa,IAAItvB,EACtBpD,KAAKsnB,OAAStnB,KAAK0yB,WAAW5uB,MAC9B9D,KAAKwmB,aAAe,IAAIpjB,EACxBpD,KAAKymB,YAAczmB,KAAKwmB,aAAa1iB,MACrC9D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,SAC1B+B,KAAK6gB,SAASuN,SAAW,EACzBpuB,KAAK6gB,SAASiQ,WAAY,EAC1BppB,EAAY1H,KAAK2E,QAAS,mBAAmB,GAC7C,MAAMguB,EAAc,IAAIL,GAAetyB,KAAK6gB,SAAU7gB,KAAK4vB,SAAU5vB,KAAKwjB,MAAOxjB,KAAK6iB,OACtF7iB,KAAKuxB,WAAa,IAAI1J,GAAW7nB,KAAK6gB,SAAU,CAC5CsH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAAChlB,EAAOuT,KACvB,GAAIrX,KAAKwjB,MAAMtG,OACX,OAAO,EAEX,MAAMxc,EAAOG,IACb,OAAIH,GAAQV,KAAK4vB,SAASjxB,KAAO+B,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKwjB,MAAM7kB,KAIzBqB,KAAK6iB,MAAMlkB,KAAO+B,EAAKZ,QAE3BE,KAAKwjB,MAAMgG,MAAMV,kBAAkBhlB,EAAOuT,EAAU,MAAM,IAGzErX,KAAKylB,kBAAoBzlB,KAAKuxB,WAAW9L,kBACzCzlB,KAAKkG,eAAelG,KAAKwyB,aAAcxyB,KAAK0yB,WAAY1yB,KAAKwmB,aAAcmM,EAAYlM,aAAa3iB,IAChG9D,KAAKwmB,aAAaliB,KAAKR,EAAM,IAC7B6uB,EAAa5tB,EAAsB/E,KAAK6gB,SAAU,eAAgB/c,IAClE9D,KAAKwyB,aAAaluB,KAAKR,EAAM,IAC7B9D,KAAKuxB,WAAWjK,QAAQxjB,IACxB9D,KAAK0yB,WAAWpuB,KAAKR,EAAM,IAC3B9D,KAAKuxB,WACb,CACA1N,SAAAA,CAAUwH,GACN3jB,EAAY1H,KAAK2E,QAAS,gBAAiB0mB,GAC3C3jB,EAAY1H,KAAK2E,QAAS,mBAAoB0mB,EAClD,CACAuH,UAAAA,CAAWpE,GACHxuB,KAAKV,SACLU,KAAK6gB,SAASzM,YAAYpU,KAAKV,QAAQqF,SAE3C3E,KAAKV,QAAUkvB,EACfxuB,KAAK6gB,SAAStO,YAAYvS,KAAKV,QAAQqF,QAC3C,CACA9C,OAAAA,GACI9B,MAAM8B,SACV,EChFG,MAAMgxB,WAAyBxM,GAClC1mB,WAAAA,CAAYgF,EAASirB,EAAUpM,GAC3BzjB,MAAM4E,GACN3E,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAKc,cAAgBX,EAAuBC,cAC5CJ,KAAKkG,eAAenB,EAAsBJ,EAAS,eAAgBJ,IAC3DA,EAAEitB,WAMkBjtB,E1BoH1B8E,IAA6B,E0BnH3B,IACD,GACP,CACAsd,WAAAA,CAAY5iB,GACR,MAAqC,aAAjC/D,KAAKwjB,MAAM2K,IAAI/R,SAASxX,OAAwBb,EAAOytB,QAI/D,CACA7wB,OAAAA,CAAQmyB,GACJ,MAAMlM,EAAekM,EAAUlM,aAC/B5mB,KAAKc,cAAcF,QAAQ,CAAC,IAAIlB,EAAcM,KAAK4vB,SAASjxB,GAAIqB,KAAKwjB,MAAM7kB,GAAI,OAAQe,EAAcqB,WACrG,MAAMsJ,EAAQrB,OAAO+pB,iBAAiB/yB,KAAK6b,IACrCmX,EAAU3oB,EAAM4oB,iBAAiB,sDACjCC,EAAQ7oB,EAAM4oB,iBAAiB,2CACrC,GAAIrM,EAAc,CACd,MAAMuM,EAAe/qB,SAAS6L,cAAc,OAC5Ckf,EAAa9oB,MAAM+oB,gBAAkBJ,EACrCG,EAAa9oB,MAAM6oB,MAAQA,EAC3BC,EAAa9oB,MAAMgpB,QAAU,UAC7BF,EAAa9oB,MAAMT,OAAS,OAC5BupB,EAAa9oB,MAAMipB,SAAW,OAC9BH,EAAa9oB,MAAMimB,WAAa,OAChC6C,EAAa9oB,MAAMkpB,aAAe,OAClCJ,EAAa9oB,MAAMgN,SAAW,WAC9B8b,EAAaK,YAAe,oBAAmBxzB,KAAKwjB,MAAMte,QC3C/D,SAAuB0hB,EAAcuM,GAExC1rB,EAAW0rB,EAAc,cACzB/qB,SAAS6nB,KAAK1d,YAAY4gB,GAC1BvM,EAAa6M,aAAaN,EAAc,EAAG,GAC3ClqB,YAAW,KACP9B,EAAcgsB,EAAc,cAC5BA,EAAa3rB,QAAQ,GACtB,EACP,CDmCYksB,CAAc9M,EAAcuM,EAChC,CACA,MAAO,CACHtxB,QAASA,KACL7B,KAAKc,cAAcN,UAAUd,EAAcqB,UAAU,EAGjE,EE9CG,MAAM4yB,WAAsB9tB,EAC/B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYiwB,EAAUpM,GAClBzjB,QACAC,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAK+nB,QAAU,IAAI3kB,EACnBpD,KAAKsnB,OAAStnB,KAAK+nB,QAAQjkB,MAC3B9D,KAAKwmB,aAAe,IAAIpjB,EACxBpD,KAAKymB,YAAczmB,KAAKwmB,aAAa1iB,MACrC9D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,oBAC1B+B,KAAK6gB,SAASiQ,WAAY,EAC1B9wB,KAAKkG,eAAelG,KAAK+nB,QAAS/nB,KAAKwmB,aAAczhB,EAAsB/E,KAAK6gB,SAAU,eAAe,KACrG7gB,KAAK4vB,SAASzM,iBAAiBnjB,KAAKwjB,MAAM,KAE9C,MAAMuN,EAAU,IAAI8B,GAAiB7yB,KAAK6gB,SAAU+O,EAAUpM,GAC9DxjB,KAAK4zB,WAAa,IAAI/L,GAAW7nB,KAAK6gB,SAAU,CAC5CsH,oBAAqB,CAAC,UACtBW,kBAAmBA,CAAChlB,EAAOuT,KACvB,IAAI3U,EACJ,MAAMhC,EAAOG,IACb,OAAIH,GAAQV,KAAK4vB,SAASjxB,KAAO+B,EAAKd,QACb,OAAjBc,EAAKZ,SACLY,EAAKb,UAAYG,KAAKwjB,MAAM7kB,MAKW,QAAlC+D,G3B/BRwI,E2B+BkBlL,KAAKwjB,MAAMW,Q3B9BnC5iB,OAAS,EAAI2J,EAAIA,EAAI3J,OAAS,QAAKd,S2B8B4B,IAAPiC,OAAgB,EAASA,EAAG/D,MAAQ+B,EAAKZ,QAEzF0jB,EAAMgG,MAAMV,kBAAkBhlB,EAAOuT,EAAU,gB3BjC/D,IAAcnM,C2BiCgE,IAG7ElL,KAAKylB,kBAAoBzlB,KAAK4zB,WAAWnO,kBACzCzlB,KAAKkG,eAAe6qB,EAASA,EAAQtK,aAAa3iB,IAC9C9D,KAAKwmB,aAAaliB,KAAKR,EAAM,IAC7B9D,KAAK4zB,WAAWtM,QAAQxjB,IACxB9D,KAAK+nB,QAAQzjB,KAAKR,EAAM,IACxB9D,KAAK4zB,WACb,ECzCG,MAAMC,WAAsBhuB,EAC/B,UAAIse,GACA,OAAOnkB,KAAK8zB,KAAK10B,KAAK+R,GAAMA,EAAEtO,MAAMggB,MAAMlkB,IAC9C,CACA,QAAIuG,GACA,OAAOlF,KAAK8zB,KAAKvyB,MACrB,CACA,UAAIwyB,GACA,OAAO/zB,KAAKg0B,OAChB,CACA,UAAID,CAAOlxB,GACP7C,KAAKg0B,QAAUnxB,EACf7C,KAAK2E,QAAQ0F,MAAMilB,QAAUzsB,EAAQ,OAAS,EAClD,CACA4uB,IAAAA,GACSzxB,KAAK+zB,SACN/zB,KAAK2E,QAAQ0F,MAAMilB,QAAU,GAErC,CACAoC,IAAAA,GACI1xB,KAAK6gB,SAASxW,MAAMilB,QAAU,MAClC,CACA2E,sBAAAA,CAAuBtvB,GACf3E,KAAKk0B,eAAiBvvB,IAGtB3E,KAAKk0B,eACLl0B,KAAKk0B,aAAa1sB,SAClBxH,KAAKk0B,kBAAezzB,GAEpBkE,IACA3E,KAAKm0B,sBAAsB5hB,YAAY5N,GACvC3E,KAAKk0B,aAAevvB,GAE5B,CACAyvB,qBAAAA,CAAsBzvB,GACd3E,KAAKq0B,cAAgB1vB,IAGrB3E,KAAKq0B,cACLr0B,KAAKq0B,YAAY7sB,SACjBxH,KAAKq0B,iBAAc5zB,GAEnBkE,IACA3E,KAAKs0B,qBAAqB/hB,YAAY5N,GACtC3E,KAAKq0B,YAAc1vB,GAE3B,CACA4vB,uBAAAA,CAAwB5vB,GAChB3E,KAAKw0B,aAAe7vB,IAGpB3E,KAAKw0B,aACLx0B,KAAKw0B,WAAWhtB,SAChBxH,KAAKw0B,gBAAa/zB,GAElBkE,IACA3E,KAAKy0B,oBAAoBliB,YAAY5N,GACrC3E,KAAKw0B,WAAa7vB,GAE1B,CACA,WAAIA,GACA,OAAO3E,KAAK6gB,QAChB,CACAwK,QAAAA,CAASqJ,GACL,OAAQ10B,KAAK20B,eAAiB,GAC1B30B,KAAK8zB,KAAK9zB,KAAK20B,eAAe9xB,QAAU6xB,CAChD,CACAvwB,OAAAA,CAAQxF,GACJ,OAAOqB,KAAK8zB,KAAKnoB,WAAW+oB,GAAQA,EAAI7xB,MAAMggB,MAAMlkB,KAAOA,GAC/D,CACAgB,WAAAA,CAAYiwB,EAAUpM,GAClBzjB,QACAC,KAAK4vB,SAAWA,EAChB5vB,KAAKwjB,MAAQA,EACbxjB,KAAK8zB,KAAO,GACZ9zB,KAAK20B,eAAiB,EACtB30B,KAAKg0B,SAAU,EACfh0B,KAAK+nB,QAAU,IAAI3kB,EACnBpD,KAAKsnB,OAAStnB,KAAK+nB,QAAQjkB,MAC3B9D,KAAK40B,gBAAkB,IAAIxxB,EAC3BpD,KAAK60B,eAAiB70B,KAAK40B,gBAAgB9wB,MAC3C9D,KAAK80B,kBAAoB,IAAI1xB,EAC7BpD,KAAK+0B,iBAAmB/0B,KAAK80B,kBAAkBhxB,MAC/C9D,KAAKgoB,mBAAqB,IAAI5kB,EAC9BpD,KAAKylB,kBAAoBzlB,KAAKgoB,mBAAmBlkB,MACjD9D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,gCAC1ByJ,EAAY1H,KAAK6gB,SAAU,2BAAoE,cAAxC7gB,KAAK4vB,SAASjsB,QAAQqxB,eAC7Eh1B,KAAKm0B,sBAAwB/rB,SAAS6L,cAAc,OACpDjU,KAAKm0B,sBAAsBl2B,UAAY,6BACvC+B,KAAKs0B,qBAAuBlsB,SAAS6L,cAAc,OACnDjU,KAAKs0B,qBAAqBr2B,UAAY,4BACtC+B,KAAKy0B,oBAAsBrsB,SAAS6L,cAAc,OAClDjU,KAAKy0B,oBAAoBx2B,UAAY,2BACrC+B,KAAKi1B,aAAe7sB,SAAS6L,cAAc,OAC3CjU,KAAKi1B,aAAah3B,UAAY,oBAC9B+B,KAAKk1B,cAAgB,IAAIvB,GAAc3zB,KAAK4vB,SAAU5vB,KAAKwjB,OAC3DxjB,KAAK6gB,SAAStO,YAAYvS,KAAKy0B,qBAC/Bz0B,KAAK6gB,SAAStO,YAAYvS,KAAKi1B,cAC/Bj1B,KAAK6gB,SAAStO,YAAYvS,KAAKs0B,sBAC/Bt0B,KAAK6gB,SAAStO,YAAYvS,KAAKk1B,cAAcvwB,SAC7C3E,KAAK6gB,SAAStO,YAAYvS,KAAKm0B,uBAC/Bn0B,KAAKkG,eAAelG,KAAKgoB,mBAAoBhoB,KAAK+nB,QAAS/nB,KAAK40B,gBAAiB50B,KAAK80B,kBAAmB90B,KAAKk1B,cAAel1B,KAAKk1B,cAAczO,aAAa3iB,IACzJ9D,KAAK80B,kBAAkBxwB,KAAK,CACxBkjB,YAAa1jB,EACb0f,MAAOxjB,KAAKwjB,OACd,IACFxjB,KAAKk1B,cAAc5N,QAAQxjB,IAC3B9D,KAAK+nB,QAAQzjB,KAAK,CACdR,MAAOA,EAAM0jB,YACbtjB,MAAOlE,KAAK8zB,KAAKvyB,QACnB,IACFvB,KAAKk1B,cAAczP,mBAAmB3hB,IACtC9D,KAAKgoB,mBAAmB1jB,KAAK,IAAI6wB,GAA6BrxB,EAAO,CACjEsxB,KAAM,eACNvS,MAAO7iB,KAAKwjB,MAAMoC,YAClBuI,IAAKnuB,KAAK4vB,SAASzB,IACnB3K,MAAOxjB,KAAKwjB,MACZ7iB,QAASE,IACV,IACHkE,EAAsB/E,KAAKk1B,cAAcvwB,QAAS,eAAgBb,IAElE,IADiC9D,KAAK4vB,SAASjsB,QAAQ0xB,uBAEnDvxB,EAAM0tB,UAC2B,aAAjCxxB,KAAKwjB,MAAM2K,IAAI/R,SAASxX,KAAqB,CAC7Cd,EAAM3B,iBACN,MAAM,IAAEuH,EAAG,KAAED,GAASzJ,KAAK2E,QAAQkF,yBAC3BH,IAAK4rB,EAAS7rB,KAAM8rB,GAAav1B,KAAK4vB,SAASjrB,QAAQkF,wBAC/D7J,KAAK4vB,SAAS3J,iBAAiBjmB,KAAKwjB,MAAO,CACvC9S,EAAGjH,EAAO8rB,EAAW,GACrB7M,EAAGhf,EAAM4rB,EAAU,GACnBE,YAAY,GAEpB,KACAzwB,EAAsB/E,KAAKi1B,aAAc,eAAgBnxB,IACzD,GAAIA,EAAM5B,iBACN,OAEiC,IAAjB4B,EAAM2xB,QAEtBz1B,KAAK4vB,SAASzM,iBAAiBnjB,KAAKwjB,MACxC,IAER,CACAK,SAAAA,CAAU6R,GACN,CAEJjxB,OAAO9F,GACH,MAAMuF,EAAQlE,KAAK8zB,KAAKnoB,WAAW+oB,GAAQA,EAAI7xB,MAAMggB,MAAMlkB,KAAOA,IAC5Dg3B,EAAc31B,KAAK8zB,KAAK1vB,OAAOF,EAAO,GAAG,GAC/C,IAAKyxB,EACD,MAAM,IAAIhzB,MAAO,2BAErB,MAAM,MAAEE,EAAK,WAAE2D,GAAemvB,EAC9BnvB,EAAW3E,UACXgB,EAAMhB,UACNgB,EAAM8B,QAAQ6C,SACdxH,KAAK41B,kBACT,CACAC,cAAAA,CAAehT,GACX7iB,KAAK8zB,KAAKhyB,SAAS4yB,IACf,MAAMoB,EAAgBjT,EAAMlkB,KAAO+1B,EAAI7xB,MAAMggB,MAAMlkB,GACnD+1B,EAAI7xB,MAAMghB,UAAUiS,EAAc,GAE1C,CACA1D,SAAAA,CAAUvP,EAAO3e,GACb,QADkB,IAALA,IAAAA,EAAQlE,KAAK8zB,KAAKvyB,QAC3BvB,KAAK8zB,KAAKiC,MAAMrB,GAAQA,EAAI7xB,MAAMggB,MAAMlkB,KAAOkkB,EAAMlkB,KACrD,OAEJ,MAAM+1B,EAAM,IAAInC,GAAI1P,EAAO7iB,KAAK4vB,SAAU5vB,KAAKwjB,OAC/CkR,EAAI9B,WAAW/P,EAAMhW,KAAK6nB,KAC1B,MAAMluB,EAAa,IAAIX,EAAoB6uB,EAAIjO,aAAa3iB,IACxD9D,KAAK40B,gBAAgBtwB,KAAK,CAAEkjB,YAAa1jB,EAAO+e,SAAQ,IACxD6R,EAAIjC,eAAe3uB,IACnB,GAAIA,EAAM5B,iBACN,OAEJ,MAAM8zB,GAA2Bh2B,KAAK4vB,SAASjsB,QAAQ0xB,sBACjDY,EAA0D,aAAjCj2B,KAAKwjB,MAAM2K,IAAI/R,SAASxX,MACrC,IAAd5E,KAAKkF,KACT,GAAI8wB,IACCC,GACDnyB,EAAM0tB,SAFV,CAGI1tB,EAAM3B,iBACN,MAAM0gB,EAAQ7iB,KAAK4vB,SAAS/J,cAAc6O,EAAI7R,MAAMlkB,KAC9C,IAAE+K,EAAG,KAAED,GAASirB,EAAI/vB,QAAQkF,yBAC1BH,IAAK4rB,EAAS7rB,KAAM8rB,GAAav1B,KAAK4vB,SAASjrB,QAAQkF,wBAC/D7J,KAAK4vB,SAAS3J,iBAAiBpD,EAAO,CAClCnS,EAAGjH,EAAO8rB,EACV7M,EAAGhf,EAAM4rB,EACTE,YAAY,GAGpB,MACA,GACS,IADD1xB,EAAM2xB,OAEFz1B,KAAKwjB,MAAMoC,cAAgB/C,GAC3B7iB,KAAKwjB,MAAMgG,MAAM4I,UAAUvP,EAGvC,IACA6R,EAAIpN,QAAQxjB,IACZ9D,KAAK+nB,QAAQzjB,KAAK,CACdR,MAAOA,EAAM0jB,YACbtjB,MAAOlE,KAAK8zB,KAAKnoB,WAAW+E,GAAMA,EAAE7N,QAAU6xB,KAChD,IACFA,EAAIjP,mBAAmB3hB,IACvB9D,KAAKgoB,mBAAmB1jB,KAAK,IAAI6wB,GAA6BrxB,EAAO,CACjEsxB,KAAM,MACNvS,MAAO7iB,KAAKwjB,MAAMoC,YAClBuI,IAAKnuB,KAAK4vB,SAASzB,IACnB3K,MAAOxjB,KAAKwjB,MACZ7iB,QAASE,IACV,KAEDgC,EAAQ,CAAEA,MAAO6xB,EAAKluB,cAC5BxG,KAAKk2B,OAAOrzB,EAAOqB,EACvB,CACAmuB,UAAAA,CAAWxP,GACP7iB,KAAKyE,OAAOoe,EAAMlkB,GACtB,CACAkD,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAM,MAAEgB,EAAK,WAAE2D,KAAgBxG,KAAK8zB,KACrCttB,EAAW3E,UACXgB,EAAMhB,UAEV7B,KAAK8zB,KAAO,EAChB,CACAoC,MAAAA,CAAOxB,EAAKxwB,GACR,QADa,IAALA,IAAAA,EAAQlE,KAAK8zB,KAAKvyB,QACtB2C,EAAQ,GAAKA,EAAQlE,KAAK8zB,KAAKvyB,OAC/B,MAAM,IAAIoB,MAAM,oBAEpB3C,KAAKi1B,aAAa5gB,aAAaqgB,EAAI7xB,MAAM8B,QAAS3E,KAAKi1B,aAAa93B,SAAS+G,IAC7ElE,KAAK8zB,KAAO,IACL9zB,KAAK8zB,KAAK5rB,MAAM,EAAGhE,GACtBwwB,KACG10B,KAAK8zB,KAAK5rB,MAAMhE,IAEnBlE,KAAK20B,cAAgB,IACrB30B,KAAK20B,cAAgBzwB,GAEzBlE,KAAK41B,kBACT,CACAA,gBAAAA,GACIluB,EAAY1H,KAAK6gB,SAAU,gBAA+B,IAAd7gB,KAAKkF,KACrD,EC7PG,MAAMixB,WAAuC/zB,EAChDzC,WAAAA,CAAY6nB,EAAaR,EAAQ3P,EAAU1W,EAAS6iB,GAChDzjB,QACAC,KAAKwnB,YAAcA,EACnBxnB,KAAKgnB,OAASA,EACdhnB,KAAKqX,SAAWA,EAChBrX,KAAKW,QAAUA,EACfX,KAAKwjB,MAAQA,CACjB,EAEG,MAAM4S,GAAyB,MAKlC,MAAMpe,EAAa,CACfC,yBAAqBxX,EACrBkgB,iBAAalgB,EACbu0B,mBAAev0B,EACf40B,2BAAuB50B,EACvB41B,yBAAqB51B,EACrB61B,eAAW71B,EACX81B,qBAAiB91B,EACjB+1B,WAAO/1B,EACPg2B,sBAAkBh2B,EAClByc,YAAQzc,EACRsqB,gBAAYtqB,EACZ6kB,SAAK7kB,EACLxC,eAAWwC,EACXi2B,qBAAiBj2B,GAErB,OAAOyX,OAAOC,KAAKH,EACtB,EAtBqC,GCH/B,MAAM2e,WAA6B30B,EACtC,eAAIwlB,GACA,OAAOxnB,KAAK2D,QAAQ6jB,WACxB,CACA,YAAInQ,GACA,OAAOrX,KAAK2D,QAAQ0T,QACxB,CACA,SAAIwL,GACA,OAAO7iB,KAAK2D,QAAQkf,KACxB,CACA,SAAIW,GACA,OAAOxjB,KAAK2D,QAAQ6f,KACxB,CACA,OAAI2K,GACA,OAAOnuB,KAAK2D,QAAQwqB,GACxB,CACAxuB,WAAAA,CAAYgE,GACR5D,QACAC,KAAK2D,QAAUA,CACnB,CACAhD,OAAAA,GACI,OAAOX,KAAK2D,QAAQhD,SACxB,EAEG,MAAMi2B,WAA8BD,GACvC,QAAIvB,GACA,OAAOp1B,KAAK62B,KAChB,CACAl3B,WAAAA,CAAYgE,GACR5D,MAAM4D,GACN3D,KAAK62B,MAAQlzB,EAAQyxB,IACzB,EAEG,MAAMD,GACT,QAAIC,GACA,OAAOp1B,KAAK2D,QAAQyxB,IACxB,CACA,eAAI5N,GACA,OAAOxnB,KAAK8D,MAAM0jB,WACtB,CACA,YAAInQ,GACA,OAAOrX,KAAK8D,MAAMuT,QACtB,CACA,oBAAInV,GACA,OAAOlC,KAAK8D,MAAM5B,gBACtB,CACA,SAAI2gB,GACA,OAAO7iB,KAAK2D,QAAQkf,KACxB,CACA,OAAIsL,GACA,OAAOnuB,KAAK2D,QAAQwqB,GACxB,CACA,SAAI3K,GACA,OAAOxjB,KAAK2D,QAAQ6f,KACxB,CACArhB,cAAAA,GACInC,KAAK8D,MAAM3B,gBACf,CACAxB,OAAAA,GACI,OAAOX,KAAK2D,QAAQhD,SACxB,CACAhB,WAAAA,CAAYmE,EAAOH,GACf3D,KAAK8D,MAAQA,EACb9D,KAAK2D,QAAUA,CACnB,EAEG,MAAMmzB,WAAgCjxB,EACzC,WAAIlB,GACA,MAAM,IAAIhC,MAAM,0BACpB,CACA,eAAIijB,GACA,OAAO5lB,KAAK+2B,YAChB,CACA,UAAI7Z,GACA,OAAOld,KAAKmd,OAChB,CACA,UAAID,CAAOra,GACP7C,KAAKmd,QAAUta,EACf6E,EAAY1H,KAAKoN,UAAW,sBAAiC,mBAAVvK,GAA8BA,EACrF,CACA,YAAIwoB,GACA,OAAOrrB,KAAK01B,cAChB,CACA,UAAIvR,GACA,OAAOnkB,KAAKg3B,OAChB,CACA,QAAI9xB,GACA,OAAOlF,KAAKg3B,QAAQz1B,MACxB,CACA,WAAI01B,GACA,OAA+B,IAAxBj3B,KAAKg3B,QAAQz1B,MACxB,CACA,gBAAI21B,GACA,SAAUl3B,KAAKm3B,YAAan3B,KAAKoN,UAAU7F,SAASvH,KAAKm3B,UAAUxyB,SACvE,CACA,UAAI0qB,GACA,OAAOrvB,KAAKo3B,aAChB,CACA,oBAAIC,GACA,QAAKjvB,SAASQ,eAGPf,EAAWO,SAASQ,cAAe5I,KAAKs3B,iBAAiB3yB,QACpE,CACA,YAAIyX,GACA,OAAOpc,KAAKu3B,SAChB,CACA,YAAInb,CAASvZ,GAIT,OAHA7C,KAAKu3B,UAAY10B,EACjB6E,EAAY1H,KAAKoN,UAAW,yBAAyB,GACrD1F,EAAY1H,KAAKoN,UAAW,uBAAuB,GAC3CvK,EAAM+B,MACV,IAAK,OACD5E,KAAKs3B,iBAAiB/F,WAAWjI,eAAe,CAC5C,MACA,SACA,OACA,QACA,WAEJ,MACJ,IAAK,WACDtpB,KAAKs3B,iBAAiB/F,WAAWjI,eAAe,CAAC,WACjDtpB,KAAKs3B,iBAAiB/F,WAAWjI,eAAezmB,EAC1C,CAAC,UACD,CAAC,MAAO,SAAU,OAAQ,QAAS,WACzC6E,EAAY1H,KAAKoN,UAAW,yBAAyB,GACrD,MACJ,IAAK,SACDpN,KAAKs3B,iBAAiB/F,WAAWjI,eAAe,CAAC,WACjD5hB,EAAY1H,KAAKoN,UAAW,uBAAuB,GAG3DpN,KAAKw3B,WAAWrJ,IAAIsJ,qBAAqBnzB,KAAK,CAC1C8X,SAAUpc,KAAKoc,UAEvB,CACAzc,WAAAA,CAAYyN,EAAWwiB,EAAUjxB,EAAIgF,EAAS6zB,GAC1C,IAAI90B,EACJ3C,QACAC,KAAKoN,UAAYA,EACjBpN,KAAK4vB,SAAWA,EAChB5vB,KAAKrB,GAAKA,EACVqB,KAAK2D,QAAUA,EACf3D,KAAKw3B,WAAaA,EAClBx3B,KAAK01B,gBAAiB,EACtB11B,KAAKmd,SAAU,EACfnd,KAAKu3B,UAAY,CAAE3yB,KAAM,QACzB5E,KAAK03B,iBAAmB,GACxB13B,KAAK23B,0BAA4B,KACjC33B,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAKwrB,OAAS,EACdxrB,KAAKyrB,QAAU,EACfzrB,KAAKg3B,QAAU,GACfh3B,KAAK43B,kBAAoB,IAAI3yB,IAC7BjF,KAAK63B,QAAU,IAAIz0B,EACnBpD,KAAK83B,OAAS93B,KAAK63B,QAAQ/zB,MAC3B9D,KAAK0wB,WAAa,IAAIttB,EACtBpD,KAAK0kB,UAAY1kB,KAAK0wB,WAAW5sB,MACjC9D,KAAK+3B,YAAc,IAAI30B,EACvBpD,KAAKwlB,WAAaxlB,KAAK+3B,YAAYj0B,MACnC9D,KAAKgoB,mBAAqB,IAAI5kB,EAC9BpD,KAAKylB,kBAAoBzlB,KAAKgoB,mBAAmBlkB,MACjD9D,KAAK40B,gBAAkB,IAAIxxB,EAC3BpD,KAAK60B,eAAiB70B,KAAK40B,gBAAgB9wB,MAC3C9D,KAAK80B,kBAAoB,IAAI1xB,EAC7BpD,KAAK+0B,iBAAmB/0B,KAAK80B,kBAAkBhxB,MAC/C9D,KAAKg4B,eAAiB,IAAI50B,EAC1BpD,KAAK6kB,cAAgB7kB,KAAKg4B,eAAel0B,MACzC9D,KAAKi4B,uBAAyB,IAAI70B,EAClCpD,KAAKk4B,sBAAwBl4B,KAAKi4B,uBAAuBn0B,MACzD9D,KAAKm4B,4BAA8B,IAAI/0B,EACvCpD,KAAKo4B,2BAA6Bp4B,KAAKm4B,4BAA4Br0B,MACnE9D,KAAKq4B,kBAAoB,IAAIj1B,EAC7BpD,KAAK+kB,iBAAmB/kB,KAAKq4B,kBAAkBv0B,MAC/C9D,KAAKs4B,wBAA0B,IAAIl1B,EACnCpD,KAAKilB,uBAAyBjlB,KAAKs4B,wBAAwBx0B,MAC3D9D,KAAK2wB,0BAA4B,IAAIvtB,EACrCpD,KAAK2kB,yBAA2B3kB,KAAK2wB,0BAA0B7sB,MAC/D4D,EAAY1H,KAAKoN,UAAW,gBAAgB,GAC5CpN,KAAKu4B,KAAO,IAAInT,GAAYplB,KAAK4vB,UACjC5vB,KAAKo3B,cAAgB,IAAIvD,GAAc7zB,KAAK4vB,SAAU5vB,KAAKw3B,YAC3Dx3B,KAAKs3B,iBAAmB,IAAIhG,GAAiBtxB,KAAK4vB,SAAU5vB,MAC5DoN,EAAU+b,OAAOnpB,KAAKo3B,cAAczyB,QAAS3E,KAAKs3B,iBAAiB3yB,SACnE3E,KAAKqvB,OAAO0E,SAAWpwB,EAAQ60B,WAC/Bx4B,KAAKkd,OAAmC,QAAzBxa,EAAKiB,EAAQuZ,cAA2B,IAAPxa,GAAgBA,EAChE1C,KAAKkG,eAAelG,KAAK40B,gBAAiB50B,KAAK80B,kBAAmB90B,KAAKgoB,mBAAoBhoB,KAAKo3B,cAAcvC,gBAAgB/wB,IAC1H9D,KAAK40B,gBAAgBtwB,KAAKR,EAAM,IAChC9D,KAAKo3B,cAAcrC,kBAAkBjxB,IACrC9D,KAAK80B,kBAAkBxwB,KAAKR,EAAM,IAClC9D,KAAKo3B,cAAc9P,QAAQxjB,IAC3B9D,KAAKy4B,gBAAgB,SAAU30B,EAAMA,MAAO,SAAUA,EAAMI,MAAM,IAClElE,KAAKs3B,iBAAiB9uB,YAAW,KACjCxI,KAAK4vB,SAASzM,iBAAiBnjB,KAAKw3B,WAAW,IAC/Cx3B,KAAKs3B,iBAAiB5uB,WAAU,SAEhC1I,KAAKs3B,iBAAiB/F,WAAWjK,QAAQxjB,IACzC9D,KAAKy4B,gBAAgB,UAAW30B,EAAM0jB,YAAa1jB,EAAMuT,SAAS,IAClErX,KAAKo3B,cAAc3R,mBAAmB3hB,IACtC9D,KAAKgoB,mBAAmB1jB,KAAKR,EAAM,IACnC9D,KAAKs3B,iBAAiB/F,WAAW9L,mBAAmB3hB,IACpD9D,KAAKgoB,mBAAmB1jB,KAAK,IAAI6wB,GAA6BrxB,EAAO,CACjEsxB,KAAM,UACNvS,MAAO7iB,KAAK4lB,YACZuI,IAAKnuB,KAAKu4B,KACV/U,MAAOxjB,KAAKw3B,WACZ72B,QAASE,IACV,IACHb,KAAK63B,QAAS73B,KAAKwY,aAAcxY,KAAK0wB,WAAY1wB,KAAK+3B,YAAa/3B,KAAKg4B,eAAgBh4B,KAAKq4B,kBAAmBr4B,KAAKs4B,wBAAyBt4B,KAAK2wB,0BAA2B3wB,KAAKi4B,uBAAwBj4B,KAAKm4B,4BACzN,CACAO,YAAAA,GACI14B,KAAKs3B,iBAAiB3yB,QAAQ2f,OAClC,CACA,mBAAI0N,CAAgBnvB,GAChB7C,KAAKmkB,OAAOriB,SAAS+gB,IACjB7iB,KAAKgyB,gBAAgBC,QAAQpP,EAAM,IAEvC7iB,KAAK23B,0BAA4B90B,EACjC7C,KAAKmkB,OAAOriB,SAAS+gB,IACjB7iB,KAAK24B,SAAS9V,EAAM,GAE5B,CACA,mBAAImP,GACA,IAAItvB,EACJ,OAAkD,QAAzCA,EAAK1C,KAAK23B,iCAA8C,IAAPj1B,EAAgBA,EAAK1C,KAAK4vB,SAASgJ,sBACjG,CACAnM,UAAAA,GACQzsB,KAAK2D,QAAQwgB,QACbnkB,KAAK2D,QAAQwgB,OAAOriB,SAAS+gB,IACzB7iB,KAAK64B,WAAWhW,EAAM,IAG1B7iB,KAAK2D,QAAQiiB,aACb5lB,KAAKoyB,UAAUpyB,KAAK2D,QAAQiiB,aAIhC5lB,KAAK6jB,UAAU7jB,KAAKqrB,UAAU,GAC9BrrB,KAAK84B,kBACD94B,KAAK4vB,SAASjsB,QAAQo1B,mCACtB/4B,KAAKg5B,oBACDh5B,KAAK4vB,SAASjsB,QAAQo1B,iCAAiC/4B,KAAKw3B,YAChEx3B,KAAKkG,eAAelG,KAAKg5B,qBACzBh5B,KAAKg5B,oBAAoBvK,KAAK,CAC1BwC,aAAcjxB,KAAKu4B,KACnBpK,IAAKnuB,KAAKw3B,WAAWrJ,IACrB3K,MAAOxjB,KAAKw3B,aAEhBx3B,KAAKo3B,cAAcnD,uBAAuBj0B,KAAKg5B,oBAAoBr0B,UAEnE3E,KAAK4vB,SAASjsB,QAAQs1B,kCACtBj5B,KAAKk5B,mBACDl5B,KAAK4vB,SAASjsB,QAAQs1B,gCAAgCj5B,KAAKw3B,YAC/Dx3B,KAAKkG,eAAelG,KAAKk5B,oBACzBl5B,KAAKk5B,mBAAmBzK,KAAK,CACzBwC,aAAcjxB,KAAKu4B,KACnBpK,IAAKnuB,KAAKw3B,WAAWrJ,IACrB3K,MAAOxjB,KAAKw3B,aAEhBx3B,KAAKo3B,cAAchD,sBAAsBp0B,KAAKk5B,mBAAmBv0B,UAEjE3E,KAAK4vB,SAASjsB,QAAQw1B,oCACtBn5B,KAAKo5B,qBACDp5B,KAAK4vB,SAASjsB,QAAQw1B,kCAAkCn5B,KAAKw3B,YACjEx3B,KAAKkG,eAAelG,KAAKo5B,sBACzBp5B,KAAKo5B,qBAAqB3K,KAAK,CAC3BwC,aAAcjxB,KAAKu4B,KACnBpK,IAAKnuB,KAAKw3B,WAAWrJ,IACrB3K,MAAOxjB,KAAKw3B,aAEhBx3B,KAAKo3B,cAAc7C,wBAAwBv0B,KAAKo5B,qBAAqBz0B,SAE7E,CACAg0B,QAAAA,CAAS9V,GACL7iB,KAAKs3B,iBAAiB3F,YAAY9O,EAAO,CAAE+O,UAAU,GACzD,CACAztB,OAAAA,CAAQ0e,GACJ,OAAO7iB,KAAKo3B,cAAcjzB,QAAQ0e,EAAMlkB,GAC5C,CACAme,MAAAA,GACI,IAAIpa,EACJ,MAAM4J,EAAS,CACXoG,MAAO1S,KAAKo3B,cAAcjT,OAC1BkV,WAAyC,QAA5B32B,EAAK1C,KAAK+2B,oBAAiC,IAAPr0B,OAAgB,EAASA,EAAG/D,GAC7EA,GAAIqB,KAAKrB,IAQb,OANoB,IAAhBqB,KAAKkd,SACL5Q,EAAO4Q,OAASld,KAAKkd,QAErBld,KAAKqvB,OAAO0E,SACZznB,EAAOksB,YAAa,GAEjBlsB,CACX,CACAyX,UAAAA,CAAWpgB,GACFA,IACDA,EAAU,CAAC,GAEVA,EAAQkf,QACTlf,EAAQkf,MAAQ7iB,KAAK4lB,aAEzB,MAAM1hB,EAAQP,EAAQkf,MAAQ7iB,KAAKmkB,OAAOhgB,QAAQR,EAAQkf,QAAU,EACpE,IAAIyW,EACJ,GAAIp1B,EAAQlE,KAAKmkB,OAAO5iB,OAAS,EAC7B+3B,EAAkBp1B,EAAQ,MAEzB,IAAKP,EAAQ41B,aAId,OAHAD,EAAkB,CAItB,CACAt5B,KAAKoyB,UAAUpyB,KAAKmkB,OAAOmV,GAC/B,CACAtV,cAAAA,CAAergB,GAOX,GANKA,IACDA,EAAU,CAAC,GAEVA,EAAQkf,QACTlf,EAAQkf,MAAQ7iB,KAAK4lB,cAEpBjiB,EAAQkf,MACT,OAEJ,MAAM3e,EAAQlE,KAAKmkB,OAAOhgB,QAAQR,EAAQkf,OAC1C,IAAIyW,EACJ,GAAIp1B,EAAQ,EACRo1B,EAAkBp1B,EAAQ,MAEzB,IAAKP,EAAQ41B,aAId,OAHAD,EAAkBt5B,KAAKmkB,OAAO5iB,OAAS,CAI3C,CACAvB,KAAKoyB,UAAUpyB,KAAKmkB,OAAOmV,GAC/B,CACAE,aAAAA,CAAc3W,GACV,OAAO7iB,KAAKmkB,OAAO9F,SAASwE,EAChC,CACA4L,IAAAA,CAAKP,GACD,CAEJvB,MAAAA,CAAOuB,GACH,CAEJ5J,KAAAA,GACI,IAAI5hB,EACyB,QAA5BA,EAAK1C,KAAK+2B,oBAAiC,IAAPr0B,GAAyBA,EAAG4hB,OACrE,CACA8N,SAAAA,CAAUvP,EAAOlf,QAAO,IAAPA,IAAAA,EAAU,CAAC,IAOK,iBAAlBA,EAAQO,OACfP,EAAQO,MAAQlE,KAAKmkB,OAAO5iB,UAC5BoC,EAAQO,MAAQlE,KAAKmkB,OAAO5iB,QAEhC,MAAMk4B,IAAkB91B,EAAQ81B,cAEhC5W,EAAM6W,kBAAkB15B,KAAKw3B,WAAY,CACrCiC,cAAe91B,EAAQ81B,gBAE3Bz5B,KAAK64B,WAAWhW,EAAOlf,EAAQO,MAAO,CAClCu1B,cAAeA,IAEfz5B,KAAK+2B,eAAiBlU,GAIrB4W,GACDz5B,KAAK25B,iBAAiB9W,GAErBlf,EAAQi2B,oBACT55B,KAAK4vB,SAASzM,iBAAiBnjB,KAAKw3B,YAEnC7zB,EAAQ81B,eACTz5B,KAAK84B,mBAVL94B,KAAKs3B,iBAAiB3F,YAAY9O,EAAO,CAAE+O,UAAU,GAY7D,CACAvN,WAAAA,CAAYwV,EAAel2B,QAAO,IAAPA,IAAAA,EAAU,CACjC81B,eAAe,IAEf,MAAM96B,EAA8B,iBAAlBk7B,EACZA,EACAA,EAAcl7B,GACdm7B,EAAgB95B,KAAKg3B,QAAQjB,MAAMlT,GAAUA,EAAMlkB,KAAOA,IAChE,IAAKm7B,EACD,MAAM,IAAIn3B,MAAM,qBAEpB,OAAO3C,KAAK+5B,aAAaD,EAAen2B,EAC5C,CACAq2B,cAAAA,GACI,GAAIh6B,KAAKmkB,OAAO5iB,OAAS,EAAG,CAExB,MAAM04B,EAAc,IAAIj6B,KAAKmkB,QAC7B,IAAK,MAAMtB,KAASoX,EAChBj6B,KAAKk6B,QAAQrX,EAErB,MAEI7iB,KAAK4vB,SAAS9L,YAAY9jB,KAAKw3B,WAEvC,CACAnF,UAAAA,CAAWxP,GACP7iB,KAAKk6B,QAAQrX,EACjB,CACAqX,OAAAA,CAAQrX,GACJ,MAAMsX,EAAgC,IAAvBn6B,KAAKmkB,OAAO5iB,QAAgD,IAAhCvB,KAAK4vB,SAAShO,OAAOrgB,OAChEvB,KAAK4vB,SAASvL,YAAYxB,EAAOsX,GAAoD,eAA1Cn6B,KAAK4vB,SAASjsB,QAAQ+yB,gBAC3D,CAAE0D,kBAAkB,QACpB35B,EACV,CACAqxB,aAAAA,CAAcjP,GACV,OAAO7iB,KAAK+2B,eAAiBlU,CACjC,CACAwX,aAAAA,CAAc11B,GACV3E,KAAKo3B,cAAcnD,uBAAuBtvB,EAC9C,CACAkf,SAAAA,CAAUyW,EAAenV,QAAK,IAALA,IAAAA,GAAQ,IACxBA,GAASnlB,KAAKqrB,WAAaiP,KAGhCt6B,KAAK01B,eAAiB4E,EACtB5yB,EAAY1H,KAAKoN,UAAW,kBAAmBktB,GAC/C5yB,EAAY1H,KAAKoN,UAAW,qBAAsBktB,GAClDt6B,KAAKo3B,cAAcvT,UAAU7jB,KAAKqrB,WAC7BrrB,KAAK+2B,cAAgB/2B,KAAKmkB,OAAO5iB,OAAS,GAC3CvB,KAAK25B,iBAAiB35B,KAAKmkB,OAAO,IAEtCnkB,KAAK84B,kBACT,CACAhjB,MAAAA,CAAOnM,EAAOC,GACV,IAAIlH,EACJ1C,KAAKwrB,OAAS7hB,EACd3J,KAAKyrB,QAAU7hB,EACf5J,KAAKs3B,iBAAiBxhB,OAAO9V,KAAKwrB,OAAQxrB,KAAKyrB,UACd,QAA5B/oB,EAAK1C,KAAK+2B,oBAAiC,IAAPr0B,OAAgB,EAASA,EAAGoT,SACjE9V,KAAK+2B,aAAajhB,OAAO9V,KAAKwrB,OAAQxrB,KAAKyrB,QAEnD,CACAsO,YAAAA,CAAalX,EAAOlf,GAChB,MAAMmyB,EAAgB91B,KAAK+2B,eAAiBlU,EAE5C,GADA7iB,KAAKu6B,cAAc1X,GACfiT,GAAiB91B,KAAKmkB,OAAO5iB,OAAS,EAAG,CACzC,MAAMi5B,EAAYx6B,KAAK03B,iBAAiB,GACxC13B,KAAKoyB,UAAUoI,EAAW,CACtBf,cAAe91B,EAAQ81B,cACvBG,mBAAoBj2B,EAAQ82B,oBAEpC,CAOA,OANIz6B,KAAK+2B,cAAuC,IAAvB/2B,KAAKmkB,OAAO5iB,QACjCvB,KAAK25B,sBAAiBl5B,GAErBkD,EAAQ81B,eACTz5B,KAAK84B,kBAEFjW,CACX,CACA0X,aAAAA,CAAc1X,GACV,MAAM3e,EAAQlE,KAAKmkB,OAAOhgB,QAAQ0e,GAMlC,GALI7iB,KAAK+2B,eAAiBlU,GACtB7iB,KAAKs3B,iBAAiBjF,aAE1BryB,KAAKo3B,cAAc3yB,OAAOoe,EAAMlkB,IAChCqB,KAAKg3B,QAAQ5yB,OAAOF,EAAO,GACvBlE,KAAK03B,iBAAiBrZ,SAASwE,GAAQ,CACvC,MAAM3e,EAAQlE,KAAK03B,iBAAiBvzB,QAAQ0e,GAC5C7iB,KAAK03B,iBAAiBtzB,OAAOF,EAAO,EACxC,CACA,MAAMsC,EAAaxG,KAAK43B,kBAAkBptB,IAAIqY,EAAMlkB,IAChD6H,IACAA,EAAW3E,UACX7B,KAAK43B,kBAAkBnzB,OAAOoe,EAAMlkB,KAExCqB,KAAKq4B,kBAAkB/zB,KAAK,CAAEue,SAClC,CACAgW,UAAAA,CAAWhW,EAAO3e,EAA4BP,QAAvB,IAALO,IAAAA,EAAQlE,KAAKmkB,OAAO5iB,aAAe,IAAPoC,IAAAA,EAAU,CAAE81B,eAAe,IACrE,MACMiB,EADgB16B,KAAKg3B,QAAQ7yB,QAAQ0e,IACD,EAC1C7iB,KAAKo3B,cAAc3F,OACnBzxB,KAAKs3B,iBAAiB7F,OACtBzxB,KAAKo3B,cAAchF,UAAUvP,EAAO3e,GAC/BP,EAAQ81B,eACTz5B,KAAKs3B,iBAAiBlF,UAAUvP,GAEhC6X,IAIJ16B,KAAK26B,UAAU9X,GACf7iB,KAAKmkB,OAAO/f,OAAOF,EAAO,EAAG2e,GAC7B7iB,KAAK43B,kBAAkBzyB,IAAI0d,EAAMlkB,GAAI,IAAIkH,EAAoBgd,EAAMsL,IAAIyM,kBAAkB92B,GAAU9D,KAAKi4B,uBAAuB3zB,KAAKR,KAAS+e,EAAMsL,IAAI5B,uBAAuBzoB,GAAU9D,KAAKm4B,4BAA4B7zB,KAAKR,OAC9N9D,KAAKg4B,eAAe1zB,KAAK,CAAEue,UAC/B,CACA8W,gBAAAA,CAAiB9W,GACT7iB,KAAK+2B,eAAiBlU,IAG1B7iB,KAAK+2B,aAAelU,EAChBA,IACA7iB,KAAKo3B,cAAcvB,eAAehT,GAClCA,EAAM/M,OAAO9V,KAAKwrB,OAAQxrB,KAAKyrB,SAC/BzrB,KAAK26B,UAAU9X,GACf7iB,KAAKs4B,wBAAwBh0B,KAAK,CAC9Bue,WAGZ,CACA8X,SAAAA,CAAU9X,GACF7iB,KAAK03B,iBAAiBrZ,SAASwE,IAC/B7iB,KAAK03B,iBAAiBtzB,OAAOpE,KAAK03B,iBAAiBvzB,QAAQ0e,GAAQ,GAEvE7iB,KAAK03B,iBAAmB,CAAC7U,KAAU7iB,KAAK03B,iBAC5C,CACAoB,eAAAA,GACI,IAAIp2B,EAAI8M,EAER,GADAxP,KAAKmkB,OAAOriB,SAAS+gB,GAAUA,EAAMgY,cACjC76B,KAAKi3B,UAAYj3B,KAAKm3B,UAAW,CACjC,MAAMA,EAAYn3B,KAAK4vB,SAASkL,2BAChC3D,EAAU1I,KAAK,CACXwC,aAAcjxB,KAAKu4B,KACnB/U,MAAOxjB,KAAKw3B,aAEhBx3B,KAAKm3B,UAAYA,EACjBpyB,EAAsB/E,KAAKm3B,UAAUxyB,QAAS,eAAe,KACpD3E,KAAKqrB,UACNrrB,KAAK4vB,SAASzM,iBAAiBnjB,KAAKw3B,WACxC,IAEJx3B,KAAKs3B,iBAAiB3yB,QAAQ4N,YAAYvS,KAAKm3B,UAAUxyB,QAC7D,EACK3E,KAAKi3B,SAAWj3B,KAAKm3B,YACtBn3B,KAAKm3B,UAAUxyB,QAAQ6C,SACkB,QAAxCgI,GAAM9M,EAAK1C,KAAKm3B,WAAWt1B,eAA4B,IAAP2N,GAAyBA,EAAGrH,KAAKzF,GAClF1C,KAAKm3B,eAAY12B,EAEzB,CACAqoB,iBAAAA,CAAkBhlB,EAAOuT,EAAU2P,GAC/B,MAAMgK,EAAa,IAAImF,GAA+BryB,EAAOkjB,EAAQ3P,EAAUxW,EAAcb,KAAK4vB,SAAShM,SAAS5jB,KAAKrB,KAEzH,OADAqB,KAAK2wB,0BAA0BrsB,KAAK0sB,GAC7BA,EAAW1uB,UACtB,CACAm2B,eAAAA,CAAgB7zB,EAAMd,EAAOuT,EAAUnT,GACnC,GAAoB,mBAAhBlE,KAAKkd,OACL,OAUJ,MAAM2F,EAAyB,iBAAV3e,EAAqBlE,KAAKmkB,OAAOjgB,QAASzD,EACzDs6B,EAAgB,IAAInE,GAAsB,CAC5CpP,YAAa1jB,EACbuT,WACAwL,QACAliB,QAASA,IAAME,IACfu0B,KAdJ,WACI,OAAQxwB,GACJ,IAAK,SACD,MAAwB,iBAAVV,EAAqB,MAAQ,eAC/C,IAAK,UACD,MAAO,UAEnB,CAOU82B,GACNxX,MAAOxjB,KAAKw3B,WACZrJ,IAAKnuB,KAAKu4B,OAGd,GADAv4B,KAAK+3B,YAAYzzB,KAAKy2B,GAClBA,EAAc74B,iBACd,OAEJ,MAAMxB,EAAOG,IACb,GAAIH,GAAQA,EAAKd,SAAWI,KAAK4vB,SAASjxB,GAAI,CAC1C,GAAqB,OAAjB+B,EAAKZ,QAAkB,CAEvB,MAAM,QAAED,GAAYa,EAMpB,YALAV,KAAK63B,QAAQvzB,KAAK,CACd0iB,OAAQ3P,EACRxX,QAASA,EACTqE,SAGR,CAEA,IADoE,IAA9ClE,KAAKo3B,cAAcjzB,QAAQzD,EAAKZ,UACL,IAA5BE,KAAKo3B,cAAclyB,KACpC,OAEJ,MAAM,QAAErF,EAAO,QAAEC,GAAYY,EAE7B,GADoBV,KAAKrB,KAAOkB,IACZwX,EAAU,CAE1B,GADiBrX,KAAKo3B,cAAcjzB,QAAQrE,KAC3BoE,EACb,MAER,CACAlE,KAAK63B,QAAQvzB,KAAK,CACd0iB,OAAQ3P,EACRxX,QAASa,EAAKb,QACdo7B,OAAQv6B,EAAKZ,QACboE,SAER,MAEIlE,KAAK0wB,WAAWpsB,KAAK,IAAIqyB,GAAqB,CAC1CnP,YAAa1jB,EACbuT,WACAwL,QACAliB,QAASA,IAAME,IACf2iB,MAAOxjB,KAAKw3B,WACZrJ,IAAKnuB,KAAKu4B,OAGtB,CACA12B,OAAAA,GACI,IAAIa,EAAI8M,EAAIwT,EACZjjB,MAAM8B,UACoB,QAAzBa,EAAK1C,KAAKm3B,iBAA8B,IAAPz0B,GAAyBA,EAAGiC,QAAQ6C,SACW,QAAhFwb,EAA+B,QAAzBxT,EAAKxP,KAAKm3B,iBAA8B,IAAP3nB,OAAgB,EAASA,EAAG3N,eAA4B,IAAPmhB,GAAyBA,EAAG7a,KAAKqH,GAC1HxP,KAAKm3B,eAAY12B,EACjB,IAAK,MAAMoiB,KAAS7iB,KAAKmkB,OACrBtB,EAAMhhB,UAEV7B,KAAKo3B,cAAcv1B,UACnB7B,KAAKs3B,iBAAiBz1B,SAC1B,ECxnBG,MAAMq5B,WAA6BhQ,GACtCvrB,WAAAA,CAAYhB,EAAIM,EAAW4jB,GACvB9iB,MAAMpB,EAAIM,GACVe,KAAK+sB,gCAAkC,IAAI3pB,EAC3CpD,KAAKgtB,+BAAiChtB,KAAK+sB,gCAAgCjpB,MAC3E9D,KAAKitB,wBAA0B,IAAI7pB,EACnCpD,KAAKktB,uBAAyBltB,KAAKitB,wBAAwBnpB,MAC3D9D,KAAKmtB,iBAAmB,IAAI/pB,EAC5BpD,KAAKotB,gBAAkBptB,KAAKmtB,iBAAiBrpB,MAC7C9D,KAAKkG,eAAelG,KAAK+sB,gCAAiC/sB,KAAKitB,wBAAyBjtB,KAAKmtB,kBACzFtK,GACA7iB,KAAKysB,WAAW5J,EAExB,CACAwK,cAAAA,CAAexqB,GACX7C,KAAK+sB,gCAAgCzoB,KAAKzB,EAC9C,CACAyqB,OAAAA,CAAQxpB,GACJ9D,KAAKmtB,iBAAiB7oB,KAAKR,EAC/B,EClBG,MAAMq3B,WAAsBlN,GAC/B,YAAIhhB,GACA,OAAOjN,KAAKo7B,SAChB,CACA,QAAIluB,GACA,OAAOlN,KAAKq7B,KAChB,CACA,gBAAIjiB,GAKA,OAAOpZ,KAAKs7B,gBAChB,CACA,iBAAIhiB,GAKA,OAAOtZ,KAAKu7B,iBAChB,CACA,iBAAIhiB,GAKA,OAAOvZ,KAAKw7B,iBAChB,CACA,gBAAIniB,GAKA,OAAOrZ,KAAKy7B,gBAChB,CACAH,cAAAA,GACI,MAAM3xB,EAAsC,mBAAvB3J,KAAK07B,cACpB17B,KAAK07B,gBACL17B,KAAK07B,cAKX,OAJI/xB,IAAU3J,KAAK27B,yBACf37B,KAAK27B,uBAAyBhyB,EAC9B3J,KAAK47B,qBAEFjyB,CACX,CACA8xB,cAAAA,GACI,MAAM9xB,EAAsC,mBAAvB3J,KAAK67B,cACpB77B,KAAK67B,gBACL77B,KAAK67B,cAKX,OAJIlyB,IAAU3J,KAAK87B,yBACf97B,KAAK87B,uBAAyBnyB,EAC9B3J,KAAK47B,qBAEFjyB,CACX,CACA4xB,eAAAA,GACI,MAAM3xB,EAAwC,mBAAxB5J,KAAK+7B,eACrB/7B,KAAK+7B,iBACL/7B,KAAK+7B,eAKX,OAJInyB,IAAW5J,KAAKg8B,0BAChBh8B,KAAKg8B,wBAA0BpyB,EAC/B5J,KAAK47B,qBAEFhyB,CACX,CACA4xB,eAAAA,GACI,MAAM5xB,EAAwC,mBAAxB5J,KAAKi8B,eACrBj8B,KAAKi8B,iBACLj8B,KAAKi8B,eAKX,OAJIryB,IAAW5J,KAAKk8B,0BAChBl8B,KAAKk8B,wBAA0BtyB,EAC/B5J,KAAK47B,qBAEFhyB,CACX,CACA,YAAIyhB,GACA,OAAOrrB,KAAKmuB,IAAI9C,QACpB,CACA,aAAIvI,GACA,OAAO9iB,KAAKmuB,IAAIrL,SACpB,CACAnjB,WAAAA,CAAYhB,EAAIM,EAAW0E,EAASwqB,GAChCpuB,MAAMpB,EAAIM,EAAWkvB,QAAiCA,EAAM,IAAI+M,GAAqBv8B,EAAIM,IACzFe,KAAK27B,uBAAyB,EAC9B37B,KAAK87B,uBAAyBjtB,OAAOstB,iBACrCn8B,KAAKg8B,wBAA0B,EAC/Bh8B,KAAKk8B,wBAA0BrtB,OAAOstB,iBACtCn8B,KAAK07B,cAAgB,EACrB17B,KAAK+7B,eAAiB,EACtB/7B,KAAK67B,cAAgBhtB,OAAOstB,iBAC5Bn8B,KAAKi8B,eAAiBptB,OAAOstB,iBAC7Bn8B,KAAKq7B,OAAQ,EACbr7B,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACmD,iBAA5EH,aAAyC,EAASA,EAAQyV,gBAClEpZ,KAAK07B,cAAgB/3B,EAAQyV,cAEuD,iBAA5EzV,aAAyC,EAASA,EAAQ0V,gBAClErZ,KAAK67B,cAAgBl4B,EAAQ0V,cAEwD,iBAA7E1V,aAAyC,EAASA,EAAQ2V,iBAClEtZ,KAAK+7B,eAAiBp4B,EAAQ2V,eAEuD,iBAA7E3V,aAAyC,EAASA,EAAQ4V,iBAClEvZ,KAAKi8B,eAAiBt4B,EAAQ4V,eAElCvZ,KAAKmuB,IAAI1B,WAAWzsB,MACpBA,KAAKkG,eAAelG,KAAKmuB,IAAIhC,wBAAwBroB,IACjD,MAAM,UAAEgf,GAAchf,GAChB,SAAE8rB,GAAa5vB,KAAKkuB,QAC1B0B,EAASviB,WAAWrN,KAAM8iB,EAAU,IACpC9iB,KAAKmuB,IAAI9B,gBAAe,KACxB,MAAM,SAAEuD,GAAa5vB,KAAKkuB,QAC1B0B,EAASzM,iBAAiBnjB,KAAK,IAC/BA,KAAKmuB,IAAInB,gCAAgClpB,IACP,iBAAvBA,EAAMsV,cACiB,mBAAvBtV,EAAMsV,eACbpZ,KAAK07B,cAAgB53B,EAAMsV,cAEI,iBAAxBtV,EAAMwV,eACkB,mBAAxBxV,EAAMwV,gBACbtZ,KAAK+7B,eAAiBj4B,EAAMwV,eAEE,iBAAvBxV,EAAMuV,cACiB,mBAAvBvV,EAAMuV,eACbrZ,KAAK67B,cAAgB/3B,EAAMuV,cAEI,iBAAxBvV,EAAMyV,eACkB,mBAAxBzV,EAAMyV,gBACbvZ,KAAKi8B,eAAiBn4B,EAAMyV,cAChC,IACAvZ,KAAKmuB,IAAIf,iBAAiBtpB,IAC1B9D,KAAKwY,aAAalU,KAAK,CACnBsF,OAAQ9F,EAAM8F,OACdD,MAAO7F,EAAM6F,OACf,IACF3J,KAAKwY,aACb,CACAnL,UAAAA,CAAWyV,GACP9iB,KAAKmuB,IAAIjU,uBAAuB5V,KAAK,CAAEwe,aAC3C,CACAe,SAAAA,CAAUwH,GACNrrB,KAAKmuB,IAAI5L,mBAAmBje,KAAK,CAAE+mB,YACvC,CACAoD,IAAAA,CAAK/B,GACGA,EAAWnT,gBACXvZ,KAAKi8B,eAAiBvP,EAAWnT,eAEjCmT,EAAWpT,gBACXtZ,KAAK+7B,eAAiBrP,EAAWpT,eAEjCoT,EAAWrT,eACXrZ,KAAK67B,cAAgBnP,EAAWrT,cAEhCqT,EAAWtT,eACXpZ,KAAK07B,cAAgBhP,EAAWtT,cAEpCpZ,KAAKo7B,UAAY1O,EAAWzf,SAC5BjN,KAAKq7B,QAAU3O,EAAWxf,KAC1BnN,MAAM0uB,KAAK/B,GACyB,kBAAzBA,EAAW5J,WAClB9iB,KAAKqN,WAAWqf,EAAW5J,UAEnC,CACA8Y,iBAAAA,GACI57B,KAAKmuB,IAAIlB,wBAAwB3oB,KAAK,CAClC8U,aAAcpZ,KAAK27B,uBACnBtiB,aAAcrZ,KAAK87B,uBACnBxiB,cAAetZ,KAAKg8B,wBACpBziB,cAAevZ,KAAKk8B,yBAE5B,CACApf,MAAAA,GACI,MAAMjF,EAAQ9X,MAAM+c,SACdsf,EAAWv5B,GAAUA,IAAUgM,OAAOstB,sBAAmB17B,EAAYoC,EACrEw5B,EAAWx5B,GAAWA,GAAS,OAAIpC,EAAYoC,EACrD,OAAOqV,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG9W,GAAQ,CAAEyB,cAAe+iB,EAAQr8B,KAAKsZ,eAAgBC,cAAe6iB,EAAQp8B,KAAKuZ,eAAgBH,aAAcijB,EAAQr8B,KAAKoZ,cAAeC,aAAc+iB,EAAQp8B,KAAKqZ,cAAenM,KAAMlN,KAAKkN,KAAMD,SAAUjN,KAAKiN,UACjQ,ECjLJ,MAAMqvB,GAA0B,sDACzB,MAAMC,WAAkCrB,GAC3C,YAAI9e,GACA,IAAKpc,KAAKw8B,OACN,MAAM,IAAI75B,MAAM25B,IAEpB,OAAOt8B,KAAKw8B,OAAOhT,MAAMpN,QAC7B,CACAzc,WAAAA,CAAYhB,EAAIixB,GACZ7vB,MAAMpB,EAAI,qBACVqB,KAAK4vB,SAAWA,EAChB5vB,KAAKy3B,qBAAuB,IAAIr0B,EAChCpD,KAAKy8B,oBAAsBz8B,KAAKy3B,qBAAqB3zB,MACrD9D,KAAKs4B,wBAA0B,IAAIl1B,EACnCpD,KAAKilB,uBAAyBjlB,KAAKs4B,wBAAwBx0B,MAC3D9D,KAAKkG,eAAelG,KAAKy3B,qBAAsBz3B,KAAKs4B,wBACxD,CACAoE,KAAAA,GACI,GAAK18B,KAAKw8B,OAGV,OAAOx8B,KAAK4vB,SAAS9L,YAAY9jB,KAAKw8B,OAC1C,CACAG,SAAAA,GACI,MAA8B,WAAvB38B,KAAKoc,SAASxX,KACf5E,KAAKoc,SAASugB,YACd3zB,MACV,CACA4zB,MAAAA,CAAOj5B,GACH,IAAIjB,EAAI8M,EAAIwT,EACZ,IAAKhjB,KAAKw8B,OACN,MAAM,IAAI75B,MAAM25B,IAEpB,MAAM9Y,EAAiC,QAAxB9gB,EAAKiB,EAAQ6f,aAA0B,IAAP9gB,EAAgBA,EAAK1C,KAAK4vB,SAAS9J,SAAS,CACvFzJ,UAAWqL,GAAgD,QAA3BlY,EAAK7L,EAAQ0T,gBAA6B,IAAP7H,EAAgBA,EAAK,SACxFiqB,eAAe,IAEnBz5B,KAAK4vB,SAASiN,iBAAiB,CAC3Bl3B,KAAM,CAAE9F,QAASG,KAAKw8B,OAAO79B,IAC7B0N,GAAI,CACAmX,QACAnM,SAAU1T,EAAQ6f,OACgB,QAA3BR,EAAKrf,EAAQ0T,gBAA6B,IAAP2L,EAAgBA,EACpD,SACN9e,MAAOP,EAAQO,QAG3B,CACA44B,QAAAA,GACI,IAAK98B,KAAKw8B,OACN,MAAM,IAAI75B,MAAM25B,IAEO,SAAvBt8B,KAAKoc,SAASxX,MAIlB5E,KAAK4vB,SAAS1M,cAAcljB,KAAKw8B,OACrC,CACAre,WAAAA,GACI,IAAKne,KAAKw8B,OACN,MAAM,IAAI75B,MAAM25B,IAEpB,OAAOt8B,KAAK4vB,SAASxM,iBAAiBpjB,KAAKw8B,OAC/C,CACAO,aAAAA,GACI,IAAK/8B,KAAKw8B,OACN,MAAM,IAAI75B,MAAM25B,IAEhBt8B,KAAKme,eACLne,KAAK4vB,SAASvM,oBAEtB,CACAoJ,UAAAA,CAAWjJ,GACPxjB,KAAKw8B,OAAShZ,CAClB,ECxEG,MAAMwZ,WAA2B7B,GACpC,gBAAI/hB,GACA,IAAI1W,EACJ,MAAMu6B,EAAsD,QAA3Bv6B,EAAK1C,KAAK4lB,mBAAgC,IAAPljB,OAAgB,EAASA,EAAG0W,aAChG,MAAuC,iBAA5B6jB,EACAA,EAEJl9B,MAAMu7B,gBACjB,CACA,iBAAIhiB,GACA,IAAI5W,EACJ,MAAMw6B,EAAuD,QAA3Bx6B,EAAK1C,KAAK4lB,mBAAgC,IAAPljB,OAAgB,EAASA,EAAG4W,cACjG,MAAwC,iBAA7B4jB,EACAA,EAEJn9B,MAAMw7B,iBACjB,CACA,gBAAIliB,GACA,IAAI3W,EACJ,MAAMy6B,EAAsD,QAA3Bz6B,EAAK1C,KAAK4lB,mBAAgC,IAAPljB,OAAgB,EAASA,EAAG2W,aAChG,MAAuC,iBAA5B8jB,EACAA,EAEJp9B,MAAM07B,gBACjB,CACA,iBAAIliB,GACA,IAAI7W,EACJ,MAAM06B,EAAuD,QAA3B16B,EAAK1C,KAAK4lB,mBAAgC,IAAPljB,OAAgB,EAASA,EAAG6W,cACjG,MAAwC,iBAA7B6jB,EACAA,EAEJr9B,MAAMy7B,iBACjB,CACA,UAAIrX,GACA,OAAOnkB,KAAKq9B,OAAOlZ,MACvB,CACA,eAAIyB,GACA,OAAO5lB,KAAKq9B,OAAOzX,WACvB,CACA,QAAI1gB,GACA,OAAOlF,KAAKq9B,OAAOn4B,IACvB,CACA,SAAIskB,GACA,OAAOxpB,KAAKq9B,MAChB,CACA,UAAIngB,GACA,OAAOld,KAAKq9B,OAAOngB,MACvB,CACA,UAAIA,CAAOra,GACP7C,KAAKq9B,OAAOngB,OAASra,CACzB,CACA,UAAIwsB,GACA,OAAOrvB,KAAKq9B,OAAOhO,MACvB,CACA1vB,WAAAA,CAAYiwB,EAAUjxB,EAAIgF,GACtB,IAAIjB,EAAI8M,EAAIwT,EAAIC,EAAIqa,EAAIC,EACxBx9B,MAAMpB,EAAI,oBAAqB,CAC3B2a,cAA2G,QAA3F9J,EAAoC,QAA9B9M,EAAKiB,EAAQ65B,mBAAgC,IAAP96B,OAAgB,EAASA,EAAG4W,qBAAkC,IAAP9J,EAAgBA,EA1DnG,IA2DhC4J,aAA0G,QAA3F6J,EAAoC,QAA9BD,EAAKrf,EAAQ65B,mBAAgC,IAAPxa,OAAgB,EAASA,EAAGzJ,qBAAkC,IAAP0J,EAAgBA,EA5DnG,IA6D/B1J,cAA8C,QAA9B+jB,EAAK35B,EAAQ65B,mBAAgC,IAAPF,OAAgB,EAASA,EAAG/jB,cAClFF,aAA6C,QAA9BkkB,EAAK55B,EAAQ65B,mBAAgC,IAAPD,OAAgB,EAASA,EAAGlkB,cAClF,IAAIkjB,GAA0B59B,EAAIixB,IACrC5vB,KAAKmuB,IAAI1B,WAAWzsB,MACpBA,KAAKq9B,OAAS,IAAIvG,GAAwB92B,KAAK2E,QAASirB,EAAUjxB,EAAIgF,EAAS3D,MAC/EA,KAAKkG,eAAelG,KAAKwpB,MAAMvE,wBAAwBnhB,IACnD9D,KAAKmuB,IAAImK,wBAAwBh0B,KAAKR,EAAM,IAEpD,CACAwgB,KAAAA,GACStkB,KAAKmuB,IAAI9C,UACVrrB,KAAKmuB,IAAItK,YAEb9jB,MAAMukB,OACV,CACAmI,UAAAA,GACIzsB,KAAKq9B,OAAO5Q,YAChB,CACA5I,SAAAA,CAAUwH,GACNtrB,MAAM8jB,UAAUwH,GAChBrrB,KAAKwpB,MAAM3F,UAAUwH,EACzB,CACAvV,MAAAA,CAAOnM,EAAOC,GACV7J,MAAM+V,OAAOnM,EAAOC,GACpB5J,KAAKwpB,MAAM1T,OAAOnM,EAAOC,EAC7B,CACA8kB,YAAAA,GACI,OAAO1uB,KAAKq9B,MAChB,CACAvgB,MAAAA,GACI,OAAO9c,KAAKwpB,MAAM1M,QACtB,EC5FG,MAAM2gB,WAA6BvC,GACtC,YAAI9e,GACA,OAAOpc,KAAKwjB,MAAM2K,IAAI/R,QAC1B,CACA,SAAIzf,GACA,OAAOqD,KAAK6iB,MAAMlmB,KACtB,CACA,iBAAI29B,GACA,OAAOt6B,KAAKwjB,MAAM6H,QACtB,CACA,YAAI0G,GACA,OAAO/xB,KAAK6iB,MAAMkP,QACtB,CACA,SAAIvO,CAAM3gB,GACN,MAAM66B,EAAW19B,KAAKw8B,OAClBx8B,KAAKw8B,SAAW35B,IAChB7C,KAAKw8B,OAAS35B,EACd7C,KAAK29B,kBAAkBr5B,KAAK,CAAC,GAC7BtE,KAAK49B,yBAAyBF,GAC9B19B,KAAKy3B,qBAAqBnzB,KAAK,CAC3B8X,SAAUpc,KAAKwjB,MAAM2K,IAAI/R,WAGrC,CACA,SAAIoH,GACA,OAAOxjB,KAAKw8B,MAChB,CACA,gBAAIqB,GACA,OAAO79B,KAAK89B,aAChB,CACAn+B,WAAAA,CAAYkjB,EAAOW,EAAOoM,EAAU3wB,EAAW4+B,GAC3C99B,MAAM8iB,EAAMlkB,GAAIM,GAChBe,KAAK6iB,MAAQA,EACb7iB,KAAK4vB,SAAWA,EAChB5vB,KAAK+9B,kBAAoB,IAAI36B,EAC7BpD,KAAK46B,iBAAmB56B,KAAK+9B,kBAAkBj6B,MAC/C9D,KAAKg+B,wBAA0B,IAAI56B,EACnCpD,KAAKklB,uBAAyBllB,KAAKg+B,wBAAwBl6B,MAC3D9D,KAAK29B,kBAAoB,IAAIv6B,EAC7BpD,KAAKi+B,iBAAmBj+B,KAAK29B,kBAAkB75B,MAC/C9D,KAAKk+B,qBAAuB,IAAI96B,EAChCpD,KAAKm+B,oBAAsBn+B,KAAKk+B,qBAAqBp6B,MACrD9D,KAAKy3B,qBAAuB,IAAIr0B,EAChCpD,KAAKy8B,oBAAsBz8B,KAAKy3B,qBAAqB3zB,MACrD9D,KAAKo+B,sBAAwB,IAAI93B,EACjCtG,KAAK89B,cAAgBD,EACrB79B,KAAKysB,WAAW5J,GAChB7iB,KAAKw8B,OAAShZ,EACdxjB,KAAK49B,2BACL59B,KAAKkG,eAAelG,KAAKo+B,sBAAuBp+B,KAAKk+B,qBAAsBl+B,KAAK+9B,kBAAmB/9B,KAAK29B,kBAAmB39B,KAAKg+B,wBAAyBh+B,KAAKy3B,qBAClK,CACAkF,SAAAA,GACI,OAAO38B,KAAKwjB,MAAM2K,IAAIwO,WAC1B,CACAC,MAAAA,CAAOj5B,GACH,IAAIjB,EAAI8M,EACRxP,KAAK4vB,SAASiN,iBAAiB,CAC3Bl3B,KAAM,CAAE9F,QAASG,KAAKw8B,OAAO79B,GAAImB,QAASE,KAAK6iB,MAAMlkB,IACrD0N,GAAI,CACAmX,MAAgC,QAAxB9gB,EAAKiB,EAAQ6f,aAA0B,IAAP9gB,EAAgBA,EAAK1C,KAAKw8B,OAClEnlB,SAAU1T,EAAQ6f,OACgB,QAA3BhU,EAAK7L,EAAQ0T,gBAA6B,IAAP7H,EAAgBA,EACpD,SACNtL,MAAOP,EAAQO,QAG3B,CACAm6B,QAAAA,CAAS1hC,GACLqD,KAAK6iB,MAAMwb,SAAS1hC,EACxB,CACA2hC,WAAAA,CAAYvM,GACR/xB,KAAK6iB,MAAMyb,YAAYvM,EAC3B,CACA2K,KAAAA,GACI18B,KAAKwjB,MAAMgG,MAAM6I,WAAWryB,KAAK6iB,MACrC,CACAia,QAAAA,GACI98B,KAAKwjB,MAAM2K,IAAI2O,UACnB,CACA3e,WAAAA,GACI,OAAOne,KAAKwjB,MAAM2K,IAAIhQ,aAC1B,CACA4e,aAAAA,GACI/8B,KAAKwjB,MAAM2K,IAAI4O,eACnB,CACAa,wBAAAA,CAAyBW,GACrB,IAAI77B,EACJ,IAAI87B,EAAoH,QAA/F97B,EAAK67B,aAAqD,EAASA,EAAclT,gBAA6B,IAAP3oB,GAAgBA,EAChJ1C,KAAKo+B,sBAAsBv7B,MAAQ,IAAIgD,EAAoB7F,KAAKwjB,MAAM2K,IAAIhU,uBAAuBrW,IAC7F,MAAM26B,GAAmB36B,EAAMgf,WAAa9iB,KAAK8iB,UAC3C4b,EAAmB56B,EAAMgf,YAAc9iB,KAAK8iB,UAC5CgT,EAAgB91B,KAAKwjB,MAAMgG,MAAMsI,cAAc9xB,KAAK6iB,QACtD4b,GAAoBC,GAAoB5I,IACxC91B,KAAKka,uBAAuB5V,KAAKR,EACrC,IACA9D,KAAKwjB,MAAM2K,IAAIsO,qBAAqB34B,IAChC9D,KAAKwjB,QAAUxjB,KAAK6iB,MAAMW,OAG9BxjB,KAAKy3B,qBAAqBnzB,KAAKR,EAAM,IACrC9D,KAAKwjB,MAAM2K,IAAI3L,mBAAkB,KAC7BxiB,KAAKwjB,QAAUxjB,KAAK6iB,MAAMW,OAG1Bgb,IAAsBx+B,KAAKs6B,gBAC3BkE,EAAoBx+B,KAAKs6B,cACzBt6B,KAAKg+B,wBAAwB15B,KAAK,CAC9B+mB,SAAUrrB,KAAKs6B,gBAEvB,IAER,EC/GG,MAAMqE,WAAsB94B,EAC/B,UAAI+mB,GACA,OAAO5sB,KAAKkuB,OAChB,CACA,SAAIvxB,GACA,OAAOqD,KAAK4+B,MAChB,CACA,SAAIpb,GACA,OAAOxjB,KAAKw8B,MAChB,CACA,YAAIzK,GACA,IAAIrvB,EACJ,OAAiC,QAAzBA,EAAK1C,KAAK6+B,iBAA8B,IAAPn8B,EAAgBA,EAAK1C,KAAK4vB,SAASmC,QAChF,CACA,gBAAI3Y,GACA,OAAOpZ,KAAK07B,aAChB,CACA,iBAAIpiB,GACA,OAAOtZ,KAAK+7B,cAChB,CACA,gBAAI1iB,GACA,OAAOrZ,KAAK67B,aAChB,CACA,iBAAItiB,GACA,OAAOvZ,KAAKi8B,cAChB,CACAt8B,WAAAA,CAAYhB,EAAIM,EAAW4+B,EAAcjO,EAAUqB,EAAczN,EAAO3W,EAAMlJ,GAC1E5D,QACAC,KAAKrB,GAAKA,EACVqB,KAAK4vB,SAAWA,EAChB5vB,KAAKixB,aAAeA,EACpBjxB,KAAK6M,KAAOA,EACZ7M,KAAK6+B,UAAYl7B,EAAQouB,SACzB/xB,KAAKw8B,OAAShZ,EACdxjB,KAAK07B,cAAgB/3B,EAAQyV,aAC7BpZ,KAAK+7B,eAAiBp4B,EAAQ2V,cAC9BtZ,KAAK67B,cAAgBl4B,EAAQ0V,aAC7BrZ,KAAKi8B,eAAiBt4B,EAAQ4V,cAC9BvZ,KAAKmuB,IAAM,IAAIsP,GAAqBz9B,KAAMA,KAAKw8B,OAAQ5M,EAAU3wB,EAAW4+B,GAC5E79B,KAAKkG,eAAelG,KAAKmuB,IAAI9B,gBAAe,KACxCuD,EAASiG,eAAe71B,KAAK,IAC7BA,KAAKmuB,IAAIf,iBAAiBtpB,IAG1B9D,KAAKwjB,MAAM2K,IAAIb,QAAQxpB,EAAM,IAC7B9D,KAAKmuB,IAAIgQ,qBAAoB,KAC7Bn+B,KAAKwjB,MAAMgG,MAAMmP,SAAS34B,KAAK,IAEvC,CACAyuB,IAAAA,CAAK7B,GACD5sB,KAAKkuB,QAAUtB,EAAOA,OACtB5sB,KAAK6M,KAAK4hB,KAAKvW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG/B,GAAS,CAAEuB,IAAKnuB,KAAKmuB,IAAK8C,aAAcjxB,KAAKixB,gBAC5FjxB,KAAKq+B,SAASzR,EAAOjwB,MACzB,CACA2nB,KAAAA,GACI,MAAMxgB,EAAQ,IAAImnB,GAClBjrB,KAAKmuB,IAAInC,aAAa1nB,KAAKR,GACvBA,EAAM5B,kBAGLlC,KAAKmuB,IAAI9C,UACVrrB,KAAKmuB,IAAItK,WAEjB,CACA/G,MAAAA,GACI,MAAO,CACHne,GAAIqB,KAAKrB,GACTmgC,iBAAkB9+B,KAAK6M,KAAKiyB,iBAC5BjB,aAAc79B,KAAK6M,KAAKgxB,aACxBjR,OAAQ1U,OAAOC,KAAKnY,KAAKkuB,SAAW,CAAC,GAAG3sB,OAAS,EAC3CvB,KAAKkuB,aACLztB,EACN9D,MAAOqD,KAAKrD,MACZo1B,SAAU/xB,KAAK6+B,UACfvlB,cAAetZ,KAAK+7B,eACpBxiB,cAAevZ,KAAKi8B,eACpB7iB,aAAcpZ,KAAK07B,cACnBriB,aAAcrZ,KAAK67B,cAE3B,CACAwC,QAAAA,CAAS1hC,GACkBA,IAAUqD,KAAKrD,QAElCqD,KAAK4+B,OAASjiC,EACdqD,KAAKmuB,IAAI4P,kBAAkBz5B,KAAK,CAAE3H,UAE1C,CACA2hC,WAAAA,CAAYvM,GACUA,IAAa/xB,KAAK+xB,WAEhC/xB,KAAK6+B,UAAY9M,EACjB/xB,KAAKmuB,IAAI+P,qBAAqB55B,KAAK,CAC/BytB,SAAUA,IAGtB,CACApF,MAAAA,CAAO7oB,GACH,IAAIpB,EAEJ1C,KAAKkuB,QAAUhW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAA4B,QAAvBjsB,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,EAAgBA,EAAK,CAAC,GAAKoB,EAAM8oB,QAKjH,IAAK,MAAMgC,KAAO1W,OAAOC,KAAKrU,EAAM8oB,aACNnsB,IAAtBqD,EAAM8oB,OAAOgC,WACN5uB,KAAKkuB,QAAQU,GAI5B5uB,KAAK6M,KAAK8f,OAAO,CACbC,OAAQ5sB,KAAKkuB,SAErB,CACAwL,iBAAAA,CAAkBlW,EAAO7f,GACrB3D,KAAKw8B,OAAShZ,EACdxjB,KAAKmuB,IAAI3K,MAAQxjB,KAAKw8B,OACtB,MAAMuC,EAAiB/+B,KAAKw8B,OAAOhT,MAAMsI,cAAc9xB,MACjDqrB,EAAWrrB,KAAKwjB,MAAM2K,IAAI9C,UAAY0T,GACtCp7B,aAAyC,EAASA,EAAQ81B,gBACxDz5B,KAAKmuB,IAAI9C,WAAaA,GACtBrrB,KAAKmuB,IAAI5L,mBAAmBje,KAAK,CAC7B+mB,SAAUrrB,KAAKwjB,MAAM2K,IAAI9C,UAAY0T,IAI7C/+B,KAAKmuB,IAAIrL,YAAcic,GACvB/+B,KAAKmuB,IAAIjU,uBAAuB5V,KAAK,CACjCwe,UAAWic,GAGvB,CACAlE,SAAAA,GACI,MAAMkE,EAAiB/+B,KAAKw8B,OAAOhT,MAAMsI,cAAc9xB,MACjDqrB,EAAWrrB,KAAKwjB,MAAM2K,IAAI9C,UAAY0T,EACxC/+B,KAAKmuB,IAAI9C,WAAaA,GACtBrrB,KAAKmuB,IAAI5L,mBAAmBje,KAAK,CAC7B+mB,SAAUrrB,KAAKwjB,MAAM2K,IAAI9C,UAAY0T,IAGzC/+B,KAAKmuB,IAAIrL,YAAcic,GACvB/+B,KAAKmuB,IAAIjU,uBAAuB5V,KAAK,CACjCwe,UAAWic,GAGvB,CACAjpB,MAAAA,CAAOnM,EAAOC,GAEV5J,KAAKmuB,IAAIvC,sBAAsBtnB,KAAK,CAChCqF,QACAC,OAAQA,IAEZ5J,KAAK6M,KAAKiJ,OAAOnM,EAAOC,EAC5B,CACA/H,OAAAA,GACI7B,KAAKmuB,IAAItsB,UACT7B,KAAK6M,KAAKhL,SACd,EChKJ,MAAMm9B,GAA4BpS,IAC9B,MAAMqS,EAAM72B,SAAS82B,gBAAgB,6BAA8B,OACnED,EAAIE,eAAe,KAAM,SAAUvS,EAAOhjB,QAC1Cq1B,EAAIE,eAAe,KAAM,QAASvS,EAAOjjB,OACzCs1B,EAAIE,eAAe,KAAM,UAAWvS,EAAOwS,SAC3CH,EAAIE,eAAe,KAAM,cAAe,SACxCF,EAAIE,eAAe,KAAM,YAAa,SACtCF,EAAI33B,UAAUjD,IAAI,UAClB,MAAMmb,EAAOpX,SAAS82B,gBAAgB,6BAA8B,QAGpE,OAFA1f,EAAK2f,eAAe,KAAM,IAAKvS,EAAOpN,MACtCyf,EAAI1sB,YAAYiN,GACTyf,CAAG,ECRP,MAAMI,WAAmBx5B,EAC5B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,GACII,QACAC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,iBAC1B+B,KAAKs/B,SAAWl3B,SAAS6L,cAAc,OACvCjU,KAAKs/B,SAASrhC,UAAY,yBAC1B+B,KAAKu/B,OAASn3B,SAAS6L,cAAc,OACrCjU,KAAKu/B,OAAOthC,UAAY,wBACxB+B,KAAKu/B,OAAOhtB,YDFmBysB,GAAyB,CAC5Dr1B,MAAO,KACPC,OAAQ,KACRw1B,QAAS,YACT5f,KAAM,gICDFxf,KAAK6gB,SAAStO,YAAYvS,KAAKs/B,UAC/Bt/B,KAAK6gB,SAAStO,YAAYvS,KAAKu/B,QAC/Bv/B,KAAKw/B,QACT,CACA/Q,IAAAA,CAAK7B,GACD5sB,KAAK4+B,OAAShS,EAAOjwB,MACrBqD,KAAKkG,eAAe0mB,EAAOuB,IAAIyM,kBAAkB92B,IAC7C9D,KAAK4+B,OAAS96B,EAAMnH,MACpBqD,KAAKw/B,QAAQ,IACbz6B,EAAsB/E,KAAKu/B,OAAQ,eAAgB1P,IACnDA,EAAG1tB,gBAAgB,IACnB4C,EAAsB/E,KAAKu/B,OAAQ,SAAU1P,IACzCA,EAAG3tB,mBAGP2tB,EAAG1tB,iBACHyqB,EAAOuB,IAAIuO,QAAO,KAEtB18B,KAAKw/B,QACT,CACAA,MAAAA,GACI,IAAI98B,EACA1C,KAAKs/B,SAAS9L,cAAgBxzB,KAAK4+B,SACnC5+B,KAAKs/B,SAAS9L,YAAqC,QAAtB9wB,EAAK1C,KAAK4+B,cAA2B,IAAPl8B,EAAgBA,EAAK,GAExF,ECxCG,MAAM+8B,GACT,WAAIngC,GACA,OAAOU,KAAKs/B,QAChB,CACA,OAAI5K,GACA,OAAO10B,KAAK0/B,IAChB,CACA//B,WAAAA,CAAYiwB,EAAUjxB,EAAImgC,EAAkBjB,GACxC79B,KAAK4vB,SAAWA,EAChB5vB,KAAKrB,GAAKA,EACVqB,KAAK8+B,iBAAmBA,EACxB9+B,KAAK69B,aAAeA,EACpB79B,KAAKs/B,SAAWt/B,KAAK2/B,uBAAuB3/B,KAAKrB,GAAImgC,GACrD9+B,KAAK0/B,KAAO1/B,KAAK4/B,mBAAmB5/B,KAAKrB,GAAIk/B,EACjD,CACApP,IAAAA,CAAK7B,GACD5sB,KAAKV,QAAQmvB,KAAK7B,GAClB5sB,KAAK00B,IAAIjG,KAAK7B,EAClB,CACA8M,iBAAAA,CAAkB8C,EAAQqD,GACtB,CAEJ/pB,MAAAA,CAAOnM,EAAOC,GACV,IAAIlH,EAAI8M,EAC8B,QAArCA,GAAM9M,EAAK1C,KAAKV,SAASwW,cAA2B,IAAPtG,GAAyBA,EAAGrH,KAAKzF,EAAIiH,EAAOC,EAC9F,CACA+iB,MAAAA,CAAO7oB,GACH,IAAIpB,EAAI8M,EAAIwT,EAAIC,EACsB,QAArCzT,GAAM9M,EAAK1C,KAAKV,SAASqtB,cAA2B,IAAPnd,GAAyBA,EAAGrH,KAAKzF,EAAIoB,GACjD,QAAjCmf,GAAMD,EAAKhjB,KAAK00B,KAAK/H,cAA2B,IAAP1J,GAAyBA,EAAG9a,KAAK6a,EAAIlf,EACnF,CACAjC,OAAAA,GACI,IAAIa,EAAI8M,EAAIwT,EAAIC,EACuB,QAAtCzT,GAAM9M,EAAK1C,KAAKV,SAASuC,eAA4B,IAAP2N,GAAyBA,EAAGrH,KAAKzF,GAC7C,QAAlCugB,GAAMD,EAAKhjB,KAAK00B,KAAK7yB,eAA4B,IAAPohB,GAAyBA,EAAG9a,KAAK6a,EAChF,CACA2c,sBAAAA,CAAuBhhC,EAAImhC,GACvB,OAAO9/B,KAAK4vB,SAASjsB,QAAQo8B,gBAAgB,CACzCphC,KACAqhC,KAAMF,GAEd,CACAF,kBAAAA,CAAmBjhC,EAAImhC,GACnB,MAAME,EAAOF,QAAqDA,EAAgB9/B,KAAK4vB,SAASjsB,QAAQs8B,oBACxG,GAAID,EAAM,CACN,GAAIhgC,KAAK4vB,SAASjsB,QAAQi8B,mBAAoB,CAC1C,MAAM3gC,EAAYe,KAAK4vB,SAASjsB,QAAQi8B,mBAAmB,CACvDjhC,KACAqhC,SAEJ,OAAI/gC,GAIO,IAAIogC,EAEnB,CACAt8B,QAAQC,KAAM,2BAA0B88B,qDAC5C,CACA,OAAO,IAAIT,EACf,EC1DG,MAAMa,GACTvgC,WAAAA,CAAYiwB,GACR5vB,KAAK4vB,SAAWA,CACpB,CACA3Q,QAAAA,CAASkhB,EAAW3c,GAChB,IAAI9gB,EAAI8M,EACR,MAAM1P,EAAUqgC,EAAUxhC,GACpBiuB,EAASuT,EAAUvT,OACnBjwB,EAAQwjC,EAAUxjC,MAClByjC,EAAWD,EAAUtzB,KACrBiyB,EAAmBsB,EACnBA,EAAS9gC,QAAQX,GACqB,QAArC+D,EAAKy9B,EAAUrB,wBAAqC,IAAPp8B,EAAgBA,EAAK,UACnEm7B,EAAeuC,EACS,QAAvB5wB,EAAK4wB,EAAS1L,WAAwB,IAAPllB,OAAgB,EAASA,EAAG7Q,GAC5DwhC,EAAUtC,aACVhxB,EAAO,IAAI4yB,GAAmBz/B,KAAK4vB,SAAU9vB,EAASg/B,EAAkBjB,GACxEhb,EAAQ,IAAI8b,GAAc7+B,EAASg/B,EAAkBjB,EAAc79B,KAAK4vB,SAAU,IAAIxK,GAAYplB,KAAK4vB,UAAWpM,EAAO3W,EAAM,CACjIklB,SAAUoO,EAAUpO,SACpB3Y,aAAc+mB,EAAU/mB,aACxBE,cAAe6mB,EAAU7mB,cACzBD,aAAc8mB,EAAU9mB,aACxBE,cAAe4mB,EAAU5mB,gBAM7B,OAJAsJ,EAAM4L,KAAK,CACP9xB,MAAOA,QAAqCA,EAAQmD,EACpD8sB,OAAQA,QAAuCA,EAAS,CAAC,IAEtD/J,CACX,EC/BG,MAAMwd,WAAkBx6B,EAC3B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,GACII,QACAC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,cAC9B,CACAwwB,IAAAA,CAAKP,GACD,ECeR,MAAMoS,GAAoB,IAtB1B,MACI3gC,WAAAA,GACIK,KAAKugC,aAAe,EACxB,CACAt8B,IAAAA,CAAKU,GACD3E,KAAKugC,aAAe,IACbvgC,KAAKugC,aAAaz1B,QAAQ8D,GAASA,IAASjK,IAC/CA,GAEJ3E,KAAK2sB,QACT,CACA6T,OAAAA,CAAQ77B,GACJ3E,KAAKugC,aAAevgC,KAAKugC,aAAaz1B,QAAQ8D,GAASA,IAASjK,IAChE3E,KAAK2sB,QACT,CACAA,MAAAA,GACI,IAAK,IAAIrhB,EAAI,EAAGA,EAAItL,KAAKugC,aAAah/B,OAAQ+J,IAC1CtL,KAAKugC,aAAaj1B,GAAGm1B,aAAa,aAAe,GAAEn1B,KACnDtL,KAAKugC,aAAaj1B,GAAGjB,MAAMq2B,OAAU,yCAA4C,EAAJp1B,IAErF,GAGG,MAAMq1B,WAAgB96B,EACzB,0BAAI+6B,CAAuB/9B,GACvB7C,KAAK2D,QAAQi9B,uBAAyB/9B,CAC1C,CACA,2BAAIg+B,CAAwBh+B,GACxB7C,KAAK2D,QAAQk9B,wBAA0Bh+B,CAC3C,CACA,WAAI8B,GACA,OAAO3E,KAAK6gB,QAChB,CACA,aAAIiC,GACA,OAAO9iB,KAAKurB,UAChB,CACA5rB,WAAAA,CAAYgE,GACR5D,QACAC,KAAK2D,QAAUA,EACf3D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAK8gC,gBAAkB,IAAI19B,EAC3BpD,KAAK+gC,eAAiB/gC,KAAK8gC,gBAAgBh9B,MAC3C9D,KAAKkG,eAAelG,KAAKwY,aAAcxY,KAAK8gC,iBAC5C9gC,KAAK6gB,SAAS5iB,UAAY,sBAC1B+B,KAAKurB,YAAa,EAClBvrB,KAAKghC,YAAY,OACjBhhC,KAAKghC,YAAY,UACjBhhC,KAAKghC,YAAY,QACjBhhC,KAAKghC,YAAY,SACjBhhC,KAAKghC,YAAY,WACjBhhC,KAAKghC,YAAY,YACjBhhC,KAAKghC,YAAY,cACjBhhC,KAAKghC,YAAY,eACjBhhC,KAAK6gB,SAAStO,YAAYvS,KAAK2D,QAAQrE,SACvCU,KAAK2D,QAAQyJ,UAAUmF,YAAYvS,KAAK6gB,UAExC7gB,KAAKihC,UAAU/oB,OAAOyW,OAAOzW,OAAOyW,OAAOzW,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAE/kB,OAAQ5J,KAAK2D,QAAQiG,OAAQD,MAAO3J,KAAK2D,QAAQgG,OAAU,QAAS3J,KAAK2D,SAAW,CAAE+F,IAAK1J,KAAK2D,QAAQ+F,MAAU,WAAY1J,KAAK2D,SAAW,CAAEu9B,OAAQlhC,KAAK2D,QAAQu9B,SAAa,SAAUlhC,KAAK2D,SAAW,CAAE8F,KAAMzJ,KAAK2D,QAAQ8F,OAAW,UAAWzJ,KAAK2D,SAAW,CAAEw9B,MAAOnhC,KAAK2D,QAAQw9B,SACtWb,GAAkBr8B,KAAKjE,KAAK6gB,SAChC,CACAxT,UAAAA,CAAWyV,GACHA,IAAc9iB,KAAK8iB,YAGvB9iB,KAAKurB,WAAazI,EAClBpb,EAAY1H,KAAK2E,QAAS,aAAc3E,KAAK8iB,WACjD,CACAse,YAAAA,GACId,GAAkBr8B,KAAKjE,KAAK6gB,SAChC,CACAogB,SAAAA,CAAUI,QAAM,IAANA,IAAAA,EAAS,CAAC,GACa,iBAAlBA,EAAOz3B,SACd5J,KAAK6gB,SAASxW,MAAMT,OAAU,GAAEy3B,EAAOz3B,YAEf,iBAAjBy3B,EAAO13B,QACd3J,KAAK6gB,SAASxW,MAAMV,MAAS,GAAE03B,EAAO13B,WAEtC,QAAS03B,GAAgC,iBAAfA,EAAO33B,MACjC1J,KAAK6gB,SAASxW,MAAMX,IAAO,GAAE23B,EAAO33B,QACpC1J,KAAK6gB,SAASxW,MAAM62B,OAAS,OAC7BlhC,KAAKshC,kBAAoB,OAEzB,WAAYD,GAAmC,iBAAlBA,EAAOH,SACpClhC,KAAK6gB,SAASxW,MAAM62B,OAAU,GAAEG,EAAOH,WACvClhC,KAAK6gB,SAASxW,MAAMX,IAAM,OAC1B1J,KAAKshC,kBAAoB,UAEzB,SAAUD,GAAiC,iBAAhBA,EAAO53B,OAClCzJ,KAAK6gB,SAASxW,MAAMZ,KAAQ,GAAE43B,EAAO53B,SACrCzJ,KAAK6gB,SAASxW,MAAM82B,MAAQ,OAC5BnhC,KAAKuhC,qBAAuB,QAE5B,UAAWF,GAAkC,iBAAjBA,EAAOF,QACnCnhC,KAAK6gB,SAASxW,MAAM82B,MAAS,GAAEE,EAAOF,UACtCnhC,KAAK6gB,SAASxW,MAAMZ,KAAO,OAC3BzJ,KAAKuhC,qBAAuB,SAEhC,MAAMC,EAAgBxhC,KAAK2D,QAAQyJ,UAAUvD,wBACvC43B,EAAczhC,KAAK6gB,SAAShX,wBAG5B63B,EAAU11B,KAAKD,IAAI,EAAG/L,KAAK2hC,gBAAgBF,EAAY93B,QAEvDi4B,EAAU51B,KAAKD,IAAI,EAAG/L,KAAK6hC,iBAAiBJ,EAAY73B,SAC9D,GAA+B,QAA3B5J,KAAKshC,kBAA6B,CAClC,MAAM53B,EAAMmC,EAAM41B,EAAY/3B,IAAM83B,EAAc93B,KAAMk4B,EAAS51B,KAAKD,IAAI,EAAGy1B,EAAc53B,OAAS63B,EAAY73B,OAASg4B,IACzH5hC,KAAK6gB,SAASxW,MAAMX,IAAO,GAAEA,MAC7B1J,KAAK6gB,SAASxW,MAAM62B,OAAS,MACjC,CACA,GAA+B,WAA3BlhC,KAAKshC,kBAAgC,CACrC,MAAMJ,EAASr1B,EAAM21B,EAAcN,OAASO,EAAYP,QAASU,EAAS51B,KAAKD,IAAI,EAAGy1B,EAAc53B,OAAS63B,EAAY73B,OAASg4B,IAClI5hC,KAAK6gB,SAASxW,MAAM62B,OAAU,GAAEA,MAChClhC,KAAK6gB,SAASxW,MAAMX,IAAM,MAC9B,CACA,GAAkC,SAA9B1J,KAAKuhC,qBAAiC,CACtC,MAAM93B,EAAOoC,EAAM41B,EAAYh4B,KAAO+3B,EAAc/3B,MAAOi4B,EAAS11B,KAAKD,IAAI,EAAGy1B,EAAc73B,MAAQ83B,EAAY93B,MAAQ+3B,IAC1H1hC,KAAK6gB,SAASxW,MAAMZ,KAAQ,GAAEA,MAC9BzJ,KAAK6gB,SAASxW,MAAM82B,MAAQ,MAChC,CACA,GAAkC,UAA9BnhC,KAAKuhC,qBAAkC,CACvC,MAAMJ,EAAQt1B,EAAM21B,EAAcL,MAAQM,EAAYN,OAAQO,EAAS11B,KAAKD,IAAI,EAAGy1B,EAAc73B,MAAQ83B,EAAY93B,MAAQ+3B,IAC7H1hC,KAAK6gB,SAASxW,MAAM82B,MAAS,GAAEA,MAC/BnhC,KAAK6gB,SAASxW,MAAMZ,KAAO,MAC/B,CACAzJ,KAAKwY,aAAalU,MACtB,CACAwY,MAAAA,GACI,MAAM1P,EAAYpN,KAAK2D,QAAQyJ,UAAUvD,wBACnClF,EAAU3E,KAAK6gB,SAAShX,wBACxByC,EAAS,CAAC,EAqBhB,MApB+B,QAA3BtM,KAAKshC,kBACLh1B,EAAO5C,IAAMo4B,WAAW9hC,KAAK6gB,SAASxW,MAAMX,KAEZ,WAA3B1J,KAAKshC,kBACVh1B,EAAO40B,OAASY,WAAW9hC,KAAK6gB,SAASxW,MAAM62B,QAG/C50B,EAAO5C,IAAM/E,EAAQ+E,IAAM0D,EAAU1D,IAEP,SAA9B1J,KAAKuhC,qBACLj1B,EAAO7C,KAAOq4B,WAAW9hC,KAAK6gB,SAASxW,MAAMZ,MAEV,UAA9BzJ,KAAKuhC,qBACVj1B,EAAO60B,MAAQW,WAAW9hC,KAAK6gB,SAASxW,MAAM82B,OAG9C70B,EAAO7C,KAAO9E,EAAQ8E,KAAO2D,EAAU3D,KAE3C6C,EAAO3C,MAAQhF,EAAQgF,MACvB2C,EAAO1C,OAASjF,EAAQiF,OACjB0C,CACX,CACAy1B,SAAAA,CAAUC,EAAYr+B,QAAO,IAAPA,IAAAA,EAAU,CAAE6xB,YAAY,IAC1C,MAAMyM,EAAO,IAAI37B,EACX47B,EAAQA,KACV,IAAItrB,EAAS,KACb,MAAM3M,EAAUD,IAChBi4B,EAAKp/B,MAAQ,IAAIgD,EAAoB,CACjChE,QAASA,KACLoI,EAAQM,SAAS,GAEtB7F,EAA4BsE,OAAQ,eAAgBzE,IACnD,MAAMi9B,EAAgBxhC,KAAK2D,QAAQyJ,UAAUvD,wBACvC6G,EAAInM,EAAEkQ,QAAU+sB,EAAc/3B,KAC9Bif,EAAInkB,EAAEmQ,QAAU8sB,EAAc93B,IACpChC,EAAY1H,KAAK6gB,SAAU,gCAAgC,GAC3D,MAAM4gB,EAAczhC,KAAK6gB,SAAShX,wBACnB,OAAX+M,IACAA,EAAS,CACLlG,EAAGnM,EAAEkQ,QAAUgtB,EAAYh4B,KAC3Bif,EAAGnkB,EAAEmQ,QAAU+sB,EAAY/3B,MAGnC,MAAMg4B,EAAU11B,KAAKD,IAAI,EAAG/L,KAAK2hC,gBAAgBF,EAAY93B,QACvDi4B,EAAU51B,KAAKD,IAAI,EAAG/L,KAAK6hC,iBAAiBJ,EAAY73B,SACxDF,EAAMmC,EAAM6c,EAAI9R,EAAO8R,GAAIkZ,EAAS51B,KAAKD,IAAI,EAAGy1B,EAAc53B,OAAS63B,EAAY73B,OAASg4B,IAC5FV,EAASr1B,EAAM+K,EAAO8R,EACxBA,EACA8Y,EAAc53B,OACd63B,EAAY73B,QAASg4B,EAAS51B,KAAKD,IAAI,EAAGy1B,EAAc53B,OAAS63B,EAAY73B,OAASg4B,IACpFn4B,EAAOoC,EAAM6E,EAAIkG,EAAOlG,GAAIgxB,EAAS11B,KAAKD,IAAI,EAAGy1B,EAAc73B,MAAQ83B,EAAY93B,MAAQ+3B,IAC3FP,EAAQt1B,EAAM+K,EAAOlG,EAAIA,EAAI8wB,EAAc73B,MAAQ83B,EAAY93B,OAAQ+3B,EAAS11B,KAAKD,IAAI,EAAGy1B,EAAc73B,MAAQ83B,EAAY93B,MAAQ+3B,IACtIL,EAAS,CAAC,EAEZ33B,GAAOw3B,EACPG,EAAO33B,IAAMA,EAGb23B,EAAOH,OAASA,EAGhBz3B,GAAQ03B,EACRE,EAAO53B,KAAOA,EAGd43B,EAAOF,MAAQA,EAEnBnhC,KAAKihC,UAAUI,EAAO,IACtB38B,EAA4BsE,OAAQ,aAAa,KACjDtB,EAAY1H,KAAK6gB,SAAU,gCAAgC,GAC3DohB,EAAKpgC,UACL7B,KAAK8gC,gBAAgBx8B,MAAM,IAC5B,EAEPtE,KAAKkG,eAAe+7B,EAAMl9B,EAAsBi9B,EAAY,eAAgBl+B,IACpEA,EAAM5B,iBACN4B,EAAM3B,iBAKNmH,EAAsBxF,IAG1Bo+B,GAAO,IACPn9B,EAAsB/E,KAAK2D,QAAQrE,QAAS,eAAgBwE,IACxDA,EAAM5B,kBAKNoH,EAAsBxF,IAGtBA,EAAM0tB,UACN0Q,GACJ,IACAn9B,EAAsB/E,KAAK2D,QAAQrE,QAAS,eAAe,KAC3DghC,GAAkBr8B,KAAKjE,KAAK6gB,SAAS,IACtC,IACCld,EAAQ6xB,YACR0M,GAER,CACAlB,WAAAA,CAAY3kB,GACR,MAAM8lB,EAAsB/5B,SAAS6L,cAAc,OACnDkuB,EAAoBlkC,UAAa,oBAAmBoe,IACpDrc,KAAK6gB,SAAStO,YAAY4vB,GAC1B,MAAMF,EAAO,IAAI37B,EACjBtG,KAAKkG,eAAe+7B,EAAMl9B,EAAsBo9B,EAAqB,eAAgB59B,IACjFA,EAAEpC,iBACF,IAAIigC,EAAgB,KACpB,MAAMn4B,EAAUD,IAChBi4B,EAAKp/B,MAAQ,IAAIgD,EAAoBnB,EAA4BsE,OAAQ,eAAgBzE,IACrF,MAAMi9B,EAAgBxhC,KAAK2D,QAAQyJ,UAAUvD,wBACvC43B,EAAczhC,KAAK6gB,SAAShX,wBAC5B6e,EAAInkB,EAAEmQ,QAAU8sB,EAAc93B,IAC9BgH,EAAInM,EAAEkQ,QAAU+sB,EAAc/3B,KAUpC,IAAIC,EACAw3B,EACAt3B,EACAH,EACA03B,EACAx3B,EAdkB,OAAlBy4B,IAEAA,EAAgB,CACZC,UAAW3Z,EACX4Z,eAAgBb,EAAY73B,OAC5B24B,UAAW7xB,EACX8xB,cAAef,EAAY93B,QASnC,MAAM84B,EAAUA,KACZ/4B,EAAMmC,EAAM6c,GAAI7Z,OAAO6zB,UAAWN,EAAcC,UAC5CD,EAAcE,eACdd,EAAc53B,OACZ5J,KAAK6hC,iBAAiBL,EAAc53B,QACpCoC,KAAKD,IAAI,EAAGq2B,EAAcC,UACxBD,EAAcE,eACd3B,GAAQgC,iBAChB/4B,EACIw4B,EAAcC,UACVD,EAAcE,eACd54B,EACRw3B,EAASM,EAAc53B,OAASF,EAAME,CAAM,EAE1Cg5B,EAAaA,KACfl5B,EACI04B,EAAcC,UACVD,EAAcE,eACtB14B,EAASiC,EAAM6c,EAAIhf,EAAKA,EAAM,GAEO,iBAD1B1J,KAAK2D,QACPk9B,yBACFn3B,EACC1J,KAAK2D,QAAQk9B,wBACfF,GAAQgC,eAAgB9zB,OAAO6zB,WACrCxB,EAASM,EAAc53B,OAASF,EAAME,CAAM,EAE1Ci5B,EAAWA,KACbp5B,EAAOoC,EAAM6E,GAAI7B,OAAO6zB,UAAWN,EAAcG,UAC7CH,EAAcI,cACdhB,EAAc73B,MACZ3J,KAAK2hC,gBAAgBH,EAAc73B,OACnCqC,KAAKD,IAAI,EAAGq2B,EAAcG,UACxBH,EAAcI,cACd7B,GAAQmC,gBAChBn5B,EACIy4B,EAAcG,UACVH,EAAcI,cACd/4B,EACR03B,EAAQK,EAAc73B,MAAQF,EAAOE,CAAK,EAExCo5B,EAAYA,KACdt5B,EACI24B,EAAcG,UACVH,EAAcI,cACtB74B,EAAQkC,EAAM6E,EAAIjH,EAAMA,EAAO,GAEK,iBADzBzJ,KAAK2D,QACPi9B,wBACFn3B,EACCzJ,KAAK2D,QAAQi9B,uBACfD,GAAQmC,cAAej0B,OAAO6zB,WACpCvB,EAAQK,EAAc73B,MAAQF,EAAOE,CAAK,EAE9C,OAAQ0S,GACJ,IAAK,MACDomB,IACA,MACJ,IAAK,SACDG,IACA,MACJ,IAAK,OACDC,IACA,MACJ,IAAK,QACDE,IACA,MACJ,IAAK,UACDN,IACAI,IACA,MACJ,IAAK,WACDJ,IACAM,IACA,MACJ,IAAK,aACDH,IACAC,IACA,MACJ,IAAK,cACDD,IACAG,IAGR,MAAM1B,EAAS,CAAC,EAEZ33B,GAAOw3B,EACPG,EAAO33B,IAAMA,EAGb23B,EAAOH,OAASA,EAGhBz3B,GAAQ03B,EACRE,EAAO53B,KAAOA,EAGd43B,EAAOF,MAAQA,EAEnBE,EAAOz3B,OAASA,EAChBy3B,EAAO13B,MAAQA,EACf3J,KAAKihC,UAAUI,EAAO,IACtB,CACAx/B,QAASA,KACLoI,EAAQM,SAAS,GAEtB7F,EAA4BsE,OAAQ,aAAa,KAChDi5B,EAAKpgC,UACL7B,KAAK8gC,gBAAgBx8B,MAAM,IAC5B,IAEX,CACAq9B,eAAAA,CAAgBh4B,GACZ,MAAmD,iBAAxC3J,KAAK2D,QAAQi9B,uBACbj3B,EAAQ3J,KAAK2D,QAAQi9B,uBAEzB,CACX,CACAiB,gBAAAA,CAAiBj4B,GACb,MAAoD,iBAAzC5J,KAAK2D,QAAQk9B,wBACbj3B,EAAS5J,KAAK2D,QAAQk9B,wBAE1B,CACX,CACAh/B,OAAAA,GACIy+B,GAAkBE,QAAQxgC,KAAK6gB,UAC/B7gB,KAAK6gB,SAASrZ,SACdzH,MAAM8B,SACV,EAEJ8+B,GAAQgC,eAAiB,GACzBhC,GAAQmC,cAAgB,GC5YjB,MAAME,WAAmCn9B,EAC5ClG,WAAAA,CAAY6jB,EAAOyf,GACfljC,QACAC,KAAKwjB,MAAQA,EACbxjB,KAAKijC,QAAUA,EACfjjC,KAAKkG,eAAe+8B,EACxB,CACA5rB,QAAAA,CAASgqB,GACLrhC,KAAKijC,QAAQhC,UAAUI,EAC3B,ECVG,MAAM6B,GAAuC,IACvCC,GAA0C,IAA1CA,GAAoD,IAApDA,GAAgE,IAAhEA,GAA6E,ICOnF,MAAMC,WAA+Bv9B,EACxClG,WAAAA,CAAYgF,EAASirB,GACjB7vB,QACAC,KAAK2E,QAAUA,EACf3E,KAAK4vB,SAAWA,EAChB5vB,KAAKZ,IAAM,CAAC,EACZY,KAAK6D,WAAY,EACjB7D,KAAKkG,eAAe/E,EAAWwE,MAAK,KAChC,IAAK,MAAM9C,KAASqV,OAAO2J,OAAO7hB,KAAKZ,KACnCyD,EAAM2D,WAAW3E,UACjBgB,EAAM29B,QAAQ3+B,UAElB7B,KAAK6D,WAAY,CAAI,IAE7B,CACAouB,OAAAA,CAAQpP,GACJ,GAAI7iB,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAK,CACxB,MAAM,WAAE6H,EAAU,QAAEg6B,GAAYxgC,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAInD,OAHA6H,EAAW3E,UACX2+B,EAAQ3+B,iBACD7B,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,KACnB,CACX,CACA,OAAO,CACX,CACAuzB,MAAAA,CAAOvuB,GACH,MAAM,MAAEkf,EAAK,mBAAEsP,GAAuBxuB,EACtC,IAAK3D,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAK,CACzB,MAAMgG,EAjClB,WACI,MAAMA,EAAUyD,SAAS6L,cAAc,OAEvC,OADAtP,EAAQypB,UAAY,EACbzpB,CACX,CA6B4B0+B,GAChB1+B,EAAQ1G,UAAY,oBACpB+B,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAM,CACrBkkB,QACArc,WAAYrF,EAAWuE,KACvB86B,QAASr/B,EAAWuE,KACpBf,UAER,CACA,MAAM2+B,EAAiBtjC,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAIgG,QAC1Cke,EAAMhW,KAAKvN,QAAQqF,QAAQgX,gBAAkB2nB,GAC7CA,EAAe/wB,YAAYsQ,EAAMhW,KAAKvN,QAAQqF,SAE9C2+B,EAAe3nB,gBAAkB3b,KAAK2E,SACtC3E,KAAK2E,QAAQ4N,YAAY+wB,GAE7B,MAAMrzB,EAASA,KAEX,MAAM2M,EAAMrT,EAAuB4oB,EAAmBxtB,SAChD4+B,EAAOh6B,EAAuBvJ,KAAK2E,SACzC2+B,EAAej5B,MAAMZ,KAAUmT,EAAInT,KAAO85B,EAAK95B,KAAlB,KAC7B65B,EAAej5B,MAAMX,IAASkT,EAAIlT,IAAM65B,EAAK75B,IAAjB,KAC5B45B,EAAej5B,MAAMV,MAAS,GAAEiT,EAAIjT,UACpC25B,EAAej5B,MAAMT,OAAU,GAAEgT,EAAIhT,WACrClC,EAAY47B,EAAgB,0BAA6D,aAAlCzgB,EAAMW,MAAM2K,IAAI/R,SAASxX,KAAoB,EAElG4+B,EAAoBA,KAClB3gB,EAAMsL,IAAIrL,WACV7S,IAEJqzB,EAAej5B,MAAMilB,QAAUzM,EAAMsL,IAAIrL,UAAY,GAAK,MAAM,EAE9D2gB,EAAqB,IAAIn9B,EACzBo9B,EAAuBA,KACO,aAA5B7gB,EAAMsL,IAAI/R,SAASxX,KACnBJ,gBAAe,KACX,MAAMm/B,EAAgB3jC,KAAK4vB,SAASgU,eAAe7N,MAAMvS,GAAUA,EAAMA,QAAUX,EAAMsL,IAAI3K,QAC7F,IAAKmgB,EACD,OAEJ,MAAMh/B,EAAUg/B,EAAcV,QAAQt+B,QAChCgoB,EAASA,KACX,MAAMkX,EAAQh1B,OAAOlK,EAAQm/B,aAAa,eAC1CR,EAAej5B,MAAMq2B,OAAU,yCAAgD,EAARmD,EAAY,IAAI,EAErFl9B,EAAW,IAAIo9B,kBAAiB,KAClCpX,GAAQ,IAEZ8W,EAAmB5gC,MAAQ1B,EAAWwE,MAAK,IAAMgB,EAASO,eAC1DP,EAASK,QAAQrC,EAAS,CACtBq/B,gBAAiB,CAAC,cAClBC,YAAY,IAEhBtX,GAAQ,IAIZ2W,EAAej5B,MAAMq2B,OAAS,EAClC,EAEEl6B,EAAa,IAAIX,EAAoB49B,EAQ3C,IAAI3c,GAAoBwc,EAAgB,CACpCjc,UAAY9iB,IACR4tB,EAAmBZ,WAAWnJ,IAAIf,UAAU9iB,EAAE,EAElD2iB,YAAc3iB,IACV4tB,EAAmBZ,WAAWnJ,IAAIlB,YAAY3iB,EAAE,EAEpD6iB,YAAc7iB,IACV4tB,EAAmBZ,WAAWnJ,IAAIhB,YAAY7iB,EAAE,EAEpD+iB,OAAS/iB,IACL4tB,EAAmBZ,WAAWnJ,IAAId,OAAO/iB,EAAE,EAE/C4iB,WAAa5iB,IACT4tB,EAAmBZ,WAAWnJ,IAAIjB,WAAW5iB,EAAE,IAEnDse,EAAMsL,IAAIhU,uBAAsB,KAMhCqpB,GAAmB,IACnB3gB,EAAMsL,IAAItC,uBAAsB,KAC3BhJ,EAAMsL,IAAIrL,WAGf7S,GAAQ,IACR4S,EAAMsL,IAAIsO,qBAAoB,KAC9BiH,GAAsB,KAyB1B,OAvBA1jC,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAI6hC,QAAUr/B,EAAWwE,MAAK,KAC7C,IAAIjD,EACAmgB,EAAMhW,KAAKvN,QAAQqF,QAAQgX,gBAAkB2nB,GAC7CA,EAAelvB,YAAYyO,EAAMhW,KAAKvN,QAAQqF,SAEV,QAAvCjC,EAAK4gC,EAAe3nB,qBAAkC,IAAPjZ,GAAyBA,EAAG0R,YAAYkvB,EAAe,IAE3GI,IACAl/B,gBAAe,KACPxE,KAAK8F,YAQT09B,GAAmB,IAGvBxjC,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAI6H,WAAW3E,UAElC7B,KAAKZ,IAAIyjB,EAAMsL,IAAIxvB,IAAI6H,WAAaA,EAC7B88B,CACX,EC/JJ,IAAIY,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU7hC,GAAS,IAAM8hC,EAAKL,EAAUp4B,KAAKrJ,GAAS,CAAE,MAAO0B,GAAKkgC,EAAOlgC,EAAI,CAAE,CAC1F,SAASqgC,EAAS/hC,GAAS,IAAM8hC,EAAKL,EAAiB,MAAEzhC,GAAS,CAAE,MAAO0B,GAAKkgC,EAAOlgC,EAAI,CAAE,CAC7F,SAASogC,EAAKr4B,GAJlB,IAAezJ,EAIayJ,EAAOu4B,KAAOL,EAAQl4B,EAAOzJ,QAJ1CA,EAIyDyJ,EAAOzJ,MAJhDA,aAAiBwhC,EAAIxhC,EAAQ,IAAIwhC,GAAE,SAAUG,GAAWA,EAAQ3hC,EAAQ,KAIjBiiC,KAAKJ,EAAWE,EAAW,CAC7GD,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKl4B,OAClE,GACJ,EAIO,MAAM84B,WAAqBn/B,EAC9B,UAAImD,GACA,IAAItG,EAAI8M,EACR,OAAoF,QAA5EA,EAA6B,QAAvB9M,EAAK1C,KAAKilC,eAA4B,IAAPviC,OAAgB,EAASA,EAAGG,aAA0B,IAAP2M,EAAgBA,EAAK,IACrH,CACA7P,WAAAA,CAAYqnB,EAAQ/oB,EAAW0F,GAC3B5D,QACAC,KAAKgnB,OAASA,EACdhnB,KAAK/B,UAAYA,EACjB+B,KAAK2D,QAAUA,EACf3D,KAAKklC,aAAe,IAAI9hC,EACxBpD,KAAKmlC,YAAcnlC,KAAKklC,aAAaphC,MACrC9D,KAAKolC,YAAc,IAAIhiC,EACvBpD,KAAKqlC,WAAarlC,KAAKolC,YAAYthC,MACnC9D,KAAKilC,QAAU,KACfjlC,KAAKkG,eAAelG,KAAKklC,aAAcllC,KAAKolC,YAAa,CACrDvjC,QAASA,KACL7B,KAAK08B,OAAO,GAGxB,CACA4I,UAAAA,GACI,IAAKtlC,KAAKilC,QACN,OAAO,KAEX,MAAMx7B,EAAOzJ,KAAKilC,QAAQpiC,MAAM0iC,QAIhC,MAAO,CAAE77B,IAHG1J,KAAKilC,QAAQpiC,MAAM2iC,QAGjB/7B,OAAME,MAFN3J,KAAKilC,QAAQpiC,MAAM4iC,WAEN77B,OADZ5J,KAAKilC,QAAQpiC,MAAM6iC,YAEtC,CACAhJ,KAAAA,GACI,IAAIh6B,EAAI8M,EACJxP,KAAKilC,UACLjlC,KAAKklC,aAAa5gC,OACyB,QAA1CkL,GAAM9M,EAAK1C,KAAK2D,SAASwhC,mBAAgC,IAAP31B,GAAyBA,EAAGrH,KAAKzF,EAAI,CACpF/D,GAAIqB,KAAKgnB,OACThe,OAAQhJ,KAAKilC,QAAQpiC,QAEzB7C,KAAKilC,QAAQz+B,WAAW3E,UACxB7B,KAAKilC,QAAU,KACfjlC,KAAKolC,YAAY9gC,OAEzB,CACAqhC,IAAAA,GACI,IAAIjjC,EAAI8M,EACR,OAAO00B,GAAUlkC,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAKilC,QACL,MAAM,IAAItiC,MAAM,6CAEpB,MAAMijC,EAAO,GAAE5lC,KAAK2D,QAAQiiC,MACtBC,EAAW3tB,OAAO4tB,QAAQ,CAC5Bp8B,IAAK1J,KAAK2D,QAAQ+F,IAClBD,KAAMzJ,KAAK2D,QAAQ8F,KACnBE,MAAO3J,KAAK2D,QAAQgG,MACpBC,OAAQ5J,KAAK2D,QAAQiG,SAEpBxK,KAAIJ,IAAA,IAAE4vB,EAAK/rB,GAAM7D,EAAA,MAAM,GAAE4vB,KAAO/rB,GAAO,IACvCkjC,KAAK,KAIJC,EAAiBh9B,OAAO28B,KAAKC,EAAK5lC,KAAKgnB,OAAQ6e,GACrD,IAAKG,EAID,OAAO,KAEX,MAAMx/B,EAAa,IAAIX,EACvB7F,KAAKilC,QAAU,CAAEpiC,MAAOmjC,EAAgBx/B,cACxCA,EAAWN,eAAe/E,EAAWwE,MAAK,KACtCqgC,EAAetJ,OAAO,IACtBh4B,EAA4BsE,OAAQ,gBAAgB,KAOpDhJ,KAAK08B,OAAO,KAEhB,MAAMtvB,EAAYpN,KAAKimC,8BAQvB,OAPIjmC,KAAK/B,WACLmP,EAAU9F,UAAUjD,IAAIrE,KAAK/B,WAEQ,QAAxCuR,GAAM9M,EAAK1C,KAAK2D,SAASuiC,iBAA8B,IAAP12B,GAAyBA,EAAGrH,KAAKzF,EAAI,CAClF/D,GAAIqB,KAAKgnB,OACThe,OAAQg9B,IAEL,IAAIzB,SAAQ,CAACC,EAASC,KACzBuB,EAAenhC,iBAAiB,UAAWN,QAI3CyhC,EAAenhC,iBAAiB,QAAQ,KAIpC,IACI,MAAMshC,EAAmBH,EAAe59B,SACxC+9B,EAAiBxpC,MAAQyL,SAASzL,MAClCwpC,EAAiBlW,KAAK1d,YAAYnF,G/C0BnD,SAAmBhF,EAAUg+B,GAChC,MAAMC,EAAc7kC,MAAMmE,KAAKygC,GAC/B,IAAK,MAAME,KAAcD,EAAa,CAClC,GAAIC,EAAWC,KAAM,CACjB,MAAMC,EAAOp+B,EAAS6L,cAAc,QACpCuyB,EAAKD,KAAOD,EAAWC,KACvBC,EAAK5hC,KAAO0hC,EAAW1hC,KACvB4hC,EAAKC,IAAM,aACXr+B,EAASs+B,KAAKn0B,YAAYi0B,EAC9B,CACA,IAAIG,EAAW,GACf,IACQL,EAAWM,WACXD,EAAWnlC,MAAMmE,KAAK2gC,EAAWM,UAAUxnC,KAAKynC,GAASA,EAAKC,UAEtE,CACA,MAAOC,GACH,CAEJ,IAAK,MAAMF,KAAQF,EAAU,CACzB,MAAMt8B,EAAQjC,EAAS6L,cAAc,SACrC5J,EAAMkI,YAAYnK,EAAS4+B,eAAeH,IAC1Cz+B,EAASs+B,KAAKn0B,YAAYlI,EAC9B,CACJ,CACJ,C+ClDwB48B,CAAUd,EAAkBn9B,OAAOZ,SAASi+B,aAK5C3hC,EAA4BshC,EAAgB,gBAAgB,KAIxDhmC,KAAK08B,OAAO,IAEhB8H,EAAQp3B,EACZ,CACA,MAAO25B,GAEHtC,EAAOsC,EACX,IACF,GAEV,GACJ,CACAd,2BAAAA,GACI,MAAMpqB,EAAKzT,SAAS6L,cAAc,OAQlC,OAPA4H,EAAGvU,UAAUjD,IAAI,oBACjBwX,EAAGld,GAAK,mBACRkd,EAAGxR,MAAMgN,SAAW,WACpBwE,EAAGxR,MAAMV,MAAQ,OACjBkS,EAAGxR,MAAMT,OAAS,OAClBiS,EAAGxR,MAAMX,IAAM,MACfmS,EAAGxR,MAAMZ,KAAO,MACToS,CACX,ECjJG,MAAMqrB,WAA+BrhC,EACxClG,WAAAA,CAAYiwB,GACR7vB,QACAC,KAAK4vB,SAAWA,EAChB5vB,KAAKyuB,MACT,CACAA,IAAAA,GACI,MAAMtK,EAAS,IAAI+D,IACbtG,EAAS,IAAIsG,IACnBloB,KAAKkG,eAAelG,KAAK4vB,SAAS/K,eAAehC,IAC7C,GAAIsB,EAAOT,IAAIb,EAAMsL,IAAIxvB,IACrB,MAAM,IAAIgE,MAAO,sEAAqEkgB,EAAMsL,IAAIxvB,+BAGhGwlB,EAAO9f,IAAIwe,EAAMsL,IAAIxvB,GACzB,IACAqB,KAAK4vB,SAAS7K,kBAAkBlC,IAChC,IAAKsB,EAAOT,IAAIb,EAAMsL,IAAIxvB,IACtB,MAAM,IAAIgE,MAAO,yEAAwEkgB,EAAMsL,IAAIxvB,gCAGnGwlB,EAAO1f,OAAOoe,EAAMsL,IAAIxvB,GAC5B,IACAqB,KAAK4vB,SAAS9K,eAAetB,IAC7B,GAAI5B,EAAO8B,IAAIF,EAAM2K,IAAIxvB,IACrB,MAAM,IAAIgE,MAAO,sEAAqE6gB,EAAM2K,IAAIxvB,+BAGhGijB,EAAOvd,IAAImf,EAAM2K,IAAIxvB,GACzB,IACAqB,KAAK4vB,SAAS5K,kBAAkBxB,IAChC,IAAK5B,EAAO8B,IAAIF,EAAM2K,IAAIxvB,IACtB,MAAM,IAAIgE,MAAO,yEAAwE6gB,EAAM2K,IAAIxvB,gCAGnGijB,EAAOnd,OAAO+e,EAAM2K,IAAIxvB,GAC5B,IAER,ECfJ,MAAMwoC,GAA6B,CAC/B3c,eAAgB,CAAE5lB,KAAM,SAAU/B,MAAO,IACzCqC,KAAM,CAAEN,KAAM,SAAU/B,MAAO,KAEnC,SAASukC,GAA2BzjC,GAChC,MAAMiiB,EAAcjiB,EAAQgC,KAAKigB,YAClB,IAAIjiB,EAAQgC,KAAKwe,QAAQ/kB,KAAKyjB,IACzC,MAAMwkB,EAAe1jC,EAAQgC,KAAK6jB,MAAMnF,YAAYxB,GAEpD,OADAlf,EAAQgC,KAAK6jB,MAAMwI,gBAAgBC,QAAQpP,GACpCwkB,CAAY,IAEhBvlC,SAAS+gB,IACZlf,EAAQ0I,GAAGmd,MAAM4I,UAAUvP,EAAO,CAC9B4W,cAAe7T,IAAgB/C,EAC/B+W,oBAAoB,GACtB,GAEV,CACO,MAAM0N,WAA0B7lB,GACnC,eAAInT,GACA,OAAOtO,KAAK8hB,SAASxT,WACzB,CACA,eAAI+W,GACA,OAAOrlB,KAAKmkB,OAAO5iB,MACvB,CACA,UAAI4iB,GACA,OAAOnkB,KAAK4hB,OAAO2lB,SAAS/jB,GAAUA,EAAMW,QAChD,CACA,WAAIxgB,GACA,OAAO3D,KAAKwnC,QAChB,CACA,eAAI5hB,GACA,MAAM7D,EAAc/hB,KAAK+hB,YACzB,GAAKA,EAGL,OAAOA,EAAY6D,WACvB,CACA,YAAImM,GACA,IAAIrvB,EACJ,OAA+C,QAAvCA,EAAK1C,KAAK2D,QAAQ4yB,uBAAoC,IAAP7zB,EAAgBA,EAAK,iBAChF,CACA,OAAIyrB,GACA,OAAOnuB,KAAKu4B,IAChB,CACA,OAAIjT,GACA,OAAOtlB,KAAK8hB,SAASxS,MACzB,CACA,kBAAIs0B,GACA,OAAO5jC,KAAKynC,eAChB,CACA9nC,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,MAAMqN,EAAW,CACb8E,oBAAoB,EACpB5D,YAAaf,EAAYkB,WACzB+D,OAAQ7O,EAAQgd,YACV,CAAE5N,gBAAiB,oBACnBtS,EACNwX,oBAAqBtU,EAAQsU,oBAC7BiF,OAAQvZ,EAAQuZ,OAChB5N,OAAQ3L,EAAQ2hB,IAChBrnB,UAAW0F,EAAQ1F,YAEvB+B,KAAK0nC,YAAcz7B,IACnBjM,KAAK2nC,cAAgB,IAAIzH,GAA4BlgC,MACrDA,KAAKm3B,UAAY,KACjBn3B,KAAK4nC,iBAAmB,IAAIxkC,EAC5BpD,KAAK2lB,gBAAkB3lB,KAAK4nC,iBAAiB9jC,MAC7C9D,KAAK6nC,iBAAmB,IAAIzkC,EAC5BpD,KAAK0lB,gBAAkB1lB,KAAK6nC,iBAAiB/jC,MAC7C9D,KAAK0wB,WAAa,IAAIttB,EACtBpD,KAAK0kB,UAAY1kB,KAAK0wB,WAAW5sB,MACjC9D,KAAK+3B,YAAc,IAAI30B,EACvBpD,KAAKwlB,WAAaxlB,KAAK+3B,YAAYj0B,MACnC9D,KAAKgoB,mBAAqB,IAAI5kB,EAC9BpD,KAAKylB,kBAAoBzlB,KAAKgoB,mBAAmBlkB,MACjD9D,KAAK2wB,0BAA4B,IAAIvtB,EACrCpD,KAAK2kB,yBAA2B3kB,KAAK2wB,0BAA0B7sB,MAC/D9D,KAAKq4B,kBAAoB,IAAIj1B,EAC7BpD,KAAK+kB,iBAAmB/kB,KAAKq4B,kBAAkBv0B,MAC/C9D,KAAKg4B,eAAiB,IAAI50B,EAC1BpD,KAAK6kB,cAAgB7kB,KAAKg4B,eAAel0B,MACzC9D,KAAK8nC,qBAAuB,IAAI1kC,EAChCpD,KAAKokB,oBAAsBpkB,KAAK8nC,qBAAqBhkC,MACrD9D,KAAKs4B,wBAA0B,IAAIl1B,EACnCpD,KAAKilB,uBAAyBjlB,KAAKs4B,wBAAwBx0B,MAC3D9D,KAAK+nC,gBAAkB,IAAI3kC,EAC3BpD,KAAKulB,eAAiBvlB,KAAK+nC,gBAAgBjkC,MAC3C9D,KAAKgoC,2BAA6B,IAAI5kC,EACtCpD,KAAKkmB,0BAA4BlmB,KAAKgoC,2BAA2BlkC,MACjE9D,KAAKynC,gBAAkB,GACvBznC,KAAKioC,cAAgB,GACrBjoC,KAAKkoC,kBAAoB,IAAI9kC,EAC7BpD,KAAKglB,iBAAmBhlB,KAAKkoC,kBAAkBpkC,MAC/C9D,KAAKmoC,eAAiB,IAAI/kC,EAC1BpD,KAAK8kB,cAAgB9kB,KAAKmoC,eAAerkC,MACzC9D,KAAKg+B,wBAA0B,IAAI56B,EACnCpD,KAAKklB,uBAAyBllB,KAAKg+B,wBAAwBl6B,MAC3D9D,KAAKooC,SAAU,EACfpoC,KAAK44B,uBAAyB,IAAIwK,GAAuBpjC,KAAK8hB,SAASnd,QAAS3E,MAChF0H,EAAY1H,KAAK8hB,SAASnd,QAAS,eAAe,GAClD+C,EAAY1H,KAAK2E,QAAS,aAAchB,EAAQ6yB,OAC5C7yB,EAAQ6yB,OACRx2B,KAAKkG,eAAe,IAAIghC,GAAuBlnC,OAEnDA,KAAKkG,eAAelG,KAAK44B,uBAAwB54B,KAAK4nC,iBAAkB5nC,KAAK6nC,iBAAkB7nC,KAAKgoB,mBAAoBhoB,KAAKs4B,wBAAyBt4B,KAAKg4B,eAAgBh4B,KAAKq4B,kBAAmBr4B,KAAK8nC,qBAAsB9nC,KAAK0wB,WAAY1wB,KAAK+3B,YAAa/3B,KAAK+nC,gBAAiB/nC,KAAKmoC,eAAgBnoC,KAAKkoC,kBAAmBloC,KAAKg+B,wBAAyBh+B,KAAK2wB,0BAA2B3wB,KAAKgoC,2BAA4BhoC,KAAK4iB,yCAAwC,KAC5c5iB,KAAKqoC,iBAAiB,IACtBroC,KAAKoiB,UAAUte,IACV9D,KAAKooC,SACNpoC,KAAKmoC,eAAe7jC,KAAKR,EAC7B,IACA9D,KAAKkiB,aAAape,IACb9D,KAAKooC,SACNpoC,KAAKkoC,kBAAkB5jC,KAAKR,EAChC,IACA9D,KAAKwiB,mBAAmB1e,IACnB9D,KAAKooC,SACNpoC,KAAKg+B,wBAAwB15B,KAAKR,EACtC,IACA9D,KAAKsiB,sBAAsBxe,IAC3B9D,KAAKgoC,2BAA2B1jC,KAAK,CACjCkf,MAAO1f,EAAM+e,MACb1E,YAAara,EAAMqa,aACrB,IACFjd,EAAME,IAAIpB,KAAKoiB,SAAUpiB,KAAKkiB,YAA9BhhB,EAA2C,KAC3ClB,KAAKqoC,iBAAiB,IACtBnnC,EAAME,IAAIpB,KAAK6kB,cAAe7kB,KAAK+kB,iBAAkB/kB,KAAK8kB,cAAe9kB,KAAKkiB,YAAaliB,KAAKulB,eAAgBvlB,KAAKilB,uBAArH/jB,EAA6I,KAC7IlB,KAAKyiB,yBAAyBne,MAAM,IACpCnD,EAAWwE,MAAK,KAEhB,IAAK,MAAM6d,IAAS,IAAIxjB,KAAKynC,iBACzBjkB,EAAM3hB,UAGV,IAAK,MAAM2hB,IAAS,IAAIxjB,KAAKioC,eACzBzkB,EAAMhd,WAAW3E,SACrB,KAEJ7B,KAAKwnC,SAAW7jC,EAChB3D,KAAKsoC,gBAAkB,IAAIzgB,GAAW7nB,KAAK2E,QAAS,CAChDmkB,kBAAmBA,CAAChlB,EAAOuT,KACvB,MAAM3W,EAAOG,IACb,GAAIH,EACA,OAAIA,EAAKd,SAAWI,KAAKrB,KAGR,WAAb0Y,GAGgC,IAAzBrX,KAAK8hB,SAASvgB,QAI7B,GAAiB,WAAb8V,GAAkD,IAAzBrX,KAAK8hB,SAASvgB,OAMvC,OAAO,EAEX,MAAMyvB,EAAa,IAAImF,GAA+BryB,EAAO,OAAQuT,EAAUxW,GAE/E,OADAb,KAAK2wB,0BAA0BrsB,KAAK0sB,GAC7BA,EAAW1uB,UAAU,EAEhC6lB,oBAAqB,CAAC,MAAO,SAAU,OAAQ,QAAS,UACxDsB,aAAuD,QAAxC/mB,EAAK1C,KAAK2D,QAAQ8yB,wBAAqC,IAAP/zB,EAAgBA,EAAKykC,KAExFnnC,KAAKkG,eAAelG,KAAKsoC,gBAAiBtoC,KAAKsoC,gBAAgB7iB,mBAAmB3hB,IAC1E9D,KAAK8hB,SAASvgB,OAAS,GAAwB,WAAnBuC,EAAMuT,UAItCrX,KAAKgoB,mBAAmB1jB,KAAK,IAAI6wB,GAA6BrxB,EAAO,CACjEsxB,KAAM,OACNvS,WAAOpiB,EACP0tB,IAAKnuB,KAAKu4B,KACV/U,WAAO/iB,EACPE,QAASE,IACV,IACHb,KAAKsoC,gBAAgBhhB,QAAQxjB,IAC7B,IAAIpB,EACJ,MAAMq4B,EAAgB,IAAInE,GAAsB,CAC5CpP,YAAa1jB,EAAM0jB,YACnBnQ,SAAUvT,EAAMuT,SAChBwL,WAAOpiB,EACP0tB,IAAKnuB,KAAKu4B,KACV/U,WAAO/iB,EACPE,QAASE,EACTu0B,KAAM,SAGV,GADAp1B,KAAK+3B,YAAYzzB,KAAKy2B,GAClBA,EAAc74B,iBACd,OAEJ,MAAMxB,EAAOG,IACTH,EACAV,KAAK68B,iBAAiB,CAClBl3B,KAAM,CACF9F,QAASa,EAAKb,QACdC,QAAiC,QAAvB4C,EAAKhC,EAAKZ,eAA4B,IAAP4C,EAAgBA,OAAKjC,GAElE4L,GAAI,CACAmX,MAAOxjB,KAAKuoC,cAAczkC,EAAMuT,UAChCA,SAAU,YAKlBrX,KAAK0wB,WAAWpsB,KAAK,IAAIqyB,GAAqB,CAC1CnP,YAAa1jB,EAAM0jB,YACnBnQ,SAAUvT,EAAMuT,SAChBwL,WAAOpiB,EACP0tB,IAAKnuB,KAAKu4B,KACV/U,WAAO/iB,EACPE,QAASE,IAEjB,IACAb,KAAKsoC,iBACTtoC,KAAKu4B,KAAO,IAAInT,GAAYplB,MAC5BA,KAAKqoC,iBACT,CACAh7B,UAAAA,CAAWwV,EAAOlW,GACd,OAAQkW,EAAMsL,IAAI/R,SAASxX,MACvB,IAAK,OACD7E,MAAMsN,WAAWwV,EAAOlW,GACxB,MACJ,IAAK,WAAY,CACb,MAAMiC,EAAO5O,KAAK4jC,eAAe7N,MAAM4N,GAAkBA,EAAcngB,QAAUX,IAC7EjU,IACAA,EAAKq0B,QAAQ51B,WAAWV,GACxBkW,EAAMsL,IAAIjU,uBAAuB5V,KAAK,CAClCwe,UAAWnW,KAGnB,KACJ,CACA,IAAK,SACD5J,QAAQC,KAAK,gEAGzB,CACAmjB,cAAAA,CAAeqiB,EAAc7kC,GACzB,IAAIjB,EAAI8M,EAAIwT,EAAIC,EAAIqa,EACpB,GAAIkL,aAAwB7J,IACI,IAA5B6J,EAAahlB,MAAMte,KACnB,OAAOlF,KAAKmmB,eAAeqiB,EAAahlB,MAAO7f,GAEnD,MAAM8kC,EjDvDP,SAA0B9jC,GAC7B,SAAS+jC,EAAY/jC,GACjB,MAAMgkC,EAAO,GACb,IAAK,IAAIr9B,EAAI,EAAGA,EAAI3G,EAAQ2C,UAAU/F,OAAQ+J,IAC1Cq9B,EAAK1kC,KAAKU,EAAQ2C,UAAUsH,KAAKtD,IAErC,OAAOq9B,CACX,CACA,IAAIF,EACAzqB,EAASrZ,EACb,KAAkB,OAAXqZ,IACHyqB,EAAQC,EAAY1qB,GAAQ+X,MAAM6S,GAAQA,EAAIC,WAAW,qBACpC,iBAAVJ,IAGXzqB,EAASA,EAAOrC,cAEpB,OAAO8sB,CACX,CiDqCsBK,CAAiB9oC,KAAK8hB,SAASnd,SACvCA,EAAU3E,KAAK2E,QAarB,MAAMiY,GAXEjZ,aAAyC,EAASA,EAAQ0T,UACnD1T,EAAQ0T,SAEfmxB,aAAwBxL,GACjBwL,EAAa7jC,QAAQkF,wBAE5B2+B,EAAahlB,MACNglB,EAAahlB,MAAM7e,QAAQkF,wBAE/BlF,EAAQkF,wBAGbhK,EAAqJ,QAA1I2P,EAA8F,QAAxF9M,EAAKiB,aAAyC,EAASA,EAAQolC,2BAAwC,IAAPrmC,OAAgB,EAASA,EAAG/D,UAAuB,IAAP6Q,EAAgBA,EAAKxP,KAAKgpC,iBACvL/D,EAAU,IAAID,GAAc,GAAEhlC,KAAKrB,MAAMkB,IAC/C4oC,QAAqCA,EAAQ,GAAI,CAC7C7C,IAAkM,QAA5LtI,EAAoF,QAA9Eta,EAAKrf,aAAyC,EAASA,EAAQ2yB,iBAA8B,IAAPtT,EAAgBA,EAA6B,QAAvBC,EAAKjjB,KAAK2D,eAA4B,IAAPsf,OAAgB,EAASA,EAAGqT,iBAA8B,IAAPgH,EAAgBA,EAAK,eAC/N7zB,KAAMT,OAAOu8B,QAAU3oB,EAAInT,KAC3BC,IAAKV,OAAOw8B,QAAU5oB,EAAIlT,IAC1BC,MAAOiT,EAAIjT,MACXC,OAAQgT,EAAIhT,OACZs8B,UAAWviC,aAAyC,EAASA,EAAQuiC,UACrEf,YAAaxhC,aAAyC,EAASA,EAAQwhC,cAErE8D,EAAyB,IAAIpjC,EAAoBo/B,EAASA,EAAQI,YAAW,KAC/E4D,EAAuBpnC,SAAS,KAEpC,OAAOojC,EACFU,OACAb,MAAMoE,IACP,IAAIxmC,EACJ,GAAIuiC,EAAQn/B,WACR,OAAO,EAEX,GAAwB,OAApBojC,EAEA,OADAD,EAAuBpnC,WAChB,EAEX,MAAMsnC,EAAS/gC,SAAS6L,cAAc,OACtCk1B,EAAOlrC,UAAY,8BACnB,MAAM26B,EAAyB,IAAIwK,GAAuB+F,EAAQnpC,MAC5DopC,EAAiBZ,aAAwB7J,GACzC6J,EAAahlB,MACbglB,EACAa,EAAoBb,EAAara,IAAI/R,SAASxX,KAK9C0kC,EAA6D,OAAzCF,EAAezkC,QAAQgX,cACjD,IAAI6H,EAaA+lB,EAkDAC,EAjDJ,GAbKF,GAGI3lC,aAAyC,EAASA,EAAQolC,qBAC/DvlB,EAAQ7f,EAAQolC,qBAGhBvlB,EAAQxjB,KAAKypC,YAAY,CAAE9qC,GAAIkB,IAC/BG,KAAKmoC,eAAe7jC,KAAKkf,IAPzBA,EAAQ4lB,EASZ5lB,EAAMgG,MAAMwI,gBAAkB4G,EAC9BpV,EAAM1N,OAAOmvB,EAAQj8B,OAAOy8B,WAAYR,EAAQj8B,OAAO08B,eAEjD/hC,aAAyC,EAASA,EAAQolC,sBAAwBO,EACpF,GAAId,aAAwB7J,GACxB3+B,KAAK0pC,YAAW,KACZ,MAAM7mB,EAAQumB,EAAe5f,MAAMnF,YAAYmkB,GAC/ChlB,EAAMgG,MAAM4I,UAAUvP,EAAM,SAQhC,OAJA7iB,KAAK0pC,YAAW,IAAMtC,GAA2B,CAC7CzhC,KAAMyjC,EACN/8B,GAAImX,MAEA6lB,GACJ,IAAK,OACDD,EAAejb,IAAI9gB,YAAW,GAC9B,MACJ,IAAK,WACL,IAAK,SACDk8B,EAE8B,QAFf7mC,EAAK1C,KAAKynC,gBACpB1R,MAAMlzB,GAAUA,EAAM2gB,MAAM2K,IAAIxvB,KACjC6pC,EAAara,IAAIxvB,YAAwB,IAAP+D,OAAgB,EAASA,EAAGugC,QAAQnmB,SAC1E9c,KAAK8jB,YAAYslB,GAKjCF,EAAgB5hC,UAAUjD,IAAI,eAC9B6kC,EAAgB7+B,MAAMikB,SAAW,SACjC4a,EAAgB32B,YAAY42B,GAC5BD,EAAgB32B,YAAYiR,EAAM7e,SAClC6e,EAAMgG,MAAMpN,SAAW,CACnBxX,KAAM,SACN+3B,UAAWA,IAAMsI,EAAQj8B,OACzBstB,UAAW3yB,aAAyC,EAASA,EAAQ2yB,WAErEgT,GACmC,SAAnCd,EAAara,IAAI/R,SAASxX,MAC1B4jC,EAAara,IAAI9gB,YAAW,GAEhCrN,KAAK2pC,yBAAyBnmB,GAC9BylB,EAAuB/iC,eAAesd,EAAM2K,IAAI3L,mBAAmB1e,IAC/D,IAAIpB,EACAoB,EAAMunB,WACoB,QAAzB3oB,EAAKuiC,EAAQj8B,cAA2B,IAAPtG,GAAyBA,EAAG4hB,QAClE,IACAd,EAAM2K,IAAIlC,aAAY,KACtB,IAAIvpB,EACsB,QAAzBA,EAAKuiC,EAAQj8B,cAA2B,IAAPtG,GAAyBA,EAAG4hB,OAAO,KAGzE,MAAMslB,EAAwBN,GAC1BF,GACAppC,KAAK4jB,SAASwlB,EAAezqC,IAC3BkE,EAAQ,CACVmG,OAAQi8B,EACR4E,YAAarmB,EACb4lB,eAAgBQ,EACVR,EAAezqC,QACf8B,EACN+F,WAAY,CACR3E,QAASA,KACLonC,EAAuBpnC,UAChB2nC,KAqEnB,OAjEAP,EAAuB/iC,eAMvBxB,EAA4BugC,EAAQj8B,OAAQ,UAAU,KAClDwa,EAAM1N,OAAOmvB,EAAQj8B,OAAOy8B,WAAYR,EAAQj8B,OAAO08B,YAAY,IACnE9M,EAAwBz3B,EAAWwE,MAAK,KACxC,IAAI3F,KAAK8F,WAGT,GAAIwjC,GACAtpC,KAAK4jB,SAASwlB,EAAezqC,IAC7BqB,KAAK0pC,YAAW,IAAMtC,GAA2B,CAC7CzhC,KAAM6d,EACNnX,GAAI+8B,MAEHA,EAAejb,IAAIrL,WACpBsmB,EAAejb,IAAI9gB,YAAW,GAE9BrN,KAAK4jB,SAASJ,EAAM7kB,KACpBqB,KAAKyjB,cAAcD,EAAO,CACtBsmB,sBAAsB,SAI7B,GAAI9pC,KAAK4jB,SAASJ,EAAM7kB,IAAK,CAC9B6kB,EAAMgG,MAAMwI,gBACRhyB,KAAK44B,uBACT4Q,EAAgBhmB,EAEhB,IADwBxjB,KAAKioC,cAAclS,MAAMhc,GAAMA,EAAE8vB,cAAgBrmB,IAQrE,OAEA+lB,EACAvpC,KAAKimB,iBAAiBzC,EAAO,CACzB5Z,OAAQ2/B,EAAY3/B,OACpBD,MAAO4/B,EAAY5/B,MACnB0N,SAAUkyB,KAIdvpC,KAAKyjB,cAAcD,EAAO,CACtBxK,aAAa,EACb2K,YAAY,EACZomB,kBAAkB,IAEtBvmB,EAAMgG,MAAMpN,SAAW,CAAExX,KAAM,QAC/B5E,KAAK0pC,YAAW,KAEZ1pC,KAAKujB,WAAWC,EAAO,CAAC,GAAG,KAGnCxjB,KAAK2pC,yBAAyBnmB,EAClC,MAEJxjB,KAAKioC,cAAchkC,KAAKpB,GACxB7C,KAAKqoC,mBACE,CAAI,IAEV2B,OAAOjD,IACRhkC,QAAQknC,MAAM,2CAA4ClD,IACnD,IAEf,CACA9gB,gBAAAA,CAAiBrX,EAAMjL,GACnB,IAAIjB,EAAI8M,EAAIwT,EAAIC,EAAIqa,EACpB,IAAI9Z,EACJ,GAAI5U,aAAgB+vB,GAChBnb,EAAQxjB,KAAKypC,cACbzpC,KAAKmoC,eAAe7jC,KAAKkf,GACzBxjB,KAAK0pC,YAAW,IAAM1pC,KAAKqkB,YAAYzV,EAAM,CACzCwrB,kBAAkB,EAClBphB,aAAa,EACbyhB,oBAAoB,MAExBz6B,KAAK0pC,YAAW,IAAMlmB,EAAMgG,MAAM4I,UAAUxjB,EAAM,CAAEgrB,oBAAoB,UAEvE,CACDpW,EAAQ5U,EACR,MAAMs7B,EAA4F,QAAlExnC,EAAK1C,KAAKioC,cAAclS,MAAM5kB,GAAMA,EAAE04B,cAAgBrmB,WAA2B,IAAP9gB,OAAgB,EAASA,EAAG0mC,eAChIe,EAAuBD,EACvBlqC,KAAK4jB,SAASsmB,QACdzpC,EAC8F,kBAA/EkD,aAAyC,EAASA,EAAQymC,kBAC3EzmC,EAAQymC,kBAEJD,GACAnqC,KAAK0pC,YAAW,IAAMtC,GAA2B,CAC7CzhC,KAAMiJ,EACNvC,GAAI89B,MAERnqC,KAAKyjB,cAAc7U,EAAM,CACrBm7B,kBAAkB,EAClBD,sBAAsB,IAE1B9pC,KAAKyjB,cAAc0mB,EAAsB,CACrCnxB,aAAa,IAEjBwK,EAAQ2mB,GAGRnqC,KAAKyjB,cAAc7U,EAAM,CACrBoK,aAAa,EACb+wB,kBAAkB,EAClBD,sBAAsB,IAItC,CAmDA,MAAMO,EAlDN,WACI,GAAI1mC,aAAyC,EAASA,EAAQ0T,SAAU,CACpE,MAAM/K,EAAS,CAAC,EA+BhB,MA9BI,SAAU3I,EAAQ0T,SAClB/K,EAAO7C,KAAOuC,KAAKD,IAAIpI,EAAQ0T,SAAS5N,KAAM,GAEzC,UAAW9F,EAAQ0T,SACxB/K,EAAO60B,MAAQn1B,KAAKD,IAAIpI,EAAQ0T,SAAS8pB,MAAO,GAGhD70B,EAAO7C,KAAO05B,GAEd,QAASx/B,EAAQ0T,SACjB/K,EAAO5C,IAAMsC,KAAKD,IAAIpI,EAAQ0T,SAAS3N,IAAK,GAEvC,WAAY/F,EAAQ0T,SACzB/K,EAAO40B,OAASl1B,KAAKD,IAAIpI,EAAQ0T,SAAS6pB,OAAQ,GAGlD50B,EAAO5C,IAAMy5B,GAEY,iBAAlBx/B,EAAQgG,MACf2C,EAAO3C,MAAQqC,KAAKD,IAAIpI,EAAQgG,MAAO,GAGvC2C,EAAO3C,MAAQw5B,GAEW,iBAAnBx/B,EAAQiG,OACf0C,EAAO1C,OAASoC,KAAKD,IAAIpI,EAAQiG,OAAQ,GAGzC0C,EAAO1C,OAASu5B,GAEb72B,CACX,CACA,MAAO,CACH7C,KAA+E,iBAAjE9F,aAAyC,EAASA,EAAQ+M,GAClE1E,KAAKD,IAAIpI,EAAQ+M,EAAG,GACpByyB,GACNz5B,IAA8E,iBAAjE/F,aAAyC,EAASA,EAAQ+kB,GACjE1c,KAAKD,IAAIpI,EAAQ+kB,EAAG,GACpBya,GACNx5B,MAAoF,iBAArEhG,aAAyC,EAASA,EAAQgG,OACnEqC,KAAKD,IAAIpI,EAAQgG,MAAO,GACxBw5B,GACNv5B,OAAsF,iBAAtEjG,aAAyC,EAASA,EAAQiG,QACpEoC,KAAKD,IAAIpI,EAAQiG,OAAQ,GACzBu5B,GAEd,CACoBmH,GACdrH,EAAU,IAAItC,GAAQzoB,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAEvhB,UAAWpN,KAAK8hB,SAASnd,QAASrF,QAASkkB,EAAM7e,SAAW0lC,GAAc,CAAEzJ,uBAA6D,0BAArC5gC,KAAK2D,QAAQ0yB,yBACjK51B,EACsH,QAArHuiB,EAAiD,QAA3CxT,EAAKxP,KAAK2D,QAAQ0yB,2BAAwC,IAAP7mB,OAAgB,EAASA,EAAG+6B,kCAA+C,IAAPvnB,EAAgBA,EAAKkgB,GAAsCrC,wBAA8D,0BAArC7gC,KAAK2D,QAAQ0yB,yBAC/N51B,EACuH,QAAtH68B,EAAiD,QAA3Cra,EAAKjjB,KAAK2D,QAAQ0yB,2BAAwC,IAAPpT,OAAgB,EAASA,EAAGunB,mCAAgD,IAAPlN,EAAgBA,EAAK4F,MACxJrnB,EAAK2H,EAAM7e,QAAQ8lC,cAAc,sBACvC,IAAK5uB,EACD,MAAM,IAAIlZ,MAAM,8BAEpBsgC,EAAQlB,UAAUlmB,EAAI,CAClB2Z,WAA8F,kBAA1E7xB,aAAyC,EAASA,EAAQ6xB,aACxE7xB,EAAQ6xB,aAGlB,MAAMkV,EAAqB,IAAI1H,GAA2Bxf,EAAOyf,GAC3Dz8B,EAAa,IAAIX,EAAoB2d,EAAM2K,IAAI3L,mBAAmB1e,IAChEA,EAAMunB,UACN4X,EAAQ7B,cACZ,IACA36B,EAAmB+c,EAAM7e,SAAUqc,IACnC,MAAM,MAAErX,EAAK,OAAEC,GAAWoX,EAAMM,YAChCkC,EAAM1N,OAAOnM,EAAOC,EAAO,KAE/B8gC,EAAmBxkC,eAAe+8B,EAAQlvB,aAAY,KAIlDyP,EAAM1N,OAAO0N,EAAM7Z,MAAO6Z,EAAM5Z,OAAO,IACvCq5B,EAAQlC,gBAAe,KACvB/gC,KAAKyiB,yBAAyBne,MAAM,IACpCkf,EAAMzP,aAAajQ,IACnBm/B,EAAQhC,UAAU,CACdr3B,OAAQ9F,aAAqC,EAASA,EAAM8F,OAC5DD,MAAO7F,aAAqC,EAASA,EAAM6F,OAC7D,IACF,CACA9H,QAASA,KACL2E,EAAW3E,UACX2F,EAAOxH,KAAKynC,gBAAiBiD,GAC7BlnB,EAAMgG,MAAMpN,SAAW,CAAExX,KAAM,QAC/B5E,KAAKqoC,iBAAiB,IAG9BroC,KAAKynC,gBAAgBxjC,KAAKymC,GAC1BlnB,EAAMgG,MAAMpN,SAAW,CAAExX,KAAM,aACzBjB,aAAyC,EAASA,EAAQgnC,kBAC5D3qC,KAAK2pC,yBAAyBnmB,GAElCxjB,KAAKqoC,iBACT,CACAE,aAAAA,CAAclxB,GACV,OAAQA,GACJ,IAAK,MACL,IAAK,SACGrX,KAAK8hB,SAASxT,cAAgBf,EAAYkB,YAG1CzO,KAAK8hB,SAAS3C,kCAElB,MACJ,IAAK,OACL,IAAK,QACGnf,KAAK8hB,SAASxT,cAAgBf,EAAYyE,UAG1ChS,KAAK8hB,SAAS3C,kCAM1B,OAAQ9H,GACJ,IAAK,MACL,IAAK,OACL,IAAK,SACD,OAAOrX,KAAK4qC,sBAAsB,CAAC,IACvC,IAAK,SACL,IAAK,QACD,OAAO5qC,KAAK4qC,sBAAsB,CAAC5qC,KAAK8hB,SAASvgB,SACrD,QACI,MAAM,IAAIoB,MAAO,wBAAuB0U,KAEpD,CACA0L,aAAAA,CAAcpf,GACV,IAAIjB,EAAI8M,EAAIwT,EAAIC,EAEhB,GADAljB,MAAMgjB,cAAcpf,GAChB,wBAAyBA,EACzB,IAAK,MAAM6f,KAASxjB,KAAKynC,gBAAiB,CACtC,OAAQ9jC,EAAQ0yB,qBACZ,IAAK,wBACD7S,EAAMyf,QAAQpC,6BAA0BpgC,EACxC+iB,EAAMyf,QAAQrC,4BAAyBngC,EACvC,MACJ,UAAKA,EACD+iB,EAAMyf,QAAQpC,wBACVqC,GACJ1f,EAAMyf,QAAQrC,uBACVsC,GACJ,MACJ,QACI1f,EAAMyf,QAAQpC,wBAC6B,QAAtCn+B,EAAKiB,EAAQ0yB,2BAAwC,IAAP3zB,OAAgB,EAASA,EAAG8nC,4BAC/EhnB,EAAMyf,QAAQrC,uBAC6B,QAAtCpxB,EAAK7L,EAAQ0yB,2BAAwC,IAAP7mB,OAAgB,EAASA,EAAG+6B,2BAEvF/mB,EAAMyf,QAAQhC,WAClB,CAEA,qBAAsBt9B,GACtB3D,KAAKsoC,gBAAgB/e,gBAAoD,QAAnCvG,EAAKrf,EAAQ8yB,wBAAqC,IAAPzT,EAAgBA,EAAKmkB,IAEtG,QAASxjC,IACT3D,KAAK8hB,SAASxS,OAAgC,QAAtB2T,EAAKtf,EAAQ2hB,WAAwB,IAAPrC,EAAgBA,EAAK,GAE/EjjB,KAAKwnC,SAAWtvB,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAK2D,SAAUA,GAC/D3D,KAAK8V,OAAO9V,KAAK8hB,SAASnY,MAAO3J,KAAK8hB,SAASlY,QAAQ,EAC3D,CACAkM,MAAAA,CAAOnM,EAAOC,EAAQqa,GAElB,GADAlkB,MAAM+V,OAAOnM,EAAOC,EAAQqa,GACxBjkB,KAAKynC,gBACL,IAAK,MAAMoD,KAAY7qC,KAAKynC,gBAExBoD,EAAS5H,QAAQhC,WAG7B,CACA3c,KAAAA,GACI,IAAI5hB,EACwB,QAA3BA,EAAK1C,KAAK+hB,mBAAgC,IAAPrf,GAAyBA,EAAG4hB,OACpE,CACAuB,aAAAA,CAAclnB,GACV,OAAOqB,KAAKmkB,OAAO4R,MAAMlT,GAAUA,EAAMlkB,KAAOA,GACpD,CACAk3B,cAAAA,CAAehT,GACXA,EAAMW,MAAMgG,MAAM4I,UAAUvP,GAC5B7iB,KAAK2pC,yBAAyB9mB,EAAMW,MACxC,CACAO,UAAAA,CAAWpgB,GACP,IAAIjB,EACJ,QAFc,IAAPiB,IAAAA,EAAU,CAAC,IAEbA,EAAQ6f,MAAO,CAChB,IAAKxjB,KAAK+hB,YACN,OAEJpe,EAAQ6f,MAAQxjB,KAAK+hB,WACzB,CACA,GAAIpe,EAAQmnC,cAAgBnnC,EAAQ6f,OAC5B7f,EAAQ6f,MAAMoC,cACdjiB,EAAQ6f,MAAMW,OAAOxgB,EAAQ6f,MAAMW,OAAO5iB,OAAS,GAEnD,YADAoC,EAAQ6f,MAAMgG,MAAMzF,WAAW,CAAEwV,cAAc,IAIvD,MAAMnd,EAAWV,GAAgB/X,EAAQ6f,MAAM7e,SACzCuH,EAA+C,QAAvCxJ,EAAK1C,KAAK8hB,SAAS5V,KAAKkQ,UAA8B,IAAP1Z,OAAgB,EAASA,EAAGmK,KACzF7M,KAAK2pC,yBAAyBz9B,EAClC,CACA8X,cAAAA,CAAergB,GACX,IAAIjB,EACJ,QAFkB,IAAPiB,IAAAA,EAAU,CAAC,IAEjBA,EAAQ6f,MAAO,CAChB,IAAKxjB,KAAK+hB,YACN,OAEJpe,EAAQ6f,MAAQxjB,KAAK+hB,WACzB,CACA,GAAIpe,EAAQmnC,cAAgBnnC,EAAQ6f,OAC5B7f,EAAQ6f,MAAMoC,cAAgBjiB,EAAQ6f,MAAMW,OAAO,GAEnD,YADAxgB,EAAQ6f,MAAMgG,MAAMxF,eAAe,CAAEuV,cAAc,IAI3D,MAAMnd,EAAWV,GAAgB/X,EAAQ6f,MAAM7e,SACzCuH,EAAmD,QAA3CxJ,EAAK1C,KAAK8hB,SAAShL,SAASsF,UAA8B,IAAP1Z,OAAgB,EAASA,EAAGmK,KACzFX,GACAlM,KAAK2pC,yBAAyBz9B,EAEtC,CAMA4Q,MAAAA,GACI,IAAIpa,EACJ,MAAMhC,EAAOV,KAAK8hB,SAASxD,YACrB6F,EAASnkB,KAAKmkB,OAAOzV,QAAO,CAACq8B,EAAYloB,KAC3CkoB,EAAWloB,EAAMlkB,IAAMkkB,EAAM/F,SACtBiuB,IACR,CAAC,GACEC,EAAShrC,KAAKynC,gBAAgBroC,KAAKokB,IAC9B,CACH9iB,KAAM8iB,EAAMA,MAAM1G,SAClBzF,SAAUmM,EAAMyf,QAAQnmB,aAG1BmuB,EAAejrC,KAAKioC,cAAc7oC,KAAKokB,IAClC,CACH9iB,KAAM8iB,EAAMqmB,YAAY/sB,SACxBouB,mBAAoB1nB,EAAM4lB,eAC1B/xB,SAAUmM,EAAMxa,OAAOs8B,aACvBM,IAA6C,WAAxCpiB,EAAMqmB,YAAY1b,IAAI/R,SAASxX,KAC9B4e,EAAMqmB,YAAY1b,IAAI/R,SAASka,eAC/B71B,MAGR6L,EAAS,CACX6+B,KAAMzqC,EACNyjB,SACApC,YAAyC,QAA3Brf,EAAK1C,KAAK+hB,mBAAgC,IAAPrf,OAAgB,EAASA,EAAG/D,IAQjF,OANIqsC,EAAOzpC,OAAS,IAChB+K,EAAOs3B,eAAiBoH,GAExBC,EAAa1pC,OAAS,IACtB+K,EAAO2+B,aAAeA,GAEnB3+B,CACX,CACA2S,QAAAA,CAASve,GACL,IAAIgC,EAAI8M,EAAIwT,EAEZ,GADAhjB,KAAKyD,QACe,iBAAT/C,GAA8B,OAATA,EAC5B,MAAM,IAAIiC,MAAM,+CAEpB,MAAM,KAAEwoC,EAAI,OAAEhnB,EAAM,YAAEpC,GAAgBrhB,EACtC,GAAuB,WAAnByqC,EAAKluB,KAAKrY,OAAsBpD,MAAM4pC,QAAQD,EAAKluB,KAAKvc,MACxD,MAAM,IAAIiC,MAAM,+BAEpB,IAEI,MAAMgH,EAAQ3J,KAAK2J,MACbC,EAAS5J,KAAK4J,OACdyhC,EAAkC3qC,IACpC,MAAM,GAAE/B,EAAE,OAAEue,EAAM,WAAEsb,EAAU,MAAE9lB,EAAK,WAAE2mB,GAAe34B,EACtD,GAAkB,iBAAP/B,EACP,MAAM,IAAIgE,MAAM,mCAEpB,MAAM6gB,EAAQxjB,KAAKypC,YAAY,CAC3B9qC,KACAue,SAAUA,EACVsb,aAAcA,IAElBx4B,KAAKmoC,eAAe7jC,KAAKkf,GACzB,MAAM8nB,EAAgB,GACtB,IAAK,MAAM1pC,KAAS8Q,EAAO,CAMvB,MAAMmQ,EAAQ7iB,KAAK2nC,cAAc1oB,SAASkF,EAAOviB,GAAQ4hB,GACzD8nB,EAAcrnC,KAAK4e,EACvB,CACA,IAAK,IAAIvX,EAAI,EAAGA,EAAIoH,EAAMnR,OAAQ+J,IAAK,CACnC,MAAMuX,EAAQyoB,EAAchgC,GACtB+f,EAAiC,iBAAfgO,GACpBA,IAAexW,EAAMlkB,GACzB6kB,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,eAAgBpO,EAChBuO,oBAAoB,GAE5B,CAMA,OALKpW,EAAMoC,aAAepC,EAAMW,OAAO5iB,OAAS,GAC5CiiB,EAAMgG,MAAM4I,UAAU5O,EAAMW,OAAOX,EAAMW,OAAO5iB,OAAS,GAAI,CACzDq4B,oBAAoB,IAGrBpW,CAAK,EAEhBxjB,KAAK8hB,SAASnD,YAAYwsB,EAAM,CAC5BlsB,SAAW5E,GACAgxB,EAA+BhxB,EAAK3Z,QAGnDV,KAAK8V,OAAOnM,EAAOC,GAAQ,GAC3B,MAAM2hC,EAA0D,QAA9B7oC,EAAKhC,EAAKkjC,sBAAmC,IAAPlhC,EAAgBA,EAAK,GAC7F,IAAK,MAAM8oC,KAA2BD,EAA0B,CAC5D,MAAM,KAAE7qC,EAAI,SAAE2W,GAAam0B,EACrBhoB,EAAQ6nB,EAA+B3qC,GAC7CV,KAAKimB,iBAAiBzC,EAAO,CACzBnM,SAAUA,EACV1N,MAAO0N,EAAS1N,MAChBC,OAAQyN,EAASzN,OACjBwgC,iBAAiB,EACjB5U,YAAY,GAEpB,CACA,MAAMiW,EAAsD,QAA5Bj8B,EAAK9O,EAAKuqC,oBAAiC,IAAPz7B,EAAgBA,EAAK,GACzF,IAAK,MAAMk8B,KAAyBD,EAAwB,CACxD,MAAM,KAAE/qC,EAAI,SAAE2W,EAAQ,mBAAE6zB,EAAkB,IAAEtF,GAAQ8F,EAC9CloB,EAAQ6nB,EAA+B3qC,GAC7CV,KAAKmmB,eAEiB,QAFDnD,EAAMkoB,EACrBlrC,KAAK4jB,SAASsnB,QACdzqC,SAA+B,IAAPuiB,EAAgBA,EAAKQ,EAAO,CACtDnM,SAAUA,QAA2CA,OAAW5W,EAChEsoC,oBAAqBmC,EACf1nB,OACA/iB,EACN61B,UAAWsP,GAEnB,CACA,IAAK,MAAMjC,KAAiB3jC,KAAKynC,gBAC7B9D,EAAcV,QAAQhC,YAE1B,GAA2B,iBAAhBlf,EAA0B,CACjC,MAAMc,EAAQ7iB,KAAK4jB,SAAS7B,GACxBc,GACA7iB,KAAK2pC,yBAAyB9mB,EAEtC,CACJ,CACA,MAAOkkB,GACHhkC,QAAQknC,MAAM,4DAA6DlD,GAI3E,IAAK,MAAMvjB,KAASxjB,KAAK4hB,OACrB,IAAK,MAAMiB,KAASW,EAAMW,OACtBnkB,KAAKqkB,YAAYxB,EAAO,CACpBuX,kBAAkB,EAClBphB,aAAa,IAQzB,IAAK,MAAMwK,KAASxjB,KAAK4hB,OACrB4B,EAAM3hB,UACN7B,KAAK2hB,QAAQld,OAAO+e,EAAM7kB,IAC1BqB,KAAKkoC,kBAAkB5jC,KAAKkf,GAGhC,IAAK,MAAMmgB,IAAiB,IAAI3jC,KAAKynC,iBACjC9D,EAAc9hC,UASlB,MANA7B,KAAKyD,QAMCsjC,CACV,CACA/mC,KAAKqoC,kBACLroC,KAAK8nC,qBAAqBxjC,MAC9B,CACAb,KAAAA,GACI,MAAMme,EAASpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UAAUziB,KAAK+R,GAAMA,EAAEtO,QACxD8oC,IAAmB3rC,KAAK+hB,YAC9B,IAAK,MAAMyB,KAAS5B,EAEhB5hB,KAAK8jB,YAAYN,EAAO,CAAEG,YAAY,IAEtCgoB,GACA3rC,KAAK2pC,8BAAyBlpC,GAElCT,KAAK8hB,SAASre,OAClB,CACAsiB,cAAAA,GACI,IAAK,MAAM/E,KAAShhB,KAAK2hB,QAAQmkB,UAAW,CACxC,MAAO30B,EAAGqS,GAASxC,EACnBwC,EAAM3gB,MAAM2mB,MAAMwQ,gBACtB,CACJ,CACAzV,QAAAA,CAAS5gB,GACL,IAAIjB,EAAI8M,EACR,GAAIxP,KAAKmkB,OAAO4R,MAAM5kB,GAAMA,EAAExS,KAAOgF,EAAQhF,KACzC,MAAM,IAAIgE,MAAO,iBAAgBgB,EAAQhF,qBAE7C,IAAIyqC,EACJ,GAAIzlC,EAAQ0T,UAAY1T,EAAQknC,SAC5B,MAAM,IAAIloC,MAAM,kFAEpB,MAAMipC,EAAU,CACZjiC,MAAOhG,EAAQkoC,aACfjiC,OAAQjG,EAAQmoC,eAEpB,IAAI5nC,EACJ,GAAIP,EAAQ0T,SACR,GAA4B1T,EAAQ0T,SnBv5BnC00B,emBu5B8C,CAC3C,MAAMA,EAA4D,iBAApCpoC,EAAQ0T,SAAS00B,eACzC/rC,KAAK6lB,cAAcliB,EAAQ0T,SAAS00B,gBACpCpoC,EAAQ0T,SAAS00B,eAEvB,GADA7nC,EAAQP,EAAQ0T,SAASnT,OACpB6nC,EACD,MAAM,IAAIppC,MAAO,mBAAkBgB,EAAQ0T,SAAS00B,kCAExD3C,EAAiBppC,KAAKgsC,UAAUD,EACpC,KACK,KnB55BV,SAAiCrrC,GACpC,QAAIA,EAAK0oC,cAIb,CmBu5BqB6C,CAAwBtoC,EAAQ0T,UAUpC,CACD,MAAMmM,EAAQxjB,KAAKuoC,cAAc9gB,GAAoB9jB,EAAQ0T,SAASgF,YAChEwG,EAAQ7iB,KAAKksC,YAAYvoC,EAAS6f,GAaxC,OAZAA,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,UAECP,EAAQwoC,UACTnsC,KAAK2pC,yBAAyBnmB,GAElCA,EAAM2K,IAAIb,QAAQ,CACd1jB,OAAQgiC,aAAyC,EAASA,EAAQhiC,OAClED,MAAOiiC,aAAyC,EAASA,EAAQjiC,QAE9DkZ,CACX,CApBI,GALAumB,EAC+C,iBAApCzlC,EAAQ0T,SAAS+xB,eAC2C,QAA5D1mC,EAAK1C,KAAK2hB,QAAQnX,IAAI7G,EAAQ0T,SAAS+xB,uBAAoC,IAAP1mC,OAAgB,EAASA,EAAGG,MACjGc,EAAQ0T,SAAS+xB,eAC3BllC,EAAQP,EAAQ0T,SAASnT,OACpBklC,EACD,MAAM,IAAIzmC,MAAO,mBAAkBgB,EAAQ0T,SAAS+xB,iCAmB5D,MAGAA,EAAiBppC,KAAK+hB,YAE1B,IAAIc,EACJ,GAAIumB,EAAgB,CAChB,MAAMpiB,EAASxF,IAAsC,QAA3BhS,EAAK7L,EAAQ0T,gBAA6B,IAAP7H,OAAgB,EAASA,EAAG6M,YAAc,UACvG,GAAI1Y,EAAQknC,SAAU,CAClB,MAAMrnB,EAAQxjB,KAAKypC,cACnBzpC,KAAKmoC,eAAe7jC,KAAKkf,GACzB,MAAM4oB,EAAmD,iBAArBzoC,EAAQknC,UACnB,OAArBlnC,EAAQknC,SACNlnC,EAAQknC,SACR,CAAC,EACP7qC,KAAKimB,iBAAiBzC,EAAOtL,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAGyd,GAAuB,CAAE5W,YAAY,EAAO4U,iBAAiB,EAAMO,iBAAiB,KACjJ9nB,EAAQ7iB,KAAKksC,YAAYvoC,EAAS6f,GAClCA,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,SAER,MACK,GAAyC,aAArCklC,EAAejb,IAAI/R,SAASxX,MACtB,WAAXoiB,EACAnE,EAAQ7iB,KAAKksC,YAAYvoC,EAASylC,GAClCA,EAAe5f,MAAM4I,UAAUvP,EAAO,CAClC4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,UAEJklC,EAAejb,IAAIb,QAAQ,CACvB3jB,MAAOiiC,aAAyC,EAASA,EAAQjiC,MACjEC,OAAQgiC,aAAyC,EAASA,EAAQhiC,SAEjEjG,EAAQwoC,UACTnsC,KAAK2pC,yBAAyBP,OAGjC,CACD,MAAMhtB,EAAWV,GAAgB0tB,EAAezkC,SAC1C0nC,EAAmBnwB,GAAoBlc,KAAK8hB,SAASxT,YAAa8N,EAAU4K,GAC5ExD,EAAQxjB,KAAK4qC,sBAAsByB,EAAkBrsC,KAAKssC,sBAAsBD,KAClF9+B,EAAYyE,SACV45B,aAAyC,EAASA,EAAQhiC,OAC1DgiC,aAAyC,EAASA,EAAQjiC,OAChEkZ,EAAQ7iB,KAAKksC,YAAYvoC,EAAS6f,GAClCA,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,UAECP,EAAQwoC,UACTnsC,KAAK2pC,yBAAyBnmB,EAEtC,CACJ,MACK,GAAI7f,EAAQknC,SAAU,CACvB,MAAMrnB,EAAQxjB,KAAKypC,cACnBzpC,KAAKmoC,eAAe7jC,KAAKkf,GACzB,MAAM+oB,EAA0C,iBAArB5oC,EAAQknC,UACV,OAArBlnC,EAAQknC,SACNlnC,EAAQknC,SACR,CAAC,EACP7qC,KAAKimB,iBAAiBzC,EAAOtL,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG4d,GAAc,CAAE/W,YAAY,EAAO4U,iBAAiB,EAAMO,iBAAiB,KACxI9nB,EAAQ7iB,KAAKksC,YAAYvoC,EAAS6f,GAClCA,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,SAER,KACK,CACD,MAAMsf,EAAQxjB,KAAK4qC,sBAAsB,CAAC,GAAI5qC,KAAK8hB,SAASxT,cAAgBf,EAAYyE,SAClF45B,aAAyC,EAASA,EAAQhiC,OAC1DgiC,aAAyC,EAASA,EAAQjiC,OAChEkZ,EAAQ7iB,KAAKksC,YAAYvoC,EAAS6f,GAClCA,EAAMgG,MAAM4I,UAAUvP,EAAO,CACzB4W,cAAe91B,EAAQwoC,SACvBvS,mBAAoBj2B,EAAQwoC,SAC5BjoC,UAECP,EAAQwoC,UACTnsC,KAAK2pC,yBAAyBnmB,EAEtC,CACA,OAAOX,CACX,CACAwB,WAAAA,CAAYxB,EAAOlf,QAAO,IAAPA,IAAAA,EAAU,CACzBy2B,kBAAkB,IAElB,MAAM5W,EAAQX,EAAMW,MACpB,IAAKA,EACD,MAAM,IAAI7gB,MAAO,uBAAsBkgB,EAAMlkB,6BAEjD6kB,EAAMgG,MAAMnF,YAAYxB,EAAO,CAC3B4X,mBAAoB92B,EAAQ82B,qBAE3B92B,EAAQqV,cACT6J,EAAMW,MAAMgG,MAAMwI,gBAAgBC,QAAQpP,GAC1CA,EAAMhhB,WAES,IAAf2hB,EAAMte,MAAcvB,EAAQy2B,kBAC5Bp6B,KAAK8jB,YAAYN,EAAO,CAAEG,WAAYhgB,EAAQ82B,oBAEtD,CACAK,wBAAAA,GACI,OAAI96B,KAAK2D,QAAQm3B,yBACN96B,KAAK2D,QAAQm3B,2BAEjB,IAAIuF,EACf,CACAgI,eAAAA,GACI,IAAI3lC,EAAI8M,EjD54BmB7Q,EiD64B3B,GAA4F,IAAxFqB,KAAK4hB,OAAO9W,QAAQ4F,GAA8B,SAAxBA,EAAEyd,IAAI/R,SAASxX,MAAmB8L,EAAEyd,IAAIrL,YAAWvhB,QAC7E,IAAKvB,KAAKm3B,UAAW,CACjBn3B,KAAKm3B,UAAYn3B,KAAK86B,2BACtB96B,KAAKm3B,UAAU1I,KAAK,CAChBwC,aAAc,IAAI7L,GAAYplB,QAElC,MAAMwsC,EAAqBpkC,SAAS6L,cAAc,OAClDu4B,EAAmBvuC,UAAY,yBjDp5BZU,EiDq5BW,sBAApB6tC,EjDp5Bd/L,aAAa,cAAe9hC,GiDq5BxB6tC,EAAmBj6B,YAAYvS,KAAKm3B,UAAUxyB,SAC9C3E,KAAK8hB,SAASnd,QAAQ4N,YAAYi6B,EACtC,OAEKxsC,KAAKm3B,YACVn3B,KAAKm3B,UAAUxyB,QAAQgX,cAAcnU,SACI,QAAxCgI,GAAM9M,EAAK1C,KAAKm3B,WAAWt1B,eAA4B,IAAP2N,GAAyBA,EAAGrH,KAAKzF,GAClF1C,KAAKm3B,UAAY,KAEzB,CACArR,QAAAA,CAASniB,GACL,IAAIjB,EACJ,GAAIiB,EAAS,CACT,IAAIylC,EACJ,GAA4BzlC,EnBxjC3BooC,emBwjCqC,CAClC,MAAMA,EAAmD,iBAA3BpoC,EAAQooC,eAChC/rC,KAAKmkB,OAAO4R,MAAMlT,GAAUA,EAAMlkB,KAAOgF,EAAQooC,iBACjDpoC,EAAQooC,eACd,IAAKA,EACD,MAAM,IAAIppC,MAAO,mBAAkBgB,EAAQooC,iCAG/C,GADA3C,EAAiBppC,KAAKgsC,UAAUD,IAC3B3C,EACD,MAAM,IAAIzmC,MAAO,uCAAsCgB,EAAQooC,gCAEvE,KACK,KnB/jCV,SAAiCrrC,GACpC,QAAIA,EAAK0oC,cAIb,CmB0jCqBqD,CAAwB9oC,GAS5B,CACD,MAAM6f,EAAQxjB,KAAKuoC,cAAc9gB,GAAoB9jB,EAAQ0Y,YAI7D,OAHK1Y,EAAQ81B,eACTz5B,KAAK2pC,yBAAyBnmB,GAE3BA,CACX,CAVI,GAJA4lB,EACsC,iBAA3BzlC,EAAQylC,eAC2C,QAAnD1mC,EAAK1C,KAAK2hB,QAAQnX,IAAI7G,EAAQylC,uBAAoC,IAAP1mC,OAAgB,EAASA,EAAGG,MACxFc,EAAQylC,gBACbA,EACD,MAAM,IAAIzmC,MAAO,mBAAkBgB,EAAQylC,gCASnD,CACA,MAAMpiB,EAASxF,GAAS7d,EAAQ0Y,WAAa,UACvCD,EAAWV,GAAgB0tB,EAAezkC,SAC1C0nC,EAAmBnwB,GAAoBlc,KAAK8hB,SAASxT,YAAa8N,EAAU4K,GAC5ExD,EAAQxjB,KAAKypC,YAAY9lC,GACzBuB,EAAOlF,KAAKsc,uBAAuB+vB,KACrC9+B,EAAYyE,SACVrO,EAAQmoC,cACRnoC,EAAQkoC,aAKd,OAJA7rC,KAAKujB,WAAWC,EAAO6oB,EAAkBnnC,GACpCvB,EAAQ81B,eACTz5B,KAAK2pC,yBAAyBnmB,GAE3BA,CACX,CACK,CACD,MAAMA,EAAQxjB,KAAKypC,YAAY9lC,GAG/B,OAFA3D,KAAKujB,WAAWC,GAChBxjB,KAAK2pC,yBAAyBnmB,GACvBA,CACX,CACJ,CACAlH,sBAAAA,CAAuBF,GACnB,OAAOA,EAAS7a,OAAS,GAAK,GAC1BvB,KAAK8hB,SAASxT,cAAgBf,EAAYkB,WACxClB,EAAYkB,WACZlB,EAAYyE,QACtB,CACA8R,WAAAA,CAAYN,EAAO7f,GACf3D,KAAKyjB,cAAcD,EAAO7f,EAC9B,CACA8f,aAAAA,CAAcD,EAAO7f,GACjB,IAAIjB,EACJ,MAAMyhB,EAAS,IAAIX,EAAMW,QACzB,KAAMxgB,aAAyC,EAASA,EAAQqV,aAC5D,IAAK,MAAM6J,KAASsB,EAChBnkB,KAAKqkB,YAAYxB,EAAO,CACpBuX,kBAAkB,EAClBphB,YAA8F,QAAhFtW,EAAKiB,aAAyC,EAASA,EAAQqV,mBAAgC,IAAPtW,GAAgBA,IAIlI,MAAMkjB,EAAc5lB,KAAK4lB,YACzB,GAAgC,aAA5BpC,EAAM2K,IAAI/R,SAASxX,KAAqB,CACxC,MAAM++B,EAAgB3jC,KAAKynC,gBAAgB1R,MAAM5kB,GAAMA,EAAEqS,QAAUA,IACnE,GAAImgB,EAAe,CAQf,IAPMhgC,aAAyC,EAASA,EAAQqV,eAC5D2qB,EAAcngB,MAAM3hB,UACpB7B,KAAK2hB,QAAQld,OAAO+e,EAAM7kB,IAC1BqB,KAAKkoC,kBAAkB5jC,KAAKkf,IAEhChc,EAAOxH,KAAKynC,gBAAiB9D,GAC7BA,EAAc9hC,YACR8B,aAAyC,EAASA,EAAQggB,aAAe3jB,KAAKgiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UACvC7hB,KAAK2pC,yBAAyB/nB,EAAOrgB,OAAS,EAAIqgB,EAAO,GAAG/e,WAAQpC,EACxE,CACA,OAAOkjC,EAAcngB,KACzB,CACA,MAAM,IAAI7gB,MAAM,gCACpB,CACA,GAAgC,WAA5B6gB,EAAM2K,IAAI/R,SAASxX,KAAmB,CACtC,MAAM8nC,EAAgB1sC,KAAKioC,cAAclS,MAAM5kB,GAAMA,EAAE04B,cAAgBrmB,IACvE,GAAIkpB,EAAe,CACf,KAAM/oC,aAAyC,EAASA,EAAQqV,aAAc,CAC1E,KAAMrV,aAAyC,EAASA,EAAQmmC,sBAAuB,CACnF,MAAM6C,EAAWD,EAActD,eACzBppC,KAAK4jB,SAAS8oB,EAActD,qBAC5B3oC,EACFksC,GAAuC,IAA3BA,EAASxoB,OAAO5iB,QAC5BvB,KAAK8jB,YAAY6oB,EAEzB,CACAD,EAAc7C,YAAYhoC,UAC1B7B,KAAK2hB,QAAQld,OAAO+e,EAAM7kB,IAC1BqB,KAAKkoC,kBAAkB5jC,KAAKkf,EAChC,CACAhc,EAAOxH,KAAKioC,cAAeyE,GAC3B,MAAME,EAAeF,EAAclmC,WAAW3E,UAK9C,KAJM8B,aAAyC,EAASA,EAAQomC,mBAAqB6C,IACjF5sC,KAAKujB,WAAWqpB,EAAc,CAAC,IAC/B5sC,KAAK2pC,yBAAyBiD,MAE5BjpC,aAAyC,EAASA,EAAQggB,aAAe3jB,KAAKgiB,eAAiBwB,EAAO,CACxG,MAAM5B,EAASpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UACvC7hB,KAAK2pC,yBAAyB/nB,EAAOrgB,OAAS,EAAIqgB,EAAO,GAAG/e,WAAQpC,EACxE,CAEA,OADAT,KAAKqoC,kBACEqE,EAAc7C,WACzB,CACA,MAAM,IAAIlnC,MAAM,8BACpB,CACA,MAAMkqC,EAAK9sC,MAAM0jB,cAAcD,EAAO7f,GAMtC,OALMA,aAAyC,EAASA,EAAQggB,aACxD3jB,KAAK4lB,cAAgBA,GACrB5lB,KAAKs4B,wBAAwBh0B,KAAKtE,KAAK4lB,aAGxCinB,CACX,CACAnD,UAAAA,CAAW9jC,GACP,MAAMknC,EAAW9sC,KAAKooC,QACtB,IAEI,OADApoC,KAAKooC,SAAU,EACRxiC,GACX,CAAC,QAEG5F,KAAKooC,QAAU0E,CACnB,CACJ,CACAjQ,gBAAAA,CAAiBl5B,GACb,IAAIjB,EACJ,MAAMqqC,EAAmBppC,EAAQ0I,GAAGmX,MAC9BwpB,EAAgBrpC,EAAQgC,KAAK9F,QAC7BotC,EAAetpC,EAAQgC,KAAK7F,QAC5BotC,EAAoBvpC,EAAQ0I,GAAGgL,SAC/B81B,EAAmBxpC,EAAQ0I,GAAGnI,MAC9BkpC,EAAcJ,EAC6B,QAA1CtqC,EAAK1C,KAAK2hB,QAAQnX,IAAIwiC,UAAmC,IAAPtqC,OAAgB,EAASA,EAAGG,WAC/EpC,EACN,IAAK2sC,EACD,MAAM,IAAIzqC,MAAO,2BAA0BqqC,KAE/C,QAAqBvsC,IAAjBwsC,EAaJ,GAAKC,GAA2C,WAAtBA,EAyBrB,CAKD,MAAM7D,EAAoB3tB,GAAgBqxB,EAAiBpoC,SACrD0oC,EAAiBnxB,GAAoBlc,KAAK8hB,SAASxT,YAAa+6B,EAAmB6D,GACzF,GAAIE,EAAYloC,KAAO,EAAG,CAKtB,MAAOooC,EAAsBjhC,GAAMpB,EAAKoiC,GACxC,GAAsC,SAAlCD,EAAYjf,IAAI/R,SAASxX,KAAiB,CAC1C,MAAM2oC,EAAiB7xB,GAAgB0xB,EAAYzoC,UAC5C6oC,EAAsB7nC,GAAQsF,EAAKsiC,GAC1C,GAAIpiC,EAAeqiC,EAAsBF,GASrC,OALAttC,KAAK8hB,SAASjM,SAAS23B,EAAsB7nC,EAAM0G,QACnDrM,KAAK+nC,gBAAgBzjC,KAAK,CACtBue,MAAO7iB,KAAK6lB,cAAconB,GAC1BtnC,KAAMynC,GAIlB,CACA,GAAsC,WAAlCA,EAAYjf,IAAI/R,SAASxX,KAAmB,CAQ5C,MAAMilC,EAAc7pC,KAAKioC,cAAclS,MAAMvS,GAAUA,EAAMqmB,cAAgBuD,IACvE/F,EAAernC,KAAK0pC,YAAW,IAAMG,EAAYA,YAAYrgB,MAAMnF,YAAYwlB,EAAYA,YAAY1lB,OAAO,GAAI,CACpHsV,eAAe,EACfgB,oBAAoB,MAExBz6B,KAAKyjB,cAAc2pB,EAAa,CAAEzpB,YAAY,IAC9C,MAAM8pB,EAAWztC,KAAK4qC,sBAAsByC,GAO5C,OANArtC,KAAK0pC,YAAW,IAAM+D,EAASjkB,MAAM4I,UAAUiV,KAC/CrnC,KAAK2pC,yBAAyB8D,QAC9BztC,KAAK+nC,gBAAgBzjC,KAAK,CACtBue,MAAO7iB,KAAK6lB,cAAconB,GAC1BtnC,KAAMynC,GAGd,CAEA,MAAMM,EAAc1tC,KAAK0pC,YAAW,IAAM1pC,KAAKyjB,cAAc2pB,EAAa,CACtEzpB,YAAY,EACZ3K,aAAa,MAGX20B,EAA2BjyB,GAAgBqxB,EAAiBpoC,SAC5DyX,EAAWF,GAAoBlc,KAAK8hB,SAASxT,YAAaq/B,EAA0BT,GAC1FltC,KAAK0pC,YAAW,IAAM1pC,KAAKujB,WAAWmqB,EAAatxB,KACnDpc,KAAK2pC,yBAAyB+D,GAC9B1tC,KAAK+nC,gBAAgBzjC,KAAK,CACtBue,MAAO7iB,KAAK6lB,cAAconB,GAC1BtnC,KAAMynC,GAEd,KACK,CAKD,MAAM/F,EAAernC,KAAK0pC,YAAW,IAAM0D,EAAY5jB,MAAMnF,YAAY4oB,EAAc,CACnFxT,eAAe,EACfgB,oBAAoB,MAExB,IAAK4M,EACD,MAAM,IAAI1kC,MAAO,oBAAmBsqC,KAExC,MAAMW,EAAe1xB,GAAoBlc,KAAK8hB,SAASxT,YAAa+6B,EAAmB6D,GACjF1pB,EAAQxjB,KAAK4qC,sBAAsBgD,GACzC5tC,KAAK0pC,YAAW,IAAMlmB,EAAMgG,MAAM4I,UAAUiV,EAAc,CACtDzN,oBAAoB,MAExB55B,KAAK2pC,yBAAyBnmB,GAC9BxjB,KAAK+nC,gBAAgBzjC,KAAK,CACtBue,MAAOwkB,EACP1hC,KAAMynC,GAEd,CACJ,KAlH0D,CAItD,MAAM/F,EAAernC,KAAK0pC,YAAW,IAAM0D,EAAY5jB,MAAMnF,YAAY4oB,EAAc,CACnFxT,eAAe,EACfgB,oBAAoB,MAExB,IAAK4M,EACD,MAAM,IAAI1kC,MAAO,oBAAmBsqC,KAET,IAA3BG,EAAY5jB,MAAMtkB,MAElBlF,KAAKyjB,cAAc2pB,EAAa,CAAEzpB,YAAY,IAElD3jB,KAAK0pC,YAAW,IAAMqD,EAAiBvjB,MAAM4I,UAAUiV,EAAc,CACjEnjC,MAAOipC,EACPvT,oBAAoB,MAExB55B,KAAK2pC,yBAAyBoD,GAC9B/sC,KAAK+nC,gBAAgBzjC,KAAK,CACtBue,MAAOwkB,EACP1hC,KAAMynC,GAEd,MAjCIptC,KAAK6tC,UAAU,CACXloC,KAAM,CAAE6d,MAAO4pB,GACf/gC,GAAI,CACAmX,MAAOupB,EACP11B,SAAU61B,IAwH1B,CACAW,SAAAA,CAAUlqC,GACN,MAAMgC,EAAOhC,EAAQgC,KAAK6d,MACpBnX,EAAK1I,EAAQ0I,GAAGmX,MAChBwD,EAASrjB,EAAQ0I,GAAGgL,SAC1B,GAAe,WAAX2P,EAAqB,CACrB,MAAMpB,EAAcjgB,EAAKigB,YACnBzB,EAASnkB,KAAK0pC,YAAW,IAAM,IAAI/jC,EAAKwe,QAAQ/kB,KAAK2a,GAAMpU,EAAK6jB,MAAMnF,YAAYtK,EAAEpb,GAAI,CAC1F86B,eAAe,QAEmD,KAAjE9zB,aAAmC,EAASA,EAAK6jB,MAAMtkB,OACxDlF,KAAKyjB,cAAc9d,EAAM,CAAEge,YAAY,IAE3C3jB,KAAK0pC,YAAW,KACZ,IAAK,MAAM7mB,KAASsB,EAChB9X,EAAGmd,MAAM4I,UAAUvP,EAAO,CACtB4W,cAAe5W,IAAU+C,EACzBgU,oBAAoB,GAE5B,IAEJ55B,KAAK2pC,yBAAyBt9B,EAClC,KACK,CACD,OAAQ1G,EAAKwoB,IAAI/R,SAASxX,MACtB,IAAK,OACD5E,KAAK8hB,SAASnM,WAAW+F,GAAgB/V,EAAKhB,UAC9C,MACJ,IAAK,WAAY,CACb,MAAMmpC,EAAwB9tC,KAAKynC,gBAAgB1R,MAAMrlB,GAAMA,EAAE8S,QAAU7d,IAC3E,IAAKmoC,EACD,MAAM,IAAInrC,MAAM,iCAEpBmrC,EAAsBjsC,UACtB,KACJ,CACA,IAAK,SAAU,CACX,MAAMksC,EAAsB/tC,KAAKioC,cAAclS,MAAMrlB,GAAMA,EAAEm5B,cAAgBlkC,IAC7E,IAAKooC,EACD,MAAM,IAAIprC,MAAM,+BAEpBorC,EAAoBvnC,WAAW3E,SACnC,EAEJ,MAAMwnC,EAAoB3tB,GAAgBrP,EAAG1H,SACvCipC,EAAe1xB,GAAoBlc,KAAK8hB,SAASxT,YAAa+6B,EAAmBriB,GACvF,IAAI9hB,EACJ,OAAQlF,KAAK8hB,SAASxT,aAClB,KAAKf,EAAYyE,SACb9M,EACImkC,EAAkB9nC,OAAS,GAAK,EAC1BoE,EAAKwoB,IAAIxkB,MACThE,EAAKwoB,IAAIvkB,OACnB,MACJ,KAAK2D,EAAYkB,WACbvJ,EACImkC,EAAkB9nC,OAAS,GAAK,EAC1BoE,EAAKwoB,IAAIvkB,OACTjE,EAAKwoB,IAAIxkB,MAG3B3J,KAAK8hB,SAASjP,QAAQlN,EAAMT,EAAM0oC,EACtC,CACAjoC,EAAKwe,OAAOriB,SAAS+gB,IACjB7iB,KAAK+nC,gBAAgBzjC,KAAK,CAAEue,QAAOld,QAAO,GAElD,CACAwd,gBAAAA,CAAiBK,GACbzjB,MAAMojB,iBAAiBK,GACvB,MAAMoC,EAAc5lB,KAAK4lB,YACpB5lB,KAAKooC,SACNxiB,IAAgB5lB,KAAKs4B,wBAAwBz1B,OAC7C7C,KAAKs4B,wBAAwBh0B,KAAKshB,EAE1C,CACA+jB,wBAAAA,CAAyBnmB,GACrBzjB,MAAMojB,iBAAiBK,GACvB,MAAMoC,EAAc5lB,KAAK4lB,YACrBpC,GACAxjB,KAAKsjB,sBACJtjB,KAAKojB,iBAAiBI,IACvBxjB,KAAKqjB,qBAEJrjB,KAAKooC,SACNxiB,IAAgB5lB,KAAKs4B,wBAAwBz1B,OAC7C7C,KAAKs4B,wBAAwBh0B,KAAKshB,EAE1C,CACAojB,cAAAA,GACI,IAAIrqC,EAAKqB,KAAK0nC,YAAYx7B,OAC1B,KAAOlM,KAAK2hB,QAAQ+B,IAAI/kB,IACpBA,EAAKqB,KAAK0nC,YAAYx7B,OAE1B,OAAOvN,CACX,CACA8qC,WAAAA,CAAY9lC,GACHA,IACDA,EAAU,CAAC,GAEf,IAAIhF,EAAKgF,aAAyC,EAASA,EAAQhF,GAKnE,GAJIA,GAAMqB,KAAK2hB,QAAQ+B,IAAI/f,EAAQhF,MAC/BoE,QAAQC,KAAM,gCAA+BW,aAAyC,EAASA,EAAQhF,4CACvGA,OAAK8B,IAEJ9B,EAED,IADAA,EAAKqB,KAAK0nC,YAAYx7B,OACflM,KAAK2hB,QAAQ+B,IAAI/kB,IACpBA,EAAKqB,KAAK0nC,YAAYx7B,OAG9B,MAAMW,EAAO,IAAImwB,GAAmBh9B,KAAMrB,EAAIgF,GAE9C,GADAkJ,EAAK4hB,KAAK,CAAE7B,OAAQ,CAAC,EAAGgD,SAAU5vB,QAC7BA,KAAK2hB,QAAQ+B,IAAI7W,EAAKlO,IAAK,CAC5B,MAAM6H,EAAa,IAAIX,EAAoBgH,EAAK2c,MAAMqL,gBAAgB/wB,IAClE9D,KAAK4nC,iBAAiBtjC,KAAKR,EAAM,IACjC+I,EAAK2c,MAAMuL,kBAAkBjxB,IAC7B9D,KAAK6nC,iBAAiBvjC,KAAKR,EAAM,IACjC+I,EAAK2c,MAAMsO,QAAQh0B,IACnB,MAAM,QAAEjE,EAAO,OAAEo7B,EAAM,OAAEjU,EAAM,MAAE9iB,GAAUJ,EAC3C9D,KAAK68B,iBAAiB,CAClBl3B,KAAM,CAAE9F,QAASA,EAASC,QAASm7B,GACnC5uB,GAAI,CACAmX,MAAO3W,EACPwK,SAAU2P,EACV9iB,UAEN,IACF2I,EAAK2c,MAAM9E,WAAW5gB,IACtB9D,KAAK0wB,WAAWpsB,KAAKR,EAAM,IAC3B+I,EAAK2c,MAAMhE,YAAY1hB,IACvB9D,KAAK+3B,YAAYzzB,KAAKR,EAAM,IAC5B+I,EAAK2c,MAAM/D,mBAAmB3hB,IAC1B9D,KAAK2D,QAAQonB,WACbjnB,EAAM3B,iBAGVnC,KAAKgoB,mBAAmB1jB,KAAKR,EAAM,IACnC+I,EAAK2c,MAAM7E,0BAA0B7gB,IACrC9D,KAAK2wB,0BAA0BrsB,KAAKR,EAAM,IAC1C+I,EAAK2c,MAAM3E,eAAe/gB,IACtB9D,KAAKooC,SAGTpoC,KAAKg4B,eAAe1zB,KAAKR,EAAM+e,MAAM,IACrChW,EAAK2c,MAAMzE,kBAAkBjhB,IACzB9D,KAAKooC,SAGTpoC,KAAKq4B,kBAAkB/zB,KAAKR,EAAM+e,MAAM,IACxChW,EAAK2c,MAAMvE,wBAAwBnhB,IAC/B9D,KAAKooC,SAGLtkC,EAAM+e,QAAU7iB,KAAK4lB,aAGrB5lB,KAAKs4B,wBAAwBz1B,QAAUiB,EAAM+e,OAC7C7iB,KAAKs4B,wBAAwBh0B,KAAKR,EAAM+e,MAC5C,IACA3hB,EAAME,IAAIyL,EAAK2c,MAAM0O,sBAAuBrrB,EAAK2c,MAAM4O,2BAAvDl3B,EAAmF,KACnFlB,KAAKyiB,yBAAyBne,MAAM,KAExCtE,KAAK2hB,QAAQxc,IAAI0H,EAAKlO,GAAI,CAAEkE,MAAOgK,EAAMrG,cAC7C,CAGA,OADAqG,EAAK4f,aACE5f,CACX,CACAq/B,WAAAA,CAAYvoC,EAAS6f,GACjB,IAAI9gB,EAAI8M,EAAIwT,EACZ,MAAM8b,EAAmBn7B,EAAQ1E,UAC3B4+B,EAA+C,QAA/Bn7B,EAAKiB,EAAQk6B,oBAAiC,IAAPn7B,EAAgBA,EAAK1C,KAAK2D,QAAQs8B,oBACzFpzB,EAAO,IAAI4yB,GAAmBz/B,KAAM2D,EAAQhF,GAAImgC,EAAkBjB,GAClEhb,EAAQ,IAAI8b,GAAch7B,EAAQhF,GAAImgC,EAAkBjB,EAAc79B,KAAMA,KAAKu4B,KAAM/U,EAAO3W,EAAM,CACtGklB,SAAUpuB,EAAQouB,SAClB3Y,aAAczV,EAAQyV,aACtBE,cAAe3V,EAAQ2V,cACvBD,aAAc1V,EAAQ0V,aACtBE,cAAe5V,EAAQ4V,gBAM3B,OAJAsJ,EAAM4L,KAAK,CACP9xB,MAAgC,QAAxB6S,EAAK7L,EAAQhH,aAA0B,IAAP6S,EAAgBA,EAAK7L,EAAQhF,GACrEiuB,OAAoF,QAA3E5J,EAAKrf,aAAyC,EAASA,EAAQipB,cAA2B,IAAP5J,EAAgBA,EAAK,CAAC,IAE/GH,CACX,CACA+nB,qBAAAA,CAAsBxuB,EAAUlX,GAC5B,MAAMse,EAAQxjB,KAAKypC,cAEnB,OADAzpC,KAAKujB,WAAWC,EAAOpH,EAAUlX,GAC1Bse,CACX,CACAwoB,SAAAA,CAAUnpB,GACN,IAAIngB,EACJ,OAA4G,QAApGA,EAAKlB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UAAUkU,MAAMvS,GAAUA,EAAM3gB,MAAM2mB,MAAMgQ,cAAc3W,YAA4B,IAAPngB,OAAgB,EAASA,EAAGG,KACpJ,CACAypC,qBAAAA,CAAsBlwB,GAClB,MAAMD,EAAkBnc,KAAK8hB,SAASxT,YACtC,OAAO8N,EAAS7a,OAAS,GAAK,EACxB4a,EACAZ,GAAWY,EACrB,EChkDG,MAAM6xB,WAA0BvsB,GACnC,eAAInT,GACA,OAAOtO,KAAK8hB,SAASxT,WACzB,CACA,eAAIA,CAAYzL,GACZ7C,KAAK8hB,SAASxT,YAAczL,CAChC,CACA,WAAIc,GACA,OAAO3D,KAAKwnC,QAChB,CACA,gBAAI3oB,GACA,OAAO7e,KAAK2nC,aAChB,CACA,gBAAI9oB,CAAahc,GACb7C,KAAK2nC,cAAgB9kC,CACzB,CACAlD,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,MAAMqN,EAAW,CACb8E,mBAA0D,QAArCxP,EAAKiB,EAAQuO,0BAAuC,IAAPxP,GAAgBA,EAClF4L,YAAa3K,EAAQ2K,YACrBkE,OAAQ7O,EAAQgd,YACV,CAAE5N,gBAAiB,oBACnBtS,EACNwX,oBAAqBtU,EAAQsU,oBAC7Bha,UAAW0F,EAAQ1F,YAEvB+B,KAAKiuC,qBAAuB,IAAI7qC,EAChCpD,KAAKokB,oBAAsBpkB,KAAKiuC,qBAAqBnqC,MACrD9D,KAAKkoC,kBAAoB,IAAI9kC,EAC7BpD,KAAKglB,iBAAmBhlB,KAAKkoC,kBAAkBpkC,MAC/C9D,KAAKmoC,eAAiB,IAAI/kC,EAC1BpD,KAAK8kB,cAAgB9kB,KAAKmoC,eAAerkC,MACzC9D,KAAKg+B,wBAA0B,IAAI56B,EACnCpD,KAAKklB,uBAAyBllB,KAAKg+B,wBAAwBl6B,MAC3D9D,KAAKwnC,SAAW7jC,EAChB3D,KAAKkG,eAAelG,KAAKmoC,eAAgBnoC,KAAKkoC,kBAAmBloC,KAAKg+B,wBAAyBh+B,KAAKoiB,UAAUte,IAC1G9D,KAAKmoC,eAAe7jC,KAAKR,EAAM,IAC/B9D,KAAKkiB,aAAape,IAClB9D,KAAKkoC,kBAAkB5jC,KAAKR,EAAM,IAClC9D,KAAKwiB,mBAAmB1e,IACxB9D,KAAKg+B,wBAAwB15B,KAAKR,EAAM,IAEhD,CACAif,aAAAA,CAAcpf,GACV5D,MAAMgjB,cAAcpf,GACpB,MAAMuqC,EAAuD,iBAAxBvqC,EAAQ2K,aACzCtO,KAAK8hB,SAASxT,cAAgB3K,EAAQ2K,YAC1CtO,KAAKwnC,SAAWtvB,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAK2D,SAAUA,GAC3DuqC,IACAluC,KAAK8hB,SAASxT,YAAc3K,EAAQ2K,aAExCtO,KAAK8V,OAAO9V,KAAK8hB,SAASnY,MAAO3J,KAAK8hB,SAASlY,QAAQ,EAC3D,CACAya,WAAAA,CAAYxB,GACR7iB,KAAK8jB,YAAYjB,EACrB,CAMA/F,MAAAA,GACI,IAAIpa,EAEJ,MAAO,CACHyoC,KAFSnrC,KAAK8hB,SAASxD,YAGvBsH,YAAyC,QAA3BljB,EAAK1C,KAAK+hB,mBAAgC,IAAPrf,OAAgB,EAASA,EAAG/D,GAErF,CACA0O,UAAAA,CAAWwV,EAAOlW,GACd3M,KAAK8hB,SAAS3O,eAAeuI,GAAgBmH,EAAMle,SAAUgI,EACjE,CACAkX,SAAAA,CAAUhB,GACN7iB,KAAK2hB,QAAQ7f,SAAQ,CAACe,EAAOpB,KACzBoB,EAAMA,MAAMghB,UAAUhB,IAAUhgB,EAAMA,MAAM,GAEpD,CACAyhB,KAAAA,GACI,IAAI5hB,EACwB,QAA3BA,EAAK1C,KAAK+hB,mBAAgC,IAAPrf,GAAyBA,EAAG4hB,OACpE,CACArF,QAAAA,CAASkvB,GACLnuC,KAAKyD,QACL,MAAM,KAAE0nC,EAAI,YAAEvlB,GAAgBuoB,EAC9B,IACI,MAAMC,EAAQ,GAERzkC,EAAQ3J,KAAK2J,MACbC,EAAS5J,KAAK4J,OA0BpB,GAzBA5J,KAAK8hB,SAASnD,YAAYwsB,EAAM,CAC5BlsB,SAAW5E,IACP,MAAM,KAAE3Z,GAAS2Z,EACXxN,EAAO7M,KAAK2D,QAAQo8B,gBAAgB,CACtCphC,GAAI+B,EAAK/B,GACTqhC,KAAMt/B,EAAKzB,YAef,OAbAmvC,EAAMnqC,MAAK,IAAM4I,EAAK4hB,KAAK,CACvB7B,OAAQlsB,EAAKksB,OACbxT,aAAc1Y,EAAK0Y,aACnBC,aAAc3Y,EAAK2Y,aACnBC,cAAe5Y,EAAK4Y,cACpBC,cAAe7Y,EAAK6Y,cACpBtM,SAAUvM,EAAKuM,SACfC,OAAQxM,EAAKwM,KACb0iB,SAAU5vB,KACV8iB,UAAWzI,EAAK1N,YAEpB3M,KAAKmoC,eAAe7jC,KAAKuI,GACzB7M,KAAKquC,cAAcxhC,GACZA,CAAI,IAGnB7M,KAAK8V,OAAOnM,EAAOC,GAAQ,GAC3BwkC,EAAMtsC,SAASwsC,GAAMA,MACM,iBAAhB1oB,EAA0B,CACjC,MAAM/C,EAAQ7iB,KAAK4jB,SAASgC,GACxB/C,GACA7iB,KAAKmjB,iBAAiBN,EAE9B,CACJ,CACA,MAAOkkB,GAKH,IAAK,MAAMvjB,KAASxjB,KAAK4hB,OACrB4B,EAAM3hB,UACN7B,KAAK2hB,QAAQld,OAAO+e,EAAM7kB,IAC1BqB,KAAKkoC,kBAAkB5jC,KAAKkf,GAShC,MANAxjB,KAAKyD,QAMCsjC,CACV,CACA/mC,KAAKiuC,qBAAqB3pC,MAC9B,CACAb,KAAAA,GACI,MAAMkoC,EAAiB3rC,KAAK+hB,YACtBH,EAASpgB,MAAMmE,KAAK3F,KAAK2hB,QAAQE,UACvC,IAAK,MAAM2B,KAAS5B,EAChB4B,EAAMhd,WAAW3E,UACjB7B,KAAKyjB,cAAcD,EAAM3gB,MAAO,CAAE8gB,YAAY,IAE9CgoB,GACA3rC,KAAKmjB,sBAAiB1iB,GAE1BT,KAAK8hB,SAASre,OAClB,CACA+gB,SAAAA,CAAU3B,EAAOlf,GACb,IAAIjB,EACJ,IAAI2pC,EACJ,MAAMhF,EAAernC,KAAK8hB,SAASta,OAAOqb,GACpCumB,EAAgE,QAA9C1mC,EAAK1C,KAAK2hB,QAAQnX,IAAI7G,EAAQ4qC,kBAA+B,IAAP7rC,OAAgB,EAASA,EAAGG,MAC1G,IAAKumC,EACD,MAAM,IAAIzmC,MAAO,mBAAkBgB,EAAQ4qC,4BAE/C,MAAMvnB,EAASxF,GAAS7d,EAAQ0Y,WAChC,GAAe,WAAX2K,EACA,MAAM,IAAIrkB,MAAO,GAAEqkB,gCAElB,CACD,MAAM5K,EAAWV,GAAgB0tB,EAAezkC,SAChD0nC,EAAmBnwB,GAAoBlc,KAAK8hB,SAASxT,YAAa8N,EAAU4K,EAChF,CACAhnB,KAAKujB,WAAW8jB,EAAcgF,EAAkB1oC,EAAQuB,KAC5D,CACAqf,QAAAA,CAAS5gB,GACL,IAAIjB,EAAI8M,EAAIwT,EAAIC,EAChB,IAAIopB,EAA+C,QAA3B3pC,EAAKiB,EAAQyY,gBAA6B,IAAP1Z,EAAgBA,EAAK,CAAC,GACjF,GAAgC,QAA3B8M,EAAK7L,EAAQ0T,gBAA6B,IAAP7H,OAAgB,EAASA,EAAGu8B,eAAgB,CAChF,MAAM3C,EAA8E,QAA5DpmB,EAAKhjB,KAAK2hB,QAAQnX,IAAI7G,EAAQ0T,SAAS00B,uBAAoC,IAAP/oB,OAAgB,EAASA,EAAGngB,MACxH,IAAKumC,EACD,MAAM,IAAIzmC,MAAO,mBAAkBgB,EAAQ0T,SAAS00B,iCAExD,MAAM/kB,EAASxF,GAAS7d,EAAQ0T,SAASgF,WACzC,GAAe,WAAX2K,EACA,MAAM,IAAIrkB,MAAO,GAAEqkB,gCAElB,CACD,MAAM5K,EAAWV,GAAgB0tB,EAAezkC,SAChD0nC,EAAmBnwB,GAAoBlc,KAAK8hB,SAASxT,YAAa8N,EAAU4K,EAChF,CACJ,CACA,MAAMna,EAAO7M,KAAK2D,QAAQo8B,gBAAgB,CACtCphC,GAAIgF,EAAQhF,GACZqhC,KAAMr8B,EAAQ1E,YAgBlB,OAdA4N,EAAK4hB,KAAK,CACN7B,OAAkC,QAAzB3J,EAAKtf,EAAQipB,cAA2B,IAAP3J,EAAgBA,EAAK,CAAC,EAChE7J,aAAczV,EAAQyV,aACtBC,aAAc1V,EAAQ0V,aACtBC,cAAe3V,EAAQ2V,cACvBC,cAAe5V,EAAQ4V,cACvBtM,SAAUtJ,EAAQsJ,SAClBC,OAAQvJ,EAAQuJ,KAChB0iB,SAAU5vB,KACV8iB,WAAW,IAEf9iB,KAAKquC,cAAcxhC,GACnB7M,KAAKujB,WAAW1W,EAAMw/B,EAAkB1oC,EAAQuB,MAChDlF,KAAKmjB,iBAAiBtW,GACfA,CACX,CACAwhC,aAAAA,CAAcxrB,GACV,MAAMrc,EAAa,IAAIX,EAAoBgd,EAAMsL,IAAIpC,kBAAkBjoB,IAC9DA,EAAMqnB,WAGXnrB,KAAK2hB,QAAQ7f,SAAS0sC,IAClB,MAAMhrB,EAAQgrB,EAAU3rC,MACpB2gB,IAAUX,EACVW,EAAMK,WAAU,GAGhBL,EAAMK,WAAU,EACpB,GACF,KAEN7jB,KAAK2hB,QAAQxc,IAAI0d,EAAMlkB,GAAI,CACvBkE,MAAOggB,EACPrc,cAER,CACAqnC,SAAAA,CAAUzE,EAAgBvpC,EAASmnB,GAC/B,MAAMomB,EAAcptC,KAAK4jB,SAAS/jB,GAClC,IAAKutC,EACD,MAAM,IAAIzqC,MAAM,qBAEpB,MAAM0mC,EAAoB3tB,GAAgB0tB,EAAezkC,SACnD0oC,EAAiBnxB,GAAoBlc,KAAK8hB,SAASxT,YAAa+6B,EAAmBriB,IAClFsmB,EAAsBjhC,GAAMpB,EAAKoiC,GAClCE,EAAiB7xB,GAAgB0xB,EAAYzoC,UAC5C6oC,EAAsB7nC,GAAQsF,EAAKsiC,GAC1C,GAAIpiC,EAAeqiC,EAAsBF,GAKrC,YADAttC,KAAK8hB,SAASjM,SAAS23B,EAAsB7nC,EAAM0G,GAIvD,MAAMqhC,EAAc1tC,KAAKyjB,cAAc2pB,EAAa,CAChDzpB,YAAY,EACZ3K,aAAa,IAGX20B,EAA2BjyB,GAAgB0tB,EAAezkC,SAC1DyX,EAAWF,GAAoBlc,KAAK8hB,SAASxT,YAAaq/B,EAA0B3mB,GAC1FhnB,KAAKujB,WAAWmqB,EAAatxB,EACjC,CACA0H,WAAAA,CAAYN,GACRzjB,MAAM+jB,YAAYN,EACtB,CACA3hB,OAAAA,GACI9B,MAAM8B,UACN7B,KAAKiuC,qBAAqBpsC,SAC9B,ECpQG,MAAM4sC,WAA2B7tB,GACpC,UAAIuD,GACA,OAAOnkB,KAAKqY,UAAUvE,UAC1B,CACA,WAAInQ,GACA,OAAO3D,KAAKwnC,QAChB,CACA,UAAIjmC,GACA,OAAOvB,KAAKg3B,QAAQ9xB,IACxB,CACA,eAAIoJ,GACA,OAAOtO,KAAKqY,UAAU/J,WAC1B,CACA,aAAI+J,GACA,OAAOrY,KAAK0uC,UAChB,CACA,aAAIr2B,CAAUxV,GACV7C,KAAK0uC,WAAa7rC,EAClB7C,KAAK2uC,2BAA2B9rC,MAAQ,IAAIgD,EAAoB7F,KAAK0uC,WAAW9+B,cAAa,KACzF5P,KAAK4uC,mBAAmBtqC,UAAK7D,EAAU,IACvCT,KAAK0uC,WAAW5+B,cAAcvL,GAAMvE,KAAK6P,cAAcvL,KAAKC,KAAKvE,KAAK0uC,WAAW1+B,iBAAiBzL,GAAMvE,KAAK+P,iBAAiBzL,KAAKC,KAC3I,CACA,eAAIqI,GACA,OAAO5M,KAAKqY,UAAUzL,WAC1B,CACA,eAAIG,GACA,OAAO/M,KAAKqY,UAAUtL,WAC1B,CACA,UAAInD,GACA,OAAO5J,KAAKqY,UAAU/J,cAAgBf,EAAYkB,WAC5CzO,KAAKqY,UAAUpK,eACfjO,KAAKqY,UAAUnT,IACzB,CACA,SAAIyE,GACA,OAAO3J,KAAKqY,UAAU/J,cAAgBf,EAAYkB,WAC5CzO,KAAKqY,UAAUnT,KACflF,KAAKqY,UAAUpK,cACzB,CACAtO,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,MAAMqI,SAAS6L,cAAc,OAAQtQ,EAAQsU,qBAC7CjY,KAAK2uC,2BAA6B,IAAIroC,EACtCtG,KAAKg3B,QAAU,IAAI/xB,IACnBjF,KAAKiuC,qBAAuB,IAAI7qC,EAChCpD,KAAKokB,oBAAsBpkB,KAAKiuC,qBAAqBnqC,MACrD9D,KAAK6P,cAAgB,IAAIzM,EACzBpD,KAAK8P,aAAe9P,KAAK6P,cAAc/L,MACvC9D,KAAK+P,iBAAmB,IAAI3M,EAC5BpD,KAAKgQ,gBAAkBhQ,KAAK+P,iBAAiBjM,MAC7C9D,KAAK4uC,mBAAqB,IAAIxrC,EAC9BpD,KAAK0iB,kBAAoB1iB,KAAK4uC,mBAAmB9qC,MACjD9D,KAAK2E,QAAQ0F,MAAMT,OAAS,OAC5B5J,KAAK2E,QAAQ0F,MAAMV,MAAQ,OAC3B3J,KAAK0K,YAAc,IAAID,EAAWzK,KAAK2E,SACvC3E,KAAK0K,YAAYC,cAA2C,QAA5BjI,EAAKiB,EAAQ1F,iBAA8B,IAAPyE,EAAgBA,EAAK,IAEzF0K,EAAUmF,YAAYvS,KAAK2E,SAC3B3E,KAAKwnC,SAAW7jC,EAChB3D,KAAKqY,UAAY,IAAIvK,EAAU9N,KAAK2E,QAAShB,GAC7C3D,KAAKkG,eAAelG,KAAK6P,cAAe7P,KAAKiuC,qBAAsBjuC,KAAK+P,iBAAkB/P,KAAK4uC,mBACnG,CACA7rB,aAAAA,CAAcpf,GACV,IAAIjB,EAAI8M,EACJ,cAAe7L,GACf3D,KAAK0K,YAAYC,cAA2C,QAA5BjI,EAAKiB,EAAQ1F,iBAA8B,IAAPyE,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrB3D,KAAK8gB,gBAAyD,QAAtCtR,EAAK7L,EAAQsU,2BAAwC,IAAPzI,GAAgBA,GAEvD,iBAAxB7L,EAAQ2K,cACftO,KAAKqY,UAAU/J,YAAc3K,EAAQ2K,aAEzCtO,KAAKwnC,SAAWtvB,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAK2D,SAAUA,GAC/D3D,KAAKqY,UAAUvC,OAAO9V,KAAKqY,UAAUnT,KAAMlF,KAAKqY,UAAUpK,eAC9D,CACAqW,KAAAA,GACI,IAAI5hB,EACyB,QAA5BA,EAAK1C,KAAK+2B,oBAAiC,IAAPr0B,GAAyBA,EAAG4hB,OACrE,CACAE,SAAAA,CAAU7e,EAAM0G,GACZrM,KAAKqY,UAAUxC,SAASlQ,EAAM0G,EAClC,CACAgB,UAAAA,CAAWwV,EAAOlW,GACd,MAAMzI,EAAQlE,KAAKmkB,OAAOhgB,QAAQ0e,GAClC7iB,KAAKqY,UAAUlF,eAAejP,EAAOyI,EACzC,CACAkX,SAAAA,CAAUhB,EAAOgsB,GACb7uC,KAAK+2B,aAAelU,EACpB7iB,KAAKmkB,OACArZ,QAAQC,GAAMA,IAAM8X,IACpB/gB,SAASiJ,IACVA,EAAEojB,IAAI5L,mBAAmBje,KAAK,CAAE+mB,UAAU,IACrCwjB,GACD9jC,EAAEuZ,OACN,IAEJzB,EAAMsL,IAAI5L,mBAAmBje,KAAK,CAAE+mB,UAAU,IACzCwjB,GACDhsB,EAAMyB,OAEd,CACAD,WAAAA,CAAYxB,EAAOjQ,GACf,MAAMhE,EAAO5O,KAAKg3B,QAAQxsB,IAAIqY,EAAMlkB,IACpC,IAAKiQ,EACD,MAAM,IAAIjM,MAAO,2BAA0BkgB,EAAMlkB,MAErDiQ,EAAK/M,UACL7B,KAAKg3B,QAAQvyB,OAAOoe,EAAMlkB,IAC1B,MAAMuF,EAAQlE,KAAKmkB,OAAOxY,WAAWwF,GAAMA,IAAM0R,IAC7B7iB,KAAKqY,UAAU1C,WAAWzR,EAAO0O,GACzC/Q,UACZ,MAAMsiB,EAASnkB,KAAKmkB,OAChBA,EAAO5iB,OAAS,GAChBvB,KAAK6jB,UAAUM,EAAOA,EAAO5iB,OAAS,GAE9C,CACAqiB,QAAAA,CAASjlB,GACL,OAAOqB,KAAKmkB,OAAO4R,MAAMlpB,GAASA,EAAKlO,KAAOA,GAClD,CACA4lB,QAAAA,CAAS5gB,GACL,IAAIjB,EACJ,GAAI1C,KAAKg3B,QAAQtT,IAAI/f,EAAQhF,IACzB,MAAM,IAAIgE,MAAO,SAAQgB,EAAQhF,qBAErC,MAAMkO,EAAO7M,KAAK2D,QAAQo8B,gBAAgB,CACtCphC,GAAIgF,EAAQhF,GACZqhC,KAAMr8B,EAAQ1E,YAElB4N,EAAKyB,YAActO,KAAKqY,UAAU/J,YAClCzB,EAAK4hB,KAAK,CACN7B,OAAkC,QAAzBlqB,EAAKiB,EAAQipB,cAA2B,IAAPlqB,EAAgBA,EAAK,CAAC,EAChEkK,YAAajJ,EAAQiJ,YACrBG,YAAapJ,EAAQoJ,YACrBG,KAAMvJ,EAAQuJ,KACdD,SAAUtJ,EAAQsJ,SAClB2iB,SAAU5vB,OAEd,MAAMkF,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAOwI,EAAOC,WAChEzJ,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQzD,EAIlE,OAHAT,KAAKqY,UAAUxF,QAAQhG,EAAM3H,EAAMhB,GACnClE,KAAK8uC,UAAUjiC,GACf7M,KAAK6jB,UAAUhX,GACRA,CACX,CACAiJ,MAAAA,CAAOnM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkBjO,KAAKqY,UAAU/J,cAAgBf,EAAYkB,WACpE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACf3J,KAAKqY,UAAUvC,OAAO5Q,EAAM+I,EAChC,CACA6gC,SAAAA,CAAUjiC,GACN,MAAMrG,EAAaqG,EAAKshB,IAAIpC,kBAAkBjoB,IACrCA,EAAMqnB,WAGXnrB,KAAK6jB,UAAUhX,GAAM,EAAK,IAE9B7M,KAAKg3B,QAAQ7xB,IAAI0H,EAAKlO,GAAI6H,EAC9B,CACAsW,MAAAA,GACI,IAAIpa,EAYJ,MAAO,CACHgQ,MAZU1S,KAAKqY,UACdvE,WACA1U,KAAI,CAACyN,EAAMvB,KAEL,CACHpG,KAFSlF,KAAKqY,UAAU9E,YAAYjI,GAGpC5K,KAAMmM,EAAKiQ,SACX5P,OAAQL,EAAKK,KACbD,SAAUJ,EAAKI,aAKnBosB,WAAyC,QAA5B32B,EAAK1C,KAAK+2B,oBAAiC,IAAPr0B,OAAgB,EAASA,EAAG/D,GAC7EuG,KAAMlF,KAAKqY,UAAUnT,KACrBoJ,YAAatO,KAAKqY,UAAU/J,YAEpC,CACA2Q,QAAAA,CAAS8vB,GACL/uC,KAAKyD,QACL,MAAM,MAAEiP,EAAK,YAAEpE,EAAW,KAAEpJ,EAAI,WAAEm0B,GAAe0V,EAC3CX,EAAQ,GAERzkC,EAAQ3J,KAAK2J,MACbC,EAAS5J,KAAK4J,OAsCpB,GArCA5J,KAAKqY,UAAY,IAAIvK,EAAU9N,KAAK2E,QAAS,CACzC2J,cACA4D,mBAAoBlS,KAAK2D,QAAQuO,mBACjCO,WAAY,CACRvN,OACAwN,MAAOA,EAAMtT,KAAKyN,IACd,MAAMnM,EAAOmM,EAAKnM,KAClB,GAAIV,KAAKg3B,QAAQtT,IAAIhjB,EAAK/B,IACtB,MAAM,IAAIgE,MAAO,SAAQjC,EAAK/B,qBAElC,MAAMkkB,EAAQ7iB,KAAK2D,QAAQo8B,gBAAgB,CACvCphC,GAAI+B,EAAK/B,GACTqhC,KAAMt/B,EAAKzB,YAmBf,OAjBAmvC,EAAMnqC,MAAK,KACP,IAAIvB,EACJmgB,EAAM4L,KAAK,CACP7B,OAA+B,QAAtBlqB,EAAKhC,EAAKksB,cAA2B,IAAPlqB,EAAgBA,EAAK,CAAC,EAC7DkK,YAAalM,EAAKkM,YAClBG,YAAarM,EAAKqM,YAClBG,KAAML,EAAKK,KACXD,SAAUJ,EAAKI,SACf2iB,SAAU5vB,MACZ,IAEN6iB,EAAMvU,YAAcA,EACpBtO,KAAK8uC,UAAUjsB,GACf5Z,YAAW,KAEPjJ,KAAK6P,cAAcvL,KAAKue,EAAM,GAC/B,GACI,CAAE3d,KAAM2H,EAAK3H,KAAM2H,KAAMgW,EAAO,OAInD7iB,KAAK8V,OAAOnM,EAAOC,GACnBwkC,EAAMtsC,SAASwsC,GAAMA,MACK,iBAAfjV,EAAyB,CAChC,MAAMxW,EAAQ7iB,KAAK4jB,SAASyV,GACxBxW,GACA7iB,KAAK6jB,UAAUhB,EAEvB,CACA7iB,KAAKiuC,qBAAqB3pC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAM+C,KAAcxG,KAAKg3B,QAAQnV,SAClCrb,EAAW3E,UAGf,IADA7B,KAAKg3B,QAAQvzB,QACNzD,KAAKqY,UAAU9W,OAAS,GAAG,CACjBvB,KAAKqY,UAAU1C,WAAW,EAAGjI,EAAOC,YAAY,GACxD9L,SACT,CACJ,CACAA,OAAAA,GACI,IAAK,MAAM2E,KAAcxG,KAAKg3B,QAAQnV,SAClCrb,EAAW3E,UAEf7B,KAAKg3B,QAAQvzB,QACb,MAAMiP,EAAQ1S,KAAKqY,UAAUvE,WAC7B9T,KAAK2uC,2BAA2B9sC,UAChC7B,KAAKqY,UAAUxW,UACf,IAAK,MAAMgL,KAAQ6F,EACf7F,EAAKhL,UAET9B,MAAM8B,SACV,ECjQG,MAAMmtC,WAAsBnpC,EAC/B,WAAIlB,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,GACII,QACAC,KAAKivC,cdS+BjQ,GAAyB,CACjEr1B,MAAO,KACPC,OAAQ,KACRw1B,QAAS,YACT5f,KAAM,oEcZFxf,KAAKkvC,edciClQ,GAAyB,CACnEr1B,MAAO,KACPC,OAAQ,KACRw1B,QAAS,YACT5f,KAAM,qEcjBFxf,KAAKwG,WAAa,IAAIF,EACtBtG,KAAKmvC,OAAS,CACVhhB,IAAK,MAETnuB,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK2E,QAAQ1G,UAAY,oBACzB+B,KAAKs/B,SAAWl3B,SAAS6L,cAAc,QACvCjU,KAAKovC,UAAYhnC,SAAS6L,cAAc,OACxCjU,KAAKovC,UAAUnxC,UAAY,sBAC3B+B,KAAK2E,QAAQ4N,YAAYvS,KAAKovC,WAC9BpvC,KAAK2E,QAAQ4N,YAAYvS,KAAKs/B,UAC9Bt/B,KAAKkG,eAAenB,EAAsB/E,KAAK6gB,SAAU,SAAS,KAC9D,IAAIne,EACuB,QAA1BA,EAAK1C,KAAKmvC,OAAOhhB,WAAwB,IAAPzrB,GAAyBA,EAAGqrB,aAAa/tB,KAAKmvC,OAAOhhB,IAAIH,WAAW,IAE/G,CACAS,IAAAA,CAAK7B,GACD5sB,KAAKmvC,OAAOhhB,IAAMvB,EAAOuB,IACzBnuB,KAAKs/B,SAAS9L,YAAc5G,EAAOjwB,MACnCqD,KAAKqvC,aACLrvC,KAAKwG,WAAW3D,MAAQ+pB,EAAOuB,IAAIT,sBAAqB,KACpD1tB,KAAKqvC,YAAY,GAEzB,CACAA,UAAAA,GACI,IAAI3sC,EACJ,MAAMsrB,KAA2C,QAA1BtrB,EAAK1C,KAAKmvC,OAAOhhB,WAAwB,IAAPzrB,OAAgB,EAASA,EAAGsrB,YACrFtmB,EAAY1H,KAAKovC,UAAW,aAAcphB,GACtCA,GACIhuB,KAAKovC,UAAU7nC,SAASvH,KAAKkvC,iBAC7BlvC,KAAKkvC,eAAe1nC,SAEnBxH,KAAKovC,UAAU7nC,SAASvH,KAAKivC,gBAC9BjvC,KAAKovC,UAAU78B,YAAYvS,KAAKivC,iBAIhCjvC,KAAKovC,UAAU7nC,SAASvH,KAAKivC,gBAC7BjvC,KAAKivC,cAAcznC,SAElBxH,KAAKovC,UAAU7nC,SAASvH,KAAKkvC,iBAC9BlvC,KAAKovC,UAAU78B,YAAYvS,KAAKkvC,gBAG5C,CACAviB,MAAAA,CAAOuB,GACH,CAEJrsB,OAAAA,GACI7B,KAAKwG,WAAW3E,UAChB9B,MAAM8B,SACV,ECrDJ,MAAM0f,GAAetV,IACd,MAAMqjC,WAAsB7e,GAC/B9wB,WAAAA,CAAYgE,GACR5D,MAAM4D,EAAQisB,SAAUjsB,EAAQhF,GAAIgF,EAAQ1E,UAAW0E,EAAQ4rB,gBAAiB5rB,EAAQ2K,YAAa3K,EAAQqqB,WAAYrqB,EAAQonB,YACjI/qB,KAAK2D,QAAUA,CACnB,CACAwsB,gBAAAA,GACI,OAAOnwB,KAAK2D,QAAQssB,IACxB,CACAI,kBAAAA,GACI,OAAOrwB,KAAK2D,QAAQ0rB,MACxB,EAEG,MAAMkgB,WAA0B3uB,GACnC,MAAIjiB,GACA,OAAOqB,KAAK0hB,GAChB,CACA,UAAIyC,GACA,OAAOnkB,KAAKwvC,SAAS/2B,UACzB,CACA,YAAI+2B,CAAS3sC,GACT7C,KAAKyvC,UAAY5sC,EACjB7C,KAAKuG,YAAY1D,MAAQ,IAAIgD,EAAoB7F,KAAKyvC,UAAU17B,aAAY,KACxE/T,KAAK4uC,mBAAmBtqC,UAAK7D,EAAU,IACvCT,KAAKyvC,UAAU3/B,cAAcvL,GAAMvE,KAAK6P,cAAcvL,KAAKC,KAAKvE,KAAKyvC,UAAUz/B,iBAAiBzL,GAAMvE,KAAK+P,iBAAiBzL,KAAKC,KACzI,CACA,YAAIirC,GACA,OAAOxvC,KAAKyvC,SAChB,CACA,eAAI7iC,GACA,OAAO5M,KAAKwvC,SAAS5iC,WACzB,CACA,eAAIG,GACA,OAAO/M,KAAKwvC,SAASziC,WACzB,CACA,UAAInD,GACA,OAAO5J,KAAKwvC,SAASlhC,cAAgBf,EAAYkB,WAC3CzO,KAAKwvC,SAASvhC,eACdjO,KAAKwvC,SAAStqC,IACxB,CACA,SAAIyE,GACA,OAAO3J,KAAKwvC,SAASlhC,cAAgBf,EAAYkB,WAC3CzO,KAAKwvC,SAAStqC,KACdlF,KAAKwvC,SAASvhC,cACxB,CACA,WAAItK,GACA,OAAO3D,KAAKwnC,QAChB,CACA7nC,WAAAA,CAAYyN,EAAWzJ,GACnB,IAAIjB,EACJ3C,MAAMqI,SAAS6L,cAAc,OAAQtQ,EAAQsU,qBAC7CjY,KAAK0hB,IAAMH,GAAarV,OACxBlM,KAAKuG,YAAc,IAAID,EACvBtG,KAAK0vC,iBAAmB,IAAIzqC,IAC5BjF,KAAKiuC,qBAAuB,IAAI7qC,EAChCpD,KAAKokB,oBAAsBpkB,KAAKiuC,qBAAqBnqC,MACrD9D,KAAK4uC,mBAAqB,IAAIxrC,EAC9BpD,KAAK0iB,kBAAoB1iB,KAAK4uC,mBAAmB9qC,MACjD9D,KAAK0wB,WAAa,IAAIttB,EACtBpD,KAAK0kB,UAAY1kB,KAAK0wB,WAAW5sB,MACjC9D,KAAK6P,cAAgB,IAAIzM,EACzBpD,KAAK8P,aAAe9P,KAAK6P,cAAc/L,MACvC9D,KAAK+P,iBAAmB,IAAI3M,EAC5BpD,KAAKgQ,gBAAkBhQ,KAAK+P,iBAAiBjM,MAC7C9D,KAAK2wB,0BAA4B,IAAIvtB,EACrCpD,KAAK2kB,yBAA2B3kB,KAAK2wB,0BAA0B7sB,MAC/D9D,KAAK2E,QAAQ0F,MAAMT,OAAS,OAC5B5J,KAAK2E,QAAQ0F,MAAMV,MAAQ,OAC3B3J,KAAKkG,eAAelG,KAAK4uC,mBAAoB5uC,KAAKiuC,qBAAsBjuC,KAAK0wB,WAAY1wB,KAAK6P,cAAe7P,KAAK+P,iBAAkB/P,KAAK2wB,2BACzI3wB,KAAK0K,YAAc,IAAID,EAAWzK,KAAK2E,SACvC3E,KAAK0K,YAAYC,cAA2C,QAA5BjI,EAAKiB,EAAQ1F,iBAA8B,IAAPyE,EAAgBA,EAAK,IAEzF0K,EAAUmF,YAAYvS,KAAK2E,SAC3B3E,KAAKwnC,SAAW7jC,EAChB3D,KAAKwvC,SAAW,IAAIp3B,EAASpY,KAAK2E,QAAS,CAEvC2J,YAAaf,EAAYyE,WAE7BhS,KAAKkG,eAAelG,KAAKuG,YAC7B,CACA8G,UAAAA,CAAWwV,EAAOlW,GACd,MAAMzI,EAAQlE,KAAKmkB,OAAOhgB,QAAQ0e,GAClC7iB,KAAKwvC,SAASr8B,eAAejP,EAAOyI,EACxC,CACA2X,KAAAA,GACI,CAEJvB,aAAAA,CAAcpf,GACV,IAAIjB,EAAI8M,EACJ,cAAe7L,GACf3D,KAAK0K,YAAYC,cAA2C,QAA5BjI,EAAKiB,EAAQ1F,iBAA8B,IAAPyE,EAAgBA,EAAK,IAEzF,oBAAqBiB,IACrB3D,KAAK8gB,gBAAyD,QAAtCtR,EAAK7L,EAAQsU,2BAAwC,IAAPzI,GAAgBA,GAE1FxP,KAAKwnC,SAAWtvB,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAK2D,SAAUA,EACnE,CACA4gB,QAAAA,CAAS5gB,GACL,IAAIjB,EACJ,MAAMutB,EAAOjwB,KAAK2D,QAAQo8B,gBAAgB,CACtCphC,GAAIgF,EAAQhF,GACZqhC,KAAMr8B,EAAQ1E,YAElB,IAAIowB,EACA1rB,EAAQ4rB,iBAAmBvvB,KAAK2D,QAAQgsC,wBACxCtgB,EAASrvB,KAAK2D,QAAQgsC,sBAAsB,CACxChxC,GAAIgF,EAAQhF,GACZqhC,KAAMr8B,EAAQ4rB,mBAGjBF,IACDA,EAAS,IAAI2f,IAEjB,MAAMniC,EAAO,IAAIyiC,GAAc,CAC3B3wC,GAAIgF,EAAQhF,GACZM,UAAW0E,EAAQ1E,UACnBswB,gBAAiB5rB,EAAQ4rB,gBACzBF,SACAY,OACA3hB,YAAaf,EAAYyE,SACzBgc,aAAcrqB,EAAQqqB,WACtBjD,aAAc/qB,KAAK2D,QAAQonB,WAC3B6E,SAAU5vB,OAEdA,KAAK64B,WAAWhsB,GAChB,MAAM3H,EAA+B,iBAAjBvB,EAAQuB,KAAoBvB,EAAQuB,KAAOwI,EAAOC,WAChEzJ,EAAiC,iBAAlBP,EAAQO,MAAqBP,EAAQO,WAAQzD,EAYlE,OAXAoM,EAAK4hB,KAAK,CACN7B,OAAkC,QAAzBlqB,EAAKiB,EAAQipB,cAA2B,IAAPlqB,EAAgBA,EAAK,CAAC,EAChEusB,gBAAiBtrB,EAAQsrB,gBACzBC,gBAAiBvrB,EAAQurB,gBACzBlB,WAAYrqB,EAAQqqB,WACpBrxB,MAAOgH,EAAQhH,MACfs0B,aAAc,IAAIxM,GAAYzkB,MAC9B4vB,SAAU5vB,OAEdA,KAAKwvC,SAAS12B,QAAQjM,EAAM3H,EAAMhB,GAClC2I,EAAKyB,YAActO,KAAKwvC,SAASlhC,YAC1BzB,CACX,CACAwX,WAAAA,CAAYxB,GACR,MACM3e,EADQlE,KAAKmkB,OACCxY,WAAWwF,GAAMA,IAAM0R,IAC3C7iB,KAAKwvC,SAASz2B,WAAW7U,GACzBlE,KAAKu6B,cAAc1X,EACvB,CACA2B,SAAAA,CAAU7e,EAAM0G,GACZrM,KAAKwvC,SAAS35B,SAASlQ,EAAM0G,EACjC,CACAuX,QAAAA,CAASjlB,GACL,OAAOqB,KAAKmkB,OAAO4R,MAAMlpB,GAASA,EAAKlO,KAAOA,GAClD,CACAmX,MAAAA,CAAOnM,EAAOC,GACV,MAAO1E,EAAM+I,GAAkBjO,KAAKwvC,SAASlhC,cAAgBf,EAAYkB,WACnE,CAAC9E,EAAOC,GACR,CAACA,EAAQD,GACf3J,KAAKwvC,SAAS15B,OAAO5Q,EAAM+I,EAC/B,CACA6O,MAAAA,GACI,MAAMsf,EAAWv5B,GAAUA,IAAUgM,OAAOstB,kBACxCt5B,IAAUgM,OAAOC,uBACfrO,EACAoC,EAcN,MAAO,CACH6P,MAbU1S,KAAKwvC,SACd/2B,WACArZ,KAAI,CAACyN,EAAMvB,KAEZ,MAAO,CACHpG,KAFSlF,KAAKwvC,SAASj8B,YAAYjI,GAGnC5K,KAAMmM,EAAKiQ,SACXlQ,aARS/J,EAQYgK,EAAKoiB,gBARNpsB,GAAS,OAAIpC,EAAYoC,GAS7CkK,YAAaqvB,EAAQvvB,EAAKqiB,iBAC1Bc,SAAUnjB,EAAKmhB,cAVNnrB,KAWZ,IAIDqC,KAAMlF,KAAKwvC,SAAStqC,KAE5B,CACA+Z,QAAAA,CAAS2wB,GACL5vC,KAAKyD,QACL,MAAM,MAAEiP,EAAK,KAAExN,GAAS0qC,EAClBxB,EAAQ,GAERzkC,EAAQ3J,KAAK2J,MACbC,EAAS5J,KAAK4J,OACpB5J,KAAKwvC,SAAW,IAAIp3B,EAASpY,KAAK2E,QAAS,CACvC2J,YAAaf,EAAYyE,SACzBS,WAAY,CACRvN,OACAwN,MAAOA,EAAMtT,KAAKyN,IACd,MAAMnM,EAAOmM,EAAKnM,KACZuvB,EAAOjwB,KAAK2D,QAAQo8B,gBAAgB,CACtCphC,GAAI+B,EAAK/B,GACTqhC,KAAMt/B,EAAKzB,YAEf,IAAIowB,EACA3uB,EAAK6uB,iBACLvvB,KAAK2D,QAAQgsC,wBACbtgB,EAASrvB,KAAK2D,QAAQgsC,sBAAsB,CACxChxC,GAAI+B,EAAK/B,GACTqhC,KAAMt/B,EAAK6uB,mBAGdF,IACDA,EAAS,IAAI2f,IAEjB,MAAMnsB,EAAQ,IAAIysB,GAAc,CAC5B3wC,GAAI+B,EAAK/B,GACTM,UAAWyB,EAAKzB,UAChBswB,gBAAiB7uB,EAAK6uB,gBACtBF,SACAY,OACA3hB,YAAaf,EAAYyE,SACzBgc,aAAcnhB,EAAKmjB,SACnBjF,aAAc/qB,KAAK2D,QAAQonB,WAC3B6E,SAAU5vB,OAoBd,OAlBAA,KAAK64B,WAAWhW,GAChBurB,EAAMnqC,MAAK,KACP,IAAIvB,EACJmgB,EAAM4L,KAAK,CACP7B,OAA+B,QAAtBlqB,EAAKhC,EAAKksB,cAA2B,IAAPlqB,EAAgBA,EAAK,CAAC,EAC7DusB,gBAAiBpiB,EAAKD,YACtBsiB,gBAAiBriB,EAAKE,YACtBpQ,MAAO+D,EAAK/D,MACZqxB,aAAcnhB,EAAKmjB,SACnBiB,aAAc,IAAIxM,GAAYzkB,MAC9B4vB,SAAU5vB,OAEd6iB,EAAMvU,YAActO,KAAKwvC,SAASlhC,WAAW,IAEjDrF,YAAW,KAEPjJ,KAAK6P,cAAcvL,KAAKue,EAAM,GAC/B,GACI,CAAE3d,KAAM2H,EAAK3H,KAAM2H,KAAMgW,EAAO,OAInD7iB,KAAK8V,OAAOnM,EAAOC,GACnBwkC,EAAMtsC,SAASwsC,GAAMA,MACrBtuC,KAAKiuC,qBAAqB3pC,MAC9B,CACAb,KAAAA,GACI,IAAK,MAAO0N,EAAGtO,KAAU7C,KAAK0vC,iBAAiB5J,UAC3CjjC,EAAMhB,UAEV7B,KAAK0vC,iBAAiBjsC,QACtBzD,KAAKwvC,SAAS3tC,SAClB,CACAg3B,UAAAA,CAAWhW,GACP,MAAMrc,EAAa,IAAIX,EAAoBgd,EAAM6B,WAAW5gB,IACxD9D,KAAK0wB,WAAWpsB,KAAKR,EAAM,IAC3B+e,EAAM8B,0BAA0B7gB,IAChC9D,KAAK2wB,0BAA0BrsB,KAAKR,EAAM,KAE9C9D,KAAK0vC,iBAAiBvqC,IAAI0d,EAAMlkB,GAAI6H,EACxC,CACA+zB,aAAAA,CAAc1X,GACV,MAAMrc,EAAaxG,KAAK0vC,iBAAiBllC,IAAIqY,EAAMlkB,IAC/C6H,IACAA,EAAW3E,UACX7B,KAAK0vC,iBAAiBjrC,OAAOoe,EAAMlkB,IAE3C,CACAkD,OAAAA,GACI9B,MAAM8B,UACN,IAAK,MAAOsP,EAAGtO,KAAU7C,KAAK0vC,iBAAiB5J,UAC3CjjC,EAAMhB,UAEV7B,KAAK0vC,iBAAiBjsC,QACtBzD,KAAKwvC,SAAS3tC,SAClB,ECzRG,MAAMguC,WAAuB5hB,GAChC,YAAIhhB,GACA,OAAOjN,KAAKo7B,SAChB,CACA,eAAI9sB,CAAYzL,GACZ7C,KAAKuO,aAAe1L,CACxB,CACA,eAAIyL,GACA,OAAOtO,KAAKuO,YAChB,CACA,eAAI3B,GACA,MAAM1H,EAAoC,mBAAtBlF,KAAK8vC,aACnB9vC,KAAK8vC,eACL9vC,KAAK8vC,aAKX,OAJI5qC,IAASlF,KAAK+vC,wBACd/vC,KAAK+vC,sBAAwB7qC,EAC7BlF,KAAK47B,qBAEF12B,CACX,CACA,eAAI6H,GACA,MAAM7H,EAAoC,mBAAtBlF,KAAKgwC,aACnBhwC,KAAKgwC,eACLhwC,KAAKgwC,aAKX,OAJI9qC,IAASlF,KAAKiwC,wBACdjwC,KAAKiwC,sBAAwB/qC,EAC7BlF,KAAK47B,qBAEF12B,CACX,CACA,QAAIgI,GACA,OAAOlN,KAAKq7B,KAChB,CACA17B,WAAAA,CAAYhB,EAAImhC,GACZ//B,MAAMpB,EAAImhC,EAAe,IAAIhT,GAAsBnuB,EAAImhC,IACvD9/B,KAAK+vC,sBAAwB,EAC7B/vC,KAAKiwC,sBAAwBphC,OAAOC,kBACpC9O,KAAK8vC,aAAe,EACpB9vC,KAAKgwC,aAAenhC,OAAOC,kBAC3B9O,KAAKq7B,OAAQ,EACbr7B,KAAKwY,aAAe,IAAIpV,EACxBpD,KAAK+T,YAAc/T,KAAKwY,aAAa1U,MACrC9D,KAAKmuB,IAAI1B,WAAWzsB,MACpBA,KAAKkG,eAAelG,KAAKwY,aAAcxY,KAAKmuB,IAAIhC,wBAAwBroB,IACpE,MAAM,UAAEgf,GAAchf,GAChB,SAAE8rB,GAAa5vB,KAAKkuB,QAC1B0B,EAASviB,WAAWrN,KAAM8iB,EAAU,IACpC9iB,KAAKmuB,IAAI9B,gBAAe,KACxB,MAAM,SAAEuD,GAAa5vB,KAAKkuB,QAC1B0B,EAAS/L,UAAU7jB,KAAK,IACxBA,KAAKmuB,IAAInB,gCAAgClpB,IACR,iBAAtBA,EAAM8I,aACgB,mBAAtB9I,EAAM8I,cACb5M,KAAK8vC,aAAehsC,EAAM8I,aAEG,iBAAtB9I,EAAMiJ,aACgB,mBAAtBjJ,EAAMiJ,cACb/M,KAAKgwC,aAAelsC,EAAMiJ,aAE9B/M,KAAK47B,mBAAmB,IACxB57B,KAAKmuB,IAAIf,iBAAiBtpB,IAC1B9D,KAAKwY,aAAalU,KAAK,CAAEY,KAAMpB,EAAMoB,MAAO,IAEpD,CACAmI,UAAAA,CAAWyV,GACP9iB,KAAKmuB,IAAIjU,uBAAuB5V,KAAK,CAAEwe,aAC3C,CACAe,SAAAA,CAAUwH,GACNrrB,KAAKmuB,IAAI5L,mBAAmBje,KAAK,CAAE+mB,YACvC,CACAvV,MAAAA,CAAO5Q,EAAM+I,GACT,MAAOtE,EAAOC,GAAU5J,KAAKsO,cAAgBf,EAAYkB,WACnD,CAACvJ,EAAM+I,GACP,CAACA,EAAgB/I,GACvBnF,MAAM+V,OAAOnM,EAAOC,EACxB,CACA6kB,IAAAA,CAAK/B,GACD3sB,MAAM0uB,KAAK/B,GACX1sB,KAAKo7B,UAAY1O,EAAWzf,SACxByf,EAAW9f,cACX5M,KAAK8vC,aAAepjB,EAAW9f,aAE/B8f,EAAW3f,cACX/M,KAAKgwC,aAAetjB,EAAW3f,aAE/B2f,EAAWxf,OACXlN,KAAKq7B,MAAQ3O,EAAWxf,KAEhC,CACA4P,MAAAA,GAMI,OAAO5E,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG5uB,MAAM+c,UAAW,CAAElQ,aADzC/J,EAC8D7C,KAAK4M,YADxD/J,GAAS,OAAIpC,EAAYoC,GAC6CkK,YALjFlK,IAAUA,IAAUgM,OAAOstB,kBACxCt5B,IAAUgM,OAAOC,uBACfrO,EACAoC,EAEyGu5B,CAAQp8B,KAAK+M,eAD3GlK,KAErB,CACA+4B,iBAAAA,GACI57B,KAAKmuB,IAAIlB,wBAAwB3oB,KAAK,CAClCyI,YAAa/M,KAAKiwC,sBAClBrjC,YAAa5M,KAAK+vC,uBAE1B,ECrGG,SAASG,GAAevrC,EAAShB,GAEpC,OADkB,IAAI2jC,GAAkB3iC,EAAShB,GAChCwqB,GACrB,CACO,SAASgiB,GAAgBxrC,EAAShB,GACrC,MAAM1E,EAAY,IAAIwvC,GAAmB9pC,EAAShB,GAClD,OAAO,IAAIugB,GAAajlB,EAC5B,CACO,SAASmxC,GAAezrC,EAAShB,GACpC,MAAM1E,EAAY,IAAI+uC,GAAkBrpC,EAAShB,GACjD,OAAO,IAAIihB,GAAY3lB,EAC3B,CACO,SAASoxC,GAAe1rC,EAAShB,GACpC,MAAM1E,EAAY,IAAIswC,GAAkB5qC,EAAShB,GACjD,OAAO,IAAI8gB,GAAYxlB,EAC3B,C,uJCTA,MAAMqxC,EAAuBA,CAAC9zC,EAAO+zC,KACjC,MAAOp/B,EAAGq/B,GAAiBC,EAAAA,WACrBC,EAASD,EAAAA,OAAaj0C,EAAMm0C,gBAalC,OAZAF,EAAAA,oBAA0BF,GAAK,MAC3B5jB,OAASgkB,IACLD,EAAOE,QAAU14B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG+hB,EAAOE,SAAUD,GAOlEH,EAAcK,KAAKC,MAAM,KAE7B,IACGL,EAAAA,cAAoBj0C,EAAMyC,UAAWyxC,EAAOE,QAAQ,EAE/DN,EAAqBS,YAAc,wBAMnC,MAAMC,EAA2B,MAC7B,IAAInuC,EAAQ,EACZ,MAAO,CAAEqJ,KAAMA,IAAO,8BAA6BrJ,KAASsJ,aAC/D,EAHgC,GAIpB8kC,EAAmBR,EAAAA,cAAoB,CAAC,GAC9C,MAAMS,EACTvxC,WAAAA,CAAYqe,EAAQmzB,EAAalyC,EAAWytB,EAAY0kB,GACpDpxC,KAAKge,OAASA,EACdhe,KAAKmxC,YAAcA,EACnBnxC,KAAKf,UAAYA,EACjBe,KAAK0sB,WAAaA,EAClB1sB,KAAKoxC,QAAUA,EACfpxC,KAAKqxC,cAAgB,CAAC,EACtBrxC,KAAKsxC,UAAW,EAChBtxC,KAAKuxC,cACT,CACA5kB,MAAAA,CAAOnwB,GACH,GAAIwD,KAAKsxC,SACL,MAAM,IAAI3uC,MAAM,mDAEf3C,KAAKwxC,kBAKNxxC,KAAKwxC,kBAAkB7kB,OAAOnwB,GAH9BwD,KAAKqxC,cAAgBn5B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAAG3uB,KAAKqxC,eAAgB70C,EAKlF,CACA+0C,YAAAA,GACI,GAAIvxC,KAAKsxC,SACL,MAAM,IAAI3uC,MAAM,mDAEpB,GA6DyB,mBALA1D,EAxDHe,KAAKf,cA8DxBA,aAA6C,EAASA,EAAUwyC,UAxD/D,MAAM,IAAI9uC,MAAM,8GAkDrB,IAA0B1D,EAhDzB,MAAMyyC,EAAkBjB,EAAAA,cAAoBA,EAAAA,WAAiBH,GAAuB,CAChFrxC,UAAWe,KACNf,UACL0xC,eAAgB3wC,KAAK0sB,WACrB6jB,IAAM5rC,IACF3E,KAAKwxC,kBAAoB7sC,EACrBuT,OAAOC,KAAKnY,KAAKqxC,eAAe9vC,OAAS,IACzCvB,KAAKwxC,kBAAkB7kB,OAAO3sB,KAAKqxC,eACnCrxC,KAAKqxC,cAAgB,CAAC,EAC1B,IAGFh3B,EAAOra,KAAKoxC,QACZX,EAAAA,cAAoBQ,EAAiBU,SAAU,CAAE9uC,MAAO7C,KAAKoxC,SAAWM,GACxEA,EACAE,EAASC,EAAAA,aAAsBx3B,EAAMra,KAAKge,OAAQgzB,EAAyB9kC,QACjFlM,KAAKuwC,IAAM,CACPqB,SACAprC,WAAYxG,KAAKmxC,YAAYW,UAAUF,GAE/C,CACA/vC,OAAAA,GACI,IAAIa,EACgB,QAAnBA,EAAK1C,KAAKuwC,WAAwB,IAAP7tC,GAAyBA,EAAG8D,WAAW3E,UACnE7B,KAAKsxC,UAAW,CACpB,EAOG,MAAMS,EAAsBA,KAC/B,MAAOC,EAASC,GAAcxB,EAAAA,SAAe,IAC7CA,EAAAA,cAAqB,iBAAgBuB,EAAQzwC,UAY7C,MAAO,CAACywC,EAXUvB,EAAAA,aAAmBmB,IACjCK,GAAYC,GAAoB,IAAIA,EAAiBN,KACrD,IAAIN,GAAW,EACf,OAAOa,EAAAA,GAAmBxsC,MAAK,KAC3B,GAAI2rC,EACA,MAAM,IAAI3uC,MAAM,gDAEpB2uC,GAAW,EACXW,GAAYC,GAAoBA,EAAgBpnC,QAAQiP,GAAMA,IAAM63B,KAAQ,GAC9E,GACH,IACwB,ECtHxB,MAAMQ,EACT,WAAIztC,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYhB,EAAIM,EAAWozC,GACvBryC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKqyC,iBAAmBA,EACxBryC,KAAKuI,YAAc,IAAI+pC,EAAAA,GACvBtyC,KAAKwI,WAAaxI,KAAKuI,YAAYzE,MACnC9D,KAAKyI,WAAa,IAAI6pC,EAAAA,GACtBtyC,KAAK0I,UAAY1I,KAAKyI,WAAW3E,MACjC9D,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,gBAC1B+B,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,MAChC,CACA2a,KAAAA,GACI,CAEJmK,IAAAA,CAAK/B,GACD1sB,KAAKwuB,KAAO,IAAI0iB,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAKf,UAAW,CAC3E2tB,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChB8C,aAAcvE,EAAWuE,cAEjC,CACAtE,MAAAA,CAAO7oB,GACH,IAAIpB,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGiqB,OAAO,CAAEC,OAAQ9oB,EAAM8oB,QACpF,CACA9W,MAAAA,CAAO0V,EAAQC,GACX,CAEJ5pB,OAAAA,GACI,IAAIa,EACJ1C,KAAKuI,YAAY1G,UACjB7B,KAAKyI,WAAW5G,UACK,QAApBa,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGb,SAC7D,ECxCG,MAAM0wC,EACT,WAAI5tC,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYhB,EAAIM,EAAWozC,GACvBryC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKqyC,iBAAmBA,EACxBryC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,gBAC1B+B,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,MAChC,CACA2a,KAAAA,GACI,CAEJmK,IAAAA,CAAK/B,GACD1sB,KAAKwuB,KAAO,IAAI0iB,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAKf,UAAW,CAC3E2tB,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChB8C,aAAcvE,EAAWuE,cAEjC,CACAtE,MAAAA,CAAO7oB,GACH,IAAIpB,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGiqB,OAAO,CAAEC,OAAQ9oB,EAAM8oB,QACpF,CACA9W,MAAAA,CAAO0V,EAAQC,GACX,CAEJ5pB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGb,SAC7D,ECjCG,MAAM2wC,EACT,WAAI7tC,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYhB,EAAIM,EAAWozC,GACvBryC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKqyC,iBAAmBA,EACxBryC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,gBAC1B+B,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,MAChC,CACA8kB,IAAAA,CAAK/B,GACD1sB,KAAKwuB,KAAO,IAAI0iB,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAKf,UAAW,CAC3EukB,MAAOkJ,EAAWlJ,MAClByN,aAAcvE,EAAWuE,cAEjC,CACA3M,KAAAA,GACI,CAEJqI,MAAAA,CAAOC,GACH,IAAIlqB,EAAI8M,EAAIwT,EACRhjB,KAAK0sB,aACL1sB,KAAK0sB,WAAWE,OAASA,EAAOA,QAEf,QAApBlqB,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGiqB,OAAO,CAAEC,OAAyF,QAAhF5J,EAAgC,QAA1BxT,EAAKxP,KAAK0sB,kBAA+B,IAAPld,OAAgB,EAASA,EAAGod,cAA2B,IAAP5J,EAAgBA,EAAK,CAAC,GAC7L,CACAlN,MAAAA,CAAO0V,EAAQC,GACX,CAEJ5pB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGb,SAC7D,EClCG,MAAM4wC,EACT,WAAI9tC,GACA,OAAO3E,KAAK6gB,QAChB,CACA,QAAI2N,GACA,OAAOxuB,KAAK0yC,KAChB,CACA/yC,WAAAA,CAAYV,EAAWozC,EAAkB7V,GACrCx8B,KAAKf,UAAYA,EACjBe,KAAKqyC,iBAAmBA,EACxBryC,KAAKw8B,OAASA,EACdx8B,KAAK2yC,kBAAoB,IAAIC,EAAAA,GAC7B5yC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAAS5iB,UAAY,gBAC1B+B,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,MAChC,CACA8kB,IAAAA,CAAK/B,GACD1sB,KAAK2yC,kBAAkB9vC,MAAQ,IAAIgwC,EAAAA,GAA4B7yC,KAAKw8B,OAAOhT,MAAM3E,eAAc,KAC3F7kB,KAAK8yC,cAAc,IACnB9yC,KAAKw8B,OAAOhT,MAAMzE,kBAAiB,KACnC/kB,KAAK8yC,cAAc,IACnB9yC,KAAKw8B,OAAOhT,MAAMvE,wBAAuB,KACzCjlB,KAAK+yC,mBAAmB,IACxBrmB,EAAWyB,IAAI3L,mBAAkB,KACjCxiB,KAAKgzC,mBAAmB,KAE5BhzC,KAAK0yC,MAAQ,IAAIxB,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAKf,UAAW,CAC5EkvB,IAAKzB,EAAWyB,IAChB8C,aAAcvE,EAAWuE,aACzB9M,OAAQnkB,KAAKw8B,OAAOhT,MAAMrF,OAC1ByB,YAAa5lB,KAAKw8B,OAAOhT,MAAM5D,YAC/B0U,cAAet6B,KAAKw8B,OAAOrO,IAAI9C,SAC/B7H,MAAOxjB,KAAKw8B,QAEpB,CACA36B,OAAAA,GACI,IAAIa,EACJ1C,KAAK2yC,kBAAkB9wC,UACD,QAArBa,EAAK1C,KAAK0yC,aAA0B,IAAPhwC,GAAyBA,EAAGb,SAC9D,CACA8qB,MAAAA,CAAO7oB,GACH,IAAIpB,EACkB,QAArBA,EAAK1C,KAAK0yC,aAA0B,IAAPhwC,GAAyBA,EAAGiqB,OAAO7oB,EAAM8oB,OAC3E,CACAkmB,YAAAA,GACI9yC,KAAK2sB,OAAO,CAAEC,OAAQ,CAAEzI,OAAQnkB,KAAKw8B,OAAOhT,MAAMrF,SACtD,CACA4uB,iBAAAA,GACI/yC,KAAK2sB,OAAO,CACRC,OAAQ,CACJhH,YAAa5lB,KAAKw8B,OAAOhT,MAAM5D,cAG3C,CACAotB,iBAAAA,GACIhzC,KAAK2sB,OAAO,CACRC,OAAQ,CACJ0N,cAAet6B,KAAKw8B,OAAOrO,IAAI9C,WAG3C,ECxDJ,SAAS4nB,EAA0Bh0C,EAAWi0C,GAC1C,OAAOj0C,EACAu4B,GACQ,IAAIib,EAA+BxzC,EAAWi0C,EAAO1b,QAE9D/2B,CACV,CACA,MAAM0yC,EAAoB,4BAUnB,MAAMC,EAAgB3C,EAAAA,YAAiB,CAACj0C,EAAO+zC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB6C,EAAc7C,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAqKhC,OApKAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjBpd,EAAAA,GAAuBt0B,SAAS2xC,IAC5B,MAAM7kB,EAAM6kB,EACNC,EAAYl3C,EAAMoyB,GACpBA,KAAOpyB,GAASk3C,IAAcH,EAAU3C,QAAQhiB,KAChD4kB,EAAQ5kB,GAAO8kB,EACnB,IAEAJ,EAAY1C,SACZ0C,EAAY1C,QAAQ7tB,cAAcywB,GAKtCD,EAAU3C,QAAUp0C,CAAK,GAC1B45B,EAAAA,GAAuBh3B,KAAKwvB,GAAQpyB,EAAMoyB,MAC7C6hB,EAAAA,WAAgB,KACZ,IAAI/tC,EACJ,IAAK2wC,EAAOzC,QACR,OAEJ,MAAM+C,EAAwD,QAA9BjxC,EAAKlG,EAAMo3C,qBAAkC,IAAPlxC,EAAgBA,EAAK,CAAC,EACxFlG,EAAMyjC,sBACN0T,EAAuBR,GACnB32C,EAAMyjC,qBAEd,MAAM4T,EAAmB,CACrB5a,gCAAiCga,EAA0Bz2C,EAAMs3C,2BAA4B,CAAEhC,cAC/F/Y,iCAAkCka,EAA0Bz2C,EAAMu3C,4BAA6B,CAAEjC,cACjG3Y,kCAAmC8Z,EAA0Bz2C,EAAMw3C,6BAA8B,CAAElC,cACnG/R,gBAAkBp8B,GACP,IAAIyuC,EAAsBzuC,EAAQhF,GAAInC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CACzE8R,cAGRlS,mBAAmBj8B,GACR,IAAI4uC,EAAqB5uC,EAAQhF,GAAIg1C,EAAuBhwC,EAAQq8B,MAAO,CAC9E8R,cAGRhX,yBAA0Bt+B,EAAM03C,mBAC1B,IACS,IAAI1B,EAAmB,YAAah2C,EAAM03C,mBAAoB,CACjEpC,mBAGNrxC,EACNw/B,oBAAqBzjC,EAAMyjC,oBACrBkT,OACA1yC,GAEJ0tB,GAAM+hB,EAAAA,EAAAA,IAAemD,EAAOzC,QAAS14B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAnEhF,SAA4BnyB,GAOxB,OANoB45B,EAAAA,GAAuB1nB,QAAO,CAACylC,EAAKvlB,KAChDA,KAAOpyB,IACP23C,EAAIvlB,GAAOpyB,EAAMoyB,IAEdulB,IACR,CAAC,EAER,CA2DmFC,CAAmB53C,IAASq3C,KACjG,YAAEvrB,EAAW,aAAEC,GAAiB8qB,EAAOzC,QAM7C,OALAziB,EAAIrY,OAAOwS,EAAaC,GACpB/rB,EAAM63C,SACN73C,EAAM63C,QAAQ,CAAElmB,QAEpBmlB,EAAY1C,QAAUziB,EACf,KACHA,EAAItsB,SAAS,CAChB,GACF,IACH4uC,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMpqC,EAAa8sC,EAAY1C,QAAQlsB,WAAW5gB,IAC1CtH,EAAMkoB,WACNloB,EAAMkoB,UAAU5gB,EACpB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACrF,EAAMkoB,YACV+rB,EAAAA,WAAgB,KACZ,IAAK6C,EAAY1C,QACb,MAAO,OAIX,MAAMpqC,EAAa8sC,EAAY1C,QAAQprB,YAAY1hB,IAC3CtH,EAAMgpB,YACNhpB,EAAMgpB,WAAW1hB,EACrB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACrF,EAAMgpB,aACVirB,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQ7tB,cAAc,CAC9Bgd,gBAAkBp8B,GACP,IAAIyuC,EAAsBzuC,EAAQhF,GAAInC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CACzE8R,eAGV,GACH,CAACt1C,EAAMy3C,aACVxD,EAAAA,WAAgB,KACZ,IAAI/tC,EACJ,IAAK4wC,EAAY1C,QACb,OAEJ,MAAM+C,EAAwD,QAA9BjxC,EAAKlG,EAAMo3C,qBAAkC,IAAPlxC,EAAgBA,EAAK,CAAC,EACxFlG,EAAMyjC,sBACN0T,EAAuBR,GACnB32C,EAAMyjC,qBAEdqT,EAAY1C,QAAQ7tB,cAAc,CAC9Bkd,oBAAqBzjC,EAAMyjC,oBACrBkT,OACA1yC,EACNm/B,mBAAmBj8B,GACR,IAAI4uC,EAAqB5uC,EAAQhF,GAAIg1C,EAAuBhwC,EAAQq8B,MAAO,CAC9E8R,eAGV,GACH,CAACt1C,EAAMo3C,cAAep3C,EAAMyjC,sBAC/BwQ,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQ7tB,cAAc,CAC9B+X,yBAA0Bt+B,EAAM03C,mBAC1B,IACS,IAAI1B,EAAmB,YAAah2C,EAAM03C,mBAAoB,CACjEpC,mBAGNrxC,GACR,GACH,CAACjE,EAAM03C,qBACVzD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQ7tB,cAAc,CAC9BgW,iCAAkCka,EAA0Bz2C,EAAMu3C,4BAA6B,CAAEjC,eACnG,GACH,CAACt1C,EAAMu3C,8BACVtD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQ7tB,cAAc,CAC9BkW,gCAAiCga,EAA0Bz2C,EAAMs3C,2BAA4B,CAAEhC,eACjG,GACH,CAACt1C,EAAMs3C,6BACVrD,EAAAA,WAAgB,KACP6C,EAAY1C,SAGjB0C,EAAY1C,QAAQ7tB,cAAc,CAC9BoW,kCAAmC8Z,EAA0Bz2C,EAAMw3C,6BAA8B,CAAElC,eACrG,GACH,CAACt1C,EAAMw3C,+BACFvD,EAAAA,cAAoB,MAAO,CAAEpmC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU4mC,IAAK8C,GAAUrB,EAAQ,IAE1GoB,EAAcrC,YAAc,oBCnMrB,MAAMuD,EAAcA,IAAO7D,EAAAA,cAAoB,MAAO,CAAE7mC,OAAQ,KAAMD,MAAO,KAAM4qC,QAAS,YAAa,cAAe,QAASC,WAAW,EAAOv2C,UAAW,gBACjKwyC,EAAAA,cAAoB,OAAQ,CAAE1uC,EAAG,gICFrC,IAAI0yC,EAAkC,SAAU3/B,EAAGvQ,GAC/C,IAAIqH,EAAI,CAAC,EACT,IAAK,IAAImO,KAAKjF,EAAOoD,OAAOnX,UAAU2zC,eAAevsC,KAAK2M,EAAGiF,IAAMxV,EAAEJ,QAAQ4V,GAAK,IAC9EnO,EAAEmO,GAAKjF,EAAEiF,IACb,GAAS,MAALjF,GAAqD,mBAAjCoD,OAAOy8B,sBACtB,KAAIrpC,EAAI,EAAb,IAAgByO,EAAI7B,OAAOy8B,sBAAsB7/B,GAAIxJ,EAAIyO,EAAExY,OAAQ+J,IAC3D/G,EAAEJ,QAAQ4V,EAAEzO,IAAM,GAAK4M,OAAOnX,UAAU6zC,qBAAqBzsC,KAAK2M,EAAGiF,EAAEzO,MACvEM,EAAEmO,EAAEzO,IAAMwJ,EAAEiF,EAAEzO,IAF4B,CAItD,OAAOM,CACX,EAeO,MAAMipC,EAAsBnyC,IAC/B,IAAI,IAAEyrB,EAAK8C,aAAc6jB,EAAeloB,OAAQsB,EAAO,UAAE6mB,EAAS,oBAAEC,EAAmB,cAAEviB,EAAa,YAAEwiB,EAAW,eAAEC,GAAmBxyC,EAAI+Z,EAAOg4B,EAAO/xC,EAAI,CAAC,MAAO,eAAgB,SAAU,YAAa,sBAAuB,gBAAiB,cAAe,mBACpQ,MAAM/F,EAdV,SAAkBwxB,GACd,MAAOxxB,EAAO0hC,GAAYoS,EAAAA,SAAetiB,EAAIxxB,OAS7C,OARA8zC,EAAAA,WAAgB,KACZ,MAAMjqC,EAAa2nB,EAAIyM,kBAAkB92B,IACrCu6B,EAASv6B,EAAMnH,MAAM,IAEzB,MAAO,KACH6J,EAAW3E,SAAS,CACvB,GACF,CAACssB,IACGxxB,CACX,CAGkBw4C,CAAShnB,GACjBinB,EAAsB3E,EAAAA,QAAa,GACnC4E,EAAU5E,EAAAA,aAAmB3sC,IAC/BA,EAAM3B,iBACF6yC,EACAA,IAGA7mB,EAAIuO,OACR,GACD,CAACvO,EAAK6mB,IACHM,EAAmB7E,EAAAA,aAAmB3sC,IACxCA,EAAM3B,gBAAgB,GACvB,IACGozC,EAAiB9E,EAAAA,aAAmB3sC,IACtCsxC,EAAoBxE,QAA2B,IAAjB9sC,EAAM2xB,OACpChD,SAA8DA,EAAc3uB,EAAM,GACnF,CAAC2uB,IACE+iB,EAAe/E,EAAAA,aAAmB3sC,IAChCsxC,GAAwC,IAAjBtxC,EAAM2xB,SAAiBsf,IAC9CK,EAAoBxE,SAAU,EAC9ByE,EAAQvxC,IAEZmxC,SAA0DA,EAAYnxC,EAAM,GAC7E,CAACmxC,EAAaI,EAASN,IACpBU,EAAkBhF,EAAAA,aAAmB3sC,IACvCsxC,EAAoBxE,SAAU,EAC9BsE,SAAgEA,EAAepxC,EAAM,GACtF,CAACoxC,IACJ,OAAQzE,EAAAA,cAAoB,MAAOv4B,OAAOyW,OAAO,CAAE,cAAe,2BAA6BlS,EAAM,CAAEgW,cAAe8iB,EAAgBN,YAAaO,EAAcN,eAAgBO,EAAiBx3C,UAAW,mBACzMwyC,EAAAA,cAAoB,OAAQ,CAAExyC,UAAW,0BAA4BtB,IACpEo4C,GAActE,EAAAA,cAAoB,MAAO,CAAExyC,UAAW,wBAAyBw0B,cAAe6iB,EAAkBI,QAASL,GACtH5E,EAAAA,cAAoB6D,EAAa,OAAQ,ECzD9C,MAAMqB,UAAuB9F,EAAAA,GAChClwC,WAAAA,CAAYhB,EAAIM,EAAW22C,EAAgBvD,GACvCtyC,MAAMpB,EAAIM,GACVe,KAAK41C,eAAiBA,EACtB51C,KAAKqyC,iBAAmBA,CAC5B,CACA3jB,YAAAA,GACI,IAAIhsB,EAAI8M,EACR,OAAO,IAAI0hC,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAK41C,eAAgB,CAC3EhpB,OAAsF,QAA7Epd,EAA6B,QAAvB9M,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,OAAgB,EAASA,EAAGkqB,cAA2B,IAAPpd,EAAgBA,EAAK,CAAC,EACpH2e,IAAKnuB,KAAKmuB,IACV8C,aAAc,IAAI/M,EAAAA,GAAalkB,KAAKkuB,QAAQ0B,WAEpD,ECFG,MAAMimB,EAAiBpF,EAAAA,YAAiB,CAACj0C,EAAO+zC,KACnD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBqF,EAAerF,EAAAA,UACduB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkDhC,OAjDAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjBz7B,EAAAA,GAAwBjW,SAAS2xC,IAC7B,MAAM7kB,EAAM6kB,EACNC,EAAYl3C,EAAMoyB,GACpBA,KAAOpyB,GAASk3C,IAAcH,EAAU3C,QAAQhiB,KAChD4kB,EAAQ5kB,GAAO8kB,EACnB,IAEAoC,EAAalF,SACbkF,EAAalF,QAAQ7tB,cAAcywB,GAKvCD,EAAU3C,QAAUp0C,CAAK,GAC1Bub,EAAAA,GAAwB3Y,KAAKwvB,GAAQpyB,EAAMoyB,MAC9C6hB,EAAAA,WAAgB,KACZ,IAAK4C,EAAOzC,QACR,MAAO,OAIX,MAAMiD,EAAmB,CACrB9T,gBAAkBp8B,GACP,IAAIgyC,EAAehyC,EAAQhF,GAAIgF,EAAQq8B,KAAMxjC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,eAGxF3jB,GAAMgiB,EAAAA,EAAAA,IAAgBkD,EAAOzC,QAAS14B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EA3CjF,SAA4BnyB,GAOxB,OANoBub,EAAAA,GAAwBrJ,QAAO,CAACylC,EAAKvlB,KACjDA,KAAOpyB,IACP23C,EAAIvlB,GAAOpyB,EAAMoyB,IAEdulB,IACR,CAAC,EAER,CAmCoFC,CAAmB53C,IAASq3C,KAClG,YAAEvrB,EAAW,aAAEC,GAAiB8qB,EAAOzC,QAM7C,OALAziB,EAAIrY,OAAOwS,EAAaC,GACpB/rB,EAAM63C,SACN73C,EAAM63C,QAAQ,CAAElmB,QAEpB2nB,EAAalF,QAAUziB,EAChB,KACHA,EAAItsB,SAAS,CAChB,GACF,IACH4uC,EAAAA,WAAgB,KACPqF,EAAalF,SAGlBkF,EAAalF,QAAQ7tB,cAAc,CAC/Bgd,gBAAkBp8B,GACP,IAAIgyC,EAAehyC,EAAQhF,GAAIgF,EAAQq8B,KAAMxjC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,eAE5F,GACH,CAACt1C,EAAMy3C,aACFxD,EAAAA,cAAoB,MAAO,CAAEpmC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU4mC,IAAK8C,GAAUrB,EAAQ,IAE1G6D,EAAe9E,YAAc,qBCpEtB,MAAMgF,UAA2B5a,EAAAA,GACpCx7B,WAAAA,CAAYhB,EAAIM,EAAW22C,EAAgBvD,GACvCtyC,MAAMpB,EAAIM,GACVe,KAAK41C,eAAiBA,EACtB51C,KAAKqyC,iBAAmBA,CAC5B,CACA3jB,YAAAA,GACI,IAAIhsB,EAAI8M,EACR,OAAO,IAAI0hC,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAK41C,eAAgB,CAC3EhpB,OAAsF,QAA7Epd,EAA6B,QAAvB9M,EAAK1C,KAAKkuB,eAA4B,IAAPxrB,OAAgB,EAASA,EAAGkqB,cAA2B,IAAPpd,EAAgBA,EAAK,CAAC,EACpH2e,IAAKnuB,KAAKmuB,IAEV8C,aAAc,IAAIrM,EAAAA,GAAY5kB,KAAKkuB,QAC9B0B,WAEb,ECJG,MAAMomB,EAAgBvF,EAAAA,YAAiB,CAACj0C,EAAO+zC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtBwF,EAAcxF,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkDhC,OAjDAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjB9yB,EAAAA,GAAuB5e,SAAS2xC,IAC5B,MAAM7kB,EAAM6kB,EACNC,EAAYl3C,EAAMoyB,GACpBA,KAAOpyB,GAASk3C,IAAcH,EAAU3C,QAAQhiB,KAChD4kB,EAAQ5kB,GAAO8kB,EACnB,IAEAuC,EAAYrF,SACZqF,EAAYrF,QAAQ7tB,cAAcywB,GAKtCD,EAAU3C,QAAUp0C,CAAK,GAC1BkkB,EAAAA,GAAuBthB,KAAKwvB,GAAQpyB,EAAMoyB,MAC7C6hB,EAAAA,WAAgB,KACZ,IAAK4C,EAAOzC,QACR,MAAO,OAIX,MAAMiD,EAAmB,CACrB9T,gBAAkBp8B,GACP,IAAIoyC,EAAmBpyC,EAAQhF,GAAIgF,EAAQq8B,KAAMxjC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,eAG5F3jB,GAAMiiB,EAAAA,EAAAA,IAAeiD,EAAOzC,QAAS14B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EA3ChF,SAA4BnyB,GAOxB,OANoBkkB,EAAAA,GAAuBhS,QAAO,CAACylC,EAAKvlB,KAChDA,KAAOpyB,IACP23C,EAAIvlB,GAAOpyB,EAAMoyB,IAEdulB,IACR,CAAC,EAER,CAmCmFC,CAAmB53C,IAASq3C,KACjG,YAAEvrB,EAAW,aAAEC,GAAiB8qB,EAAOzC,QAM7C,OALAziB,EAAIrY,OAAOwS,EAAaC,GACpB/rB,EAAM63C,SACN73C,EAAM63C,QAAQ,CAAElmB,QAEpB8nB,EAAYrF,QAAUziB,EACf,KACHA,EAAItsB,SAAS,CAChB,GACF,IACH4uC,EAAAA,WAAgB,KACPwF,EAAYrF,SAGjBqF,EAAYrF,QAAQ7tB,cAAc,CAC9Bgd,gBAAkBp8B,GACP,IAAIoyC,EAAmBpyC,EAAQhF,GAAIgF,EAAQq8B,KAAMxjC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,eAEhG,GACH,CAACt1C,EAAMy3C,aACFxD,EAAAA,cAAoB,MAAO,CAAEpmC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU4mC,IAAK8C,GAAUrB,EAAQ,IAE1GgE,EAAcjF,YAAc,oBCrErB,MAAMmF,EACT,WAAIvxC,GACA,OAAO3E,KAAK6gB,QAChB,CACAlhB,WAAAA,CAAYhB,EAAIM,EAAWozC,GACvBryC,KAAKrB,GAAKA,EACVqB,KAAKf,UAAYA,EACjBe,KAAKqyC,iBAAmBA,EACxBryC,KAAK6gB,SAAWzY,SAAS6L,cAAc,OACvCjU,KAAK6gB,SAASxW,MAAMT,OAAS,OAC7B5J,KAAK6gB,SAASxW,MAAMV,MAAQ,MAChC,CACA8kB,IAAAA,CAAK/B,GACD1sB,KAAKwuB,KAAO,IAAI0iB,EAAUlxC,KAAK2E,QAAS3E,KAAKqyC,iBAAkBryC,KAAKf,UAAW,CAC3E2tB,OAAQF,EAAWE,OACnBuB,IAAKzB,EAAWyB,IAChBxxB,MAAO+vB,EAAW/vB,MAClBs0B,aAAcvE,EAAWuE,cAEjC,CACAnU,MAAAA,GACI,MAAO,CACHne,GAAIqB,KAAKrB,GAEjB,CACAguB,MAAAA,CAAOC,GACH,IAAIlqB,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGiqB,OAAOC,EAAOA,OAC3E,CACA/qB,OAAAA,GACI,IAAIa,EACiB,QAApBA,EAAK1C,KAAKwuB,YAAyB,IAAP9rB,GAAyBA,EAAGb,SAC7D,ECpBG,MAAMs0C,EAAgB1F,EAAAA,YAAiB,CAACj0C,EAAO+zC,KAClD,MAAM8C,EAAS5C,EAAAA,OAAa,MACtB2F,EAAc3F,EAAAA,UACbuB,EAASF,GAAaC,IAC7BtB,EAAAA,oBAA0BF,GAAK,IAAM8C,EAAOzC,SAAS,IACrD,MAAM2C,EAAY9C,EAAAA,OAAa,CAAC,GAkFhC,OAjFAA,EAAAA,WAAgB,KACZ,MAAM+C,EAAU,CAAC,EACjB1oB,EAAAA,GAAuBhpB,SAAS2xC,IAC5B,MAAM7kB,EAAM6kB,EACNC,EAAYl3C,EAAMoyB,GACpBA,KAAOpyB,GAASk3C,IAAcH,EAAU3C,QAAQhiB,KAChD4kB,EAAQ5kB,GAAO8kB,EACnB,IAEA0C,EAAYxF,SACZwF,EAAYxF,QAAQ7tB,cAAcywB,GAKtCD,EAAU3C,QAAUp0C,CAAK,GAC1BsuB,EAAAA,GAAuB1rB,KAAKwvB,GAAQpyB,EAAMoyB,MAC7C6hB,EAAAA,WAAgB,KACZ,IAAI/tC,EACJ,IAAK2wC,EAAOzC,QACR,MAAO,OAIX,MAAMyF,EAAqD,QAAjC3zC,EAAKlG,EAAM65C,wBAAqC,IAAP3zC,EAAgBA,EAAK,CAAC,EACnFmxC,EAAmB,CACrB9T,gBAAkBp8B,GACP,IAAIuyC,EAAiBvyC,EAAQhF,GAAInC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,cAE9EnC,sBAAwBhsC,GACb,IAAIuyC,EAAiBvyC,EAAQhF,GAAI03C,EAAiB1yC,EAAQq8B,MAAO,CAAE8R,eAG5E3jB,GAAMkiB,EAAAA,EAAAA,IAAegD,EAAOzC,QAAS14B,OAAOyW,OAAOzW,OAAOyW,OAAO,CAAC,EAhDhF,SAA4BnyB,GAOxB,OANoBsuB,EAAAA,GAAuBpc,QAAO,CAACylC,EAAKvlB,KAChDA,KAAOpyB,IACP23C,EAAIvlB,GAAOpyB,EAAMoyB,IAEdulB,IACR,CAAC,EAER,CAwCmFC,CAAmB53C,IAASq3C,KACjG,YAAEvrB,EAAW,aAAEC,GAAiB8qB,EAAOzC,QAM7C,OALAziB,EAAIrY,OAAOwS,EAAaC,GACpB/rB,EAAM63C,SACN73C,EAAM63C,QAAQ,CAAElmB,QAEpBioB,EAAYxF,QAAUziB,EACf,KACHA,EAAItsB,SAAS,CAChB,GACF,IACH4uC,EAAAA,WAAgB,KACP2F,EAAYxF,SAGjBwF,EAAYxF,QAAQ7tB,cAAc,CAC9Bgd,gBAAkBp8B,GACP,IAAIuyC,EAAiBvyC,EAAQhF,GAAInC,EAAMy3C,WAAWtwC,EAAQq8B,MAAO,CAAE8R,eAEhF,GACH,CAACt1C,EAAMy3C,aACVxD,EAAAA,WAAgB,KACZ,IAAI/tC,EACJ,IAAK0zC,EAAYxF,QACb,OAEJ,MAAMyF,EAAqD,QAAjC3zC,EAAKlG,EAAM65C,wBAAqC,IAAP3zC,EAAgBA,EAAK,CAAC,EACzF0zC,EAAYxF,QAAQ7tB,cAAc,CAC9B4sB,sBAAwBhsC,GACb,IAAIuyC,EAAiBvyC,EAAQhF,GAAI03C,EAAiB1yC,EAAQq8B,MAAO,CAAE8R,eAEhF,GACH,CAACt1C,EAAM65C,mBACV5F,EAAAA,WAAgB,KACZ,IAAK2F,EAAYxF,QACb,MAAO,OAIX,MAAMpqC,EAAa4vC,EAAYxF,QAAQlsB,WAAW5gB,IAC1CtH,EAAMkoB,WACNloB,EAAMkoB,UAAU5gB,EACpB,IAEJ,MAAO,KACH0C,EAAW3E,SAAS,CACvB,GACF,CAACrF,EAAMkoB,YACF+rB,EAAAA,cAAoB,MAAO,CAAEpmC,MAAO,CAAET,OAAQ,OAAQD,MAAO,QAAU4mC,IAAK8C,GAAUrB,EAAQ,IAE1GmE,EAAcpF,YAAc,mB,oFCrG5B,SAAgB,WAAa,kBAAkB,kBAAoB,yBAAyB,eAAiB,sBAAsB,kBAAoB,0B,cCGvJ,SAASuF,EAAmBt3C,GAAiC,IAAhC,KAAE4F,EAAI,UAAE3G,EAAS,SAAEd,GAAU6B,EACtD,OACI5B,EAAAA,EAAAA,KAAA,OACIa,WAAWC,EAAAA,EAAAA,GACPC,EAAAA,EAAgBo4C,OAAOC,WACvBr4C,EAAAA,EAAgBo4C,OAAOE,eAAe7xC,GACtC4N,EAAOgkC,WACPv4C,GACFd,SAEDA,GAGb,CACA,SAASu5C,EAAiBr3C,GAAmB,IAAlB,KAAEs3C,EAAI,MAAEh6C,GAAO0C,EACtC,OACIjC,EAAAA,EAAAA,KAAA,OAAKa,UAAWuU,EAAOokC,kBAAkBz5C,UACrCC,EAAAA,EAAAA,KAAA,QAAMa,UAAWuU,EAAOqkC,eAAe15C,SAAEw5C,KAIrD,CACA,SAASG,EAAiBC,GAAgB,IAAf,SAAE55C,GAAU45C,EACnC,OAAO55C,GACHC,EAAAA,EAAAA,KAAA,OAAKa,UAAWuU,EAAOwkC,kBAAkB75C,SAAEA,IAC3C,IACR,CACe,SAAS85C,EAAiBz6C,GACrC,MAAM,KAAEoI,EAAI,KAAE+xC,EAAI,MAAEh6C,EAAK,SAAEQ,EAAQ,UAAEc,GAAczB,EACnD,OACIS,EAAAA,EAAAA,MAACq5C,EAAmB,CAAC1xC,KAAMA,EAAM3G,UAAWA,EAAUd,SAAA,EAClDC,EAAAA,EAAAA,KAACs5C,EAAiB,CAAC/5C,MAAOA,EAAOg6C,KAAMA,KACvCv5C,EAAAA,EAAAA,KAAC05C,EAAiB,CAAA35C,SAAEA,MAGhC,CCtCe,SAAS+5C,EAAmB16C,GACzC,OACEY,EAAAA,EAAAA,KAAA,OAAKm3C,QAAQ,eAAgB/3C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE+5C,SAAS,UACTp1C,EAAE,qgBAIV,CCLA,MACMq1C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAACi6C,EAAQ,IACf16C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,wBACHrB,YAAY,2DAA0DH,SAAC,UAK9D,SAASm6C,EAAmB96C,GACzC,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,yBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAASo6C,EAAkB/6C,GACxC,OACEY,EAAAA,EAAAA,KAAA,OAAKm3C,QAAQ,eAAgB/3C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE+5C,SAAS,UACTp1C,EAAE,wcAIV,CCLA,MACMq1C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAACo6C,EAAO,IACd76C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,uBACHrB,YAAY,yDAAwDH,SAAC,SAK5D,SAASs6C,EAAkBj7C,GACxC,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,uBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAASu6C,EAAmBl7C,GACzC,OACEY,EAAAA,EAAAA,KAAA,OAAKm3C,QAAQ,eAAgB/3C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE+5C,SAAS,UACTp1C,EAAE,wLAIV,CCLA,MACMq1C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAACu6C,EAAQ,IACfh7C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,wBACHrB,YAAY,2DAA0DH,SAAC,UAK9D,SAASy6C,EAAmBp7C,GACzC,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,oBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,CCxBe,SAAS06C,EAAsBr7C,GAC5C,OACEY,EAAAA,EAAAA,KAAA,OAAKm3C,QAAQ,eAAgB/3C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE+5C,SAAS,UACTp1C,EAAE,2PAIV,CCLA,MACMq1C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAAC06C,EAAW,IAClBn7C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,2BACHrB,YAAY,iEAAgEH,SAAC,aCVpE,SAAS46C,EAAqBv7C,GAC3C,OACEY,EAAAA,EAAAA,KAAA,OAAKm3C,QAAQ,eAAgB/3C,EAAKW,UAChCC,EAAAA,EAAAA,KAAA,QACE+5C,SAAS,UACTp1C,EAAE,8XAIV,CCLA,MACMq1C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAAC46C,EAAU,IACjBr7C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,0BACHrB,YAAY,+DAA8DH,SAAC,YCNjF,MACMi6C,EAAe,CACnBT,MAAMv5C,EAAAA,EAAAA,KAAC06C,EAAW,IAClBn7C,OACES,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CACRH,GAAG,2BACHrB,YAAY,iEAAgEH,SAAC,aCJnF,MAgBA,MAhBwB,CACtB86C,KAAMX,EACNY,IAAKT,EACLU,KAAMP,EACNQ,QJKa,SAA+B57C,GAC5C,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,uBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,EIbEk7C,OFIa,SAA8B77C,GAC3C,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAhBO,sBAgBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,MER0B,CACxBm7C,UAAY97C,IAAUY,EAAAA,EAAAA,KAACk6C,EAAkB,CAAC36C,MAAM,eAAgBH,IAChE+7C,UAAY/7C,IAAUY,EAAAA,EAAAA,KAACw6C,EAAkB,CAACj7C,MAAM,eAAgBH,IAChEg8C,QAAUh8C,IAAUY,EAAAA,EAAAA,KAACq6C,EAAiB,CAAC96C,MAAM,aAAcH,IAC3Di8C,QDHa,SAA+Bj8C,GAC5C,OACEY,EAAAA,EAAAA,KAAC65C,EAAgB,IACXG,KACA56C,EACJyB,WAAWC,EAAAA,EAAAA,GAlBO,uBAkBe1B,EAAMyB,WAAWd,SACjDX,EAAMW,UAGb,IEde,SAASu7C,EAAWC,GACjC,MAAMn8C,GAAQo8C,EAAAA,EAAAA,GAAuBD,GAC/BE,GAZ4Bj0C,EAYyBpI,EAAMoI,KAX/Ck0C,EAAgBl0C,KAIlC7B,QAAQC,KACL,sDAAqD4B,+BAEjDk0C,EAAgBX,OARzB,IAAoCvzC,EAalC,OAAOxH,EAAAA,EAAAA,KAACy7C,EAAuB,IAAKr8C,GACtC,C,4ECXA,YAEOu8C,EAAAA,EAGHC,kBAAiB,KACjBC,WACJ,I,qHCFA,MAAMC,EAAoC,CACtC,CAAEr2C,MAAO,aAAcs2C,MAAO,aAAcxC,KAAM,mBAClD,CAAE9zC,MAAO,QAASs2C,MAAO,QAASxC,KAAM,sBACxC,CAAE9zC,MAAO,MAAOs2C,MAAO,MAAOxC,KAAM,qBAIlCyC,EAAwB,IAAI9G,EAAAA,GAAwB,CAAEtuC,QAAQ,IAE7D,SAASq1C,IAIZ,MAAOx2C,EAAOy2C,GAAY7I,EAAAA,SACtB8I,aAAaC,QAAQ,sBAAwBN,EAAW,GAAGr2C,OAG/D4tC,EAAAA,WAAgB,KACZ,MAAMjqC,EAAa4yC,EAAsBt1C,OAAOjB,GAAU,CACtDy2C,EAASz2C,MAOb,OAJAu2C,EAAsB90C,KAClBi1C,aAAaC,QAAQ,sBAAwBN,EAAW,GAAGr2C,OAGxD,KACH2D,EAAW3E,SAAS,CACvB,GACF,IAEH,MAAM43C,EAAShJ,EAAAA,aAAmB5tC,IAC9B02C,aAAaG,QAAQ,oBAAqB72C,GAC1Cy2C,EAASz2C,GACTu2C,EAAsB90C,KAAKzB,EAAM,GAClC,IAIH,MAAO,CAFQq2C,EAAWnjB,MAAM5kB,GAAMA,EAAEtO,QAAUA,IAElC42C,EACpB,CAKA,MAAME,EAAqBA,KACvB,MAAOC,EAAiBC,GAAsBR,IAM9C,OACIp8C,EAAAA,EAAAA,MAAC68C,EAAAA,GAAiB,CAAA38C,SAAA,EACdC,EAAAA,EAAAA,KAAC08C,EAAAA,GAAoB,CAACC,SAAS,EAAK58C,UAChCF,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,6BAA4Bd,SAAA,EACvCC,EAAAA,EAAAA,KAAA,QAAMiN,MAAO,CAAEgpB,QAAS,WAAYl2B,SAC/By8C,EAAgBT,SAErB/7C,EAAAA,EAAAA,KAAA,OACIuM,MAAO,GACPC,OAAQ,GACRowC,KAAKC,EAAAA,EAAAA,GAAWL,EAAgBjD,MAChCtsC,MAAO,CAAE6vC,YAAa,eAIlC98C,EAAAA,EAAAA,KAAC08C,EAAAA,GAAoB,CACjBK,KAAK,SACLC,MAAM,MACNC,WAAY,GACZp8C,UAAU,sBAAqBd,SAE9B+7C,EAAW95C,KAAKk7C,IAETl9C,EAAAA,EAAAA,KAAC08C,EAAAA,GAAiB,CACdpE,QAASA,IAAMmE,EAAmBS,EAAUnB,OAC5Cl7C,UAAU,mBAAkBd,UAE5BF,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,sBAAqBd,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAMiN,MAAO,CAAEkwC,aAAc,OAAQp9C,SAChCm9C,EAAUnB,SAEf/7C,EAAAA,EAAAA,KAAA,OACIuM,MAAO,GACPC,OAAQ,GACRowC,KAAKC,EAAAA,EAAAA,GAAWK,EAAU3D,mBAOlC,EAIf6D,EAAoBA,KACtBp9C,EAAAA,EAAAA,KAACq9C,EAAAA,EAAW,CAAAt9C,SAAEA,KAAMC,EAAAA,EAAAA,KAACu8C,EAAkB,MAG5Ce,EAAsBl+C,IAIxB,MAAOo9C,GAAmBP,IAE1B,OAAIO,EAAgB/2C,QAAUrG,EAAM89C,UACzB99C,EAAMW,SAGV,IAAI,EAGF67C,EAAqBx8C,IAIvBY,EAAAA,EAAAA,KAACq9C,EAAAA,EAAW,CAAAt9C,SAAEA,KAAMC,EAAAA,EAAAA,KAACs9C,EAAkB,IAAKl+C,K,4EC7HvD,MAGam+C,EAAen+C,IACxB,MAAO89C,IAAajB,EAAAA,EAAAA,MAEduB,EAAc,2EAChBp+C,EAAMmC,MACN27C,EAAUnB,MAAM0B,gBACdr7B,EAAQ,cACVhjB,EAAMmC,MACN27C,EAAUz3C,MAAMg4C,2BACpB,OACI59C,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACI48C,IAAKx6B,EACLnV,MAAO,CAAEV,MAAO,OAAQC,OAAS,GAAEpN,EAAMoN,QAAU,YAEvD3M,EAAAA,EAAAA,MAAA,OAAKoN,MAAO,CAAEilB,QAAS,OAAQwrB,eAAgB,YAAa39C,SAAA,EACxDC,EAAAA,EAAAA,KAAC29C,EAAW,CAACnV,IAAKgV,KAClBx9C,EAAAA,EAAAA,KAAA,KACI4pB,OAAO,SACPuf,KAAM/mB,EACNvhB,UAAU,4BAA2Bd,SACxC,qBAIH,EAID87C,EAAcz8C,IAChBY,EAAAA,EAAAA,KAACq9C,EAAAA,EAAW,CAAAt9C,SAAEA,KAAMC,EAAAA,EAAAA,KAACu9C,EAAW,IAAKn+C,MAG1Cu+C,EAAev+C,IAEbS,EAAAA,EAAAA,MAAA,QACIgB,UAAU,qBACVoM,MAAO,CAAEilB,QAAS,OAAQ0rB,WAAY,UAAW79C,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,QAAMa,UAAU,6BAA4Bd,SAAG,cAC/CC,EAAAA,EAAAA,KAAA,KACImpC,KAAM/pC,EAAMopC,IACZ5e,OAAQ,SACRyf,IAAI,WACJxoC,UAAU,6BAA4Bd,UAEtCC,EAAAA,EAAAA,KAAA,QACIiN,MAAO,CACH4wC,WAAY,OACZV,aAAc,OAChBp9C,SACL,oB","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        if (!tabToRemove) {\n            throw new Error(`dockview: Tab not found`);\n        }\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n        this.updateClassnames();\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","tabToRemove","updateClassnames","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","addTab","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","icon","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}