{"version":3,"file":"assets/js/6875c492.8f4ac588.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogTagsPostsPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-common/src/utils/unlistedUtils.tsx","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/Unlisted/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n  usePluralForm,\n} from '@docusaurus/theme-common';\nimport Link from '@docusaurus/Link';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nimport Unlisted from '@theme/Unlisted';\nimport Heading from '@theme/Heading';\n// Very simple pluralization: probably good enough for now\nfunction useBlogPostsPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.blog.post.plurals',\n          description:\n            'Pluralized label for \"{count} posts\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One post|{count} posts',\n        },\n        {count},\n      ),\n    );\n}\nfunction useBlogTagsPostsPageTitle(tag) {\n  const blogPostsPlural = useBlogPostsPlural();\n  return translate(\n    {\n      id: 'theme.blog.tagTitle',\n      description: 'The title of the page for a blog tag',\n      message: '{nPosts} tagged with \"{tagName}\"',\n    },\n    {nPosts: blogPostsPlural(tag.count), tagName: tag.label},\n  );\n}\nfunction BlogTagsPostsPageMetadata({tag}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <>\n      <PageMetadata title={title} />\n      <SearchMetadata tag=\"blog_tags_posts\" />\n    </>\n  );\n}\nfunction BlogTagsPostsPageContent({tag, items, sidebar, listMetadata}) {\n  const title = useBlogTagsPostsPageTitle(tag);\n  return (\n    <BlogLayout sidebar={sidebar}>\n      {tag.unlisted && <Unlisted />}\n      <header className=\"margin-bottom--xl\">\n        <Heading as=\"h1\">{title}</Heading>\n        <Link href={tag.allTagsPath}>\n          <Translate\n            id=\"theme.tags.tagsPageLink\"\n            description=\"The label of the link targeting the tag list page\">\n            View All Tags\n          </Translate>\n        </Link>\n      </header>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={listMetadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogTagsPostsPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogTagPostListPage,\n      )}>\n      <BlogTagsPostsPageMetadata {...props} />\n      <BlogTagsPostsPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Translate from '@docusaurus/Translate';\nimport Head from '@docusaurus/Head';\n\nexport function UnlistedBannerTitle(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.title\"\n      description=\"The unlisted content banner title\">\n      Unlisted page\n    </Translate>\n  );\n}\n\nexport function UnlistedBannerMessage(): JSX.Element {\n  return (\n    <Translate\n      id=\"theme.unlistedContent.message\"\n      description=\"The unlisted content banner message\">\n      This page is unlisted. Search engines will not index it, and only users\n      having a direct link can access it.\n    </Translate>\n  );\n}\n\nexport function UnlistedMetadata(): JSX.Element {\n  return (\n    <Head>\n      <meta name=\"robots\" content=\"noindex, nofollow\" />\n    </Head>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport {\n  ThemeClassNames,\n  UnlistedBannerTitle,\n  UnlistedBannerMessage,\n  UnlistedMetadata,\n} from '@docusaurus/theme-common';\nimport Admonition from '@theme/Admonition';\nfunction UnlistedBanner({className}) {\n  return (\n    <Admonition\n      type=\"caution\"\n      title={<UnlistedBannerTitle />}\n      className={clsx(className, ThemeClassNames.common.unlistedBanner)}>\n      <UnlistedBannerMessage />\n    </Admonition>\n  );\n}\nexport default function Unlisted(props) {\n  return (\n    <>\n      {/*\n        Unlisted metadata declared here for simplicity.\n        Ensures we never forget to add the correct noindex metadata.\n        Also gives a central place for user to swizzle override default metadata.\n        */}\n      <UnlistedMetadata />\n      <UnlistedBanner {...props} />\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction cloneNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(node.orientation, node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            result.addChild(cloneNode(child, child.size, child.orthogonalSize), child.size, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, node.orientation, orthogonalSize);\n    }\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    normalize() {\n        if (!this._root) {\n            return;\n        }\n        if (this._root.children.length !== 1) {\n            return;\n        }\n        const oldRoot = this.root;\n        // can remove one level of redundant branching if there is only a single child\n        const childReference = oldRoot.children[0];\n        if (childReference instanceof LeafNode) {\n            return;\n        }\n        oldRoot.element.remove();\n        const child = oldRoot.removeChild(0); // Remove child to prevent double disposal\n        oldRoot.dispose(); // Dispose old root (won't dispose removed child)\n        child.dispose(); // Dispose the removed child\n        this._root = cloneNode(childReference, childReference.size, childReference.orthogonalSize);\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\nexport const DESERIALIZATION_POPOUT_DELAY_MS = 100;\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, DESERIALIZATION_POPOUT_DELAY_MS, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    /**\n     * Promise that resolves when all popout groups from the last fromJSON call are restored.\n     * Useful for tests that need to wait for delayed popout creation.\n     */\n    get popoutRestorationPromise() {\n        return this._popoutRestorationPromise;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._popoutRestorationPromise = Promise.resolve();\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        this.gridview.normalize();\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            // Create a promise that resolves when all popout groups are created\n            const popoutPromises = [];\n            // Queue popup group creation with delays to avoid browser blocking\n            serializedPopoutGroups.forEach((serializedPopoutGroup, index) => {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                // Add a small delay for each popup after the first to avoid browser popup blocking\n                const popoutPromise = new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.addPopoutGroup(group, {\n                            position: position !== null && position !== void 0 ? position : undefined,\n                            overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                            referenceGroup: gridReferenceGroup\n                                ? this.getPanel(gridReferenceGroup)\n                                : undefined,\n                            popoutUrl: url,\n                        });\n                        resolve();\n                    }, index * DESERIALIZATION_POPOUT_DELAY_MS); // 100ms delay between each popup\n                });\n                popoutPromises.push(popoutPromise);\n            });\n            // Store the promise for tests to wait on\n            this._popoutRestorationPromise = Promise.all(popoutPromises).then(() => void 0);\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            // Ensure group becomes active after move\n            if (options.skipSetActive !== true) {\n                // For center moves (merges), we need to ensure the target group is active\n                // unless explicitly told not to (skipSetActive: true)\n                this.doSetGroupAndPanelActive(to);\n            }\n            else if (!this.activePanel) {\n                // Even with skipSetActive: true, ensure there's an active panel if none exists\n                // This maintains basic functionality while respecting skipSetActive\n                this.doSetGroupAndPanelActive(to);\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, {\n                                skipActive: true,\n                            });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        // Ensure group becomes active after move\n        if (options.skipSetActive === false) {\n            // Only activate when explicitly requested (skipSetActive: false)\n            // Use 'to' group for non-center moves since 'from' may have been destroyed\n            const targetGroup = to !== null && to !== void 0 ? to : from;\n            this.doSetGroupAndPanelActive(targetGroup);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPaginator","props","metadata","previousPage","nextPage","_jsxs","className","translate","id","message","description","children","_jsx","PaginatorNavLink","permalink","title","Translate","isNext","BlogPostItems","_ref","items","component","BlogPostItemComponent","BlogPostItem","_Fragment","map","_ref2","content","BlogPostContent","BlogPostProvider","useBlogTagsPostsPageTitle","tag","blogPostsPlural","selectMessage","usePluralForm","count","useBlogPostsPlural","nPosts","tagName","label","BlogTagsPostsPageMetadata","PageMetadata","SearchMetadata","BlogTagsPostsPageContent","sidebar","listMetadata","BlogLayout","unlisted","Unlisted","Heading","as","Link","href","allTagsPath","BlogTagsPostsPage","HtmlClassNameProvider","clsx","ThemeClassNames","wrapper","blogPages","page","blogTagPostListPage","UnlistedBannerTitle","UnlistedBannerMessage","UnlistedMetadata","Head","name","UnlistedBanner","Admonition","type","common","unlistedBanner","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableListener","element","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","cloneNode","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","normalize","childReference","insertOrthogonalSplitviewAtRoot","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","popoutRestorationPromise","_popoutRestorationPromise","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","popoutPromises","serializedPopoutGroup","popoutPromise","all","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","admonition","admonitionType","AdmonitionHeading","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","frameworkName","toLowerCase"],"sourceRoot":""}