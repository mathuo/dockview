{"version":3,"file":"assets/js/a6aa9e1f.ef42a98b.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                // Debug logging for always rendered panels\n                if (process.env.NODE_ENV === 'development') {\n                    console.log('Always render positioning:', {\n                        panelId,\n                        left, top, width, height,\n                        referenceBox: box,\n                        containerBox: box2\n                    });\n                }\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (process.env.NODE_ENV === 'development') {\n                console.log('Always render visibility changed:', {\n                    panelId: panel.api.id,\n                    isVisible: panel.api.isVisible,\n                    renderer: panel.api.renderer\n                });\n            }\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup(group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                    referenceGroup: gridReferenceGroup\n                        ? this.getPanel(gridReferenceGroup)\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const targetActivePanel = to.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: true, // Always skip setting panels active during move\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            if (!options.skipSetActive) {\n                // Make the moved panel (from the source group) active\n                if (activePanel) {\n                    this.doSetGroupAndPanelActive(to);\n                }\n            }\n            else if (targetActivePanel) {\n                // Ensure the target group's original active panel remains active\n                to.model.openPanel(targetActivePanel, {\n                    skipSetGroupActive: true\n                });\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, { skipActive: true });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        if (!options.skipSetActive) {\n            this.doSetGroupAndPanelActive(from);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableListener","element","type","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","targetActivePanel","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","frameworkName","toLowerCase"],"sourceRoot":""}