{"version":3,"file":"assets/js/a6aa9e1f.c4d02ae6.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPage/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogListPaginator/index.js","webpack://dockview-docs/../../node_modules/@docusaurus/theme-classic/lib/theme/BlogPostItems/index.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/theme/Admonition/Layout/styles.module.css","webpack://dockview-docs/./src/theme/Admonition/Layout/index.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Note.js","webpack://dockview-docs/./src/theme/Admonition/Type/Note.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Type/Tip.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Info.js","webpack://dockview-docs/./src/theme/Admonition/Type/Info.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Type/Warning.js","webpack://dockview-docs/./src/theme/Admonition/Icon/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Danger.js","webpack://dockview-docs/./src/theme/Admonition/Type/Caution.js","webpack://dockview-docs/./src/theme/Admonition/Types.js","webpack://dockview-docs/./src/theme/Admonition/index.js","webpack://dockview-docs/./src/theme/MDXComponents.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport clsx from 'clsx';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {\n  PageMetadata,\n  HtmlClassNameProvider,\n  ThemeClassNames,\n} from '@docusaurus/theme-common';\nimport BlogLayout from '@theme/BlogLayout';\nimport BlogListPaginator from '@theme/BlogListPaginator';\nimport SearchMetadata from '@theme/SearchMetadata';\nimport BlogPostItems from '@theme/BlogPostItems';\nfunction BlogListPageMetadata(props) {\n  const {metadata} = props;\n  const {\n    siteConfig: {title: siteTitle},\n  } = useDocusaurusContext();\n  const {blogDescription, blogTitle, permalink} = metadata;\n  const isBlogOnlyMode = permalink === '/';\n  const title = isBlogOnlyMode ? siteTitle : blogTitle;\n  return (\n    <>\n      <PageMetadata title={title} description={blogDescription} />\n      <SearchMetadata tag=\"blog_posts_list\" />\n    </>\n  );\n}\nfunction BlogListPageContent(props) {\n  const {metadata, items, sidebar} = props;\n  return (\n    <BlogLayout sidebar={sidebar}>\n      <BlogPostItems items={items} />\n      <BlogListPaginator metadata={metadata} />\n    </BlogLayout>\n  );\n}\nexport default function BlogListPage(props) {\n  return (\n    <HtmlClassNameProvider\n      className={clsx(\n        ThemeClassNames.wrapper.blogPages,\n        ThemeClassNames.page.blogListPage,\n      )}>\n      <BlogListPageMetadata {...props} />\n      <BlogListPageContent {...props} />\n    </HtmlClassNameProvider>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport PaginatorNavLink from '@theme/PaginatorNavLink';\nexport default function BlogListPaginator(props) {\n  const {metadata} = props;\n  const {previousPage, nextPage} = metadata;\n  return (\n    <nav\n      className=\"pagination-nav\"\n      aria-label={translate({\n        id: 'theme.blog.paginator.navAriaLabel',\n        message: 'Blog list page navigation',\n        description: 'The ARIA label for the blog pagination',\n      })}>\n      {previousPage && (\n        <PaginatorNavLink\n          permalink={previousPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.newerEntries\"\n              description=\"The label used to navigate to the newer blog posts page (previous page)\">\n              Newer Entries\n            </Translate>\n          }\n        />\n      )}\n      {nextPage && (\n        <PaginatorNavLink\n          permalink={nextPage}\n          title={\n            <Translate\n              id=\"theme.blog.paginator.olderEntries\"\n              description=\"The label used to navigate to the older blog posts page (next page)\">\n              Older Entries\n            </Translate>\n          }\n          isNext\n        />\n      )}\n    </nav>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport {BlogPostProvider} from '@docusaurus/theme-common/internal';\nimport BlogPostItem from '@theme/BlogPostItem';\nexport default function BlogPostItems({\n  items,\n  component: BlogPostItemComponent = BlogPostItem,\n}) {\n  return (\n    <>\n      {items.map(({content: BlogPostContent}) => (\n        <BlogPostProvider\n          key={BlogPostContent.metadata.permalink}\n          content={BlogPostContent}>\n          <BlogPostItemComponent>\n            <BlogPostContent />\n          </BlogPostItemComponent>\n        </BlogPostProvider>\n      ))}\n    </>\n  );\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTraget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTraget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTraget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            const topPx = `${Math.round(box.top)}px`;\n            const leftPx = `${Math.round(box.left)}px`;\n            const widthPx = `${Math.round(box.width)}px`;\n            const heightPx = `${Math.round(box.height)}px`;\n            if (overlay.style.top === topPx &&\n                overlay.style.left === leftPx &&\n                overlay.style.width === widthPx &&\n                overlay.style.height === heightPx) {\n                return;\n            }\n            overlay.style.top = topPx;\n            overlay.style.left = leftPx;\n            overlay.style.width = widthPx;\n            overlay.style.height = heightPx;\n            overlay.style.visibility = 'visible';\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        const scrollbar = new Scrollbar(this._tabsList);\n        this._element = scrollbar.element;\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, scrollbar, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('mousedown', () => {\n                    this.accessor.popupService.close();\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n            });\n        }));\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { addDisposableWindowListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = '99';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.popupService = new PopupService(this.element);\n        this.updateDropTargetModel(options);\n        this._themeClassnames = new Classnames(this.element);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this.updateTheme();\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = this.options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && tabLocation !== 'headerOverflow' && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","// extracted by mini-css-extract-plugin\nexport default {\"admonition\":\"admonition_Gfwi\",\"admonitionHeading\":\"admonitionHeading_f1Ed\",\"admonitionIcon\":\"admonitionIcon_kpSf\",\"admonitionContent\":\"admonitionContent_UjKb\"};","import React from 'react';\nimport clsx from 'clsx';\nimport { ThemeClassNames } from '@docusaurus/theme-common';\nimport styles from './styles.module.css';\nfunction AdmonitionContainer({ type, className, children }) {\n    return (\n        <div\n            className={clsx(\n                ThemeClassNames.common.admonition,\n                ThemeClassNames.common.admonitionType(type),\n                styles.admonition,\n                className\n            )}\n        >\n            {children}\n        </div>\n    );\n}\nfunction AdmonitionHeading({ icon, title }) {\n    return (\n        <div className={styles.admonitionHeading}>\n            <span className={styles.admonitionIcon}>{icon}</span>\n            {/* {title} */}\n        </div>\n    );\n}\nfunction AdmonitionContent({ children }) {\n    return children ? (\n        <div className={styles.admonitionContent}>{children}</div>\n    ) : null;\n}\nexport default function AdmonitionLayout(props) {\n    const { type, icon, title, children, className } = props;\n    return (\n        <AdmonitionContainer type={type} className={className}>\n            <AdmonitionHeading title={title} icon={icon} />\n            <AdmonitionContent>{children}</AdmonitionContent>\n        </AdmonitionContainer>\n    );\n}\n","import React from 'react';\nexport default function AdmonitionIconNote(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconNote from '@theme/Admonition/Icon/Note';\nconst infimaClassName = 'alert alert--secondary';\nconst defaultProps = {\n  icon: <IconNote />,\n  title: (\n    <Translate\n      id=\"theme.admonition.note\"\n      description=\"The default label used for the Note admonition (:::note)\">\n      note\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeNote(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconTip(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconTip from '@theme/Admonition/Icon/Tip';\nconst infimaClassName = 'alert alert--success';\nconst defaultProps = {\n  icon: <IconTip />,\n  title: (\n    <Translate\n      id=\"theme.admonition.tip\"\n      description=\"The default label used for the Tip admonition (:::tip)\">\n      tip\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeTip(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconInfo(props) {\n  return (\n    <svg viewBox=\"0 0 14 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconInfo from '@theme/Admonition/Icon/Info';\nconst infimaClassName = 'alert alert--info';\nconst defaultProps = {\n  icon: <IconInfo />,\n  title: (\n    <Translate\n      id=\"theme.admonition.info\"\n      description=\"The default label used for the Info admonition (:::info)\">\n      info\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeInfo(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconCaution(props) {\n  return (\n    <svg viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.warning\"\n      description=\"The default label used for the Warning admonition (:::warning)\">\n      warning\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeWarning(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nexport default function AdmonitionIconDanger(props) {\n  return (\n    <svg viewBox=\"0 0 12 16\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconDanger from '@theme/Admonition/Icon/Danger';\nconst infimaClassName = 'alert alert--danger';\nconst defaultProps = {\n  icon: <IconDanger />,\n  title: (\n    <Translate\n      id=\"theme.admonition.danger\"\n      description=\"The default label used for the Danger admonition (:::danger)\">\n      danger\n    </Translate>\n  ),\n};\nexport default function AdmonitionTypeDanger(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Translate from '@docusaurus/Translate';\nimport AdmonitionLayout from '@theme/Admonition/Layout';\nimport IconWarning from '@theme/Admonition/Icon/Warning';\nconst infimaClassName = 'alert alert--warning';\nconst defaultProps = {\n  icon: <IconWarning />,\n  title: (\n    <Translate\n      id=\"theme.admonition.caution\"\n      description=\"The default label used for the Caution admonition (:::caution)\">\n      caution\n    </Translate>\n  ),\n};\n// TODO remove before v4: Caution replaced by Warning\n// see https://github.com/facebook/docusaurus/issues/7558\nexport default function AdmonitionTypeCaution(props) {\n  return (\n    <AdmonitionLayout\n      {...defaultProps}\n      {...props}\n      className={clsx(infimaClassName, props.className)}>\n      {props.children}\n    </AdmonitionLayout>\n  );\n}\n","import React from 'react';\nimport AdmonitionTypeNote from '@theme/Admonition/Type/Note';\nimport AdmonitionTypeTip from '@theme/Admonition/Type/Tip';\nimport AdmonitionTypeInfo from '@theme/Admonition/Type/Info';\nimport AdmonitionTypeWarning from '@theme/Admonition/Type/Warning';\nimport AdmonitionTypeDanger from '@theme/Admonition/Type/Danger';\nimport AdmonitionTypeCaution from '@theme/Admonition/Type/Caution';\nconst admonitionTypes = {\n  note: AdmonitionTypeNote,\n  tip: AdmonitionTypeTip,\n  info: AdmonitionTypeInfo,\n  warning: AdmonitionTypeWarning,\n  danger: AdmonitionTypeDanger,\n};\n// Undocumented legacy admonition type aliases\n// Provide hardcoded/untranslated retrocompatible label\n// See also https://github.com/facebook/docusaurus/issues/7767\nconst admonitionAliases = {\n  secondary: (props) => <AdmonitionTypeNote title=\"secondary\" {...props} />,\n  important: (props) => <AdmonitionTypeInfo title=\"important\" {...props} />,\n  success: (props) => <AdmonitionTypeTip title=\"success\" {...props} />,\n  caution: AdmonitionTypeCaution,\n};\nexport default {\n  ...admonitionTypes,\n  ...admonitionAliases,\n};\n","import React from 'react';\nimport {processAdmonitionProps} from '@docusaurus/theme-common';\nimport AdmonitionTypes from '@theme/Admonition/Types';\nfunction getAdmonitionTypeComponent(type) {\n  const component = AdmonitionTypes[type];\n  if (component) {\n    return component;\n  }\n  console.warn(\n    `No admonition component found for admonition type \"${type}\". Using Info as fallback.`,\n  );\n  return AdmonitionTypes.info;\n}\nexport default function Admonition(unprocessedProps) {\n  const props = processAdmonitionProps(unprocessedProps);\n  const AdmonitionTypeComponent = getAdmonitionTypeComponent(props.type);\n  return <AdmonitionTypeComponent {...props} />;\n}\n","import React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\nimport { FrameworkSpecific } from '@site/src/components/frameworkSpecific';\nimport { CodeRunner } from '../components/ui/codeRunner';\n\nexport default {\n    // Re-use the default mapping\n    ...MDXComponents,\n    // Map the \"<Highlight>\" tag to our Highlight component\n    // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n    FrameworkSpecific,\n    CodeRunner,\n};\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${\n        props.id\n    }/${framework.value.toLowerCase()}/index.html`;\n    return (\n        <div>\n            <iframe\n                src={path}\n                style={{ width: '100%', height: `${props.height ?? 300}px` }}\n            />\n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <CodeSandbox url={sandboxUrl} />\n                <a\n                    target=\"#blank\"\n                    href={path}\n                    className=\"material-symbols-outlined\"\n                >\n                    open_in_new\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n"],"names":["BlogListPageMetadata","props","metadata","siteConfig","title","siteTitle","useDocusaurusContext","blogDescription","blogTitle","permalink","_jsxs","_Fragment","children","_jsx","PageMetadata","description","SearchMetadata","tag","BlogListPageContent","items","sidebar","BlogLayout","BlogPostItems","BlogListPaginator","BlogListPage","HtmlClassNameProvider","className","clsx","ThemeClassNames","wrapper","blogPages","page","blogListPage","previousPage","nextPage","translate","id","message","PaginatorNavLink","Translate","isNext","_ref","component","BlogPostItemComponent","BlogPostItem","map","_ref2","content","BlogPostContent","BlogPostProvider","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTraget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","topPx","leftPx","widthPx","heightPx","visibility","changed","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","dropTraget","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","WillShowOverlayLocationEvent","kind","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","popupService","close","scrollIntoView","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","updateDropTargetModel","_themeClassnames","updateWatermark","updateTheme","_rootDropTarget","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","createGroup","movingLock","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","AdmonitionContainer","common","admonition","admonitionType","AdmonitionHeading","admonitionHeading","admonitionIcon","AdmonitionContent","_ref3","admonitionContent","AdmonitionLayout","AdmonitionIconNote","fillRule","defaultProps","IconNote","AdmonitionTypeNote","AdmonitionIconTip","IconTip","AdmonitionTypeTip","AdmonitionIconInfo","IconInfo","AdmonitionTypeInfo","AdmonitionIconCaution","IconWarning","AdmonitionIconDanger","IconDanger","note","tip","info","warning","danger","secondary","important","success","caution","Admonition","unprocessedProps","processAdmonitionProps","AdmonitionTypeComponent","AdmonitionTypes","MDXComponents","FrameworkSpecific","CodeRunner","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","DropdownMenu","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","_CodeRunner","sandboxUrl","toLowerCase","justifyContent","CodeSandbox","alignItems","fontWeight"],"sourceRoot":""}