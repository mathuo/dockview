{"version":3,"file":"assets/js/26fae105.941a81d2.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx","webpack://dockview-docs/./src/components/ui/reference/types.ts","webpack://dockview-docs/./src/components/ui/reference/docRef.tsx","webpack://dockview-docs/./docs/core/panels/add.mdx"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction cloneNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(node.orientation, node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            result.addChild(cloneNode(child, child.size, child.orthogonalSize), child.size, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, node.orientation, orthogonalSize);\n    }\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    normalize() {\n        if (!this._root) {\n            return;\n        }\n        if (this._root.children.length !== 1) {\n            return;\n        }\n        const oldRoot = this.root;\n        // can remove one level of redundant branching if there is only a single child\n        const childReference = oldRoot.children[0];\n        if (childReference instanceof LeafNode) {\n            return;\n        }\n        oldRoot.element.remove();\n        const child = oldRoot.removeChild(0); // Remove child to prevent double disposal\n        oldRoot.dispose(); // Dispose old root (won't dispose removed child)\n        child.dispose(); // Dispose the removed child\n        this._root = cloneNode(childReference, childReference.size, childReference.orthogonalSize);\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nfunction setGPUOptimizedBounds(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = topPx;\n    element.style.left = leftPx;\n    element.style.width = widthPx;\n    element.style.height = heightPx;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction setGPUOptimizedBoundsFromStrings(element, bounds) {\n    const { top, left, width, height } = bounds;\n    // Use traditional positioning but maintain GPU layer\n    element.style.top = top;\n    element.style.left = left;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.visibility = 'visible';\n    // Ensure GPU layer is maintained\n    if (!element.style.transform || element.style.transform === '') {\n        element.style.transform = 'translate3d(0, 0, 0)';\n    }\n}\nfunction checkBoundsChanged(element, bounds) {\n    const { top, left, width, height } = bounds;\n    const topPx = `${Math.round(top)}px`;\n    const leftPx = `${Math.round(left)}px`;\n    const widthPx = `${Math.round(width)}px`;\n    const heightPx = `${Math.round(height)}px`;\n    // Check if position or size changed (back to traditional method)\n    return element.style.top !== topPx ||\n        element.style.left !== leftPx ||\n        element.style.width !== widthPx ||\n        element.style.height !== heightPx;\n}\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            // Use GPU-optimized bounds checking and setting\n            if (!checkBoundsChanged(overlay, box)) {\n                return;\n            }\n            setGPUOptimizedBounds(overlay, box);\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        setGPUOptimizedBoundsFromStrings(this.overlayElement, box);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('click', (event) => {\n                    this.accessor.popupService.close();\n                    if (event.defaultPrevented) {\n                        return;\n                    }\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\nexport const DESERIALIZATION_POPOUT_DELAY_MS = 100;\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nclass PositionCache {\n    constructor() {\n        this.cache = new Map();\n        this.currentFrameId = 0;\n        this.rafId = null;\n    }\n    getPosition(element) {\n        const cached = this.cache.get(element);\n        if (cached && cached.frameId === this.currentFrameId) {\n            return cached.rect;\n        }\n        this.scheduleFrameUpdate();\n        const rect = getDomNodePagePosition(element);\n        this.cache.set(element, { rect, frameId: this.currentFrameId });\n        return rect;\n    }\n    invalidate() {\n        this.currentFrameId++;\n    }\n    scheduleFrameUpdate() {\n        if (this.rafId)\n            return;\n        this.rafId = requestAnimationFrame(() => {\n            this.currentFrameId++;\n            this.rafId = null;\n        });\n    }\n}\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.positionCache = new PositionCache();\n        this.pendingUpdates = new Set();\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            const panelId = panel.api.id;\n            if (this.pendingUpdates.has(panelId)) {\n                return; // Update already scheduled\n            }\n            this.pendingUpdates.add(panelId);\n            requestAnimationFrame(() => {\n                this.pendingUpdates.delete(panelId);\n                if (this.isDisposed || !this.map[panelId]) {\n                    return;\n                }\n                const box = this.positionCache.getPosition(referenceContainer.element);\n                const box2 = this.positionCache.getPosition(this.element);\n                // Use traditional positioning for overlay containers\n                const left = box.left - box2.left;\n                const top = box.top - box2.top;\n                const width = box.width;\n                const height = box.height;\n                focusContainer.style.left = `${left}px`;\n                focusContainer.style.top = `${top}px`;\n                focusContainer.style.width = `${width}px`;\n                focusContainer.style.height = `${height}px`;\n                toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n            });\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                this.positionCache.invalidate();\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, DESERIALIZATION_POPOUT_DELAY_MS, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    /**\n     * Promise that resolves when all popout groups from the last fromJSON call are restored.\n     * Useful for tests that need to wait for delayed popout creation.\n     */\n    get popoutRestorationPromise() {\n        return this._popoutRestorationPromise;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._popoutRestorationPromise = Promise.resolve();\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        this.gridview.normalize();\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            // Create a promise that resolves when all popout groups are created\n            const popoutPromises = [];\n            // Queue popup group creation with delays to avoid browser blocking\n            serializedPopoutGroups.forEach((serializedPopoutGroup, index) => {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                // Add a small delay for each popup after the first to avoid browser popup blocking\n                const popoutPromise = new Promise((resolve) => {\n                    setTimeout(() => {\n                        this.addPopoutGroup(group, {\n                            position: position !== null && position !== void 0 ? position : undefined,\n                            overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                            referenceGroup: gridReferenceGroup\n                                ? this.getPanel(gridReferenceGroup)\n                                : undefined,\n                            popoutUrl: url,\n                        });\n                        resolve();\n                    }, index * DESERIALIZATION_POPOUT_DELAY_MS); // 100ms delay between each popup\n                });\n                popoutPromises.push(popoutPromise);\n            });\n            // Store the promise for tests to wait on\n            this._popoutRestorationPromise = Promise.all(popoutPromises).then(() => void 0);\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            // Ensure group becomes active after move\n            if (options.skipSetActive !== true) {\n                // For center moves (merges), we need to ensure the target group is active\n                // unless explicitly told not to (skipSetActive: true)\n                this.doSetGroupAndPanelActive(to);\n            }\n            else if (!this.activePanel) {\n                // Even with skipSetActive: true, ensure there's an active panel if none exists\n                // This maintains basic functionality while respecting skipSetActive\n                this.doSetGroupAndPanelActive(to);\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, {\n                                skipActive: true,\n                            });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer =\n                            this.overlayRenderContainer;\n                        from.model.dropTargetContainer =\n                            this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        // Ensure group becomes active after move\n        if (options.skipSetActive === false) {\n            // Only activate when explicitly requested (skipSetActive: false)\n            // Use 'to' group for non-center moves since 'from' may have been destroyed\n            const targetGroup = to !== null && to !== void 0 ? to : from;\n            this.doSetGroupAndPanelActive(targetGroup);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n","export type ExportedTypeFile = Record<string, TypeSystem.Type>;\n\nexport function firstLevelTypes(value: TypeDescriptor.Type | null) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return firstLevelTypes(value.value);\n        case 'literal':\n            return [];\n        case 'intrinsic':\n            return [];\n        case 'or':\n            return value.values.flatMap(firstLevelTypes);\n        case 'intersection':\n            return value.values.flatMap(firstLevelTypes);\n        case 'predicate':\n            return [];\n        case 'reference': {\n            const result = [];\n            if (\n                value.source.startsWith('dockview') &&\n                !value.refersToTypeParameter\n            ) {\n                result.push(value.value);\n            }\n            if (value.typeArguments) {\n                result.push(...value.typeArguments.flatMap(firstLevelTypes));\n            }\n            return result;\n        }\n        case 'reflection':\n            return firstLevel(value.value);\n        case 'tuple':\n            return value.value.map(codifyType);\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function firstLevel(value: TypeSystem.Type | null) {\n    const results: string[] = [];\n\n    switch (value.kind) {\n        case null:\n            break;\n        case 'property':\n            results.push(...firstLevelTypes(value.type));\n            break;\n        case 'accessor':\n            results.push(...firstLevelTypes(value.value.returnType));\n            break;\n        case 'method':\n            results.push(...value.signature.flatMap(firstLevel));\n            break;\n        case 'constructor':\n            break;\n        case 'typeLiteral':\n            if (value.properties) {\n                results.push(...value.properties.flatMap(firstLevel));\n            }\n            if (value.signatures) {\n                results.push(...value.signatures.flatMap(firstLevel));\n            }\n            break;\n        case 'callSignature':\n            results.push(\n                ...firstLevelTypes(value.returnType),\n                ...value.typeParameters.flatMap((_) => {\n                    return [...firstLevelTypes(_.extends)];\n                }),\n                ...value.parameters.flatMap(firstLevel)\n            );\n            break;\n        case 'parameter':\n            results.push(...firstLevelTypes(value.type));\n            break;\n        default:\n            console.log('test', value);\n            throw new Error('unreachable');\n    }\n\n    return Array.from(new Set(results));\n}\n\nexport function codifyType(value: TypeDescriptor.Type | null, tabs = 0) {\n    if (!value) {\n        return null;\n    }\n\n    switch (value.type) {\n        case 'array':\n            return `${codifyType(value.value)}[]`;\n        case 'literal':\n            return `'${value.value}'`;\n        case 'intrinsic':\n            return value.value;\n        case 'or':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' | ')}`;\n        case 'intersection':\n            return `${value.values\n                .map((_) => {\n                    const isComparator =\n                        _.type === 'or' || _.type === 'intersection';\n                    const code = codifyType(_);\n                    return isComparator ? `(${code})` : code;\n                })\n                .join(' & ')}`;\n        case 'predicate':\n            return `${value.lhs} is ${value.rhs}`;\n\n        case 'reference': {\n            if (value.typeArguments) {\n                return `${value.value}<${value.typeArguments.map(codifyType)}>`;\n            }\n            return `${value.value}`;\n        }\n        case 'reflection':\n            return codify(value.value, tabs);\n        case 'tuple':\n            return `[${value.value.map(codifyType).join(', ')}]`;\n        default:\n            throw new Error('unreachable');\n    }\n}\n\nexport function codify(value: TypeSystem.Type | null, tabs = 0) {\n    if (!value) {\n        return null;\n    }\n\n    if (value.kind === 'accessor') {\n        const signature = value.value;\n        return `${'\\t'.repeat(tabs)}${signature.name}: ${codifyType(\n            signature.returnType\n        )}`;\n    }\n\n    if (value.kind === 'property') {\n        let code = '\\t'.repeat(tabs);\n\n        if (value.flags.isProtected) {\n            code += 'protected ';\n        }\n\n        if (value.flags.isReadonly) {\n            code += 'readonly ';\n        }\n        code += value.name;\n        if (value.flags.isOptional) {\n            code += '?';\n        }\n\n        code += `: ${codifyType(value.type, tabs + 1)}`;\n        return code;\n    }\n\n    if (value.kind === 'method') {\n        return `${'\\t'.repeat(tabs)}${value.name}${value.signature\n            .map(codify)\n            .join('\\n')}`;\n    }\n\n    if (value.kind === 'callSignature') {\n        let code = ``;\n\n        if (value.typeParameters.length > 0) {\n            code += '<';\n            code += value.typeParameters.map((typeParameter) => {\n                let typeCode = `${typeParameter.name}`;\n\n                if (typeParameter.extends) {\n                    typeCode += ' extends';\n                    typeCode += ` ${codifyType(typeParameter.extends)}`;\n                }\n\n                if (typeParameter.default) {\n                    typeCode += ' =';\n                    typeCode += ` ${typeParameter.default}`;\n                }\n                return typeCode;\n            });\n            code += '>';\n        }\n\n        code += '(';\n\n        code += value.parameters\n            .map((parameter) => {\n                return codify(parameter, tabs + 1);\n            })\n            .join(', ');\n\n        code += `): ${codifyType(value.returnType)}`;\n\n        return code;\n    }\n\n    if (value.kind === 'parameter') {\n        return `${value.name}: ${codifyType(value.type, tabs + 1)}`;\n    }\n\n    if (value.kind === 'typeLiteral') {\n        if (value.properties) {\n            return `{\\n${value.properties\n                .map((_) => codify(_, tabs))\n                .join(',\\n')}\\n${'\\t'.repeat(Math.max(0, tabs - 1))}}`;\n        }\n        if (value.signatures) {\n            return value.signatures.map(codify).join('\\n');\n        }\n    }\n\n    if (value.kind === 'constructor') {\n        return '';\n    }\n\n    if (value.kind === 'interface') {\n        return `interface ${value.name} {\\n${value.children\n            .map((_) => codify(_, tabs + 1))\n            .join(';\\n')};\\n}`;\n    }\n\n    if (value.kind === 'class') {\n        return `interface ${value.name} {\\n${value.children\n            .filter((_) => _.kind !== 'constructor')\n            .map((_) => codify(_, tabs + 1))\n            .join(';\\n')};\\n}`;\n    }\n\n    if (value.kind === 'typeAlias') {\n        return `type ${value.name} = ${codifyType(value.type)}`;\n    }\n\n    console.log('unreachable', value);\n    throw new Error(`unreachable`);\n}\n\nexport namespace TypeSystem {\n    export type Comment = any;\n\n    export type TypeParameter = {\n        name: string;\n        extends: TypeDescriptor.Type;\n        default: string;\n        comment?: Comment;\n    };\n\n    export type Accessor = {\n        name: string;\n        kind: 'accessor';\n        comment?: Comment;\n        value: TypeSystem.GetSignature;\n    };\n\n    export type GetSignature = {\n        kind: 'getSignature';\n        name: string;\n        returnType: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type CallSignature = {\n        kind: 'callSignature';\n        typeParameters: TypeSystem.TypeParameter[];\n        parameters: TypeSystem.Type[];\n        returnType: TypeDescriptor.Type;\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Method = {\n        name: string;\n        kind: 'method';\n        signature: TypeSystem.CallSignature[];\n        comment?: Comment;\n    };\n\n    export type Function = {\n        name: string;\n        kind: 'function';\n        signature: TypeSystem.CallSignature;\n        comment?: Comment;\n    };\n\n    export type Property = {\n        kind: 'property';\n        name: string;\n        type: TypeDescriptor.Type;\n        flags: TypeDescriptor.Flags;\n        comment?: Comment;\n    };\n\n    export type TypeAlias = {\n        name: string;\n        kind: 'typeAlias';\n        typeParameters: TypeSystem.TypeParameter[];\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Enum = {\n        name: string;\n        kind: 'enum';\n        children: TypeSystem.EnumMember[];\n        comment?: Comment;\n    };\n\n    export type EnumMember = {\n        kind: 'enumMember';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type Class = {\n        name: string;\n        kind: 'class';\n        children: TypeSystem.Type[];\n        extends: string[];\n        comment?: Comment;\n    };\n\n    export type Interface = {\n        name: string;\n        kind: 'interface';\n        children: TypeSystem.Type[];\n        comment?: Comment;\n        extends: string[];\n    };\n\n    export type Parameter = {\n        name: string;\n        kind: 'parameter';\n        type: TypeDescriptor.Type;\n        comment?: Comment;\n    };\n\n    export type Constructor = {\n        kind: 'constructor';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type ConstructorSignature = {\n        kind: 'constructorSignature';\n        name: string;\n        comment?: Comment;\n    };\n\n    export type TypeLiteral = {\n        kind: 'typeLiteral';\n        name: string;\n        signatures?: (ConstructorSignature | TypeSystem.CallSignature)[];\n        properties?: TypeSystem.Property[];\n        comment?: Comment;\n    };\n\n    export type Type =\n        | TypeSystem.Accessor\n        | TypeSystem.GetSignature\n        | TypeSystem.CallSignature\n        | TypeSystem.Method\n        | TypeSystem.Property\n        | TypeSystem.TypeAlias\n        | TypeSystem.Enum\n        | TypeSystem.EnumMember\n        | TypeSystem.Class\n        | TypeSystem.Constructor\n        | TypeSystem.ConstructorSignature\n        | TypeSystem.TypeLiteral\n        | TypeSystem.Parameter\n        | TypeSystem.Interface\n        | TypeSystem.Function;\n}\n\nexport namespace TypeDescriptor {\n    export interface Union {\n        type: 'or';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Intrinsic {\n        type: 'intrinsic';\n        value: string;\n    }\n\n    export interface Literal {\n        type: 'literal';\n        value: string;\n    }\n\n    export type Reflection = { type: 'reflection'; value: TypeSystem.Type };\n\n    export interface Reference {\n        type: 'reference';\n        value: string;\n        source: string;\n        typeArguments?: TypeDescriptor.Type[];\n        refersToTypeParameter?: boolean;\n    }\n\n    export interface Array {\n        type: 'array';\n        value: TypeDescriptor.Type;\n    }\n\n    export interface Intersection {\n        type: 'intersection';\n        values: TypeDescriptor.Type[];\n    }\n\n    export interface Predicate {\n        type: 'predicate';\n        lhs: string;\n        rhs: TypeDescriptor.Type;\n    }\n\n    export interface Tuple {\n        type: 'tuple';\n        value: TypeDescriptor.Type[];\n    }\n\n    export type Type =\n        | TypeDescriptor.Union\n        | TypeDescriptor.Intrinsic\n        | TypeDescriptor.Literal\n        | TypeDescriptor.Reflection\n        | TypeDescriptor.Reference\n        | TypeDescriptor.Array\n        | TypeDescriptor.Intersection\n        | TypeDescriptor.Predicate\n        | TypeDescriptor.Tuple;\n\n    export type Flags = {\n        isReadonly?: boolean;\n        isProtected?: boolean;\n        isOptional?: boolean;\n    };\n}\n","import * as React from 'react';\nimport CodeBlock from '@theme/CodeBlock';\nimport './docRef.scss';\n\nexport interface DocRefProps {\n    declaration: string;\n    methods?: string[];\n}\n\nimport docsJson_ from '../../../generated/api.output.json';\nimport { ExportedTypeFile, TypeSystem, codify, firstLevel } from './types';\nconst docsJson = docsJson_ as any as DocsJson;\n\ntype DocsContent = { kind: string; text: string; tag?: string };\ntype DocsTag = { tag: string; content: DocsContent[] };\ntype DocsComment = {\n    summary?: DocsContent[];\n    blockTags?: DocsTag[];\n};\n\ntype Piece = {\n    kind: 'return' | 'paramter' | 'signature' | 'typearg' | 'typearg_default';\n    value: string;\n};\n\ntype Doc = {\n    name: string;\n    code: string;\n    comment?: DocsComment;\n    kind: 'accessor' | 'property' | 'method';\n    pieces: Piece[];\n};\n\ntype DocJson = {\n    kind: string;\n    metadata?: Doc;\n    children: Doc[];\n};\n\ntype DocsJson = {\n    [index: string]: DocJson;\n};\n\nconst newJson = docsJson_ as ExportedTypeFile;\n\nexport const DocumentRef = (props: { value: TypeSystem.Type }) => {\n    const code = React.useMemo(() => {\n        if (!props.value) {\n            return null;\n        }\n\n        switch (props.value.kind) {\n            case 'typeAlias':\n                return codify(props.value);\n            case 'interface':\n                return codify(props.value);\n            case 'class':\n                return codify(props.value);\n            case 'function':\n                return codify(props.value);\n            default:\n                return null;\n        }\n    }, [props.value]);\n\n    if (!code) {\n        return null;\n    }\n\n    return <CodeBlock language=\"tsx\">{code}</CodeBlock>;\n};\n\nexport const Text = (props: { content: DocsContent[] }) => {\n    return (\n        <div className=\"doc-text\">\n            {props.content.map((piece, i) => {\n                switch (piece.kind) {\n                    case 'text': {\n                        return <span key={i}>{piece.text}</span>;\n                    }\n                    case 'code':\n                        return (\n                            <code key={i}>\n                                {piece.text.substring(1, piece.text.length - 1)}\n                            </code>\n                        );\n                    default:\n                        throw new Error(`unhandled piece ${piece.kind}`);\n                }\n            })}\n        </div>\n    );\n};\n\nexport const Tags = (props: { tags: DocsTag[] }) => {\n    return (\n        <div>\n            {props.tags.map((tag, i) => {\n                return (\n                    <div key={i}>\n                        <div>{tag.tag}</div>\n                        <Text content={tag.content} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport const Summary = (props: { summary: DocsComment }) => {\n    return (\n        <div>\n            <Text content={props.summary.summary ?? []} />\n            <Tags tags={props.summary.blockTags ?? []} />\n        </div>\n    );\n};\n\nexport const Markdown = (props: { children: string }) => {\n    return <span>{props.children}</span>;\n};\n\nconst Row = (props: { doc: TypeSystem.Type }) => {\n    const comment =\n        props.doc.kind === 'accessor'\n            ? props.doc.value.comment\n            : props.doc.comment;\n    return (\n        <tr>\n            <th\n                style={{\n                    width: '40%',\n                    display: 'flex',\n                }}\n            >\n                <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'start',\n                    }}\n                >\n                    <h6\n                        style={{\n                            fontFamily: 'monospace',\n                            fontSize: '1.2em',\n                        }}\n                    >\n                        {props.doc.name}\n                    </h6>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'start',\n                        }}\n                    >\n                        {/* <span\n                            style={{\n                                fontSize: '0.75em',\n                                color: 'var(--ifm-color-content-secondary)',\n                            }}\n                        >\n                            {'Type'}\n                        </span>\n                        <span\n                            style={{\n                                color: 'var(--ifm-color-primary)',\n                            }}\n                        >\n                            {doc.type}\n                        </span> */}\n                    </div>\n                </div>\n            </th>\n            <th style={{ width: '60%' }}>\n                {/* <div>{'-'}</div> */}\n                <div>\n                    <div>{comment && <Summary summary={comment} />}</div>\n                    <CodeBlock language=\"tsx\">{codify(props.doc)}</CodeBlock>\n                </div>\n            </th>\n        </tr>\n    );\n};\n\nfunction filter(docs: TypeSystem.Type, methods: string[]) {\n    if (docs.kind === 'typeAlias') {\n        if (docs.type.type === 'intersection') {\n            return docs.type.values\n                .map((value) => newJson[(value as any).value])\n                .map((v) => filter(v, methods))\n                .flat();\n        }\n\n        return [docs];\n    }\n\n    if (docs.kind === 'class' || docs.kind === 'interface') {\n        const extended = docs.extends.flatMap((name) =>\n            filter(newJson[name], methods)\n        );\n\n        return extended.concat(\n            docs.children.filter((child) => {\n                if (methods && !methods.includes(child.name)) {\n                    return false;\n                }\n                return true;\n            })\n        );\n    }\n\n    return [];\n}\n\nexport const DocRef = (props: DocRefProps) => {\n    const docs = React.useMemo(\n        () => newJson[props.declaration],\n        [props.declaration]\n    );\n\n    const filteredDocs = React.useMemo(\n        () => filter(docs, props.methods),\n        [docs]\n    );\n\n    if (!docs) {\n        return <span>{`Failed to find docs for '${props.declaration}'`}</span>;\n    }\n\n    return (\n        <table className=\"doc-ref-table\">\n            <tbody>\n                {filteredDocs.map((doc, i) => {\n                    return (\n                        <>\n                            <Row key={i} doc={doc} />\n                            {/* <th colSpan={2}>\n                                {firstLevel(doc).map((x) => (\n                                    <span style={{ padding: '0px 2px' }}>\n                                        <DocumentRef value={newJson[x]} />\n                                    </span>\n                                ))}\n                            </th> */}\n                            {/* {doc.pieces?.map((piece) => (\n                                <tr>\n                                    <th colSpan={2}>\n                                        <Piece piece={piece} />\n                                    </th>\n                                </tr>\n                            ))} */}\n                        </>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n","\n\nexport const frontMatter = {\n\ttitle: 'Adding Panels',\n\tsidebar_position: 1\n};\nexport const contentTitle = undefined;\nexport const metadata = {\n  \"id\": \"core/panels/add\",\n  \"title\": \"Adding Panels\",\n  \"description\": \"This section describes how to add a new panel and the options you can provide.\",\n  \"source\": \"@site/docs/core/panels/add.mdx\",\n  \"sourceDirName\": \"core/panels\",\n  \"slug\": \"/core/panels/add\",\n  \"permalink\": \"/docs/core/panels/add\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"sidebarPosition\": 1,\n  \"frontMatter\": {\n    \"title\": \"Adding Panels\",\n    \"sidebar_position\": 1\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Registering Panels\",\n    \"permalink\": \"/docs/core/panels/register\"\n  },\n  \"next\": {\n    \"title\": \"Tabs\",\n    \"permalink\": \"/docs/core/panels/tabs\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {DocRef} from '@site/src/components/ui/reference/docRef';\nimport {CodeRunner} from '@site/src/components/ui/codeRunner';\nexport const toc = [{\n  \"value\": \"Opening a Basic Panel\",\n  \"id\": \"opening-a-basic-panel\",\n  \"level\": 2\n}, {\n  \"value\": \"Providing a Panel Title\",\n  \"id\": \"providing-a-panel-title\",\n  \"level\": 2\n}, {\n  \"value\": \"Provide a custom Tab renderer\",\n  \"id\": \"provide-a-custom-tab-renderer\",\n  \"level\": 2\n}, {\n  \"value\": \"Provide custom Parameters\",\n  \"id\": \"provide-custom-parameters\",\n  \"level\": 2\n}, {\n  \"value\": \"Rendering\",\n  \"id\": \"rendering\",\n  \"level\": 2\n}, {\n  \"value\": \"Positioning the Panel\",\n  \"id\": \"positioning-the-panel\",\n  \"level\": 2\n}, {\n  \"value\": \"Relative to another Panel\",\n  \"id\": \"relative-to-another-panel\",\n  \"level\": 4\n}, {\n  \"value\": \"Relative to another Group\",\n  \"id\": \"relative-to-another-group\",\n  \"level\": 4\n}, {\n  \"value\": \"Relative to the container\",\n  \"id\": \"relative-to-the-container\",\n  \"level\": 4\n}, {\n  \"value\": \"Floating\",\n  \"id\": \"floating\",\n  \"level\": 3\n}, {\n  \"value\": \"Minimum and Maximum\",\n  \"id\": \"minimum-and-maximum\",\n  \"level\": 3\n}, {\n  \"value\": \"Initial Size\",\n  \"id\": \"initial-size\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    admonition: \"admonition\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"This section describes how to add a new panel and the options you can provide.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Panels can be added through the dock api.\"\n    }), \"\\n\", _jsx(DocRef, {\n      declaration: \"DockviewApi\",\n      methods: ['addPanel']\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"opening-a-basic-panel\",\n      children: \"Opening a Basic Panel\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To open a panel requires a unique \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" and the name of the \", _jsx(_components.code, {\n        children: \"component\"\n      }), \" to render.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel: IDockviewPanel = api.addPanel({\\n    id: 'my_unique_panel_id',\\n    component: 'my_component',\\n    // optionally set `inactive: true` to prevent the added panel becoming active automatically\\n    inactive: true\\n});\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"See \", _jsx(_components.a, {\n          href: \"/docs/core/overview\",\n          children: \"Overview\"\n        }), \" to register components.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"providing-a-panel-title\",\n      children: \"Providing a Panel Title\"\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"warning\",\n      children: _jsx(_components.p, {\n        children: \"Registering and updating the title using these built-in variables only works for the default tab renderer.\\nIf you use a custom tab render you can optionally access these variables to render the title, or you can take\\nyour own approach to rendering a tab title.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" to provide a custom title for the panel. If no \", _jsx(_components.code, {\n        children: \"title\"\n      }), \" is provided then the dock will render \", _jsx(_components.code, {\n        children: \"id\"\n      }), \" in the tab.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"api.addPanel({\\n    id: 'panel_1',\\n    component: 'my_component',\\n    title: 'my_custom_title',\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        children: \"api.setTitle('my_new_custom_title');\\n\"\n      })\n    }), \"\\n\", _jsx(CodeRunner, {\n      id: \"dockview/update-title\",\n      height: 250\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"provide-a-custom-tab-renderer\",\n      children: \"Provide a custom Tab renderer\"\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [\"You can override the default tab renderer through the \", _jsx(_components.a, {\n          href: \"/docs/api/dockview/options\",\n          children: \"Options\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To render a custom tab component you should specify the \", _jsx(_components.code, {\n        children: \"tabComponent\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel: IDockviewPanel = api.addPanel({\\n    id: 'my_unique_panel_id',\\n    component: 'my_component',\\n    tabComponent: 'my_tab_component',\\n});\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"See \", _jsx(_components.a, {\n          href: \"/docs/core/panels/tabs\",\n          children: \"Tabs\"\n        }), \" to learn how to register tab components.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"provide-custom-parameters\",\n      children: \"Provide custom Parameters\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using the \", _jsx(_components.code, {\n        children: \"params\"\n      }), \" option you can specific a simple object that is accessible in both the panel and tab renderer.\\nTo update these parameters after the panel has been created see \", _jsx(_components.a, {\n        href: \"/docs/core/panels/update\",\n        children: \"Update Panel\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel: IDockviewPanel = api.addPanel({\\n    id: 'my_unique_panel_id',\\n    component: 'my_component',\\n    params: {\\n        myCustomKey: 'my_custom_value',\\n    },\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"rendering\",\n      children: \"Rendering\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"See \", _jsx(_components.a, {\n        href: \"/docs/core/panels/rendering\",\n        children: \"Panel Rendering\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"positioning-the-panel\",\n      children: \"Positioning the Panel\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can position a panel relative to an existing panel, group using \", _jsx(_components.code, {\n        children: \"direction\"\n      }), \". If you do not provide a reference panel\\nor group then the panel will be positioned to the edge of the dock in the specified direction.\"]\n    }), \"\\n\", _jsx(DocRef, {\n      declaration: \"Direction\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"relative-to-another-panel\",\n      children: \"Relative to another Panel\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel2: IDockviewPanel = api.addPanel({\\n    id: 'panel_2',\\n    component: 'default',\\n    position: {\\n      referencePanel: 'panel_1',\\n      direction: 'above'\\n    }\\n});\\n\\napi.addPanel({\\n    id: 'panel_3',\\n    component: 'default',\\n    position: {\\n      referencePanel: panel2,\\n      direction: 'above'\\n    }\\n});\\n\\napi.addPanel({\\n    id: 'panel_4',\\n    component: 'default',\\n    position: {\\n      referencePanel: panel2,\\n      index: 2  // optionally specify which index to add the panel at\\n    }\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"relative-to-another-group\",\n      children: \"Relative to another Group\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel2: IDockviewPanel = api.addPanel({\\n    id: 'panel_2',\\n    component: 'default',\\n    position: {\\n      referenceGroup: 'panel_1',\\n      direction: 'left'\\n    }\\n});\\n\\n\\n\\napi.addPanel({\\n    id: 'panel_2',\\n    component: 'default',\\n    position: {\\n      referenceGroup: panel2.group,\\n      direction: 'left'\\n    }\\n});\\n\\napi.addPanel({\\n    id: 'panel_3',\\n    component: 'default',\\n    position: {\\n      referenceGroup: panel2.group,\\n          index: 2  // optionally specify which index to add the panel at\\n    }\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"relative-to-the-container\",\n      children: \"Relative to the container\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"const panel = api.addPanel({\\n    id: 'panel_2',\\n    component: 'default',\\n    position: {\\n      direction: 'right'\\n    }\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"floating\",\n      children: \"Floating\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You should specific the \", _jsx(_components.code, {\n        children: \"floating\"\n      }), \" option which can be either \", _jsx(_components.code, {\n        children: \"true\"\n      }), \" or an object describing the position of the floating group.\"]\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"info\",\n      children: _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.code, {\n          children: \"position\"\n        }), \" property of the \", _jsx(_components.code, {\n          children: \"floating\"\n        }), \" object accepts combinations of \", _jsx(_components.code, {\n          children: \"top\"\n        }), \", \", _jsx(_components.code, {\n          children: \"left\"\n        }), \", \", _jsx(_components.code, {\n          children: \"bottom\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"right\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"api.addPanel({\\n    id: 'panel_1',\\n    component: 'default',\\n    floating: true\\n});\\n\\napi.addPanel({\\n  id: 'panel_2',\\n  component: 'default',\\n  floating: {\\n      position: { left: 10, top: 10 },\\n      width: 300,\\n      height: 300\\n  }\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"minimum-and-maximum\",\n      children: \"Minimum and Maximum\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can define both minimum and maxmium widths and heights, these are persisted with layouts.\"\n    }), \"\\n\", _jsx(_components.admonition, {\n      type: \"info\",\n      children: _jsx(_components.p, {\n        children: \"Since panels exist within groups there are occasions where these boundaries will be ignored to prevent overflow and clipping issues within the dock.\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"api.addPanel({\\n    id: 'panel_1',\\n    component: 'default',\\n    minimumWidth: 100,\\n    maximumWidth: 100,\\n    minimumHeight: 200,\\n    maximumHeight: 2000\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"initial-size\",\n      children: \"Initial Size\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can define an \", _jsx(_components.code, {\n        children: \"initialWidth\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"initialHeight\"\n      }), \". The dock will may a best attempt to obey these inputs but it may not always be possible due to the constraints of the grid.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-ts\",\n        children: \"api.addPanel({\\n    id: 'panel_1',\\n    component: 'default',\\n    initialWidth: 100,\\n    initialHeight: 100\\n});\\n\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableListener","element","type","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","cloneNode","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","normalize","childReference","insertOrthogonalSplitviewAtRoot","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","bounds","topPx","leftPx","widthPx","heightPx","checkBoundsChanged","visibility","transform","setGPUOptimizedBounds","changed","setGPUOptimizedBoundsFromStrings","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","wrapper","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","PositionCache","cache","currentFrameId","rafId","getPosition","cached","frameId","scheduleFrameUpdate","invalidate","OverlayRenderContainer","positionCache","pendingUpdates","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","popoutRestorationPromise","_popoutRestorationPromise","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","popoutPromises","serializedPopoutGroup","popoutPromise","all","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","_jsxs","DropdownMenu","_jsx","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","FrameworkSpecific","_CodeRunner","frameworkName","toLowerCase","CodeRunner","codifyType","isComparator","code","lhs","rhs","typeArguments","codify","signature","repeat","returnType","flags","isProtected","isReadonly","isOptional","typeParameters","typeParameter","typeCode","extends","default","parameter","signatures","log","newJson","docsJson_","Text","piece","substring","Tags","tags","tag","Summary","summary","blockTags","Row","comment","doc","flexDirection","alignItems","fontFamily","CodeBlock","language","docs","methods","flat","concat","DocRef","declaration","filteredDocs","_Fragment","frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","_components","a","admonition","blockquote","h2","h3","h4","pre","MDXContent","MDXLayout"],"sourceRoot":""}