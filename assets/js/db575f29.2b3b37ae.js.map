{"version":3,"file":"assets/js/db575f29.2b3b37ae.js","mappings":"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","sources":["webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/events.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/scrollbar.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabs.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabOverflowControl.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/theme.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/popupService.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dropTargetAnchorContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/frameworkSpecific.tsx","webpack://dockview-docs/./src/components/ui/codeRunner.tsx","webpack://dockview-docs/./docs/advanced/nested.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) {\n            this._last = e;\n        }\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag, document) {\n    return Array.prototype.slice.call(document.querySelectorAll(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n        this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\n/**\n * Should be more efficient than element.querySelectorAll(\"*\") since there\n * is no need to store every element in-memory using this approach\n */\nfunction allTagsNamesInclusiveOfShadowDoms(tagNames) {\n    const iframes = [];\n    function findIframesInNode(node) {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            if (tagNames.includes(node.tagName)) {\n                iframes.push(node);\n            }\n            if (node.shadowRoot) {\n                findIframesInNode(node.shadowRoot);\n            }\n            for (const child of node.children) {\n                findIframesInNode(child);\n            }\n        }\n    }\n    findIframesInNode(document.documentElement);\n    return iframes;\n}\nexport function disableIframePointEvents(rootNode = document) {\n    const iframes = allTagsNamesInclusiveOfShadowDoms(['IFRAME', 'WEBVIEW']);\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\nconst DEBOUCE_DELAY = 100;\nexport function isChildEntirelyVisibleWithinParent(child, parent) {\n    //\n    const childPosition = getDomNodePagePosition(child);\n    const parentPosition = getDomNodePagePosition(parent);\n    if (childPosition.left < parentPosition.left) {\n        return false;\n    }\n    if (childPosition.left + childPosition.width >\n        parentPosition.left + parentPosition.width) {\n        return false;\n    }\n    return true;\n}\nexport function onDidWindowMoveEnd(window) {\n    const emitter = new Emitter();\n    let previousScreenX = window.screenX;\n    let previousScreenY = window.screenY;\n    let timeout;\n    const checkMovement = () => {\n        if (window.closed) {\n            return;\n        }\n        const currentScreenX = window.screenX;\n        const currentScreenY = window.screenY;\n        if (currentScreenX !== previousScreenX ||\n            currentScreenY !== previousScreenY) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                emitter.fire();\n            }, DEBOUCE_DELAY);\n            previousScreenX = currentScreenX;\n            previousScreenY = currentScreenY;\n        }\n        requestAnimationFrame(checkMovement);\n    };\n    checkMovement();\n    return emitter;\n}\nexport function onDidWindowResizeEnd(element, cb) {\n    let resizeTimeout;\n    const disposable = new CompositeDisposable(addDisposableListener(element, 'resize', () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(() => {\n            cb();\n        }, DEBOUCE_DELAY);\n    }));\n    return disposable;\n}\nexport function shiftAbsoluteElementIntoView(element, root, options = { buffer: 10 }) {\n    const buffer = options.buffer;\n    const rect = element.getBoundingClientRect();\n    const rootRect = root.getBoundingClientRect();\n    let translateX = 0;\n    let translateY = 0;\n    const left = rect.left - rootRect.left;\n    const top = rect.top - rootRect.top;\n    const bottom = rect.bottom - rootRect.bottom;\n    const right = rect.right - rootRect.right;\n    // Check horizontal overflow\n    if (left < buffer) {\n        translateX = buffer - left;\n    }\n    else if (right > buffer) {\n        translateX = -buffer - right;\n    }\n    // Check vertical overflow\n    if (top < buffer) {\n        translateY = buffer - top;\n    }\n    else if (bottom > buffer) {\n        translateY = -bottom - buffer;\n    }\n    // Apply the translation if needed\n    if (translateX !== 0 || translateY !== 0) {\n        element.style.transform = `translate(${translateX}px, ${translateY}px)`;\n    }\n}\nexport function findRelativeZIndexParent(el) {\n    let tmp = el;\n    while (tmp && (tmp.style.zIndex === 'auto' || tmp.style.zIndex === '')) {\n        tmp = tmp.parentElement;\n    }\n    return tmp;\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        toggleClass(this.element, 'dv-splitview-has-margin', value !== 0);\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    get onDidPopoutGroupSizeChange() {\n        return this.component.onDidPopoutGroupSizeChange;\n    }\n    get onDidPopoutGroupPositionChange() {\n        return this.component.onDidPopoutGroupPositionChange;\n    }\n    get onDidOpenPopoutWindowFail() {\n        return this.component.onDidOpenPopoutWindowFail;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                 P    * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            setTimeout(() => {\n                this.dataDisposable.dispose(); // allow the data to be read by other handlers before disposing\n            }, 0);\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            const topPx = `${Math.round(box.top)}px`;\n            const leftPx = `${Math.round(box.left)}px`;\n            const widthPx = `${Math.round(box.width)}px`;\n            const heightPx = `${Math.round(box.height)}px`;\n            if (overlay.style.top === topPx &&\n                overlay.style.left === leftPx &&\n                overlay.style.width === widthPx &&\n                overlay.style.height === heightPx) {\n                return;\n            }\n            overlay.style.top = topPx;\n            overlay.style.left = leftPx;\n            overlay.style.width = widthPx;\n            overlay.style.height = heightPx;\n            overlay.style.visibility = 'visible';\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(options) {\n        super({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            isHeaderVisible: true,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.accessor = options.accessor;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!options.disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        const target = group.dropTargetContainer;\n        this.dropTarget = new Droptarget(this.element, {\n            getOverlayOutline: () => {\n                var _a;\n                return ((_a = accessor.options.theme) === null || _a === void 0 ? void 0 : _a.dndPanelOverlay) === 'group'\n                    ? this.element.parentElement\n                    : null;\n            },\n            className: 'dv-drop-target-content',\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    return true;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n            getOverrideTarget: target ? () => target.model : undefined,\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement, options) {\n    var _a, _b;\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    // move the element off-screen initially otherwise it may in some cases be rendered at (0,0) momentarily\n    ghostElement.style.top = '-9999px';\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, (_a = options === null || options === void 0 ? void 0 : options.x) !== null && _a !== void 0 ? _a : 0, (_b = options === null || options === void 0 ? void 0 : options.y) !== null && _b !== void 0 ? _b : 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","export class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.style.pointerEvents = 'none';\n            ghostElement.style.top = '-9999px';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement, { y: -10, x: 30 });\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { toggleClass } from '../../../dom';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTarget);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this._element, 'dv-draggable', !this.accessor.options.disableDnd);\n    }\n}\n","import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n","import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { VoidContainer } from './voidContainer';\nimport { findRelativeZIndexParent, toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Tabs } from './tabs';\nimport { createDropdownElementHandle, } from './tabOverflowControl';\nexport class TabsContainer extends CompositeDisposable {\n    get onTabDragStart() {\n        return this.tabs.onTabDragStart;\n    }\n    get panels() {\n        return this.tabs.panels;\n    }\n    get size() {\n        return this.tabs.size;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._hidden = false;\n        this.dropdownPart = null;\n        this._overflowTabs = [];\n        this._dropdownDisposable = new MutableDisposable();\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabs = new Tabs(group, accessor, {\n            showTabsOverflowControl: !accessor.options.disableTabsOverflowList,\n        });\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabs.element);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this.tabs.onDrop((e) => this._onDrop.fire(e)), this.tabs.onWillShowOverlay((e) => this._onWillShowOverlay.fire(e)), accessor.onDidOptionsChange(() => {\n            this.tabs.showTabsOverflowControl =\n                !accessor.options.disableTabsOverflowList;\n        }), this.tabs.onOverflowTabsChange((event) => {\n            this.toggleDropdown(event);\n        }), this.tabs, this._onWillShowOverlay, this._onDrop, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.size,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }));\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    isActive(tab) {\n        return this.tabs.isActive(tab);\n    }\n    indexOf(id) {\n        return this.tabs.indexOf(id);\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        this.tabs.delete(id);\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.setActivePanel(panel);\n    }\n    openPanel(panel, index = this.tabs.size) {\n        this.tabs.openPanel(panel, index);\n        this.updateClassnames();\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset ? [] : options.tabs;\n        this._overflowTabs = tabs;\n        if (this._overflowTabs.length > 0 && this.dropdownPart) {\n            this.dropdownPart.update({ tabs: tabs.length });\n            return;\n        }\n        if (this._overflowTabs.length === 0) {\n            this._dropdownDisposable.dispose();\n            return;\n        }\n        const root = document.createElement('div');\n        root.className = 'dv-tabs-overflow-dropdown-root';\n        const part = createDropdownElementHandle();\n        part.update({ tabs: tabs.length });\n        this.dropdownPart = part;\n        root.appendChild(part.element);\n        this.rightActionsContainer.prepend(root);\n        this._dropdownDisposable.value = new CompositeDisposable(Disposable.from(() => {\n            var _a, _b;\n            root.remove();\n            (_b = (_a = this.dropdownPart) === null || _a === void 0 ? void 0 : _a.dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.dropdownPart = null;\n        }), addDisposableListener(root, 'pointerdown', (event) => {\n            event.preventDefault();\n        }, { capture: true }), addDisposableListener(root, 'click', (event) => {\n            const el = document.createElement('div');\n            el.style.overflow = 'auto';\n            el.className = 'dv-tabs-overflow-container';\n            for (const tab of this.tabs.tabs.filter((tab) => this._overflowTabs.includes(tab.panel.id))) {\n                const panelObject = this.group.panels.find((panel) => panel === tab.panel);\n                const tabComponent = panelObject.view.createTabRenderer('headerOverflow');\n                const child = tabComponent.element;\n                const wrapper = document.createElement('div');\n                toggleClass(wrapper, 'dv-tab', true);\n                toggleClass(wrapper, 'dv-active-tab', panelObject.api.isActive);\n                toggleClass(wrapper, 'dv-inactive-tab', !panelObject.api.isActive);\n                wrapper.addEventListener('pointerdown', (event) => {\n                    // Check if the click is on a close button or its children\n                    const target = event.target;\n                    const isCloseButton = target.closest('.dv-default-tab-action') !== null;\n                    if (isCloseButton) {\n                        // Let the close button handle its own event\n                        return;\n                    }\n                    this.accessor.popupService.close();\n                    tab.element.scrollIntoView();\n                    tab.panel.api.setActive();\n                });\n                wrapper.appendChild(child);\n                el.appendChild(wrapper);\n            }\n            const relativeParent = findRelativeZIndexParent(root);\n            this.accessor.popupService.openPopover(el, {\n                x: event.clientX,\n                y: event.clientY,\n                zIndex: (relativeParent === null || relativeParent === void 0 ? void 0 : relativeParent.style.zIndex)\n                    ? `calc(${relativeParent.style.zIndex} * 2)`\n                    : undefined,\n            });\n        }));\n    }\n    updateDragAndDropState() {\n        this.tabs.updateDragAndDropState();\n        this.voidContainer.updateDragAndDropState();\n    }\n}\n","import { createChevronRightButton } from '../../../svg';\nexport function createDropdownElementHandle() {\n    const el = document.createElement('div');\n    el.className = 'dv-tabs-overflow-dropdown-default';\n    const text = document.createElement('span');\n    text.textContent = ``;\n    const icon = createChevronRightButton();\n    el.appendChild(icon);\n    el.appendChild(text);\n    return {\n        element: el,\n        update: (params) => {\n            text.textContent = `${params.tabs}`;\n        },\n    };\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n        dndEdges: undefined,\n        theme: undefined,\n        disableTabsOverflowList: undefined,\n        scrollbars: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._overwriteDropTargetContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    set dropTargetContainer(value) {\n        this._overwriteDropTargetContainer = value;\n    }\n    get dropTargetContainer() {\n        var _a;\n        return ((_a = this._overwriteDropTargetContainer) !== null && _a !== void 0 ? _a : this.accessor.rootDropTargetContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (type === 'content') {\n                if (data.groupId === this.id) {\n                    // don't allow to drop on self for center position\n                    if (position === 'center') {\n                        return;\n                    }\n                    if (data.panelId === null) {\n                        // don't allow group move to drop anywhere on self\n                        return;\n                    }\n                }\n            }\n            if (type === 'header') {\n                if (data.groupId === this.id) {\n                    if (data.panelId === null) {\n                        return;\n                    }\n                }\n            }\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    updateDragAndDropState() {\n        this.tabsContainer.updateDragAndDropState();\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c, _d;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: (_c = options.skipSetActive) !== null && _c !== void 0 ? _c : false,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_d = options.position) !== null && _d !== void 0 ? _d : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","export const themeDark = {\n    name: 'dark',\n    className: 'dockview-theme-dark',\n};\nexport const themeLight = {\n    name: 'light',\n    className: 'dockview-theme-light',\n};\nexport const themeVisualStudio = {\n    name: 'visualStudio',\n    className: 'dockview-theme-vs',\n};\nexport const themeAbyss = {\n    name: 'abyss',\n    className: 'dockview-theme-abyss',\n};\nexport const themeDracula = {\n    name: 'dracula',\n    className: 'dockview-theme-dracula',\n};\nexport const themeReplit = {\n    name: 'replit',\n    className: 'dockview-theme-replit',\n    gap: 10,\n};\nexport const themeAbyssSpaced = {\n    name: 'abyssSpaced',\n    className: 'dockview-theme-abyss-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\nexport const themeLightSpaced = {\n    name: 'lightSpaced',\n    className: 'dockview-theme-light-spaced',\n    gap: 10,\n    dndOverlayMounting: 'absolute',\n    dndPanelOverlay: 'group',\n};\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n            skipSetActive: options.skipSetActive,\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    createTabRenderer(tabLocation) {\n        var _a;\n        const cmp = this.createTabComponent(this.id, this.tabComponent);\n        if (this._params) {\n            cmp.init(Object.assign(Object.assign({}, this._params), { tabLocation }));\n        }\n        if (this._updateEvent) {\n            (_a = cmp.update) === null || _a === void 0 ? void 0 : _a.call(cmp, this._updateEvent);\n        }\n        return cmp;\n    }\n    init(params) {\n        this._params = params;\n        this.content.init(params);\n        this.tab.init(Object.assign(Object.assign({}, params), { tabLocation: 'header' }));\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        this._updateEvent = event;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { shiftAbsoluteElementIntoView } from '../../dom';\nimport { addDisposableListener } from '../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../lifecycle';\nexport class PopupService extends CompositeDisposable {\n    constructor(root) {\n        super();\n        this.root = root;\n        this._active = null;\n        this._activeDisposable = new MutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-popover-anchor';\n        this._element.style.position = 'relative';\n        this.root.prepend(this._element);\n        this.addDisposables(Disposable.from(() => {\n            this.close();\n        }), this._activeDisposable);\n    }\n    openPopover(element, position) {\n        var _a;\n        this.close();\n        const wrapper = document.createElement('div');\n        wrapper.style.position = 'absolute';\n        wrapper.style.zIndex = (_a = position.zIndex) !== null && _a !== void 0 ? _a : 'var(--dv-overlay-z-index)';\n        wrapper.appendChild(element);\n        const anchorBox = this._element.getBoundingClientRect();\n        const offsetX = anchorBox.left;\n        const offsetY = anchorBox.top;\n        wrapper.style.top = `${position.y - offsetY}px`;\n        wrapper.style.left = `${position.x - offsetX}px`;\n        this._element.appendChild(wrapper);\n        this._active = wrapper;\n        this._activeDisposable.value = new CompositeDisposable(addDisposableListener(window, 'pointerdown', (event) => {\n            var _a;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            let el = target;\n            while (el && el !== wrapper) {\n                el = (_a = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _a !== void 0 ? _a : null;\n            }\n            if (el) {\n                return; // clicked within popover\n            }\n            this.close();\n        }));\n        requestAnimationFrame(() => {\n            shiftAbsoluteElementIntoView(wrapper, this.root);\n        });\n    }\n    close() {\n        if (this._active) {\n            this._active.remove();\n            this._activeDisposable.dispose();\n            this._active = null;\n        }\n    }\n}\n","import { CompositeDisposable, Disposable } from '../lifecycle';\nexport class DropTargetAnchorContainer extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        var _a;\n        if (this.disabled === value) {\n            return;\n        }\n        this._disabled = value;\n        if (value) {\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n    }\n    get model() {\n        if (this.disabled) {\n            return undefined;\n        }\n        return {\n            clear: () => {\n                var _a;\n                if (this._model) {\n                    (_a = this._model.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this._model.root);\n                }\n                this._model = undefined;\n            },\n            exists: () => {\n                return !!this._model;\n            },\n            getElements: (event, outline) => {\n                const changed = this._outline !== outline;\n                this._outline = outline;\n                if (this._model) {\n                    this._model.changed = changed;\n                    return this._model;\n                }\n                const container = this.createContainer();\n                const anchor = this.createAnchor();\n                this._model = { root: container, overlay: anchor, changed };\n                container.appendChild(anchor);\n                this.element.appendChild(container);\n                if ((event === null || event === void 0 ? void 0 : event.target) instanceof HTMLElement) {\n                    const targetBox = event.target.getBoundingClientRect();\n                    const box = this.element.getBoundingClientRect();\n                    anchor.style.left = `${targetBox.left - box.left}px`;\n                    anchor.style.top = `${targetBox.top - box.top}px`;\n                }\n                return this._model;\n            },\n        };\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this._disabled = false;\n        this._disabled = options.disabled;\n        this.addDisposables(Disposable.from(() => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.clear();\n        }));\n    }\n    createContainer() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-container';\n        return el;\n    }\n    createAnchor() {\n        const el = document.createElement('div');\n        el.className = 'dv-drop-target-anchor';\n        el.style.visibility = 'hidden';\n        return el;\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, } from './dockviewGroupPanelModel';\nimport { WillShowOverlayLocationEvent } from './events';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, Classnames, getDockviewTheme, onDidWindowResizeEnd, onDidWindowMoveEnd, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nimport { PopupService } from './components/popupService';\nimport { DropTargetAnchorContainer } from '../dnd/dropTargetAnchorContainer';\nimport { themeAbyss } from './theme';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a, _b, _c;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: (_b = (_a = options.theme) === null || _a === void 0 ? void 0 : _a.gap) !== null && _b !== void 0 ? _b : 0,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this._watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPopoutGroupSizeChange = new Emitter();\n        this.onDidPopoutGroupSizeChange = this._onDidPopoutGroupSizeChange.event;\n        this._onDidPopoutGroupPositionChange = new Emitter();\n        this.onDidPopoutGroupPositionChange = this._onDidPopoutGroupPositionChange.event;\n        this._onDidOpenPopoutWindowFail = new Emitter();\n        this.onDidOpenPopoutWindowFail = this._onDidOpenPopoutWindowFail.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter({ replay: true });\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidOptionsChange = new Emitter();\n        this.onDidOptionsChange = this._onDidOptionsChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this._options = options;\n        this.popupService = new PopupService(this.element);\n        this._themeClassnames = new Classnames(this.element);\n        this._api = new DockviewApi(this);\n        this.rootDropTargetContainer = new DropTargetAnchorContainer(this.element, { disabled: true });\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        this._rootDropTarget = new Droptarget(this.element, {\n            className: 'dv-drop-target-edge',\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL,\n            getOverrideTarget: () => { var _a; return (_a = this.rootDropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.updateDropTargetModel(options);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        this.updateTheme();\n        this.updateWatermark();\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.rootDropTargetContainer, this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this._onDidOptionsChange, this._onDidPopoutGroupSizeChange, this._onDidPopoutGroupPositionChange, this._onDidOpenPopoutWindowFail, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange, this.onDidPopoutGroupPositionChange, this.onDidPopoutGroupSizeChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }), this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            const referenceGroup = (options === null || options === void 0 ? void 0 : options.referenceGroup)\n                ? options.referenceGroup\n                : itemToPopout instanceof DockviewPanel\n                    ? itemToPopout.group\n                    : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurrence\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                if (popoutContainer) {\n                    this._onDidAddGroup.fire(group);\n                }\n            }\n            if (popoutContainer === null) {\n                console.error('dockview: failed to create popout. perhaps you need to allow pop-ups for this website');\n                popoutWindowDisposable.dispose();\n                this._onDidOpenPopoutWindowFail.fire();\n                // if the popout window was blocked, we need to move the group back to the reference group\n                // and set it to visible\n                this.movingLock(() => moveGroupWithoutDestroying({\n                    from: group,\n                    to: referenceGroup,\n                }));\n                if (!referenceGroup.api.isVisible) {\n                    referenceGroup.api.setVisible(true);\n                }\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            const anchor = document.createElement('div');\n            const dropTargetContainer = new DropTargetAnchorContainer(anchor, { disabled: this.rootDropTargetContainer.disabled });\n            popoutContainer.appendChild(anchor);\n            group.model.dropTargetContainer = dropTargetContainer;\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            const _onDidWindowPositionChange = onDidWindowMoveEnd(_window.window);\n            popoutWindowDisposable.addDisposables(_onDidWindowPositionChange, onDidWindowResizeEnd(_window.window, () => {\n                this._onDidPopoutGroupSizeChange.fire({\n                    width: _window.window.innerWidth,\n                    height: _window.window.innerHeight,\n                    group,\n                });\n            }), _onDidWindowPositionChange.event(() => {\n                this._onDidPopoutGroupPositionChange.fire({\n                    screenX: _window.window.screenX,\n                    screenY: _window.window.screenX,\n                    group,\n                });\n            }), \n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    group.model.dropTargetContainer =\n                        this.rootDropTargetContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout.', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position, options) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0], undefined, options); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length], undefined, options); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        this.updateDropTargetModel(options);\n        const oldDisableDnd = this.options.disableDnd;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        const newDisableDnd = this.options.disableDnd;\n        if (oldDisableDnd !== newDisableDnd) {\n            this.updateDragAndDropState();\n        }\n        if ('theme' in options) {\n            this.updateTheme();\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    updateDragAndDropState() {\n        // Update draggable state for all tabs and void containers\n        for (const group of this.groups) {\n            group.model.updateDragAndDropState();\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup(group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup ? group : undefined,\n                    referenceGroup: gridReferenceGroup\n                        ? this.getPanel(gridReferenceGroup)\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this._watermark) {\n                this._watermark = this.createWatermarkComponent();\n                this._watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this._watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this._watermark) {\n            this._watermark.element.parentElement.remove();\n            (_b = (_a = this._watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this._watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction), options);\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n                skipSetActive: options.skipSetActive,\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => {\n                var _a;\n                return destinationGroup.model.openPanel(removedPanel, {\n                    index: destinationIndex,\n                    skipSetActive: (_a = options.skipSetActive) !== null && _a !== void 0 ? _a : false,\n                    skipSetGroupActive: true,\n                });\n            });\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(destinationGroup);\n            }\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const targetActivePanel = to.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: true, // Always skip setting panels active during move\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            if (!options.skipSetActive) {\n                // Make the moved panel (from the source group) active\n                if (activePanel) {\n                    this.doSetGroupAndPanelActive(to);\n                }\n            }\n            else if (targetActivePanel) {\n                // Ensure the target group's original active panel remains active\n                to.model.openPanel(targetActivePanel, {\n                    skipSetGroupActive: true\n                });\n            }\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    // Remove from popout groups list to prevent automatic restoration\n                    const index = this._popoutGroups.indexOf(selectedPopoutGroup);\n                    if (index >= 0) {\n                        this._popoutGroups.splice(index, 1);\n                    }\n                    // Clean up the reference group (ghost) if it exists and is hidden\n                    if (selectedPopoutGroup.referenceGroup) {\n                        const referenceGroup = this.getPanel(selectedPopoutGroup.referenceGroup);\n                        if (referenceGroup && !referenceGroup.api.isVisible) {\n                            this.doRemoveGroup(referenceGroup, { skipActive: true });\n                        }\n                    }\n                    // Manually dispose the window without triggering restoration\n                    selectedPopoutGroup.window.dispose();\n                    // Update group's location and containers for target\n                    if (to.api.location.type === 'grid') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'grid' };\n                    }\n                    else if (to.api.location.type === 'floating') {\n                        from.model.renderContainer = this.overlayRenderContainer;\n                        from.model.dropTargetContainer = this.rootDropTargetContainer;\n                        from.model.location = { type: 'floating' };\n                    }\n                    break;\n                }\n            }\n            // For moves to grid locations\n            if (to.api.location.type === 'grid') {\n                const referenceLocation = getGridLocation(to.element);\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n                // Add to grid for all moves targeting grid location\n                let size;\n                switch (this.gridview.orientation) {\n                    case Orientation.VERTICAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.width\n                                : from.api.height;\n                        break;\n                    case Orientation.HORIZONTAL:\n                        size =\n                            referenceLocation.length % 2 == 0\n                                ? from.api.height\n                                : from.api.width;\n                        break;\n                }\n                this.gridview.addView(from, size, dropLocation);\n            }\n            else if (to.api.location.type === 'floating') {\n                // For moves to floating locations, add as floating group\n                // Get the position/size from the target floating group\n                const targetFloatingGroup = this._floatingGroups.find((x) => x.group === to);\n                if (targetFloatingGroup) {\n                    const box = targetFloatingGroup.overlay.toJSON();\n                    // Calculate position based on available properties\n                    let left, top;\n                    if ('left' in box) {\n                        left = box.left + 50;\n                    }\n                    else if ('right' in box) {\n                        left = Math.max(0, box.right - box.width - 50);\n                    }\n                    else {\n                        left = 50; // Default fallback\n                    }\n                    if ('top' in box) {\n                        top = box.top + 50;\n                    }\n                    else if ('bottom' in box) {\n                        top = Math.max(0, box.bottom - box.height - 50);\n                    }\n                    else {\n                        top = 50; // Default fallback\n                    }\n                    this.addFloatingGroup(from, {\n                        height: box.height,\n                        width: box.width,\n                        position: {\n                            left,\n                            top,\n                        },\n                    });\n                }\n            }\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n        if (!options.skipSetActive) {\n            this.doSetGroupAndPanelActive(from);\n        }\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size, options) {\n        const group = this.createGroup(options);\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n    updateDropTargetModel(options) {\n        if ('dndEdges' in options) {\n            this._rootDropTarget.disabled =\n                typeof options.dndEdges === 'boolean' &&\n                    options.dndEdges === false;\n            if (typeof options.dndEdges === 'object' &&\n                options.dndEdges !== null) {\n                this._rootDropTarget.setOverlayModel(options.dndEdges);\n            }\n            else {\n                this._rootDropTarget.setOverlayModel(DEFAULT_ROOT_OVERLAY_MODEL);\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this.updateDropTargetModel({ dndEdges: options.dndEdges });\n        }\n    }\n    updateTheme() {\n        var _a, _b;\n        const theme = (_a = this._options.theme) !== null && _a !== void 0 ? _a : themeAbyss;\n        this._themeClassnames.setClassNames(theme.className);\n        this.gridview.margin = (_b = theme.gap) !== null && _b !== void 0 ? _b : 0;\n        switch (theme.dndOverlayMounting) {\n            case 'absolute':\n                this.rootDropTargetContainer.disabled = false;\n                break;\n            case 'relative':\n            default:\n                this.rootDropTargetContainer.disabled = true;\n                break;\n        }\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        if (this._splitview) {\n            this._splitview.dispose();\n        }\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        this.element.remove();\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nconst HEADER_SIZE = 22;\nconst MINIMUM_BODY_SIZE = 0;\nconst MAXIMUM_BODY_SIZE = Number.MAX_SAFE_INTEGER;\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super({\n            accessor: options.accessor,\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            orientation: options.orientation,\n            isExpanded: options.isExpanded,\n            disableDnd: options.disableDnd,\n            headerSize: options.headerSize,\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n        });\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a, _b;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n            headerSize: (_a = options.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n            minimumBodySize: MINIMUM_BODY_SIZE,\n            maximumBodySize: MAXIMUM_BODY_SIZE,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_b = options.params) !== null && _b !== void 0 ? _b : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                headerSize: view.headerSize,\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    var _a, _b, _c;\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                        headerSize: (_a = view.headerSize) !== null && _a !== void 0 ? _a : HEADER_SIZE,\n                        minimumBodySize: (_b = view.minimumSize) !== null && _b !== void 0 ? _b : MINIMUM_BODY_SIZE,\n                        maximumBodySize: (_c = view.maximumSize) !== null && _c !== void 0 ? _c : MAXIMUM_BODY_SIZE,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.element.remove();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            tabLocation: parameters.tabLocation,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            dockviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dv-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave, tabLocation } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\", \"tabLocation\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && tabLocation !== 'headerOverflow' && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            gridviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            paneviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import BrowserOnly from '@docusaurus/BrowserOnly';\nimport { DockviewEmitter } from 'dockview';\nimport * as React from 'react';\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './frameworkSpecific.css';\n\nexport interface FrameworkDescriptor {\n    value: string;\n    label: string;\n    icon: string;\n}\n\nconst frameworks: FrameworkDescriptor[] = [\n    { value: 'JavaScript', label: 'JavaScript', icon: 'img/js-icon.svg' },\n    { value: 'React', label: 'React', icon: 'img/react-icon.svg' },\n    { value: 'Vue', label: 'Vue', icon: 'img/vue-icon.svg' },\n    // { value: 'Angular', label: 'Angular' },\n];\n\nconst activeFrameworkGlobal = new DockviewEmitter<string>({ replay: true });\n\nexport function useActiveFramework(): [\n    FrameworkDescriptor,\n    (value: string) => void\n] {\n    const [value, setValue] = React.useState<string>(\n        localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n    );\n\n    React.useEffect(() => {\n        const disposable = activeFrameworkGlobal.event((value) => [\n            setValue(value),\n        ]);\n\n        activeFrameworkGlobal.fire(\n            localStorage.getItem('dv-docs-framework') ?? frameworks[0].value\n        );\n\n        return () => {\n            disposable.dispose();\n        };\n    }, []);\n\n    const setter = React.useCallback((value: string) => {\n        localStorage.setItem('dv-docs-framework', value);\n        setValue(value);\n        activeFrameworkGlobal.fire(value);\n    }, []);\n\n    const option = frameworks.find((_) => _.value === value);\n\n    return [option, setter];\n}\n\n\n\nconst FrameworkSelector1 = () => {\n    const [activeFramework, setActiveFramework] = useActiveFramework();\n\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => [\n        setActiveFramework(event.target.value),\n    ];\n\n    return (\n        <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild={true}>\n                <div className=\"framework-menu-item-select\">\n                    <span style={{ padding: '0px 8px' }}>\n                        {activeFramework.label}\n                    </span>\n                    <img\n                        width={20}\n                        height={20}\n                        src={useBaseUrl(activeFramework.icon)}\n                        style={{ marginRight: '8px' }}\n                    />\n                </div>\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={10}\n                className=\"DropdownMenuContent\"\n            >\n                {frameworks.map((framework) => {\n                    return (\n                        <DropdownMenu.Item\n                            onClick={() => setActiveFramework(framework.label)}\n                            className=\"DropdownMenuItem\"\n                        >\n                            <div className=\"framework-menu-item\">\n                                <span style={{ paddingRight: '8px' }}>\n                                    {framework.label}\n                                </span>\n                                <img\n                                    width={20}\n                                    height={20}\n                                    src={useBaseUrl(framework.icon)}\n                                />\n                            </div>\n                        </DropdownMenu.Item>\n                    );\n                })}\n            </DropdownMenu.Content>\n        </DropdownMenu.Root>\n    );\n};\n\nexport const FrameworkSelector = () => {\n    return <BrowserOnly>{() => <FrameworkSelector1 />}</BrowserOnly>;\n};\n\nconst FrameworkSpecific1 = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    const [activeFramework] = useActiveFramework();\n\n    if (activeFramework.value === props.framework) {\n        return props.children;\n    }\n\n    return null;\n};\n\nexport const FrameworkSpecific = (props: {\n    framework: string;\n    children: React.ReactNode;\n}) => {\n    return <BrowserOnly>{() => <FrameworkSpecific1 {...props} />}</BrowserOnly>;\n};\n","import * as React from 'react';\nimport { useActiveFramework } from '../frameworkSpecific';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/gh-pages';\n\nexport const _CodeRunner = (props: { id: string; height: number }) => {\n    const [framework] = useActiveFramework();\n\n    let frameworkName = framework.label.toLowerCase();\n\n    if (frameworkName === 'javascript') {\n        frameworkName = 'typescript';\n    }\n\n    const sandboxUrl = `${BASE_SANDBOX_URL}/templates/${\n        props.id\n    }/${framework.label.toLowerCase()}`;\n    const path = `/templates/${props.id}/${frameworkName}/index.html`;\n    return (\n        <iframe\n            src={path}\n            style={{ width: '100%', height: `${props.height ?? 300}px` }}\n        />\n    );\n};\n\nexport const CodeRunner = (props: { id: string; height: number }) => {\n    return <BrowserOnly>{() => <_CodeRunner {...props} />}</BrowserOnly>;\n};\n\nconst CodeSandbox = (props: { url: string }) => {\n    return (\n        <span\n            className=\"codesandbox-button\"\n            style={{ display: 'flex', alignItems: 'center' }}\n        >\n            <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n            <a\n                href={props.url}\n                target={'_blank'}\n                rel=\"noopener\"\n                className=\"codesandbox-button-content\"\n            >\n                <span\n                    style={{\n                        fontWeight: 'bold',\n                        paddingRight: '4px',\n                    }}\n                >\n                    CodeSandbox\n                </span>\n            </a>\n        </span>\n    );\n};\n","\n\nexport const frontMatter = {\n\ttitle: 'Nested Instances'\n};\nexport const contentTitle = 'Nested Dockviews';\nexport const metadata = {\n  \"id\": \"advanced/nested\",\n  \"title\": \"Nested Instances\",\n  \"description\": \"You can safely create multiple dockview instances within one page and nest dockviews within other dockviews.\",\n  \"source\": \"@site/docs/advanced/nested.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/nested\",\n  \"permalink\": \"/docs/advanced/nested\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {\n    \"title\": \"Nested Instances\"\n  },\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Keyboard\",\n    \"permalink\": \"/docs/advanced/keyboard\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {CodeRunner} from '@site/src/components/ui/codeRunner';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"nested-dockviews\",\n      children: \"Nested Dockviews\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can safely create multiple dockview instances within one page and nest dockviews within other dockviews.\\nIf you wish to interact with the drop event from one dockview instance in another dockview instance you can implement the \", _jsx(_components.code, {\n        children: \"api.onUnhandledDragOverEvent\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"onDidDrop\"\n      }), \" props on \", _jsx(_components.code, {\n        children: \"DockviewReact\"\n      }), \".\"]\n    }), \"\\n\", _jsx(CodeRunner, {\n      id: \"dockview/nested\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","children","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableListener","element","type","addEventListener","removeEventListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","OverflowObserver","el","_onDidChange","onDidChange","_value","watchElementResize","entry","hasScrollX","target","scrollWidth","clientWidth","hasScrollY","scrollHeight","clientHeight","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","document","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","rootNode","iframes","tagNames","findIframesInNode","node","nodeType","Node","ELEMENT_NODE","includes","tagName","shadowRoot","documentElement","allTagsNamesInclusiveOfShadowDoms","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","slice","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","_ref","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","call","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","onDidPopoutGroupSizeChange","onDidPopoutGroupPositionChange","onDidOpenPopoutWindowFail","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","getOverrideTarget","getElements","_e","_f","_g","ACTUAL_TARGET","overrideTarget","removeDropTarget","getOverlayOutline","offsetWidth","offsetHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","overlay","bigbox","rootTop","rootLeft","topPx","leftPx","widthPx","heightPx","visibility","changed","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","_onDidChangeExpansionState","_isExpanded","headerComponent","isHeaderVisible","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTargetContainer","dropTarget","theme","dndPanelOverlay","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","addGhostImage","ghostElement","setDragImage","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","getComputedStyle","newNode","cloneNode","getPropertyValue","getPropertyPriority","setContent","updateDragAndDropState","WillShowOverlayLocationEvent","kind","GroupDragHandler","dragEvent","bgColor","color","backgroundColor","padding","fontSize","borderRadius","textContent","VoidContainer","Scrollbar","scrollableElement","_scrollLeft","_horizontalScrollbar","deltaY","MouseWheelSpeed","calculateScrollbarStyles","originalClientX","originalScrollLeft","deltaX","onEnd","scrollLeft","_animationTimer","px","percentageComplete","Tabs","showTabsOverflowControl","_showTabsOverflowControl","_tabsList","_observerDisposable","hasOverflow","toggleDropdown","reset","_tabs","tabs","selectedIndex","_onTabDragStart","onTabDragStart","_onOverflowTabsChange","onOverflowTabsChange","scrollbars","scrollbar","button","tab","setActivePanel","runningWidth","isActivePanel","find","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","inDragMode","addTab","tabToRemove","childPosition","parentPosition","isChildEntirelyVisibleWithinParent","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","createChevronRightButton","TabsContainer","hidden","_hidden","dropdownPart","_overflowTabs","_dropdownDisposable","_onGroupDragStart","onGroupDragStart","singleTabMode","rightActionsContainer","leftActionsContainer","preActionsContainer","disableTabsOverflowList","voidContainer","onDidOptionsChange","setRightActionsElement","rightActions","setLeftActionsElement","leftActions","setPrefixActionsElement","preActions","_isGroupActive","updateClassnames","text","icon","createDropdownElementHandle","prepend","capture","panelObject","createTabRenderer","wrapper","closest","popupService","close","scrollIntoView","relativeParent","zIndex","findRelativeZIndexParent","openPopover","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","dndEdges","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_overwriteDropTargetContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","rootDropTargetContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","constraints","themeDark","name","themeLight","themeVisualStudio","themeAbyss","themeDracula","themeReplit","gap","themeAbyssSpaced","dndOverlayMounting","themeLightSpaced","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","tabLocation","cmp","_updateEvent","componentName","createComponent","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","PopupService","_active","_activeDisposable","anchorBox","offsetX","offsetY","HTMLElement","buffer","rootRect","translateX","translateY","transform","shiftAbsoluteElementIntoView","DropTargetAnchorContainer","exists","_outline","anchor","createAnchor","targetBox","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_watermark","_onWillDragPanel","_onWillDragGroup","_onDidPopoutGroupSizeChange","_onDidPopoutGroupPositionChange","_onDidOpenPopoutWindowFail","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_onDidOptionsChange","_moving","_themeClassnames","_rootDropTarget","updateDropTargetModel","updateTheme","updateWatermark","orthogonalize","itemToPopout","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","referenceGroup","referenceLocation","isGroupAddedToDom","createGroup","error","movingLock","gready","floatingBox","returnedGroup","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","_onDidWindowPositionChange","emitter","timeout","previousScreenX","previousScreenY","checkMovement","closed","currentScreenX","currentScreenY","onDidWindowMoveEnd","resizeTimeout","onDidWindowResizeEnd","skipPopoutAssociated","skipPopoutReturn","catch","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","oldDisableDnd","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","targetActivePanel","selectedFloatingGroup","selectedPopoutGroup","targetFloatingGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","MAXIMUM_BODY_SIZE","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","frameworks","label","activeFrameworkGlobal","useActiveFramework","setValue","localStorage","getItem","setter","setItem","FrameworkSelector1","activeFramework","setActiveFramework","_jsxs","DropdownMenu","_jsx","asChild","src","useBaseUrl","marginRight","side","align","sideOffset","framework","paddingRight","FrameworkSelector","BrowserOnly","FrameworkSpecific1","FrameworkSpecific","_CodeRunner","frameworkName","toLowerCase","CodeRunner","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","code","h1","MDXContent","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}