{"version":3,"file":"assets/js/fd863bf9.046c0b7c.js","mappings":"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","sources":["webpack://dockview-docs/../../node_modules/@docusaurus/core/lib/client/exports/BrowserOnly.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dataTransfer.js","webpack://dockview-docs/../dockview-core/dist/esm/events.js","webpack://dockview-docs/../dockview-core/dist/esm/lifecycle.js","webpack://dockview-docs/../dockview-core/dist/esm/dom.js","webpack://dockview-docs/../dockview-core/dist/esm/array.js","webpack://dockview-docs/../dockview-core/dist/esm/math.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/viewItem.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/leafNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/branchNode.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/resizable.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/baseComponentGridview.js","webpack://dockview-docs/../dockview-core/dist/esm/api/component.api.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/abstractDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/dnd.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/droptarget.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/api/panelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/splitviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/api/paneviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/basePanelView.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/draggablePaneviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/panel/content.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/tab.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/groupDragHandler.js","webpack://dockview-docs/../dockview-core/dist/esm/dnd/ghost.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/voidContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/titlebar/tabsContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/options.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/gridviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewGroupPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/dockviewPanelApi.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/svg.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/tab/defaultTab.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewPanelModel.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/deserializer.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/components/watermark/watermark.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlay.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewFloatingGroupPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/constants.js","webpack://dockview-docs/../dockview-core/dist/esm/overlay/overlayRenderContainer.js","webpack://dockview-docs/../dockview-core/dist/esm/popoutWindow.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/strictEventsSequencing.js","webpack://dockview-docs/../dockview-core/dist/esm/dockview/dockviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/gridview/gridviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/defaultPaneviewHeader.js","webpack://dockview-docs/../dockview-core/dist/esm/paneview/paneviewComponent.js","webpack://dockview-docs/../dockview-core/dist/esm/splitview/splitviewPanel.js","webpack://dockview-docs/../dockview-core/dist/esm/api/entryPoints.js","webpack://dockview-docs/../dockview/dist/esm/react.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactContentPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactHeaderPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/reactWatermarkPart.js","webpack://dockview-docs/../dockview/dist/esm/dockview/headerActionsRenderer.js","webpack://dockview-docs/../dockview/dist/esm/dockview/dockview.js","webpack://dockview-docs/../dockview/dist/esm/svg.js","webpack://dockview-docs/../dockview/dist/esm/dockview/defaultTab.js","webpack://dockview-docs/../dockview/dist/esm/splitview/view.js","webpack://dockview-docs/../dockview/dist/esm/splitview/splitview.js","webpack://dockview-docs/../dockview/dist/esm/gridview/view.js","webpack://dockview-docs/../dockview/dist/esm/gridview/gridview.js","webpack://dockview-docs/../dockview/dist/esm/paneview/view.js","webpack://dockview-docs/../dockview/dist/esm/paneview/paneview.js","webpack://dockview-docs/./src/components/ui/codeSandboxButton.tsx","webpack://dockview-docs/./src/components/ui/spinner.tsx","webpack://dockview-docs/./src/components/ui/container.tsx","webpack://dockview-docs/./sandboxes/nativeapp-dockview/src/app.tsx","webpack://dockview-docs/./docs/advanced/advanced.mdx","webpack://dockview-docs/../../node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { isValidElement } from 'react';\nimport useIsBrowser from '@docusaurus/useIsBrowser';\n// Similar comp to the one described here:\n// https://www.joshwcomeau.com/react/the-perils-of-rehydration/#abstractions\nexport default function BrowserOnly({ children, fallback, }) {\n    const isBrowser = useIsBrowser();\n    if (isBrowser) {\n        if (typeof children !== 'function' &&\n            process.env.NODE_ENV === 'development') {\n            throw new Error(`Docusaurus error: The children of <BrowserOnly> must be a \"render function\", e.g. <BrowserOnly>{() => <span>{window.location.href}</span>}</BrowserOnly>.\nCurrent type: ${isValidElement(children) ? 'React element' : typeof children}`);\n        }\n        return <>{children?.()}</>;\n    }\n    return fallback ?? null;\n}\n","class TransferObject {\n}\nexport class PanelTransfer extends TransferObject {\n    constructor(viewId, groupId, panelId) {\n        super();\n        this.viewId = viewId;\n        this.groupId = groupId;\n        this.panelId = panelId;\n    }\n}\nexport class PaneTransfer extends TransferObject {\n    constructor(viewId, paneId) {\n        super();\n        this.viewId = viewId;\n        this.paneId = paneId;\n    }\n}\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    clearData(proto) {\n        if (this.hasData(proto)) {\n            this.proto = undefined;\n            this.data = undefined;\n        }\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n    setData(data, proto) {\n        if (proto) {\n            this.data = data;\n            this.proto = proto;\n        }\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\nexport function getPanelData() {\n    const panelTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = panelTransfer.hasData(PanelTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return panelTransfer.getData(PanelTransfer.prototype)[0];\n}\nexport function getPaneData() {\n    const paneTransfer = LocalSelectionTransfer.getInstance();\n    const isPanelEvent = paneTransfer.hasData(PaneTransfer.prototype);\n    if (!isPanelEvent) {\n        return undefined;\n    }\n    return paneTransfer.getData(PaneTransfer.prototype)[0];\n}\n","export var Event;\n(function (Event) {\n    Event.any = (...children) => {\n        return (listener) => {\n            const disposables = children.map((child) => child(listener));\n            return {\n                dispose: () => {\n                    disposables.forEach((d) => {\n                        d.dispose();\n                    });\n                },\n            };\n        };\n    };\n})(Event || (Event = {}));\nexport class DockviewEvent {\n    constructor() {\n        this._defaultPrevented = false;\n    }\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\nexport class AcceptableEvent {\n    constructor() {\n        this._isAccepted = false;\n    }\n    get isAccepted() {\n        return this._isAccepted;\n    }\n    accept() {\n        this._isAccepted = true;\n    }\n}\nclass LeakageMonitor {\n    constructor() {\n        this.events = new Map();\n    }\n    get size() {\n        return this.events.size;\n    }\n    add(event, stacktrace) {\n        this.events.set(event, stacktrace);\n    }\n    delete(event) {\n        this.events.delete(event);\n    }\n    clear() {\n        this.events.clear();\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn('dockview: stacktrace', this.value);\n    }\n}\nclass Listener {\n    constructor(callback, stacktrace) {\n        this.callback = callback;\n        this.stacktrace = stacktrace;\n    }\n}\n// relatively simple event emitter taken from https://github.com/microsoft/vscode/blob/master/src/vs/base/common/event.ts\nexport class Emitter {\n    static setLeakageMonitorEnabled(isEnabled) {\n        if (isEnabled !== Emitter.ENABLE_TRACKING) {\n            Emitter.MEMORY_LEAK_WATCHER.clear();\n        }\n        Emitter.ENABLE_TRACKING = isEnabled;\n    }\n    get value() {\n        return this._last;\n    }\n    constructor(options) {\n        this.options = options;\n        this._listeners = [];\n        this._disposed = false;\n    }\n    get event() {\n        if (!this._event) {\n            this._event = (callback) => {\n                var _a;\n                if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.replay) && this._last !== undefined) {\n                    callback(this._last);\n                }\n                const listener = new Listener(callback, Emitter.ENABLE_TRACKING ? Stacktrace.create() : undefined);\n                this._listeners.push(listener);\n                return {\n                    dispose: () => {\n                        const index = this._listeners.indexOf(listener);\n                        if (index > -1) {\n                            this._listeners.splice(index, 1);\n                        }\n                        else if (Emitter.ENABLE_TRACKING) {\n                            // console.warn(\n                            //     `dockview: listener already disposed`,\n                            //     Stacktrace.create().print()\n                            // );\n                        }\n                    },\n                };\n            };\n            if (Emitter.ENABLE_TRACKING) {\n                Emitter.MEMORY_LEAK_WATCHER.add(this._event, Stacktrace.create());\n            }\n        }\n        return this._event;\n    }\n    fire(e) {\n        this._last = e;\n        for (const listener of this._listeners) {\n            listener.callback(e);\n        }\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._listeners.length > 0) {\n                if (Emitter.ENABLE_TRACKING) {\n                    queueMicrotask(() => {\n                        var _a;\n                        // don't check until stack of execution is completed to allow for out-of-order disposals within the same execution block\n                        for (const listener of this._listeners) {\n                            console.warn('dockview: stacktrace', (_a = listener.stacktrace) === null || _a === void 0 ? void 0 : _a.print());\n                        }\n                    });\n                }\n                this._listeners = [];\n            }\n            if (Emitter.ENABLE_TRACKING && this._event) {\n                Emitter.MEMORY_LEAK_WATCHER.delete(this._event);\n            }\n        }\n    }\n}\nEmitter.ENABLE_TRACKING = false;\nEmitter.MEMORY_LEAK_WATCHER = new LeakageMonitor();\nexport function addDisposableWindowListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\nexport function addDisposableListener(element, type, listener, options) {\n    element.addEventListener(type, listener, options);\n    return {\n        dispose: () => {\n            element.removeEventListener(type, listener, options);\n        },\n    };\n}\n/**\n *\n * Event Emitter that fires events from a Microtask callback, only one event will fire per event-loop cycle.\n *\n * It's kind of like using an `asapScheduler` in RxJs with additional logic to only fire once per event-loop cycle.\n * This implementation exists to avoid external dependencies.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask\n * @see https://rxjs.dev/api/index/const/asapScheduler\n */\nexport class AsapEvent {\n    constructor() {\n        this._onFired = new Emitter();\n        this._currentFireCount = 0;\n        this._queued = false;\n        this.onEvent = (e) => {\n            /**\n             * when the event is first subscribed to take note of the current fire count\n             */\n            const fireCountAtTimeOfEventSubscription = this._currentFireCount;\n            return this._onFired.event(() => {\n                /**\n                 * if the current fire count is greater than the fire count at event subscription\n                 * then the event has been fired since we subscribed and it's ok to \"on_next\" the event.\n                 *\n                 * if the count is not greater then what we are recieving is an event from the microtask\n                 * queue that was triggered before we actually subscribed and therfore we should ignore it.\n                 */\n                if (this._currentFireCount > fireCountAtTimeOfEventSubscription) {\n                    e();\n                }\n            });\n        };\n    }\n    fire() {\n        this._currentFireCount++;\n        if (this._queued) {\n            return;\n        }\n        this._queued = true;\n        queueMicrotask(() => {\n            this._queued = false;\n            this._onFired.fire();\n        });\n    }\n    dispose() {\n        this._onFired.dispose();\n    }\n}\n","export var Disposable;\n(function (Disposable) {\n    Disposable.NONE = {\n        dispose: () => {\n            // noop\n        },\n    };\n    function from(func) {\n        return {\n            dispose: () => {\n                func();\n            },\n        };\n    }\n    Disposable.from = from;\n})(Disposable || (Disposable = {}));\nexport class CompositeDisposable {\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    constructor(...args) {\n        this._isDisposed = false;\n        this._disposables = args;\n    }\n    addDisposables(...args) {\n        args.forEach((arg) => this._disposables.push(arg));\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach((arg) => arg.dispose());\n        this._disposables = [];\n    }\n}\nexport class MutableDisposable {\n    constructor() {\n        this._disposable = Disposable.NONE;\n    }\n    set value(disposable) {\n        if (this._disposable) {\n            this._disposable.dispose();\n        }\n        this._disposable = disposable;\n    }\n    dispose() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = Disposable.NONE;\n        }\n    }\n}\n","import { Emitter, addDisposableListener, addDisposableWindowListener, } from './events';\nimport { CompositeDisposable } from './lifecycle';\nexport class OverflowObserver extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._value = null;\n        this.addDisposables(this._onDidChange, watchElementResize(el, (entry) => {\n            const hasScrollX = entry.target.scrollWidth > entry.target.clientWidth;\n            const hasScrollY = entry.target.scrollHeight > entry.target.clientHeight;\n            this._value = { hasScrollX, hasScrollY };\n            this._onDidChange.fire(this._value);\n        }));\n    }\n}\nexport function watchElementResize(element, cb) {\n    const observer = new ResizeObserver((entires) => {\n        /**\n         * Fast browser window resize produces Error: ResizeObserver loop limit exceeded.\n         * The error isn't visible in browser console, doesn't affect functionality, but degrades performance.\n         * See https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded/58701523#58701523\n         */\n        requestAnimationFrame(() => {\n            const firstEntry = entires[0];\n            cb(firstEntry);\n        });\n    });\n    observer.observe(element);\n    return {\n        dispose: () => {\n            observer.unobserve(element);\n            observer.disconnect();\n        },\n    };\n}\nexport const removeClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (element.classList.contains(classname)) {\n            element.classList.remove(classname);\n        }\n    }\n};\nexport const addClasses = (element, ...classes) => {\n    for (const classname of classes) {\n        if (!element.classList.contains(classname)) {\n            element.classList.add(classname);\n        }\n    }\n};\nexport const toggleClass = (element, className, isToggled) => {\n    const hasClass = element.classList.contains(className);\n    if (isToggled && !hasClass) {\n        element.classList.add(className);\n    }\n    if (!isToggled && hasClass) {\n        element.classList.remove(className);\n    }\n};\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\n/**\n * Track focus on an element. Ensure tabIndex is set when an HTMLElement is not focusable by default\n */\nclass FocusTracker extends CompositeDisposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        let hasFocus = isAncestor(document.activeElement, element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = isAncestor(document.activeElement, element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        if (element instanceof HTMLElement) {\n            this.addDisposables(addDisposableListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableListener(element, 'blur', onBlur, true));\n        }\n        else {\n            this.addDisposables(addDisposableWindowListener(element, 'focus', onFocus, true));\n            this.addDisposables(addDisposableWindowListener(element, 'blur', onBlur, true));\n        }\n    }\n    refreshState() {\n        this._refreshStateHandler();\n    }\n}\n// quasi: apparently, but not really; seemingly\nconst QUASI_PREVENT_DEFAULT_KEY = 'dv-quasiPreventDefault';\n// mark an event directly for other listeners to check\nexport function quasiPreventDefault(event) {\n    event[QUASI_PREVENT_DEFAULT_KEY] = true;\n}\n// check if this event has been marked\nexport function quasiDefaultPrevented(event) {\n    return event[QUASI_PREVENT_DEFAULT_KEY];\n}\nexport function addStyles(document, styleSheetList) {\n    const styleSheets = Array.from(styleSheetList);\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            const link = document.createElement('link');\n            link.href = styleSheet.href;\n            link.type = styleSheet.type;\n            link.rel = 'stylesheet';\n            document.head.appendChild(link);\n        }\n        let cssTexts = [];\n        try {\n            if (styleSheet.cssRules) {\n                cssTexts = Array.from(styleSheet.cssRules).map((rule) => rule.cssText);\n            }\n        }\n        catch (err) {\n            // security errors (lack of permissions), ignore\n        }\n        for (const rule of cssTexts) {\n            const style = document.createElement('style');\n            style.appendChild(document.createTextNode(rule));\n            document.head.appendChild(style);\n        }\n    }\n}\nexport function getDomNodePagePosition(domNode) {\n    const { left, top, width, height } = domNode.getBoundingClientRect();\n    return {\n        left: left + window.scrollX,\n        top: top + window.scrollY,\n        width: width,\n        height: height,\n    };\n}\n/**\n * Check whether an element is in the DOM (including the Shadow DOM)\n * @see https://terodox.tech/how-to-tell-if-an-element-is-in-the-dom-including-the-shadow-dom/\n */\nexport function isInDocument(element) {\n    let currentElement = element;\n    while (currentElement === null || currentElement === void 0 ? void 0 : currentElement.parentNode) {\n        if (currentElement.parentNode === document) {\n            return true;\n        }\n        else if (currentElement.parentNode instanceof DocumentFragment) {\n            // handle shadow DOMs\n            currentElement = currentElement.parentNode.host;\n        }\n        else {\n            currentElement = currentElement.parentNode;\n        }\n    }\n    return false;\n}\nexport function addTestId(element, id) {\n    element.setAttribute('data-testid', id);\n}\nexport function disableIframePointEvents() {\n    const iframes = [\n        ...getElementsByTagName('iframe'),\n        ...getElementsByTagName('webview'),\n    ];\n    const original = new WeakMap(); // don't hold onto HTMLElement references longer than required\n    for (const iframe of iframes) {\n        original.set(iframe, iframe.style.pointerEvents);\n        iframe.style.pointerEvents = 'none';\n    }\n    return {\n        release: () => {\n            var _a;\n            for (const iframe of iframes) {\n                iframe.style.pointerEvents = (_a = original.get(iframe)) !== null && _a !== void 0 ? _a : 'auto';\n            }\n            iframes.splice(0, iframes.length); // don't hold onto HTMLElement references longer than required\n        },\n    };\n}\nexport function getDockviewTheme(element) {\n    function toClassList(element) {\n        const list = [];\n        for (let i = 0; i < element.classList.length; i++) {\n            list.push(element.classList.item(i));\n        }\n        return list;\n    }\n    let theme = undefined;\n    let parent = element;\n    while (parent !== null) {\n        theme = toClassList(parent).find((cls) => cls.startsWith('dockview-theme-'));\n        if (typeof theme === 'string') {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return theme;\n}\nexport class Classnames {\n    constructor(element) {\n        this.element = element;\n        this._classNames = [];\n    }\n    setClassNames(classNames) {\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, false);\n        }\n        this._classNames = classNames\n            .split(' ')\n            .filter((v) => v.trim().length > 0);\n        for (const className of this._classNames) {\n            toggleClass(this.element, className, true);\n        }\n    }\n}\n","export function tail(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\nexport function sequenceEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function firstIndex(array, fn) {\n    for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(array, value) {\n    const index = array.findIndex((t) => t === value);\n    if (index > -1) {\n        array.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n","export const clamp = (value, min, max) => {\n    if (min > max) {\n        /**\n         * caveat: an error should be thrown here if this was a proper `clamp` function but we need to handle\n         * cases where `min` > `max` and in those cases return `min`.\n         */\n        return min;\n    }\n    return Math.min(max, Math.max(value, min));\n};\nexport const sequentialNumberGenerator = () => {\n    let value = 1;\n    return { next: () => (value++).toString() };\n};\nexport const range = (from, to) => {\n    const result = [];\n    if (typeof to !== 'number') {\n        to = from;\n        from = 0;\n    }\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n};\n","import { clamp } from '../math';\nexport class ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get cachedVisibleSize() {\n        return this._cachedVisibleSize;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    get minimumSize() {\n        return this.visible ? this.view.minimumSize : 0;\n    }\n    get viewMinimumSize() {\n        return this.view.minimumSize;\n    }\n    get maximumSize() {\n        return this.visible ? this.view.maximumSize : 0;\n    }\n    get viewMaximumSize() {\n        return this.view.maximumSize;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return !!this.view.snap;\n    }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    setVisible(visible, size) {\n        var _a;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp((_a = this._cachedVisibleSize) !== null && _a !== void 0 ? _a : 0, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize =\n                typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/splitview\n *--------------------------------------------------------------------------------------------*/\nimport { removeClasses, addClasses, toggleClass, disableIframePointEvents, } from '../dom';\nimport { Emitter } from '../events';\nimport { pushToStart, pushToEnd, firstIndex } from '../array';\nimport { range, clamp } from '../math';\nimport { ViewItem } from './viewItem';\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"HORIZONTAL\"] = \"HORIZONTAL\";\n    Orientation[\"VERTICAL\"] = \"VERTICAL\";\n})(Orientation || (Orientation = {}));\nexport var SashState;\n(function (SashState) {\n    SashState[SashState[\"MAXIMUM\"] = 0] = \"MAXIMUM\";\n    SashState[SashState[\"MINIMUM\"] = 1] = \"MINIMUM\";\n    SashState[SashState[\"DISABLED\"] = 2] = \"DISABLED\";\n    SashState[SashState[\"ENABLED\"] = 3] = \"ENABLED\";\n})(SashState || (SashState = {}));\nexport var LayoutPriority;\n(function (LayoutPriority) {\n    LayoutPriority[\"Low\"] = \"low\";\n    LayoutPriority[\"High\"] = \"high\";\n    LayoutPriority[\"Normal\"] = \"normal\";\n})(LayoutPriority || (LayoutPriority = {}));\nexport var Sizing;\n(function (Sizing) {\n    Sizing.Distribute = { type: 'distribute' };\n    function Split(index) {\n        return { type: 'split', index };\n    }\n    Sizing.Split = Split;\n    function Invisible(cachedVisibleSize) {\n        return { type: 'invisible', cachedVisibleSize };\n    }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\nexport class Splitview {\n    get contentSize() {\n        return this._contentSize;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(value) {\n        this._orthogonalSize = value;\n    }\n    get length() {\n        return this.viewItems.length;\n    }\n    get proportions() {\n        return this._proportions ? [...this._proportions] : undefined;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        this._orientation = value;\n        const tmp = this.size;\n        this.size = this.orthogonalSize;\n        this.orthogonalSize = tmp;\n        removeClasses(this.element, 'dv-horizontal', 'dv-vertical');\n        this.element.classList.add(this.orientation == Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical');\n    }\n    get minimumSize() {\n        return this.viewItems.reduce((r, item) => r + item.minimumSize, 0);\n    }\n    get maximumSize() {\n        return this.length === 0\n            ? Number.POSITIVE_INFINITY\n            : this.viewItems.reduce((r, item) => r + item.maximumSize, 0);\n    }\n    get startSnappingEnabled() {\n        return this._startSnappingEnabled;\n    }\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get endSnappingEnabled() {\n        return this._endSnappingEnabled;\n    }\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        toggleClass(this.element, 'dv-splitview-disabled', value);\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n    }\n    constructor(container, options) {\n        var _a, _b;\n        this.container = container;\n        this.viewItems = [];\n        this.sashes = [];\n        this._size = 0;\n        this._orthogonalSize = 0;\n        this._contentSize = 0;\n        this._proportions = undefined;\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        this._disabled = false;\n        this._margin = 0;\n        this._onDidSashEnd = new Emitter();\n        this.onDidSashEnd = this._onDidSashEnd.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this.resize = (index, delta, sizes = this.viewItems.map((x) => x.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) => {\n            if (index < 0 || index > this.viewItems.length) {\n                return 0;\n            }\n            const upIndexes = range(index, -1);\n            const downIndexes = range(index + 1, this.viewItems.length);\n            //\n            if (highPriorityIndexes) {\n                for (const i of highPriorityIndexes) {\n                    pushToStart(upIndexes, i);\n                    pushToStart(downIndexes, i);\n                }\n            }\n            if (lowPriorityIndexes) {\n                for (const i of lowPriorityIndexes) {\n                    pushToEnd(upIndexes, i);\n                    pushToEnd(downIndexes, i);\n                }\n            }\n            //\n            const upItems = upIndexes.map((i) => this.viewItems[i]);\n            const upSizes = upIndexes.map((i) => sizes[i]);\n            //\n            const downItems = downIndexes.map((i) => this.viewItems[i]);\n            const downSizes = downIndexes.map((i) => sizes[i]);\n            //\n            const minDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].minimumSize - sizes[i], 0);\n            const maxDeltaUp = upIndexes.reduce((_, i) => _ + this.viewItems[i].maximumSize - sizes[i], 0);\n            //\n            const maxDeltaDown = downIndexes.length === 0\n                ? Number.POSITIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].minimumSize, 0);\n            const minDeltaDown = downIndexes.length === 0\n                ? Number.NEGATIVE_INFINITY\n                : downIndexes.reduce((_, i) => _ + sizes[i] - this.viewItems[i].maximumSize, 0);\n            //\n            const minDelta = Math.max(minDeltaUp, minDeltaDown);\n            const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n            //\n            let snapped = false;\n            if (snapBefore) {\n                const snapView = this.viewItems[snapBefore.index];\n                const visible = delta >= snapBefore.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapBefore.size);\n            }\n            if (!snapped && snapAfter) {\n                const snapView = this.viewItems[snapAfter.index];\n                const visible = delta < snapAfter.limitDelta;\n                snapped = visible !== snapView.visible;\n                snapView.setVisible(visible, snapAfter.size);\n            }\n            if (snapped) {\n                return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n            }\n            //\n            const tentativeDelta = clamp(delta, minDelta, maxDelta);\n            let actualDelta = 0;\n            //\n            let deltaUp = tentativeDelta;\n            for (let i = 0; i < upItems.length; i++) {\n                const item = upItems[i];\n                const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n                const viewDelta = size - upSizes[i];\n                actualDelta += viewDelta;\n                deltaUp -= viewDelta;\n                item.size = size;\n            }\n            //\n            let deltaDown = actualDelta;\n            for (let i = 0; i < downItems.length; i++) {\n                const item = downItems[i];\n                const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n                const viewDelta = size - downSizes[i];\n                deltaDown += viewDelta;\n                item.size = size;\n            }\n            //\n            return delta;\n        };\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = this.createContainer();\n        this.margin = (_b = options.margin) !== null && _b !== void 0 ? _b : 0;\n        this.proportionalLayout =\n            options.proportionalLayout === undefined\n                ? true\n                : !!options.proportionalLayout;\n        this.viewContainer = this.createViewContainer();\n        this.sashContainer = this.createSashContainer();\n        this.element.appendChild(this.sashContainer);\n        this.element.appendChild(this.viewContainer);\n        this.container.appendChild(this.element);\n        this.style(options.styles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this._size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = viewDescriptor.visible === undefined ||\n                    viewDescriptor.visible\n                    ? viewDescriptor.size\n                    : {\n                        type: 'invisible',\n                        cachedVisibleSize: viewDescriptor.size,\n                    };\n                const view = viewDescriptor.view;\n                this.addView(view, sizing, index, true\n                // true skip layout\n                );\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if ((styles === null || styles === void 0 ? void 0 : styles.separatorBorder) === 'transparent') {\n            removeClasses(this.element, 'dv-separator-border');\n            this.element.style.removeProperty('--dv-separator-border');\n        }\n        else {\n            addClasses(this.element, 'dv-separator-border');\n            if (styles === null || styles === void 0 ? void 0 : styles.separatorBorder) {\n                this.element.style.setProperty('--dv-separator-border', styles.separatorBorder);\n            }\n        }\n    }\n    isViewVisible(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.visible;\n    }\n    setViewVisible(index, visible) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        viewItem.setVisible(visible, viewItem.size);\n        this.distributeEmptySpace(index);\n        this.layoutViews();\n        this.saveProportions();\n    }\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this._size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    getViews() {\n        return this.viewItems.map((x) => x.view);\n    }\n    onDidChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        item.size = size;\n        const indexes = range(this.viewItems.length).filter((i) => i !== index);\n        const lowPriorityIndexes = [\n            ...indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low),\n            index,\n        ];\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        /**\n         * add this view we are changing to the low-index list since we have determined the size\n         * here and don't want it changed\n         */\n        this.relayout([...lowPriorityIndexes, index], highPriorityIndexes);\n    }\n    addView(view, size = { type: 'distribute' }, index = this.viewItems.length, skipLayout) {\n        const container = document.createElement('div');\n        container.className = 'dv-view';\n        container.appendChild(view.element);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const disposable = view.onDidChange((newSize) => this.onDidChange(viewItem, newSize.size));\n        const viewItem = new ViewItem(container, view, viewSize, {\n            dispose: () => {\n                disposable.dispose();\n                this.viewContainer.removeChild(container);\n            },\n        });\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        this.viewItems.splice(index, 0, viewItem);\n        if (this.viewItems.length > 1) {\n            //add sash\n            const sash = document.createElement('div');\n            sash.className = 'dv-sash';\n            const onPointerStart = (event) => {\n                for (const item of this.viewItems) {\n                    item.enabled = false;\n                }\n                const iframes = disableIframePointEvents();\n                const start = this._orientation === Orientation.HORIZONTAL\n                    ? event.clientX\n                    : event.clientY;\n                const sashIndex = firstIndex(this.sashes, (s) => s.container === sash);\n                //\n                const sizes = this.viewItems.map((x) => x.size);\n                //\n                let snapBefore;\n                let snapAfter;\n                const upIndexes = range(sashIndex, -1);\n                const downIndexes = range(sashIndex + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0\n                    ? Number.POSITIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0\n                    ? Number.NEGATIVE_INFINITY\n                    : downIndexes.reduce((r, i) => r +\n                        (sizes[i] -\n                            this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? minDelta - halfSize\n                            : minDelta + halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const snappedViewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(snappedViewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: snappedViewItem.visible\n                            ? maxDelta + halfSize\n                            : maxDelta - halfSize,\n                        size: snappedViewItem.size,\n                    };\n                }\n                const onPointerMove = (event) => {\n                    const current = this._orientation === Orientation.HORIZONTAL\n                        ? event.clientX\n                        : event.clientY;\n                    const delta = current - start;\n                    this.resize(sashIndex, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n                    this.distributeEmptySpace();\n                    this.layoutViews();\n                };\n                const end = () => {\n                    for (const item of this.viewItems) {\n                        item.enabled = true;\n                    }\n                    iframes.release();\n                    this.saveProportions();\n                    document.removeEventListener('pointermove', onPointerMove);\n                    document.removeEventListener('pointerup', end);\n                    document.removeEventListener('pointercancel', end);\n                    this._onDidSashEnd.fire(undefined);\n                };\n                document.addEventListener('pointermove', onPointerMove);\n                document.addEventListener('pointerup', end);\n                document.addEventListener('pointercancel', end);\n            };\n            sash.addEventListener('pointerdown', onPointerStart);\n            const sashItem = {\n                container: sash,\n                disposable: () => {\n                    sash.removeEventListener('pointerdown', onPointerStart);\n                    this.sashContainer.removeChild(sash);\n                },\n            };\n            this.sashContainer.appendChild(sash);\n            this.sashes.push(sashItem);\n        }\n        if (!skipLayout) {\n            this.relayout([index]);\n        }\n        if (!skipLayout &&\n            typeof size !== 'number' &&\n            size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidAddView.fire(view);\n    }\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    removeView(index, sizing, skipLayout = false) {\n        // Remove view\n        const viewItem = this.viewItems.splice(index, 1)[0];\n        viewItem.dispose();\n        // Remove sash\n        if (this.viewItems.length >= 1) {\n            const sashIndex = Math.max(index - 1, 0);\n            const sashItem = this.sashes.splice(sashIndex, 1)[0];\n            sashItem.disposable();\n        }\n        if (!skipLayout) {\n            this.relayout();\n        }\n        if (sizing && sizing.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n        this._onDidRemoveView.fire(viewItem.view);\n        return viewItem.view;\n    }\n    getViewCachedVisibleSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            throw new Error('Index out of bounds');\n        }\n        const viewItem = this.viewItems[index];\n        return viewItem.cachedVisibleSize;\n    }\n    moveView(from, to) {\n        const cachedVisibleSize = this.getViewCachedVisibleSize(from);\n        const sizing = typeof cachedVisibleSize === 'undefined'\n            ? this.getViewSize(from)\n            : Sizing.Invisible(cachedVisibleSize);\n        const view = this.removeView(from, undefined, true);\n        this.addView(view, sizing, to);\n    }\n    layout(size, orthogonalSize) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.orthogonalSize = orthogonalSize;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n            const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round((proportion * size) / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this._size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.Low);\n        const highPriorityIndexes = indexes.filter((i) => this.viewItems[i].priority === LayoutPriority.High);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this._proportions = this.viewItems.map((i) => i.visible ? i.size / this._contentSize : undefined);\n        }\n    }\n    /**\n     * Margin explain:\n     *\n     * For `n` views in a splitview there will be `n-1` margins `m`.\n     *\n     * To fit the margins each view must reduce in size by `(m * (n - 1)) / n`.\n     *\n     * For each view `i` the offet must be adjusted by `m * i/(n - 1)`.\n     */\n    layoutViews() {\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.updateSashEnablement();\n        if (this.viewItems.length === 0) {\n            return;\n        }\n        const visibleViewItems = this.viewItems.filter((i) => i.visible);\n        const sashCount = Math.max(0, visibleViewItems.length - 1);\n        const marginReducedSize = (this.margin * sashCount) / Math.max(1, visibleViewItems.length);\n        let totalLeftOffset = 0;\n        const viewLeftOffsets = [];\n        const sashWidth = 4; // hardcoded in css\n        const runningVisiblePanelCount = this.viewItems.reduce((arr, viewItem, i) => {\n            const flag = viewItem.visible ? 1 : 0;\n            if (i === 0) {\n                arr.push(flag);\n            }\n            else {\n                arr.push(arr[i - 1] + flag);\n            }\n            return arr;\n        }, []);\n        // calculate both view and cash positions\n        this.viewItems.forEach((view, i) => {\n            totalLeftOffset += this.viewItems[i].size;\n            viewLeftOffsets.push(totalLeftOffset);\n            const size = view.visible ? view.size - marginReducedSize : 0;\n            const visiblePanelsBeforeThisView = Math.max(0, runningVisiblePanelCount[i] - 1);\n            const offset = i === 0 || visiblePanelsBeforeThisView === 0\n                ? 0\n                : viewLeftOffsets[i - 1] +\n                    (visiblePanelsBeforeThisView / sashCount) *\n                        marginReducedSize;\n            if (i < this.viewItems.length - 1) {\n                // calculate sash position\n                const newSize = view.visible\n                    ? offset + size - sashWidth / 2 + this.margin / 2\n                    : offset;\n                if (this._orientation === Orientation.HORIZONTAL) {\n                    this.sashes[i].container.style.left = `${newSize}px`;\n                    this.sashes[i].container.style.top = `0px`;\n                }\n                if (this._orientation === Orientation.VERTICAL) {\n                    this.sashes[i].container.style.left = `0px`;\n                    this.sashes[i].container.style.top = `${newSize}px`;\n                }\n            }\n            // calculate view position\n            if (this._orientation === Orientation.HORIZONTAL) {\n                view.container.style.width = `${size}px`;\n                view.container.style.left = `${offset}px`;\n                view.container.style.top = '';\n                view.container.style.height = '';\n            }\n            if (this._orientation === Orientation.VERTICAL) {\n                view.container.style.height = `${size}px`;\n                view.container.style.top = `${offset}px`;\n                view.container.style.width = '';\n                view.container.style.left = '';\n            }\n            view.view.layout(view.size - marginReducedSize, this._orthogonalSize);\n        });\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible &&\n                viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map((i) => (previous = i.size - i.minimumSize > 0 || previous));\n        previous = false;\n        const expandsDown = this.viewItems.map((i) => (previous = i.maximumSize - i.size > 0 || previous));\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews\n            .map((i) => (previous = i.size - i.minimumSize > 0 || previous))\n            .reverse();\n        previous = false;\n        const expandsUp = reverseViews\n            .map((i) => (previous = i.maximumSize - i.size > 0 || previous))\n            .reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashes.length; index++) {\n            const sash = this.sashes[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' &&\n                    !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' &&\n                    !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore &&\n                    collapsesUp[index] &&\n                    (position > 0 || this.startSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MINIMUM);\n                }\n                else if (snappedAfter &&\n                    collapsesDown[index] &&\n                    (position < this._contentSize || this.endSnappingEnabled)) {\n                    this.updateSash(sash, SashState.MAXIMUM);\n                }\n                else {\n                    this.updateSash(sash, SashState.DISABLED);\n                }\n            }\n            else if (min && !max) {\n                this.updateSash(sash, SashState.MINIMUM);\n            }\n            else if (!min && max) {\n                this.updateSash(sash, SashState.MAXIMUM);\n            }\n            else {\n                this.updateSash(sash, SashState.ENABLED);\n            }\n        }\n    }\n    updateSash(sash, state) {\n        toggleClass(sash.container, 'dv-disabled', state === SashState.DISABLED);\n        toggleClass(sash.container, 'dv-enabled', state === SashState.ENABLED);\n        toggleClass(sash.container, 'dv-maximum', state === SashState.MAXIMUM);\n        toggleClass(sash.container, 'dv-minimum', state === SashState.MINIMUM);\n    }\n    createViewContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-view-container';\n        return element;\n    }\n    createSashContainer() {\n        const element = document.createElement('div');\n        element.className = 'dv-sash-container';\n        return element;\n    }\n    createContainer() {\n        const element = document.createElement('div');\n        const orientationClassname = this._orientation === Orientation.HORIZONTAL\n            ? 'dv-horizontal'\n            : 'dv-vertical';\n        element.className = `dv-split-view-container ${orientationClassname}`;\n        return element;\n    }\n    dispose() {\n        this._onDidSashEnd.dispose();\n        this._onDidAddView.dispose();\n        this._onDidRemoveView.dispose();\n        for (let i = 0; i < this.element.children.length; i++) {\n            if (this.element.children.item(i) === this.element) {\n                this.element.removeChild(this.element);\n                break;\n            }\n        }\n        for (const viewItem of this.viewItems) {\n            viewItem.dispose();\n        }\n        this.element.remove();\n    }\n}\n","export const PROPERTY_KEYS_SPLITVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        orientation: undefined,\n        descriptor: undefined,\n        proportionalLayout: undefined,\n        styles: undefined,\n        margin: undefined,\n        disableAutoResizing: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { Splitview, Orientation, } from '../splitview/splitview';\nimport { CompositeDisposable } from '../lifecycle';\nimport { Emitter } from '../events';\nimport { addClasses, removeClasses } from '../dom';\nexport class Paneview extends CompositeDisposable {\n    get onDidAddView() {\n        return this.splitview.onDidAddView;\n    }\n    get onDidRemoveView() {\n        return this.splitview.onDidRemoveView;\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get size() {\n        return this.splitview.size;\n    }\n    get orthogonalSize() {\n        return this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super();\n        this.paneItems = [];\n        this.skipAnimation = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : Orientation.VERTICAL;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-pane-container';\n        container.appendChild(this.element);\n        this.splitview = new Splitview(this.element, {\n            orientation: this._orientation,\n            proportionalLayout: false,\n            descriptor: options.descriptor,\n        });\n        // if we've added views from the descriptor we need to\n        // add the panes to our Pane array and setup animation\n        this.getPanes().forEach((pane) => {\n            const disposable = new CompositeDisposable(pane.onDidChangeExpansionState(() => {\n                this.setupAnimation();\n                this._onDidChange.fire(undefined);\n            }));\n            const paneItem = {\n                pane,\n                disposable: {\n                    dispose: () => {\n                        disposable.dispose();\n                    },\n                },\n            };\n            this.paneItems.push(paneItem);\n            pane.orthogonalSize = this.splitview.orthogonalSize;\n        });\n        this.addDisposables(this._onDidChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire(undefined);\n        }), this.splitview.onDidAddView(() => {\n            this._onDidChange.fire();\n        }), this.splitview.onDidRemoveView(() => {\n            this._onDidChange.fire();\n        }));\n    }\n    setViewVisible(index, visible) {\n        this.splitview.setViewVisible(index, visible);\n    }\n    addPane(pane, size, index = this.splitview.length, skipLayout = false) {\n        const disposable = pane.onDidChangeExpansionState(() => {\n            this.setupAnimation();\n            this._onDidChange.fire(undefined);\n        });\n        const paneItem = {\n            pane,\n            disposable: {\n                dispose: () => {\n                    disposable.dispose();\n                },\n            },\n        };\n        this.paneItems.splice(index, 0, paneItem);\n        pane.orthogonalSize = this.splitview.orthogonalSize;\n        this.splitview.addView(pane, size, index, skipLayout);\n    }\n    getViewSize(index) {\n        return this.splitview.getViewSize(index);\n    }\n    getPanes() {\n        return this.splitview.getViews();\n    }\n    removePane(index, options = { skipDispose: false }) {\n        const paneItem = this.paneItems.splice(index, 1)[0];\n        this.splitview.removeView(index);\n        if (!options.skipDispose) {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        }\n        return paneItem;\n    }\n    moveView(from, to) {\n        if (from === to) {\n            return;\n        }\n        const view = this.removePane(from, { skipDispose: true });\n        this.skipAnimation = true;\n        try {\n            this.addPane(view.pane, view.pane.size, to, false);\n        }\n        finally {\n            this.skipAnimation = false;\n        }\n    }\n    layout(size, orthogonalSize) {\n        this.splitview.layout(size, orthogonalSize);\n    }\n    setupAnimation() {\n        if (this.skipAnimation) {\n            return;\n        }\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        addClasses(this.element, 'dv-animated');\n        this.animationTimer = setTimeout(() => {\n            this.animationTimer = undefined;\n            removeClasses(this.element, 'dv-animated');\n        }, 200);\n    }\n    dispose() {\n        super.dispose();\n        if (this.animationTimer) {\n            clearTimeout(this.animationTimer);\n            this.animationTimer = undefined;\n        }\n        this.paneItems.forEach((paneItem) => {\n            paneItem.disposable.dispose();\n            paneItem.pane.dispose();\n        });\n        this.paneItems = [];\n        this.splitview.dispose();\n        this.element.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation } from '../splitview/splitview';\nimport { Emitter } from '../events';\nexport class LeafNode {\n    get minimumWidth() {\n        return this.view.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.view.maximumWidth;\n    }\n    get minimumHeight() {\n        return this.view.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.view.maximumHeight;\n    }\n    get priority() {\n        return this.view.priority;\n    }\n    get snap() {\n        return this.view.snap;\n    }\n    get minimumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumHeight\n            : this.minimumWidth;\n    }\n    get maximumSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumHeight\n            : this.maximumWidth;\n    }\n    get minimumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumWidth\n            : this.minimumHeight;\n    }\n    get maximumOrthogonalSize() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumWidth\n            : this.maximumHeight;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get element() {\n        return this.view.element;\n    }\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    constructor(view, orientation, orthogonalSize, size = 0) {\n        this.view = view;\n        this.orientation = orientation;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this._disposable = this.view.onDidChange((event) => {\n            if (event) {\n                this._onDidChange.fire({\n                    size: this.orientation === Orientation.VERTICAL\n                        ? event.width\n                        : event.height,\n                    orthogonalSize: this.orientation === Orientation.VERTICAL\n                        ? event.height\n                        : event.width,\n                });\n            }\n            else {\n                this._onDidChange.fire({});\n            }\n        });\n    }\n    setVisible(visible) {\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        this.view.layout(this.width, this.height);\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposable.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Splitview, Orientation, LayoutPriority, } from '../splitview/splitview';\nimport { Emitter, Event } from '../events';\nimport { LeafNode } from './leafNode';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nexport class BranchNode extends CompositeDisposable {\n    get width() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.size\n            : this.orthogonalSize;\n    }\n    get height() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.orthogonalSize\n            : this.size;\n    }\n    get minimumSize() {\n        return this.children.length === 0\n            ? 0\n            : Math.max(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n                ? c.minimumOrthogonalSize\n                : 0));\n    }\n    get maximumSize() {\n        return Math.min(...this.children.map((c, index) => this.splitview.isViewVisible(index)\n            ? c.maximumOrthogonalSize\n            : Number.POSITIVE_INFINITY));\n    }\n    get minimumOrthogonalSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumOrthogonalSize() {\n        return this.splitview.maximumSize;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    get size() {\n        return this._size;\n    }\n    get minimumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumOrthogonalSize\n            : this.minimumSize;\n    }\n    get minimumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.minimumSize\n            : this.minimumOrthogonalSize;\n    }\n    get maximumWidth() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumOrthogonalSize\n            : this.maximumSize;\n    }\n    get maximumHeight() {\n        return this.orientation === Orientation.HORIZONTAL\n            ? this.maximumSize\n            : this.maximumOrthogonalSize;\n    }\n    get priority() {\n        if (this.children.length === 0) {\n            return LayoutPriority.Normal;\n        }\n        const priorities = this.children.map((c) => typeof c.priority === 'undefined'\n            ? LayoutPriority.Normal\n            : c.priority);\n        if (priorities.some((p) => p === LayoutPriority.High)) {\n            return LayoutPriority.High;\n        }\n        else if (priorities.some((p) => p === LayoutPriority.Low)) {\n            return LayoutPriority.Low;\n        }\n        return LayoutPriority.Normal;\n    }\n    get disabled() {\n        return this.splitview.disabled;\n    }\n    set disabled(value) {\n        this.splitview.disabled = value;\n    }\n    get margin() {\n        return this.splitview.margin;\n    }\n    set margin(value) {\n        this.splitview.margin = value;\n        this.children.forEach((child) => {\n            if (child instanceof BranchNode) {\n                child.margin = value;\n            }\n        });\n    }\n    constructor(orientation, proportionalLayout, styles, size, orthogonalSize, disabled, margin, childDescriptors) {\n        super();\n        this.orientation = orientation;\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._childrenDisposable = Disposable.NONE;\n        this.children = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._orthogonalSize = orthogonalSize;\n        this._size = size;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-branch-node';\n        if (!childDescriptors) {\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n            this.splitview.layout(this.size, this.orthogonalSize);\n        }\n        else {\n            const descriptor = {\n                views: childDescriptors.map((childDescriptor) => {\n                    return {\n                        view: childDescriptor.node,\n                        size: childDescriptor.node.size,\n                        visible: childDescriptor.node instanceof LeafNode &&\n                            childDescriptor.visible !== undefined\n                            ? childDescriptor.visible\n                            : true,\n                    };\n                }),\n                size: this.orthogonalSize,\n            };\n            this.children = childDescriptors.map((c) => c.node);\n            this.splitview = new Splitview(this.element, {\n                orientation: this.orientation,\n                descriptor,\n                proportionalLayout,\n                styles,\n                margin,\n            });\n        }\n        this.disabled = disabled;\n        this.addDisposables(this._onDidChange, this._onDidVisibilityChange, this.splitview.onDidSashEnd(() => {\n            this._onDidChange.fire({});\n        }));\n        this.setupChildrenEvents();\n    }\n    setVisible(_visible) {\n        // noop\n    }\n    isChildVisible(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.isViewVisible(index);\n    }\n    setChildVisible(index, visible) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        if (this.splitview.isViewVisible(index) === visible) {\n            return;\n        }\n        const wereAllChildrenHidden = this.splitview.contentSize === 0;\n        this.splitview.setViewVisible(index, visible);\n        // }\n        const areAllChildrenHidden = this.splitview.contentSize === 0;\n        // If all children are hidden then the parent should hide the entire splitview\n        // If the entire splitview is hidden then the parent should show the splitview when a child is shown\n        if ((visible && wereAllChildrenHidden) ||\n            (!visible && areAllChildrenHidden)) {\n            this._onDidVisibilityChange.fire({ visible });\n        }\n    }\n    moveChild(from, to) {\n        if (from === to) {\n            return;\n        }\n        if (from < 0 || from >= this.children.length) {\n            throw new Error('Invalid from index');\n        }\n        if (from < to) {\n            to--;\n        }\n        this.splitview.moveView(from, to);\n        const child = this._removeChild(from);\n        this._addChild(child, to);\n    }\n    getChildSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewSize(index);\n    }\n    resizeChild(index, size) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.resizeView(index, size);\n    }\n    layout(size, orthogonalSize) {\n        this._size = orthogonalSize;\n        this._orthogonalSize = size;\n        this.splitview.layout(orthogonalSize, size);\n    }\n    addChild(node, size, index, skipLayout) {\n        if (index < 0 || index > this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.addView(node, size, index, skipLayout);\n        this._addChild(node, index);\n    }\n    getChildCachedVisibleSize(index) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        return this.splitview.getViewCachedVisibleSize(index);\n    }\n    removeChild(index, sizing) {\n        if (index < 0 || index >= this.children.length) {\n            throw new Error('Invalid index');\n        }\n        this.splitview.removeView(index, sizing);\n        return this._removeChild(index);\n    }\n    _addChild(node, index) {\n        this.children.splice(index, 0, node);\n        this.setupChildrenEvents();\n    }\n    _removeChild(index) {\n        const [child] = this.children.splice(index, 1);\n        this.setupChildrenEvents();\n        return child;\n    }\n    setupChildrenEvents() {\n        this._childrenDisposable.dispose();\n        this._childrenDisposable = new CompositeDisposable(Event.any(...this.children.map((c) => c.onDidChange))((e) => {\n            /**\n             * indicate a change has occured to allows any re-rendering but don't bubble\n             * event because that was specific to this branch\n             */\n            this._onDidChange.fire({ size: e.orthogonalSize });\n        }), ...this.children.map((c, i) => {\n            if (c instanceof BranchNode) {\n                return c.onDidVisibilityChange(({ visible }) => {\n                    this.setChildVisible(i, visible);\n                });\n            }\n            return Disposable.NONE;\n        }));\n    }\n    dispose() {\n        this._childrenDisposable.dispose();\n        this.splitview.dispose();\n        this.children.forEach((child) => child.dispose());\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n * Accreditation: This file is largly based upon the MIT licenced VSCode sourcecode found at:\n * https://github.com/microsoft/vscode/tree/main/src/vs/base/browser/ui/grid\n *--------------------------------------------------------------------------------------------*/\nimport { Orientation, Sizing, } from '../splitview/splitview';\nimport { tail } from '../array';\nimport { LeafNode } from './leafNode';\nimport { BranchNode } from './branchNode';\nimport { Emitter } from '../events';\nimport { MutableDisposable } from '../lifecycle';\nfunction findLeaf(candiateNode, last) {\n    if (candiateNode instanceof LeafNode) {\n        return candiateNode;\n    }\n    if (candiateNode instanceof BranchNode) {\n        return findLeaf(candiateNode.children[last ? candiateNode.children.length - 1 : 0], last);\n    }\n    throw new Error('invalid node');\n}\nfunction flipNode(node, size, orthogonalSize) {\n    if (node instanceof BranchNode) {\n        const result = new BranchNode(orthogonal(node.orientation), node.proportionalLayout, node.styles, size, orthogonalSize, node.disabled, node.margin);\n        let totalSize = 0;\n        for (let i = node.children.length - 1; i >= 0; i--) {\n            const child = node.children[i];\n            const childSize = child instanceof BranchNode ? child.orthogonalSize : child.size;\n            let newSize = node.size === 0\n                ? 0\n                : Math.round((size * childSize) / node.size);\n            totalSize += newSize;\n            // The last view to add should adjust to rounding errors\n            if (i === 0) {\n                newSize += size - totalSize;\n            }\n            result.addChild(flipNode(child, orthogonalSize, newSize), newSize, 0, true);\n        }\n        return result;\n    }\n    else {\n        return new LeafNode(node.view, orthogonal(node.orientation), orthogonalSize);\n    }\n}\nexport function indexInParent(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    let el = parentElement.firstElementChild;\n    let index = 0;\n    while (el !== element && el !== parentElement.lastElementChild && el) {\n        el = el.nextElementSibling;\n        index++;\n    }\n    return index;\n}\n/**\n * Find the grid location of a specific DOM element by traversing the parent\n * chain and finding each child index on the way.\n *\n * This will break as soon as DOM structures of the Splitview or Gridview change.\n */\nexport function getGridLocation(element) {\n    const parentElement = element.parentElement;\n    if (!parentElement) {\n        throw new Error('Invalid grid element');\n    }\n    if (/\\bdv-grid-view\\b/.test(parentElement.className)) {\n        return [];\n    }\n    const index = indexInParent(parentElement);\n    const ancestor = parentElement.parentElement.parentElement.parentElement;\n    return [...getGridLocation(ancestor), index];\n}\nexport function getRelativeLocation(rootOrientation, location, direction) {\n    const orientation = getLocationOrientation(rootOrientation, location);\n    const directionOrientation = getDirectionOrientation(direction);\n    if (orientation === directionOrientation) {\n        const [rest, _index] = tail(location);\n        let index = _index;\n        if (direction === 'right' || direction === 'bottom') {\n            index += 1;\n        }\n        return [...rest, index];\n    }\n    else {\n        const index = direction === 'right' || direction === 'bottom' ? 1 : 0;\n        return [...location, index];\n    }\n}\nexport function getDirectionOrientation(direction) {\n    return direction === 'top' || direction === 'bottom'\n        ? Orientation.VERTICAL\n        : Orientation.HORIZONTAL;\n}\nexport function getLocationOrientation(rootOrientation, location) {\n    return location.length % 2 === 0\n        ? orthogonal(rootOrientation)\n        : rootOrientation;\n}\nexport const orthogonal = (orientation) => orientation === Orientation.HORIZONTAL\n    ? Orientation.VERTICAL\n    : Orientation.HORIZONTAL;\nexport function isGridBranchNode(node) {\n    return !!node.children;\n}\nconst serializeBranchNode = (node, orientation) => {\n    const size = orientation === Orientation.VERTICAL ? node.box.width : node.box.height;\n    if (!isGridBranchNode(node)) {\n        if (typeof node.cachedVisibleSize === 'number') {\n            return {\n                type: 'leaf',\n                data: node.view.toJSON(),\n                size: node.cachedVisibleSize,\n                visible: false,\n            };\n        }\n        return { type: 'leaf', data: node.view.toJSON(), size };\n    }\n    return {\n        type: 'branch',\n        data: node.children.map((c) => serializeBranchNode(c, orthogonal(orientation))),\n        size,\n    };\n};\nexport class Gridview {\n    get length() {\n        return this._root ? this._root.children.length : 0;\n    }\n    get orientation() {\n        return this.root.orientation;\n    }\n    set orientation(orientation) {\n        if (this.root.orientation === orientation) {\n            return;\n        }\n        const { size, orthogonalSize } = this.root;\n        this.root = flipNode(this.root, orthogonalSize, size);\n        this.root.layout(size, orthogonalSize);\n    }\n    get width() {\n        return this.root.width;\n    }\n    get height() {\n        return this.root.height;\n    }\n    get minimumWidth() {\n        return this.root.minimumWidth;\n    }\n    get minimumHeight() {\n        return this.root.minimumHeight;\n    }\n    get maximumWidth() {\n        return this.root.maximumHeight;\n    }\n    get maximumHeight() {\n        return this.root.maximumHeight;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        const branch = [this.root];\n        /**\n         * simple depth-first-search to cover all nodes\n         *\n         * @see https://en.wikipedia.org/wiki/Depth-first_search\n         */\n        while (branch.length > 0) {\n            const node = branch.pop();\n            if (node instanceof BranchNode) {\n                node.disabled = value;\n                branch.push(...node.children);\n            }\n        }\n    }\n    get margin() {\n        return this._margin;\n    }\n    set margin(value) {\n        this._margin = value;\n        this.root.margin = value;\n    }\n    maximizedView() {\n        var _a;\n        return (_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf.view;\n    }\n    hasMaximizedView() {\n        return this._maximizedNode !== undefined;\n    }\n    maximizeView(view) {\n        var _a;\n        const location = getGridLocation(view.element);\n        const [_, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            return;\n        }\n        if (((_a = this._maximizedNode) === null || _a === void 0 ? void 0 : _a.leaf) === node) {\n            return;\n        }\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        serializeBranchNode(this.getView(), this.orientation);\n        const hiddenOnMaximize = [];\n        function hideAllViewsBut(parent, exclude) {\n            for (let i = 0; i < parent.children.length; i++) {\n                const child = parent.children[i];\n                if (child instanceof LeafNode) {\n                    if (child !== exclude) {\n                        if (parent.isChildVisible(i)) {\n                            parent.setChildVisible(i, false);\n                        }\n                        else {\n                            hiddenOnMaximize.push(child);\n                        }\n                    }\n                }\n                else {\n                    hideAllViewsBut(child, exclude);\n                }\n            }\n        }\n        hideAllViewsBut(this.root, node);\n        this._maximizedNode = { leaf: node, hiddenOnMaximize };\n        this._onDidMaximizedNodeChange.fire({\n            view: node.view,\n            isMaximized: true,\n        });\n    }\n    exitMaximizedView() {\n        if (!this._maximizedNode) {\n            return;\n        }\n        const hiddenOnMaximize = this._maximizedNode.hiddenOnMaximize;\n        function showViewsInReverseOrder(parent) {\n            for (let index = parent.children.length - 1; index >= 0; index--) {\n                const child = parent.children[index];\n                if (child instanceof LeafNode) {\n                    if (!hiddenOnMaximize.includes(child)) {\n                        parent.setChildVisible(index, true);\n                    }\n                }\n                else {\n                    showViewsInReverseOrder(child);\n                }\n            }\n        }\n        showViewsInReverseOrder(this.root);\n        const tmp = this._maximizedNode.leaf;\n        this._maximizedNode = undefined;\n        this._onDidMaximizedNodeChange.fire({\n            view: tmp.view,\n            isMaximized: false,\n        });\n    }\n    serialize() {\n        const maximizedView = this.maximizedView();\n        let maxmizedViewLocation;\n        if (maximizedView) {\n            /**\n             * The minimum information we can get away with in order to serialize a maxmized view is it's location within the grid\n             * which is represented as a branch of indices\n             */\n            maxmizedViewLocation = getGridLocation(maximizedView.element);\n        }\n        if (this.hasMaximizedView()) {\n            /**\n             * the saved layout cannot be in its maxmized state otherwise all of the underlying\n             * view dimensions will be wrong\n             *\n             * To counteract this we temporaily remove the maximized view to compute the serialized output\n             * of the grid before adding back the maxmized view as to not alter the layout from the users\n             * perspective when `.toJSON()` is called\n             */\n            this.exitMaximizedView();\n        }\n        const root = serializeBranchNode(this.getView(), this.orientation);\n        const resullt = {\n            root,\n            width: this.width,\n            height: this.height,\n            orientation: this.orientation,\n        };\n        if (maxmizedViewLocation) {\n            resullt.maximizedNode = {\n                location: maxmizedViewLocation,\n            };\n        }\n        if (maximizedView) {\n            // replace any maximzied view that was removed for serialization purposes\n            this.maximizeView(maximizedView);\n        }\n        return resullt;\n    }\n    dispose() {\n        this.disposable.dispose();\n        this._onDidChange.dispose();\n        this._onDidMaximizedNodeChange.dispose();\n        this._onDidViewVisibilityChange.dispose();\n        this.root.dispose();\n        this._maximizedNode = undefined;\n        this.element.remove();\n    }\n    clear() {\n        const orientation = this.root.orientation;\n        this.root = new BranchNode(orientation, this.proportionalLayout, this.styles, this.root.size, this.root.orthogonalSize, this.locked, this.margin);\n    }\n    deserialize(json, deserializer) {\n        const orientation = json.orientation;\n        const height = orientation === Orientation.VERTICAL ? json.height : json.width;\n        this._deserialize(json.root, orientation, deserializer, height);\n        /**\n         * The deserialied layout must be positioned through this.layout(...)\n         * before any maximizedNode can be positioned\n         */\n        this.layout(json.width, json.height);\n        if (json.maximizedNode) {\n            const location = json.maximizedNode.location;\n            const [_, node] = this.getNode(location);\n            if (!(node instanceof LeafNode)) {\n                return;\n            }\n            this.maximizeView(node.view);\n        }\n    }\n    _deserialize(root, orientation, deserializer, orthogonalSize) {\n        this.root = this._deserializeNode(root, orientation, deserializer, orthogonalSize);\n    }\n    _deserializeNode(node, orientation, deserializer, orthogonalSize) {\n        var _a;\n        let result;\n        if (node.type === 'branch') {\n            const serializedChildren = node.data;\n            const children = serializedChildren.map((serializedChild) => {\n                return {\n                    node: this._deserializeNode(serializedChild, orthogonal(orientation), deserializer, node.size),\n                    visible: serializedChild.visible,\n                };\n            });\n            result = new BranchNode(orientation, this.proportionalLayout, this.styles, node.size, // <- orthogonal size - flips at each depth\n            orthogonalSize, // <- size - flips at each depth,\n            this.locked, this.margin, children);\n        }\n        else {\n            const view = deserializer.fromJSON(node);\n            if (typeof node.visible === 'boolean') {\n                (_a = view.setVisible) === null || _a === void 0 ? void 0 : _a.call(view, node.visible);\n            }\n            result = new LeafNode(view, orientation, orthogonalSize, node.size);\n        }\n        return result;\n    }\n    get root() {\n        return this._root;\n    }\n    set root(root) {\n        const oldRoot = this._root;\n        if (oldRoot) {\n            oldRoot.dispose();\n            this._maximizedNode = undefined;\n            this.element.removeChild(oldRoot.element);\n        }\n        this._root = root;\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    /**\n     * If the root is orientated as a VERTICAL node then nest the existing root within a new HORIZIONTAL root node\n     * If the root is orientated as a HORIZONTAL node then nest the existing root within a new VERITCAL root node\n     */\n    insertOrthogonalSplitviewAtRoot() {\n        if (!this._root) {\n            return;\n        }\n        const oldRoot = this.root;\n        oldRoot.element.remove();\n        this._root = new BranchNode(orthogonal(oldRoot.orientation), this.proportionalLayout, this.styles, this.root.orthogonalSize, this.root.size, this.locked, this.margin);\n        if (oldRoot.children.length === 0) {\n            // no data so no need to add anything back in\n        }\n        else if (oldRoot.children.length === 1) {\n            // can remove one level of redundant branching if there is only a single child\n            const childReference = oldRoot.children[0];\n            const child = oldRoot.removeChild(0); // remove to prevent disposal when disposing of unwanted root\n            child.dispose();\n            oldRoot.dispose();\n            this._root.addChild(\n            /**\n             * the child node will have the same orientation as the new root since\n             * we are removing the inbetween node.\n             * the entire 'tree' must be flipped recursively to ensure that the orientation\n             * flips at each level\n             */\n            flipNode(childReference, childReference.orthogonalSize, childReference.size), Sizing.Distribute, 0);\n        }\n        else {\n            this._root.addChild(oldRoot, Sizing.Distribute, 0);\n        }\n        this.element.appendChild(this._root.element);\n        this.disposable.value = this._root.onDidChange((e) => {\n            this._onDidChange.fire(e);\n        });\n    }\n    next(location) {\n        return this.progmaticSelect(location);\n    }\n    previous(location) {\n        return this.progmaticSelect(location, true);\n    }\n    getView(location) {\n        const node = location ? this.getNode(location)[1] : this.root;\n        return this._getViews(node, this.orientation);\n    }\n    _getViews(node, orientation, cachedVisibleSize) {\n        const box = { height: node.height, width: node.width };\n        if (node instanceof LeafNode) {\n            return { box, view: node.view, cachedVisibleSize };\n        }\n        const children = [];\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            const nodeCachedVisibleSize = node.getChildCachedVisibleSize(i);\n            children.push(this._getViews(child, orthogonal(orientation), nodeCachedVisibleSize));\n        }\n        return { box, children };\n    }\n    progmaticSelect(location, reverse = false) {\n        const [path, node] = this.getNode(location);\n        if (!(node instanceof LeafNode)) {\n            throw new Error('invalid location');\n        }\n        for (let i = path.length - 1; i > -1; i--) {\n            const n = path[i];\n            const l = location[i] || 0;\n            const canProgressInCurrentLevel = reverse\n                ? l - 1 > -1\n                : l + 1 < n.children.length;\n            if (canProgressInCurrentLevel) {\n                return findLeaf(n.children[reverse ? l - 1 : l + 1], reverse);\n            }\n        }\n        return findLeaf(this.root, reverse);\n    }\n    constructor(proportionalLayout, styles, orientation, locked, margin) {\n        this.proportionalLayout = proportionalLayout;\n        this.styles = styles;\n        this._locked = false;\n        this._margin = 0;\n        this._maximizedNode = undefined;\n        this.disposable = new MutableDisposable();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidViewVisibilityChange = new Emitter();\n        this.onDidViewVisibilityChange = this._onDidViewVisibilityChange.event;\n        this._onDidMaximizedNodeChange = new Emitter();\n        this.onDidMaximizedNodeChange = this._onDidMaximizedNodeChange.event;\n        this.element = document.createElement('div');\n        this.element.className = 'dv-grid-view';\n        this._locked = locked !== null && locked !== void 0 ? locked : false;\n        this._margin = margin !== null && margin !== void 0 ? margin : 0;\n        this.root = new BranchNode(orientation, proportionalLayout, styles, 0, 0, this.locked, this.margin);\n    }\n    isViewVisible(location) {\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        return parent.isChildVisible(index);\n    }\n    setViewVisible(location, visible) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid from location');\n        }\n        this._onDidViewVisibilityChange.fire();\n        parent.setChildVisible(index, visible);\n    }\n    moveView(parentLocation, from, to) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [, parent] = this.getNode(parentLocation);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.moveChild(from, to);\n    }\n    addView(view, size, location) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (parent instanceof BranchNode) {\n            const node = new LeafNode(view, orthogonal(parent.orientation), parent.orthogonalSize);\n            parent.addChild(node, size, index);\n        }\n        else {\n            const [grandParent, ..._] = [...pathToParent].reverse();\n            const [parentIndex, ...__] = [...rest].reverse();\n            let newSiblingSize = 0;\n            const newSiblingCachedVisibleSize = grandParent.getChildCachedVisibleSize(parentIndex);\n            if (typeof newSiblingCachedVisibleSize === 'number') {\n                newSiblingSize = Sizing.Invisible(newSiblingCachedVisibleSize);\n            }\n            const child = grandParent.removeChild(parentIndex);\n            child.dispose();\n            const newParent = new BranchNode(parent.orientation, this.proportionalLayout, this.styles, parent.size, parent.orthogonalSize, this.locked, this.margin);\n            grandParent.addChild(newParent, parent.size, parentIndex);\n            const newSibling = new LeafNode(parent.view, grandParent.orientation, parent.size);\n            newParent.addChild(newSibling, newSiblingSize, 0);\n            if (typeof size !== 'number' && size.type === 'split') {\n                size = { type: 'split', index: 0 };\n            }\n            const node = new LeafNode(view, grandParent.orientation, parent.size);\n            newParent.addChild(node, size, index);\n        }\n    }\n    remove(view, sizing) {\n        const location = getGridLocation(view.element);\n        return this.removeView(location, sizing);\n    }\n    removeView(location, sizing) {\n        if (this.hasMaximizedView()) {\n            this.exitMaximizedView();\n        }\n        const [rest, index] = tail(location);\n        const [pathToParent, parent] = this.getNode(rest);\n        if (!(parent instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const nodeToRemove = parent.children[index];\n        if (!(nodeToRemove instanceof LeafNode)) {\n            throw new Error('Invalid location');\n        }\n        parent.removeChild(index, sizing);\n        nodeToRemove.dispose();\n        if (parent.children.length !== 1) {\n            return nodeToRemove.view;\n        }\n        // if the parent has only one child and we know the parent is a BranchNode we can make the tree\n        // more efficiently spaced by replacing the parent BranchNode with the child.\n        // if that child is a LeafNode then we simply replace the BranchNode with the child otherwise if the child\n        // is a BranchNode too we should spread it's children into the grandparent.\n        // refer to the remaining child as the sibling\n        const sibling = parent.children[0];\n        if (pathToParent.length === 0) {\n            // if the parent is root\n            if (sibling instanceof LeafNode) {\n                // if the sibling is a leaf node no action is required\n                return nodeToRemove.view;\n            }\n            // otherwise the sibling is a branch node. since the parent is the root and the root has only one child\n            // which is a branch node we can just set this branch node to be the new root node\n            // for good housekeeping we'll removing the sibling from it's existing tree\n            parent.removeChild(0, sizing);\n            // and set that sibling node to be root\n            this.root = sibling;\n            return nodeToRemove.view;\n        }\n        // otherwise the parent is apart of a large sub-tree\n        const [grandParent, ..._] = [...pathToParent].reverse();\n        const [parentIndex, ...__] = [...rest].reverse();\n        const isSiblingVisible = parent.isChildVisible(0);\n        // either way we need to remove the sibling from it's existing tree\n        parent.removeChild(0, sizing);\n        // note the sizes of all of the grandparents children\n        const sizes = grandParent.children.map((_size, i) => grandParent.getChildSize(i));\n        // remove the parent from the grandparent since we are moving the sibling to take the parents place\n        // this parent is no longer used and can be disposed of\n        grandParent.removeChild(parentIndex, sizing).dispose();\n        if (sibling instanceof BranchNode) {\n            // replace the parent with the siblings children\n            sizes.splice(parentIndex, 1, ...sibling.children.map((c) => c.size));\n            // and add those siblings to the grandparent\n            for (let i = 0; i < sibling.children.length; i++) {\n                const child = sibling.children[i];\n                grandParent.addChild(child, child.size, parentIndex + i);\n            }\n            /**\n             * clean down the branch node since we need to dipose of it and\n             * when .dispose() it called on a branch it will dispose of any\n             * views it is holding onto.\n             */\n            while (sibling.children.length > 0) {\n                sibling.removeChild(0);\n            }\n        }\n        else {\n            // otherwise create a new leaf node and add that to the grandparent\n            const newSibling = new LeafNode(sibling.view, orthogonal(sibling.orientation), sibling.size);\n            const siblingSizing = isSiblingVisible\n                ? sibling.orthogonalSize\n                : Sizing.Invisible(sibling.orthogonalSize);\n            grandParent.addChild(newSibling, siblingSizing, parentIndex);\n        }\n        // the containing node of the sibling is no longer required and can be disposed of\n        sibling.dispose();\n        // resize everything\n        for (let i = 0; i < sizes.length; i++) {\n            grandParent.resizeChild(i, sizes[i]);\n        }\n        return nodeToRemove.view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.root.orientation === Orientation.HORIZONTAL\n            ? [height, width]\n            : [width, height];\n        this.root.layout(size, orthogonalSize);\n    }\n    getNode(location, node = this.root, path = []) {\n        if (location.length === 0) {\n            return [path, node];\n        }\n        if (!(node instanceof BranchNode)) {\n            throw new Error('Invalid location');\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index >= node.children.length) {\n            throw new Error('Invalid location');\n        }\n        const child = node.children[index];\n        path.push(node);\n        return this.getNode(rest, child, path);\n    }\n}\n","export const PROPERTY_KEYS_GRIDVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        proportionalLayout: undefined,\n        orientation: undefined,\n        hideBorders: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\n","import { isInDocument, watchElementResize } from './dom';\nimport { CompositeDisposable } from './lifecycle';\nexport class Resizable extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get disableResizing() {\n        return this._disableResizing;\n    }\n    set disableResizing(value) {\n        this._disableResizing = value;\n    }\n    constructor(parentElement, disableResizing = false) {\n        super();\n        this._disableResizing = disableResizing;\n        this._element = parentElement;\n        this.addDisposables(watchElementResize(this._element, (entry) => {\n            if (this.isDisposed) {\n                /**\n                 * resize is delayed through requestAnimationFrame so there is a small chance\n                 * the component has already been disposed of\n                 */\n                return;\n            }\n            if (this.disableResizing) {\n                return;\n            }\n            if (!this._element.offsetParent) {\n                /**\n                 * offsetParent === null is equivalent to display: none being set on the element or one\n                 * of it's parents. In the display: none case the size will become (0, 0) which we do\n                 * not want to propagate.\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n                 *\n                 * You could use checkVisibility() but at the time of writing it's not supported across\n                 * all Browsers\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/checkVisibility\n                 */\n                return;\n            }\n            if (!isInDocument(this._element)) {\n                /**\n                 * since the event is dispatched through requestAnimationFrame there is a small chance\n                 * the component is no longer attached to the DOM, if that is the case the dimensions\n                 * are mostly likely all zero and meaningless. we should skip this case.\n                 */\n                return;\n            }\n            const { width, height } = entry.contentRect;\n            this.layout(width, height);\n        }));\n    }\n}\n","import { Emitter, Event, AsapEvent } from '../events';\nimport { getGridLocation, Gridview } from './gridview';\nimport { Disposable } from '../lifecycle';\nimport { sequentialNumberGenerator } from '../math';\nimport { Sizing } from '../splitview/splitview';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport function toTarget(direction) {\n    switch (direction) {\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'within':\n        default:\n            return 'center';\n    }\n}\nexport class BaseGrid extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get size() {\n        return this._groups.size;\n    }\n    get groups() {\n        return Array.from(this._groups.values()).map((_) => _.value);\n    }\n    get width() {\n        return this.gridview.width;\n    }\n    get height() {\n        return this.gridview.height;\n    }\n    get minimumHeight() {\n        return this.gridview.minimumHeight;\n    }\n    get maximumHeight() {\n        return this.gridview.maximumHeight;\n    }\n    get minimumWidth() {\n        return this.gridview.minimumWidth;\n    }\n    get maximumWidth() {\n        return this.gridview.maximumWidth;\n    }\n    get activeGroup() {\n        return this._activeGroup;\n    }\n    get locked() {\n        return this.gridview.locked;\n    }\n    set locked(value) {\n        this.gridview.locked = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._groups = new Map();\n        this._onDidRemove = new Emitter();\n        this.onDidRemove = this._onDidRemove.event;\n        this._onDidAdd = new Emitter();\n        this.onDidAdd = this._onDidAdd.event;\n        this._onDidMaximizedChange = new Emitter();\n        this.onDidMaximizedChange = this._onDidMaximizedChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._bufferOnDidLayoutChange = new AsapEvent();\n        this.onDidLayoutChange = this._bufferOnDidLayoutChange.onEvent;\n        this._onDidViewVisibilityChangeMicroTaskQueue = new AsapEvent();\n        this.onDidViewVisibilityChangeMicroTaskQueue = this._onDidViewVisibilityChangeMicroTaskQueue.onEvent;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this.gridview = new Gridview(!!options.proportionalLayout, options.styles, options.orientation, options.locked, options.margin);\n        this.gridview.locked = !!options.locked;\n        this.element.appendChild(this.gridview.element);\n        this.layout(0, 0, true); // set some elements height/widths\n        this.addDisposables(this.gridview.onDidMaximizedNodeChange((event) => {\n            this._onDidMaximizedChange.fire({\n                panel: event.view,\n                isMaximized: event.isMaximized,\n            });\n        }), this.gridview.onDidViewVisibilityChange(() => this._onDidViewVisibilityChangeMicroTaskQueue.fire()), this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.layout(this.width, this.height, true);\n        }), Disposable.from(() => {\n            var _a;\n            (_a = this.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.element);\n        }), this.gridview.onDidChange(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Event.any(this.onDidAdd, this.onDidRemove, this.onDidActiveChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), this._onDidMaximizedChange, this._onDidViewVisibilityChangeMicroTaskQueue, this._bufferOnDidLayoutChange);\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n        this._bufferOnDidLayoutChange.fire();\n    }\n    isVisible(panel) {\n        return this.gridview.isViewVisible(getGridLocation(panel.element));\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        if (typeof options.proportionalLayout === 'boolean') {\n            // this.gridview.proportionalLayout = options.proportionalLayout; // not supported\n        }\n        if (options.orientation) {\n            this.gridview.orientation = options.orientation;\n        }\n        if ('styles' in options) {\n            // this.gridview.styles = options.styles; // not supported\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_a = options.disableAutoResizing) !== null && _a !== void 0 ? _a : false;\n        }\n        if ('locked' in options) {\n            this.locked = (_b = options.locked) !== null && _b !== void 0 ? _b : false;\n        }\n        if ('margin' in options) {\n            this.gridview.margin = (_c = options.margin) !== null && _c !== void 0 ? _c : 0;\n        }\n        if ('className' in options) {\n            this._classNames.setClassNames((_d = options.className) !== null && _d !== void 0 ? _d : '');\n        }\n    }\n    maximizeGroup(panel) {\n        this.gridview.maximizeView(panel);\n        this.doSetGroupActive(panel);\n    }\n    isMaximizedGroup(panel) {\n        return this.gridview.maximizedView() === panel;\n    }\n    exitMaximizedGroup() {\n        this.gridview.exitMaximizedView();\n    }\n    hasMaximizedGroup() {\n        return this.gridview.hasMaximizedView();\n    }\n    doAddGroup(group, location = [0], size) {\n        this.gridview.addView(group, size !== null && size !== void 0 ? size : Sizing.Distribute, location);\n        this._onDidAdd.fire(group);\n    }\n    doRemoveGroup(group, options) {\n        if (!this._groups.has(group.id)) {\n            throw new Error('invalid operation');\n        }\n        const item = this._groups.get(group.id);\n        const view = this.gridview.remove(group, Sizing.Distribute);\n        if (item && !(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            item.disposable.dispose();\n            item.value.dispose();\n            this._groups.delete(group.id);\n            this._onDidRemove.fire(group);\n        }\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n            const groups = Array.from(this._groups.values());\n            this.doSetGroupActive(groups.length > 0 ? groups[0].value : undefined);\n        }\n        return view;\n    }\n    getPanel(id) {\n        var _a;\n        return (_a = this._groups.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    doSetGroupActive(group) {\n        if (this._activeGroup === group) {\n            return;\n        }\n        if (this._activeGroup) {\n            this._activeGroup.setActive(false);\n        }\n        if (group) {\n            group.setActive(true);\n        }\n        this._activeGroup = group;\n        this._onDidActiveChange.fire(group);\n    }\n    removeGroup(group) {\n        this.doRemoveGroup(group);\n    }\n    moveToNext(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    moveToPrevious(options) {\n        var _a;\n        if (!options) {\n            options = {};\n        }\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupActive(next);\n    }\n    layout(width, height, forceResize) {\n        const different = forceResize || width !== this.width || height !== this.height;\n        if (!different) {\n            return;\n        }\n        this.gridview.element.style.height = `${height}px`;\n        this.gridview.element.style.width = `${width}px`;\n        this.gridview.layout(width, height);\n    }\n    dispose() {\n        this._onDidActiveChange.dispose();\n        this._onDidAdd.dispose();\n        this._onDidRemove.dispose();\n        for (const group of this.groups) {\n            group.dispose();\n        }\n        this.gridview.dispose();\n        super.dispose();\n    }\n}\n","export class SplitviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * The current number of panels.\n     */\n    get length() {\n        return this.component.length;\n    }\n    /**\n     * The current orientation of the component.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    /**\n     * The list of current panels.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked after a layout is loaded through the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked whenever any aspect of the layout changes.\n     * If listening to this event it may be worth debouncing ouputs.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a view is added.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a view is removed.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Removes an existing panel and optionally provide a `Sizing` method\n     * for the subsequent resize.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Focus the component.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get the reference to a panel given it's `string` id.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Layout the panel with a width and height.\n     */\n    layout(width, height) {\n        return this.component.layout(width, height);\n    }\n    /**\n     * Add a new panel and return the created instance.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     * Deserialize a layout to built a splitivew.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /** Serialize a layout */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Remove all panels and clear the component.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class PaneviewApi {\n    /**\n     * The minimum size  the component can reach where size is measured in the direction of orientation provided.\n     */\n    get minimumSize() {\n        return this.component.minimumSize;\n    }\n    /**\n     * The maximum size the component can reach where size is measured in the direction of orientation provided.\n     */\n    get maximumSize() {\n        return this.component.maximumSize;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddView() {\n        return this.component.onDidAddView;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemoveView() {\n        return this.component.onDidRemoveView;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Move a panel given it's current and desired index.\n     */\n    movePanel(from, to) {\n        this.component.movePanel(from, to);\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height) {\n        this.component.layout(width, height);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Update configuratable options.\n     */\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class GridviewApi {\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.groups;\n    }\n    /**\n     * Current orientation. Can be changed after initialization.\n     */\n    get orientation() {\n        return this.component.orientation;\n    }\n    set orientation(value) {\n        this.component.updateOptions({ orientation: value });\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel, sizing) {\n        this.component.removePanel(panel, sizing);\n    }\n    /**\n     * Move a panel in a particular direction relative to another panel.\n     */\n    movePanel(panel, options) {\n        this.component.movePanel(panel, options);\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        return this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\nexport class DockviewApi {\n    /**\n     * The unique identifier for this instance. Used to manage scope of Drag'n'Drop events.\n     */\n    get id() {\n        return this.component.id;\n    }\n    /**\n     * Width of the component.\n     */\n    get width() {\n        return this.component.width;\n    }\n    /**\n     * Height of the component.\n     */\n    get height() {\n        return this.component.height;\n    }\n    /**\n     * Minimum height of the component.\n     */\n    get minimumHeight() {\n        return this.component.minimumHeight;\n    }\n    /**\n     * Maximum height of the component.\n     */\n    get maximumHeight() {\n        return this.component.maximumHeight;\n    }\n    /**\n     * Minimum width of the component.\n     */\n    get minimumWidth() {\n        return this.component.minimumWidth;\n    }\n    /**\n     * Maximum width of the component.\n     */\n    get maximumWidth() {\n        return this.component.maximumWidth;\n    }\n    /**\n     * Total number of groups.\n     */\n    get size() {\n        return this.component.size;\n    }\n    /**\n     * Total number of panels.\n     */\n    get totalPanels() {\n        return this.component.totalPanels;\n    }\n    get gap() {\n        return this.component.gap;\n    }\n    /**\n     * Invoked when the active group changes. May be undefined if no group is active.\n     */\n    get onDidActiveGroupChange() {\n        return this.component.onDidActiveGroupChange;\n    }\n    /**\n     * Invoked when a group is added. May be called multiple times when moving groups.\n     */\n    get onDidAddGroup() {\n        return this.component.onDidAddGroup;\n    }\n    /**\n     * Invoked when a group is removed. May be called multiple times when moving groups.\n     */\n    get onDidRemoveGroup() {\n        return this.component.onDidRemoveGroup;\n    }\n    /**\n     * Invoked when the active panel changes. May be undefined if no panel is active.\n     */\n    get onDidActivePanelChange() {\n        return this.component.onDidActivePanelChange;\n    }\n    /**\n     * Invoked when a panel is added. May be called multiple times when moving panels.\n     */\n    get onDidAddPanel() {\n        return this.component.onDidAddPanel;\n    }\n    /**\n     * Invoked when a panel is removed. May be called multiple times when moving panels.\n     */\n    get onDidRemovePanel() {\n        return this.component.onDidRemovePanel;\n    }\n    get onDidMovePanel() {\n        return this.component.onDidMovePanel;\n    }\n    /**\n     * Invoked after a layout is deserialzied using the `fromJSON` method.\n     */\n    get onDidLayoutFromJSON() {\n        return this.component.onDidLayoutFromJSON;\n    }\n    /**\n     * Invoked when any layout change occures, an aggregation of many events.\n     */\n    get onDidLayoutChange() {\n        return this.component.onDidLayoutChange;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs that the component was unable to handle. Exposed for custom Drag'n'Drop functionality.\n     */\n    get onDidDrop() {\n        return this.component.onDidDrop;\n    }\n    /**\n     * Invoked when a Drag'n'Drop event occurs but before dockview handles it giving the user an opportunity to intecept and\n     * prevent the event from occuring using the standard `preventDefault()` syntax.\n     *\n     * Preventing certain events may causes unexpected behaviours, use carefully.\n     */\n    get onWillDrop() {\n        return this.component.onWillDrop;\n    }\n    /**\n     * Invoked before an overlay is shown indicating a drop target.\n     *\n     * Calling `event.preventDefault()` will prevent the overlay being shown and prevent\n     * the any subsequent drop event.\n     */\n    get onWillShowOverlay() {\n        return this.component.onWillShowOverlay;\n    }\n    /**\n     * Invoked before a group is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the group drag starting.\n     *\n     */\n    get onWillDragGroup() {\n        return this.component.onWillDragGroup;\n    }\n    /**\n     * Invoked before a panel is dragged.\n     *\n     * Calling `event.nativeEvent.preventDefault()` will prevent the panel drag starting.\n     */\n    get onWillDragPanel() {\n        return this.component.onWillDragPanel;\n    }\n    get onUnhandledDragOverEvent() {\n        return this.component.onUnhandledDragOverEvent;\n    }\n    /**\n     * All panel objects.\n     */\n    get panels() {\n        return this.component.panels;\n    }\n    /**\n     * All group objects.\n     */\n    get groups() {\n        return this.component.groups;\n    }\n    /**\n     *  Active panel object.\n     */\n    get activePanel() {\n        return this.component.activePanel;\n    }\n    /**\n     * Active group object.\n     */\n    get activeGroup() {\n        return this.component.activeGroup;\n    }\n    constructor(component) {\n        this.component = component;\n    }\n    /**\n     *  Focus the component. Will try to focus an active panel if one exists.\n     */\n    focus() {\n        this.component.focus();\n    }\n    /**\n     * Get a panel object given a `string` id. May return `undefined`.\n     */\n    getPanel(id) {\n        return this.component.getGroupPanel(id);\n    }\n    /**\n     * Force resize the component to an exact width and height. Read about auto-resizing before using.\n     */\n    layout(width, height, force = false) {\n        this.component.layout(width, height, force);\n    }\n    /**\n     * Add a panel and return the created object.\n     */\n    addPanel(options) {\n        return this.component.addPanel(options);\n    }\n    /**\n     * Remove a panel given the panel object.\n     */\n    removePanel(panel) {\n        this.component.removePanel(panel);\n    }\n    /**\n     * Add a group and return the created object.\n     */\n    addGroup(options) {\n        return this.component.addGroup(options);\n    }\n    /**\n     * Close all groups and panels.\n     */\n    closeAllGroups() {\n        return this.component.closeAllGroups();\n    }\n    /**\n     * Remove a group and any panels within the group.\n     */\n    removeGroup(group) {\n        this.component.removeGroup(group);\n    }\n    /**\n     * Get a group object given a `string` id. May return undefined.\n     */\n    getGroup(id) {\n        return this.component.getPanel(id);\n    }\n    /**\n     * Add a floating group\n     */\n    addFloatingGroup(item, options) {\n        return this.component.addFloatingGroup(item, options);\n    }\n    /**\n     * Create a component from a serialized object.\n     */\n    fromJSON(data) {\n        this.component.fromJSON(data);\n    }\n    /**\n     * Create a serialized object of the current component.\n     */\n    toJSON() {\n        return this.component.toJSON();\n    }\n    /**\n     * Reset the component back to an empty and default state.\n     */\n    clear() {\n        this.component.clear();\n    }\n    /**\n     * Move the focus progmatically to the next panel or group.\n     */\n    moveToNext(options) {\n        this.component.moveToNext(options);\n    }\n    /**\n     * Move the focus progmatically to the previous panel or group.\n     */\n    moveToPrevious(options) {\n        this.component.moveToPrevious(options);\n    }\n    maximizeGroup(panel) {\n        this.component.maximizeGroup(panel.group);\n    }\n    hasMaximizedGroup() {\n        return this.component.hasMaximizedGroup();\n    }\n    exitMaximizedGroup() {\n        this.component.exitMaximizedGroup();\n    }\n    get onDidMaximizedGroupChange() {\n        return this.component.onDidMaximizedGroupChange;\n    }\n    /**\n     * Add a popout group in a new Window\n     */\n    addPopoutGroup(item, options) {\n        return this.component.addPopoutGroup(item, options);\n    }\n    setGap(gap) {\n        this.component.updateOptions({ gap });\n    }\n    updateOptions(options) {\n        this.component.updateOptions(options);\n    }\n    /**\n     * Release resources and teardown component. Do not call when using framework versions of dockview.\n     */\n    dispose() {\n        this.component.dispose();\n    }\n}\n","import { disableIframePointEvents } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nexport class DragHandler extends CompositeDisposable {\n    constructor(el) {\n        super();\n        this.el = el;\n        this.dataDisposable = new MutableDisposable();\n        this.pointerEventsDisposable = new MutableDisposable();\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this.addDisposables(this._onDragStart, this.dataDisposable, this.pointerEventsDisposable);\n        this.configure();\n    }\n    isCancelled(_event) {\n        return false;\n    }\n    configure() {\n        this.addDisposables(this._onDragStart, addDisposableListener(this.el, 'dragstart', (event) => {\n            if (event.defaultPrevented || this.isCancelled(event)) {\n                event.preventDefault();\n                return;\n            }\n            const iframes = disableIframePointEvents();\n            this.pointerEventsDisposable.value = {\n                dispose: () => {\n                    iframes.release();\n                },\n            };\n            this.el.classList.add('dv-dragged');\n            setTimeout(() => this.el.classList.remove('dv-dragged'), 0);\n            this.dataDisposable.value = this.getData(event);\n            this._onDragStart.fire(event);\n            if (event.dataTransfer) {\n                event.dataTransfer.effectAllowed = 'move';\n                const hasData = event.dataTransfer.items.length > 0;\n                if (!hasData) {\n                    /**\n                     * Although this is not used by dockview many third party dnd libraries will check\n                     * dataTransfer.types to determine valid drag events.\n                     *\n                     * For example: in react-dnd if dataTransfer.types is not set then the dragStart event will be cancelled\n                     * through .preventDefault(). Since this is applied globally to all drag events this would break dockviews\n                     * dnd logic. You can see the code at\n                     * https://github.com/react-dnd/react-dnd/blob/main/packages/backend-html5/src/HTML5BackendImpl.ts#L542\n                     */\n                    event.dataTransfer.setData('text/plain', '');\n                }\n            }\n        }), addDisposableListener(this.el, 'dragend', () => {\n            this.pointerEventsDisposable.dispose();\n            this.dataDisposable.dispose();\n        }));\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nexport class DragAndDropObserver extends CompositeDisposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        this.target = null;\n        this.registerListeners();\n    }\n    onDragEnter(e) {\n        this.target = e.target;\n        this.callbacks.onDragEnter(e);\n    }\n    onDragOver(e) {\n        e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        if (this.callbacks.onDragOver) {\n            this.callbacks.onDragOver(e);\n        }\n    }\n    onDragLeave(e) {\n        if (this.target === e.target) {\n            this.target = null;\n            this.callbacks.onDragLeave(e);\n        }\n    }\n    onDragEnd(e) {\n        this.target = null;\n        this.callbacks.onDragEnd(e);\n    }\n    onDrop(e) {\n        this.callbacks.onDrop(e);\n    }\n    registerListeners() {\n        this.addDisposables(addDisposableListener(this.element, 'dragenter', (e) => {\n            this.onDragEnter(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragover', (e) => {\n            this.onDragOver(e);\n        }, true));\n        this.addDisposables(addDisposableListener(this.element, 'dragleave', (e) => {\n            this.onDragLeave(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'dragend', (e) => {\n            this.onDragEnd(e);\n        }));\n        this.addDisposables(addDisposableListener(this.element, 'drop', (e) => {\n            this.onDrop(e);\n        }));\n    }\n}\n","import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => undefined,\n            onDragOver: (e) => {\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const width = this.element.clientWidth;\n                const height = this.element.clientHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    this.element.classList.add('dv-drop-target');\n                    this.element.append(this.targetElement);\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                this.removeDropTarget();\n            },\n            onDragEnd: () => {\n                this.removeDropTarget();\n            },\n            onDrop: (e) => {\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b;\n        if (!this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        if (this.targetElement) {\n            this._state = undefined;\n            this.element.removeChild(this.targetElement);\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n            this.element.classList.remove('dv-drop-target');\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n","import { AcceptableEvent } from '../events';\nexport const PROPERTY_KEYS_PANEVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        disableDnd: undefined,\n        className: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport class PaneviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, position, getData, panel) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.position = position;\n        this.getData = getData;\n        this.panel = panel;\n    }\n}\n","import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class SplitviewPanelApiImpl extends PanelApiImpl {\n    //\n    constructor(id, component) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        //\n        this._onDidConstraintsChange = new Emitter({\n            replay: true,\n        });\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        //\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { Emitter } from '../events';\nimport { SplitviewPanelApiImpl } from './splitviewPanelApi';\nexport class PaneviewPanelApiImpl extends SplitviewPanelApiImpl {\n    set pane(pane) {\n        this._pane = pane;\n    }\n    constructor(id, component) {\n        super(id, component);\n        this._onDidExpansionChange = new Emitter({\n            replay: true,\n        });\n        this.onDidExpansionChange = this._onDidExpansionChange.event;\n        this._onMouseEnter = new Emitter({});\n        this.onMouseEnter = this._onMouseEnter.event;\n        this._onMouseLeave = new Emitter({});\n        this.onMouseLeave = this._onMouseLeave.event;\n        this.addDisposables(this._onDidExpansionChange, this._onMouseEnter, this._onMouseLeave);\n    }\n    setExpanded(isExpanded) {\n        var _a;\n        (_a = this._pane) === null || _a === void 0 ? void 0 : _a.setExpanded(isExpanded);\n    }\n    get isExpanded() {\n        var _a;\n        return !!((_a = this._pane) === null || _a === void 0 ? void 0 : _a.isExpanded());\n    }\n}\n","import { trackFocus } from '../dom';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class BasePanelView extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get params() {\n        var _a;\n        return (_a = this._params) === null || _a === void 0 ? void 0 : _a.params;\n    }\n    constructor(id, component, api) {\n        super();\n        this.id = id;\n        this.component = component;\n        this.api = api;\n        this._height = 0;\n        this._width = 0;\n        this._element = document.createElement('div');\n        this._element.tabIndex = -1;\n        this._element.style.outline = 'none';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n        this._element.style.overflow = 'hidden';\n        const focusTracker = trackFocus(this._element);\n        this.addDisposables(this.api, focusTracker.onDidFocus(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: true });\n        }), focusTracker.onDidBlur(() => {\n            this.api._onDidChangeFocus.fire({ isFocused: false });\n        }), focusTracker);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this._element.focus();\n    }\n    layout(width, height) {\n        this._width = width;\n        this._height = height;\n        this.api._onDidDimensionChange.fire({ width, height });\n        if (this.part) {\n            if (this._params) {\n                this.part.update(this._params.params);\n            }\n        }\n    }\n    init(parameters) {\n        this._params = parameters;\n        this.part = this.getComponent();\n    }\n    update(event) {\n        var _a, _b;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, this._params), { params: Object.assign(Object.assign({}, (_a = this._params) === null || _a === void 0 ? void 0 : _a.params), event.params) });\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params.params[key];\n            }\n        }\n        // update the view with the updated props\n        (_b = this.part) === null || _b === void 0 ? void 0 : _b.update({ params: this._params.params });\n    }\n    toJSON() {\n        var _a, _b;\n        const params = (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {};\n        return {\n            id: this.id,\n            component: this.component,\n            params: Object.keys(params).length > 0 ? params : undefined,\n        };\n    }\n    dispose() {\n        var _a;\n        this.api.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(id, component, headerComponent, orientation, isExpanded, isHeaderVisible) {\n        super(id, component, new PaneviewPanelApiImpl(id, component));\n        this.headerComponent = headerComponent;\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.headerSize = 22;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._minimumBodySize = 100;\n        this._maximumBodySize = Number.POSITIVE_INFINITY;\n        this._isExpanded = false;\n        this.expandedSize = 0;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this._isExpanded = isExpanded;\n        this._headerVisible = isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        if (this.isExpanded()) {\n            this.expandedSize = width;\n        }\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { DragHandler } from '../dnd/abstractDragHandler';\nimport { getPaneData, LocalSelectionTransfer, PaneTransfer, } from '../dnd/dataTransfer';\nimport { Droptarget } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { PaneviewUnhandledDragOverEvent, } from './options';\nimport { PaneviewPanel, } from './paneviewPanel';\nexport class DraggablePaneviewPanel extends PaneviewPanel {\n    constructor(accessor, id, component, headerComponent, orientation, isExpanded, disableDnd) {\n        super(id, component, headerComponent, orientation, isExpanded, true);\n        this.accessor = accessor;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.addDisposables(this._onDidDrop, this._onUnhandledDragOverEvent);\n        if (!disableDnd) {\n            this.initDragFeatures();\n        }\n    }\n    initDragFeatures() {\n        if (!this.header) {\n            return;\n        }\n        const id = this.id;\n        const accessorId = this.accessor.id;\n        this.header.draggable = true;\n        this.handler = new (class PaneDragHandler extends DragHandler {\n            getData() {\n                LocalSelectionTransfer.getInstance().setData([new PaneTransfer(accessorId, id)], PaneTransfer.prototype);\n                return {\n                    dispose: () => {\n                        LocalSelectionTransfer.getInstance().clearData(PaneTransfer.prototype);\n                    },\n                };\n            }\n        })(this.header);\n        this.target = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom'],\n            overlayModel: {\n                activationSize: { type: 'percentage', value: 50 },\n            },\n            canDisplayOverlay: (event, position) => {\n                const data = getPaneData();\n                if (data) {\n                    if (data.paneId !== this.id &&\n                        data.viewId === this.accessor.id) {\n                        return true;\n                    }\n                }\n                const firedEvent = new PaneviewUnhandledDragOverEvent(event, position, getPaneData, this);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n        });\n        this.addDisposables(this._onDidDrop, this.handler, this.target, this.target.onDrop((event) => {\n            this.onDrop(event);\n        }));\n    }\n    onDrop(event) {\n        const data = getPaneData();\n        if (!data || data.viewId !== this.accessor.id) {\n            // if there is no local drag event for this panel\n            // or if the drag event was creating by another Paneview instance\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, api: new PaneviewApi(this.accessor), getData: getPaneData }));\n            return;\n        }\n        const containerApi = this._params\n            .containerApi;\n        const panelId = data.paneId;\n        const existingPanel = containerApi.getPanel(panelId);\n        if (!existingPanel) {\n            // if the panel doesn't exist\n            this._onDidDrop.fire(Object.assign(Object.assign({}, event), { panel: this, getData: getPaneData, api: new PaneviewApi(this.accessor) }));\n            return;\n        }\n        const allPanels = containerApi.panels;\n        const fromIndex = allPanels.indexOf(existingPanel);\n        let toIndex = containerApi.panels.indexOf(this);\n        if (event.position === 'left' || event.position === 'top') {\n            toIndex = Math.max(0, toIndex - 1);\n        }\n        if (event.position === 'right' || event.position === 'bottom') {\n            if (fromIndex > toIndex) {\n                toIndex++;\n            }\n            toIndex = Math.min(allPanels.length - 1, toIndex);\n        }\n        containerApi.movePanel(fromIndex, toIndex);\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../../../lifecycle';\nimport { Emitter } from '../../../events';\nimport { trackFocus } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class ContentContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.disposable = new MutableDisposable();\n        this._onDidFocus = new Emitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new Emitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-content-container';\n        this._element.tabIndex = -1;\n        this.addDisposables(this._onDidFocus, this._onDidBlur);\n        this.dropTarget = new Droptarget(this.element, {\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked === 'no-drop-target' ||\n                    (this.group.locked && position === 'center')) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (!data &&\n                    event.shiftKey &&\n                    this.group.location.type !== 'floating') {\n                    return false;\n                }\n                if (data && data.viewId === this.accessor.id) {\n                    if (data.groupId === this.group.id) {\n                        if (position === 'center') {\n                            // don't allow to drop on self for center position\n                            return false;\n                        }\n                        if (data.panelId === null) {\n                            // don't allow group move to drop anywhere on self\n                            return false;\n                        }\n                    }\n                    const groupHasOnePanelAndIsActiveDragElement = this.group.panels.length === 1 &&\n                        data.groupId === this.group.id;\n                    return !groupHasOnePanelAndIsActiveDragElement;\n                }\n                return this.group.canDisplayOverlay(event, position, 'content');\n            },\n        });\n        this.addDisposables(this.dropTarget);\n    }\n    show() {\n        this.element.style.display = '';\n    }\n    hide() {\n        this.element.style.display = 'none';\n    }\n    renderPanel(panel, options = { asActive: true }) {\n        const doRender = options.asActive ||\n            (this.panel && this.group.isPanelActive(this.panel));\n        if (this.panel &&\n            this.panel.view.content.element.parentElement === this._element) {\n            /**\n             * If the currently attached panel is mounted directly to the content then remove it\n             */\n            this._element.removeChild(this.panel.view.content.element);\n        }\n        this.panel = panel;\n        let container;\n        switch (panel.api.renderer) {\n            case 'onlyWhenVisible':\n                this.group.renderContainer.detatch(panel);\n                if (this.panel) {\n                    if (doRender) {\n                        this._element.appendChild(this.panel.view.content.element);\n                    }\n                }\n                container = this._element;\n                break;\n            case 'always':\n                if (panel.view.content.element.parentElement === this._element) {\n                    this._element.removeChild(panel.view.content.element);\n                }\n                container = this.group.renderContainer.attach({\n                    panel,\n                    referenceContainer: this,\n                });\n                break;\n            default:\n                throw new Error(`dockview: invalid renderer type '${panel.api.renderer}'`);\n        }\n        if (doRender) {\n            const focusTracker = trackFocus(container);\n            const disposable = new CompositeDisposable();\n            disposable.addDisposables(focusTracker, focusTracker.onDidFocus(() => this._onDidFocus.fire()), focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n            this.disposable.value = disposable;\n        }\n    }\n    openPanel(panel) {\n        if (this.panel === panel) {\n            return;\n        }\n        this.renderPanel(panel);\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    closePanel() {\n        var _a;\n        if (this.panel) {\n            if (this.panel.api.renderer === 'onlyWhenVisible') {\n                (_a = this.panel.view.content.element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.panel.view.content.element);\n            }\n        }\n        this.panel = undefined;\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = true;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    return this.panel.id !== data.panelId;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n","import { quasiPreventDefault } from '../dom';\nimport { addDisposableListener } from '../events';\nimport { DragHandler } from './abstractDragHandler';\nimport { LocalSelectionTransfer, PanelTransfer } from './dataTransfer';\nimport { addGhostImage } from './ghost';\nexport class GroupDragHandler extends DragHandler {\n    constructor(element, accessor, group) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n        this.addDisposables(addDisposableListener(element, 'pointerdown', (e) => {\n            if (e.shiftKey) {\n                /**\n                 * You cannot call e.preventDefault() because that will prevent drag events from firing\n                 * but we also need to stop any group overlay drag events from occuring\n                 * Use a custom event marker that can be checked by the overlay drag events\n                 */\n                quasiPreventDefault(e);\n            }\n        }, true));\n    }\n    isCancelled(_event) {\n        if (this.group.api.location.type === 'floating' && !_event.shiftKey) {\n            return true;\n        }\n        return false;\n    }\n    getData(dragEvent) {\n        const dataTransfer = dragEvent.dataTransfer;\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, null)], PanelTransfer.prototype);\n        const style = window.getComputedStyle(this.el);\n        const bgColor = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-background-color');\n        const color = style.getPropertyValue('--dv-activegroup-visiblepanel-tab-color');\n        if (dataTransfer) {\n            const ghostElement = document.createElement('div');\n            ghostElement.style.backgroundColor = bgColor;\n            ghostElement.style.color = color;\n            ghostElement.style.padding = '2px 8px';\n            ghostElement.style.height = '24px';\n            ghostElement.style.fontSize = '11px';\n            ghostElement.style.lineHeight = '20px';\n            ghostElement.style.borderRadius = '12px';\n            ghostElement.style.position = 'absolute';\n            ghostElement.textContent = `Multiple Panels (${this.group.size})`;\n            addGhostImage(dataTransfer, ghostElement);\n        }\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\n","import { addClasses, removeClasses } from '../dom';\nexport function addGhostImage(dataTransfer, ghostElement) {\n    // class dockview provides to force ghost image to be drawn on a different layer and prevent weird rendering issues\n    addClasses(ghostElement, 'dv-dragged');\n    document.body.appendChild(ghostElement);\n    dataTransfer.setDragImage(ghostElement, 0, 0);\n    setTimeout(() => {\n        removeClasses(ghostElement, 'dv-dragged');\n        ghostElement.remove();\n    }, 0);\n}\n","import { last } from '../../../array';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { GroupDragHandler } from '../../../dnd/groupDragHandler';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nexport class VoidContainer extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-void-container';\n        this._element.draggable = true;\n        this.addDisposables(this._onDrop, this._onDragStart, addDisposableListener(this._element, 'pointerdown', () => {\n            this.accessor.doSetGroupActive(this.group);\n        }));\n        const handler = new GroupDragHandler(this._element, accessor, group);\n        this.dropTraget = new Droptarget(this._element, {\n            acceptedTargetZones: ['center'],\n            canDisplayOverlay: (event, position) => {\n                var _a;\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    if (data.panelId === null &&\n                        data.groupId === this.group.id) {\n                        // don't allow group move to drop on self\n                        return false;\n                    }\n                    // don't show the overlay if the tab being dragged is the last panel of this group\n                    return ((_a = last(this.group.panels)) === null || _a === void 0 ? void 0 : _a.id) !== data.panelId;\n                }\n                return group.model.canDisplayOverlay(event, position, 'header_space');\n            },\n        });\n        this.onWillShowOverlay = this.dropTraget.onWillShowOverlay;\n        this.addDisposables(handler, handler.onDragStart((event) => {\n            this._onDragStart.fire(event);\n        }), this.dropTraget.onDrop((event) => {\n            this._onDrop.fire(event);\n        }), this.dropTraget);\n    }\n}\n","import { CompositeDisposable, } from '../../../lifecycle';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { Tab } from '../tab/tab';\nimport { VoidContainer } from './voidContainer';\nimport { toggleClass } from '../../../dom';\nimport { WillShowOverlayLocationEvent } from '../../dockviewGroupPanelModel';\nimport { getPanelData } from '../../../dnd/dataTransfer';\nexport class TabsContainer extends CompositeDisposable {\n    get panels() {\n        return this.tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this.tabs.length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(value) {\n        this._hidden = value;\n        this.element.style.display = value ? 'none' : '';\n    }\n    show() {\n        if (!this.hidden) {\n            this.element.style.display = '';\n        }\n    }\n    hide() {\n        this._element.style.display = 'none';\n    }\n    setRightActionsElement(element) {\n        if (this.rightActions === element) {\n            return;\n        }\n        if (this.rightActions) {\n            this.rightActions.remove();\n            this.rightActions = undefined;\n        }\n        if (element) {\n            this.rightActionsContainer.appendChild(element);\n            this.rightActions = element;\n        }\n    }\n    setLeftActionsElement(element) {\n        if (this.leftActions === element) {\n            return;\n        }\n        if (this.leftActions) {\n            this.leftActions.remove();\n            this.leftActions = undefined;\n        }\n        if (element) {\n            this.leftActionsContainer.appendChild(element);\n            this.leftActions = element;\n        }\n    }\n    setPrefixActionsElement(element) {\n        if (this.preActions === element) {\n            return;\n        }\n        if (this.preActions) {\n            this.preActions.remove();\n            this.preActions = undefined;\n        }\n        if (element) {\n            this.preActionsContainer.appendChild(element);\n            this.preActions = element;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this.tabs[this.selectedIndex].value === tab);\n    }\n    indexOf(id) {\n        return this.tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    constructor(accessor, group) {\n        super();\n        this.accessor = accessor;\n        this.group = group;\n        this.tabs = [];\n        this.selectedIndex = -1;\n        this._hidden = false;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tabs-and-actions-container';\n        toggleClass(this._element, 'dv-full-width-single-tab', this.accessor.options.singleTabMode === 'fullwidth');\n        this.rightActionsContainer = document.createElement('div');\n        this.rightActionsContainer.className = 'dv-right-actions-container';\n        this.leftActionsContainer = document.createElement('div');\n        this.leftActionsContainer.className = 'dv-left-actions-container';\n        this.preActionsContainer = document.createElement('div');\n        this.preActionsContainer.className = 'dv-pre-actions-container';\n        this.tabContainer = document.createElement('div');\n        this.tabContainer.className = 'dv-tabs-container';\n        this.voidContainer = new VoidContainer(this.accessor, this.group);\n        this._element.appendChild(this.preActionsContainer);\n        this._element.appendChild(this.tabContainer);\n        this._element.appendChild(this.leftActionsContainer);\n        this._element.appendChild(this.voidContainer.element);\n        this._element.appendChild(this.rightActionsContainer);\n        this.addDisposables(this._onWillShowOverlay, this._onDrop, this._onTabDragStart, this._onGroupDragStart, this.voidContainer, this.voidContainer.onDragStart((event) => {\n            this._onGroupDragStart.fire({\n                nativeEvent: event,\n                group: this.group,\n            });\n        }), this.voidContainer.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.length,\n            });\n        }), this.voidContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'header_space',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }), addDisposableListener(this.voidContainer.element, 'pointerdown', (event) => {\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            if (isFloatingGroupsEnabled &&\n                event.shiftKey &&\n                this.group.api.location.type !== 'floating') {\n                event.preventDefault();\n                const { top, left } = this.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(this.group, {\n                    x: left - rootLeft + 20,\n                    y: top - rootTop + 20,\n                    inDragMode: true,\n                });\n            }\n        }), addDisposableListener(this.tabContainer, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }));\n    }\n    setActive(_isGroupActive) {\n        // noop\n    }\n    delete(id) {\n        const index = this.tabs.findIndex((tab) => tab.value.panel.id === id);\n        const tabToRemove = this.tabs.splice(index, 1)[0];\n        if (!tabToRemove) {\n            throw new Error(`dockview: Tab not found`);\n        }\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n        this.updateClassnames();\n    }\n    setActivePanel(panel) {\n        this.tabs.forEach((tab) => {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n        });\n    }\n    openPanel(panel, index = this.tabs.length) {\n        if (this.tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this.tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    closePanel(panel) {\n        this.delete(panel.id);\n    }\n    dispose() {\n        super.dispose();\n        for (const { value, disposable } of this.tabs) {\n            disposable.dispose();\n            value.dispose();\n        }\n        this.tabs = [];\n    }\n    addTab(tab, index = this.tabs.length) {\n        if (index < 0 || index > this.tabs.length) {\n            throw new Error('invalid location');\n        }\n        this.tabContainer.insertBefore(tab.value.element, this.tabContainer.children[index]);\n        this.tabs = [\n            ...this.tabs.slice(0, index),\n            tab,\n            ...this.tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n        this.updateClassnames();\n    }\n    updateClassnames() {\n        toggleClass(this._element, 'dv-single-tab', this.size === 1);\n    }\n}\n","import { AcceptableEvent } from '../events';\nexport class DockviewUnhandledDragOverEvent extends AcceptableEvent {\n    constructor(nativeEvent, target, position, getData, group) {\n        super();\n        this.nativeEvent = nativeEvent;\n        this.target = target;\n        this.position = position;\n        this.getData = getData;\n        this.group = group;\n    }\n}\nexport const PROPERTY_KEYS_DOCKVIEW = (() => {\n    /**\n     * by readong the keys from an empty value object TypeScript will error\n     * when we add or remove new properties to `DockviewOptions`\n     */\n    const properties = {\n        disableAutoResizing: undefined,\n        hideBorders: undefined,\n        singleTabMode: undefined,\n        disableFloatingGroups: undefined,\n        floatingGroupBounds: undefined,\n        popoutUrl: undefined,\n        defaultRenderer: undefined,\n        debug: undefined,\n        rootOverlayModel: undefined,\n        locked: undefined,\n        disableDnd: undefined,\n        gap: undefined,\n        className: undefined,\n        noPanelsOverlay: undefined,\n    };\n    return Object.keys(properties);\n})();\nexport function isPanelOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isPanelOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithPanel(data) {\n    if (data.referencePanel) {\n        return true;\n    }\n    return false;\n}\nexport function isGroupOptionsWithGroup(data) {\n    if (data.referenceGroup) {\n        return true;\n    }\n    return false;\n}\n","import { DockviewApi } from '../api/component.api';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { isAncestor, toggleClass } from '../dom';\nimport { addDisposableListener, DockviewEvent, Emitter, } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { ContentContainer, } from './components/panel/content';\nimport { TabsContainer, } from './components/titlebar/tabsContainer';\nimport { DockviewUnhandledDragOverEvent, } from './options';\nexport class DockviewDidDropEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get group() {\n        return this.options.group;\n    }\n    get api() {\n        return this.options.api;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    getData() {\n        return this.options.getData();\n    }\n}\nexport class DockviewWillDropEvent extends DockviewDidDropEvent {\n    get kind() {\n        return this._kind;\n    }\n    constructor(options) {\n        super(options);\n        this._kind = options.kind;\n    }\n}\nexport class WillShowOverlayLocationEvent {\n    get kind() {\n        return this.options.kind;\n    }\n    get nativeEvent() {\n        return this.event.nativeEvent;\n    }\n    get position() {\n        return this.event.position;\n    }\n    get defaultPrevented() {\n        return this.event.defaultPrevented;\n    }\n    get panel() {\n        return this.options.panel;\n    }\n    get api() {\n        return this.options.api;\n    }\n    get group() {\n        return this.options.group;\n    }\n    preventDefault() {\n        this.event.preventDefault();\n    }\n    getData() {\n        return this.options.getData();\n    }\n    constructor(event, options) {\n        this.event = event;\n        this.options = options;\n    }\n}\nexport class DockviewGroupPanelModel extends CompositeDisposable {\n    get element() {\n        throw new Error('dockview: not supported');\n    }\n    get activePanel() {\n        return this._activePanel;\n    }\n    get locked() {\n        return this._locked;\n    }\n    set locked(value) {\n        this._locked = value;\n        toggleClass(this.container, 'dv-locked-groupview', value === 'no-drop-target' || value);\n    }\n    get isActive() {\n        return this._isGroupActive;\n    }\n    get panels() {\n        return this._panels;\n    }\n    get size() {\n        return this._panels.length;\n    }\n    get isEmpty() {\n        return this._panels.length === 0;\n    }\n    get hasWatermark() {\n        return !!(this.watermark && this.container.contains(this.watermark.element));\n    }\n    get header() {\n        return this.tabsContainer;\n    }\n    get isContentFocused() {\n        if (!document.activeElement) {\n            return false;\n        }\n        return isAncestor(document.activeElement, this.contentContainer.element);\n    }\n    get location() {\n        return this._location;\n    }\n    set location(value) {\n        this._location = value;\n        toggleClass(this.container, 'dv-groupview-floating', false);\n        toggleClass(this.container, 'dv-groupview-popout', false);\n        switch (value.type) {\n            case 'grid':\n                this.contentContainer.dropTarget.setTargetZones([\n                    'top',\n                    'bottom',\n                    'left',\n                    'right',\n                    'center',\n                ]);\n                break;\n            case 'floating':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                this.contentContainer.dropTarget.setTargetZones(value\n                    ? ['center']\n                    : ['top', 'bottom', 'left', 'right', 'center']);\n                toggleClass(this.container, 'dv-groupview-floating', true);\n                break;\n            case 'popout':\n                this.contentContainer.dropTarget.setTargetZones(['center']);\n                toggleClass(this.container, 'dv-groupview-popout', true);\n                break;\n        }\n        this.groupPanel.api._onDidLocationChange.fire({\n            location: this.location,\n        });\n    }\n    constructor(container, accessor, id, options, groupPanel) {\n        var _a;\n        super();\n        this.container = container;\n        this.accessor = accessor;\n        this.id = id;\n        this.options = options;\n        this.groupPanel = groupPanel;\n        this._isGroupActive = false;\n        this._locked = false;\n        this._location = { type: 'grid' };\n        this.mostRecentlyUsed = [];\n        this._overwriteRenderContainer = null;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._width = 0;\n        this._height = 0;\n        this._panels = [];\n        this._panelDisposables = new Map();\n        this._onMove = new Emitter();\n        this.onMove = this._onMove.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onGroupDragStart = new Emitter();\n        this.onGroupDragStart = this._onGroupDragStart.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidPanelTitleChange = new Emitter();\n        this.onDidPanelTitleChange = this._onDidPanelTitleChange.event;\n        this._onDidPanelParametersChange = new Emitter();\n        this.onDidPanelParametersChange = this._onDidPanelParametersChange.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        toggleClass(this.container, 'dv-groupview', true);\n        this._api = new DockviewApi(this.accessor);\n        this.tabsContainer = new TabsContainer(this.accessor, this.groupPanel);\n        this.contentContainer = new ContentContainer(this.accessor, this);\n        container.append(this.tabsContainer.element, this.contentContainer.element);\n        this.header.hidden = !!options.hideHeader;\n        this.locked = (_a = options.locked) !== null && _a !== void 0 ? _a : false;\n        this.addDisposables(this._onTabDragStart, this._onGroupDragStart, this._onWillShowOverlay, this.tabsContainer.onTabDragStart((event) => {\n            this._onTabDragStart.fire(event);\n        }), this.tabsContainer.onGroupDragStart((event) => {\n            this._onGroupDragStart.fire(event);\n        }), this.tabsContainer.onDrop((event) => {\n            this.handleDropEvent('header', event.event, 'center', event.index);\n        }), this.contentContainer.onDidFocus(() => {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }), this.contentContainer.onDidBlur(() => {\n            // noop\n        }), this.contentContainer.dropTarget.onDrop((event) => {\n            this.handleDropEvent('content', event.nativeEvent, event.position);\n        }), this.tabsContainer.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(event);\n        }), this.contentContainer.dropTarget.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'content',\n                panel: this.activePanel,\n                api: this._api,\n                group: this.groupPanel,\n                getData: getPanelData,\n            }));\n        }), this._onMove, this._onDidChange, this._onDidDrop, this._onWillDrop, this._onDidAddPanel, this._onDidRemovePanel, this._onDidActivePanelChange, this._onUnhandledDragOverEvent, this._onDidPanelTitleChange, this._onDidPanelParametersChange);\n    }\n    focusContent() {\n        this.contentContainer.element.focus();\n    }\n    set renderContainer(value) {\n        this.panels.forEach((panel) => {\n            this.renderContainer.detatch(panel);\n        });\n        this._overwriteRenderContainer = value;\n        this.panels.forEach((panel) => {\n            this.rerender(panel);\n        });\n    }\n    get renderContainer() {\n        var _a;\n        return ((_a = this._overwriteRenderContainer) !== null && _a !== void 0 ? _a : this.accessor.overlayRenderContainer);\n    }\n    initialize() {\n        if (this.options.panels) {\n            this.options.panels.forEach((panel) => {\n                this.doAddPanel(panel);\n            });\n        }\n        if (this.options.activePanel) {\n            this.openPanel(this.options.activePanel);\n        }\n        // must be run after the constructor otherwise this.parent may not be\n        // correctly initialized\n        this.setActive(this.isActive, true);\n        this.updateContainer();\n        if (this.accessor.options.createRightHeaderActionComponent) {\n            this._rightHeaderActions =\n                this.accessor.options.createRightHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._rightHeaderActions);\n            this._rightHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setRightActionsElement(this._rightHeaderActions.element);\n        }\n        if (this.accessor.options.createLeftHeaderActionComponent) {\n            this._leftHeaderActions =\n                this.accessor.options.createLeftHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._leftHeaderActions);\n            this._leftHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setLeftActionsElement(this._leftHeaderActions.element);\n        }\n        if (this.accessor.options.createPrefixHeaderActionComponent) {\n            this._prefixHeaderActions =\n                this.accessor.options.createPrefixHeaderActionComponent(this.groupPanel);\n            this.addDisposables(this._prefixHeaderActions);\n            this._prefixHeaderActions.init({\n                containerApi: this._api,\n                api: this.groupPanel.api,\n                group: this.groupPanel,\n            });\n            this.tabsContainer.setPrefixActionsElement(this._prefixHeaderActions.element);\n        }\n    }\n    rerender(panel) {\n        this.contentContainer.renderPanel(panel, { asActive: false });\n    }\n    indexOf(panel) {\n        return this.tabsContainer.indexOf(panel.id);\n    }\n    toJSON() {\n        var _a;\n        const result = {\n            views: this.tabsContainer.panels,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            id: this.id,\n        };\n        if (this.locked !== false) {\n            result.locked = this.locked;\n        }\n        if (this.header.hidden) {\n            result.hideHeader = true;\n        }\n        return result;\n    }\n    moveToNext(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        const index = options.panel ? this.panels.indexOf(options.panel) : -1;\n        let normalizedIndex;\n        if (index < this.panels.length - 1) {\n            normalizedIndex = index + 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = 0;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    moveToPrevious(options) {\n        if (!options) {\n            options = {};\n        }\n        if (!options.panel) {\n            options.panel = this.activePanel;\n        }\n        if (!options.panel) {\n            return;\n        }\n        const index = this.panels.indexOf(options.panel);\n        let normalizedIndex;\n        if (index > 0) {\n            normalizedIndex = index - 1;\n        }\n        else if (!options.suppressRoll) {\n            normalizedIndex = this.panels.length - 1;\n        }\n        else {\n            return;\n        }\n        this.openPanel(this.panels[normalizedIndex]);\n    }\n    containsPanel(panel) {\n        return this.panels.includes(panel);\n    }\n    init(_params) {\n        //noop\n    }\n    update(_params) {\n        //noop\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    openPanel(panel, options = {}) {\n        /**\n         * set the panel group\n         * add the panel\n         * check if group active\n         * check if panel active\n         */\n        if (typeof options.index !== 'number' ||\n            options.index > this.panels.length) {\n            options.index = this.panels.length;\n        }\n        const skipSetActive = !!options.skipSetActive;\n        // ensure the group is updated before we fire any events\n        panel.updateParentGroup(this.groupPanel, {\n            skipSetActive: options.skipSetActive,\n        });\n        this.doAddPanel(panel, options.index, {\n            skipSetActive: skipSetActive,\n        });\n        if (this._activePanel === panel) {\n            this.contentContainer.renderPanel(panel, { asActive: true });\n            return;\n        }\n        if (!skipSetActive) {\n            this.doSetActivePanel(panel);\n        }\n        if (!options.skipSetGroupActive) {\n            this.accessor.doSetGroupActive(this.groupPanel);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n    }\n    removePanel(groupItemOrId, options = {\n        skipSetActive: false,\n    }) {\n        const id = typeof groupItemOrId === 'string'\n            ? groupItemOrId\n            : groupItemOrId.id;\n        const panelToRemove = this._panels.find((panel) => panel.id === id);\n        if (!panelToRemove) {\n            throw new Error('invalid operation');\n        }\n        return this._removePanel(panelToRemove, options);\n    }\n    closeAllPanels() {\n        if (this.panels.length > 0) {\n            // take a copy since we will be edting the array as we iterate through\n            const arrPanelCpy = [...this.panels];\n            for (const panel of arrPanelCpy) {\n                this.doClose(panel);\n            }\n        }\n        else {\n            this.accessor.removeGroup(this.groupPanel);\n        }\n    }\n    closePanel(panel) {\n        this.doClose(panel);\n    }\n    doClose(panel) {\n        const isLast = this.panels.length === 1 && this.accessor.groups.length === 1;\n        this.accessor.removePanel(panel, isLast && this.accessor.options.noPanelsOverlay === 'emptyGroup'\n            ? { removeEmptyGroup: false }\n            : undefined);\n    }\n    isPanelActive(panel) {\n        return this._activePanel === panel;\n    }\n    updateActions(element) {\n        this.tabsContainer.setRightActionsElement(element);\n    }\n    setActive(isGroupActive, force = false) {\n        if (!force && this.isActive === isGroupActive) {\n            return;\n        }\n        this._isGroupActive = isGroupActive;\n        toggleClass(this.container, 'dv-active-group', isGroupActive);\n        toggleClass(this.container, 'dv-inactive-group', !isGroupActive);\n        this.tabsContainer.setActive(this.isActive);\n        if (!this._activePanel && this.panels.length > 0) {\n            this.doSetActivePanel(this.panels[0]);\n        }\n        this.updateContainer();\n    }\n    layout(width, height) {\n        var _a;\n        this._width = width;\n        this._height = height;\n        this.contentContainer.layout(this._width, this._height);\n        if ((_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.layout) {\n            this._activePanel.layout(this._width, this._height);\n        }\n    }\n    _removePanel(panel, options) {\n        const isActivePanel = this._activePanel === panel;\n        this.doRemovePanel(panel);\n        if (isActivePanel && this.panels.length > 0) {\n            const nextPanel = this.mostRecentlyUsed[0];\n            this.openPanel(nextPanel, {\n                skipSetActive: options.skipSetActive,\n                skipSetGroupActive: options.skipSetActiveGroup,\n            });\n        }\n        if (this._activePanel && this.panels.length === 0) {\n            this.doSetActivePanel(undefined);\n        }\n        if (!options.skipSetActive) {\n            this.updateContainer();\n        }\n        return panel;\n    }\n    doRemovePanel(panel) {\n        const index = this.panels.indexOf(panel);\n        if (this._activePanel === panel) {\n            this.contentContainer.closePanel();\n        }\n        this.tabsContainer.delete(panel.id);\n        this._panels.splice(index, 1);\n        if (this.mostRecentlyUsed.includes(panel)) {\n            const index = this.mostRecentlyUsed.indexOf(panel);\n            this.mostRecentlyUsed.splice(index, 1);\n        }\n        const disposable = this._panelDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._panelDisposables.delete(panel.id);\n        }\n        this._onDidRemovePanel.fire({ panel });\n    }\n    doAddPanel(panel, index = this.panels.length, options = { skipSetActive: false }) {\n        const existingPanel = this._panels.indexOf(panel);\n        const hasExistingPanel = existingPanel > -1;\n        this.tabsContainer.show();\n        this.contentContainer.show();\n        this.tabsContainer.openPanel(panel, index);\n        if (!options.skipSetActive) {\n            this.contentContainer.openPanel(panel);\n        }\n        if (hasExistingPanel) {\n            // TODO - need to ensure ordering hasn't changed and if it has need to re-order this.panels\n            return;\n        }\n        this.updateMru(panel);\n        this.panels.splice(index, 0, panel);\n        this._panelDisposables.set(panel.id, new CompositeDisposable(panel.api.onDidTitleChange((event) => this._onDidPanelTitleChange.fire(event)), panel.api.onDidParametersChange((event) => this._onDidPanelParametersChange.fire(event))));\n        this._onDidAddPanel.fire({ panel });\n    }\n    doSetActivePanel(panel) {\n        if (this._activePanel === panel) {\n            return;\n        }\n        this._activePanel = panel;\n        if (panel) {\n            this.tabsContainer.setActivePanel(panel);\n            panel.layout(this._width, this._height);\n            this.updateMru(panel);\n            this._onDidActivePanelChange.fire({\n                panel,\n            });\n        }\n    }\n    updateMru(panel) {\n        if (this.mostRecentlyUsed.includes(panel)) {\n            this.mostRecentlyUsed.splice(this.mostRecentlyUsed.indexOf(panel), 1);\n        }\n        this.mostRecentlyUsed = [panel, ...this.mostRecentlyUsed];\n    }\n    updateContainer() {\n        var _a, _b;\n        this.panels.forEach((panel) => panel.runEvents());\n        if (this.isEmpty && !this.watermark) {\n            const watermark = this.accessor.createWatermarkComponent();\n            watermark.init({\n                containerApi: this._api,\n                group: this.groupPanel,\n            });\n            this.watermark = watermark;\n            addDisposableListener(this.watermark.element, 'pointerdown', () => {\n                if (!this.isActive) {\n                    this.accessor.doSetGroupActive(this.groupPanel);\n                }\n            });\n            this.contentContainer.element.appendChild(this.watermark.element);\n        }\n        if (!this.isEmpty && this.watermark) {\n            this.watermark.element.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = undefined;\n        }\n    }\n    canDisplayOverlay(event, position, target) {\n        const firedEvent = new DockviewUnhandledDragOverEvent(event, target, position, getPanelData, this.accessor.getPanel(this.id));\n        this._onUnhandledDragOverEvent.fire(firedEvent);\n        return firedEvent.isAccepted;\n    }\n    handleDropEvent(type, event, position, index) {\n        if (this.locked === 'no-drop-target') {\n            return;\n        }\n        function getKind() {\n            switch (type) {\n                case 'header':\n                    return typeof index === 'number' ? 'tab' : 'header_space';\n                case 'content':\n                    return 'content';\n            }\n        }\n        const panel = typeof index === 'number' ? this.panels[index] : undefined;\n        const willDropEvent = new DockviewWillDropEvent({\n            nativeEvent: event,\n            position,\n            panel,\n            getData: () => getPanelData(),\n            kind: getKind(),\n            group: this.groupPanel,\n            api: this._api,\n        });\n        this._onWillDrop.fire(willDropEvent);\n        if (willDropEvent.defaultPrevented) {\n            return;\n        }\n        const data = getPanelData();\n        if (data && data.viewId === this.accessor.id) {\n            if (data.panelId === null) {\n                // this is a group move dnd event\n                const { groupId } = data;\n                this._onMove.fire({\n                    target: position,\n                    groupId: groupId,\n                    index,\n                });\n                return;\n            }\n            const fromSameGroup = this.tabsContainer.indexOf(data.panelId) !== -1;\n            if (fromSameGroup && this.tabsContainer.size === 1) {\n                return;\n            }\n            const { groupId, panelId } = data;\n            const isSameGroup = this.id === groupId;\n            if (isSameGroup && !position) {\n                const oldIndex = this.tabsContainer.indexOf(panelId);\n                if (oldIndex === index) {\n                    return;\n                }\n            }\n            this._onMove.fire({\n                target: position,\n                groupId: data.groupId,\n                itemId: data.panelId,\n                index,\n            });\n        }\n        else {\n            this._onDidDrop.fire(new DockviewDidDropEvent({\n                nativeEvent: event,\n                position,\n                panel,\n                getData: () => getPanelData(),\n                group: this.groupPanel,\n                api: this._api,\n            }));\n        }\n    }\n    dispose() {\n        var _a, _b, _c;\n        super.dispose();\n        (_a = this.watermark) === null || _a === void 0 ? void 0 : _a.element.remove();\n        (_c = (_b = this.watermark) === null || _b === void 0 ? void 0 : _b.dispose) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.watermark = undefined;\n        for (const panel of this.panels) {\n            panel.dispose();\n        }\n        this.tabsContainer.dispose();\n        this.contentContainer.dispose();\n    }\n}\n","import { Emitter } from '../events';\nimport { PanelApiImpl } from './panelApi';\nexport class GridviewPanelApiImpl extends PanelApiImpl {\n    constructor(id, component, panel) {\n        super(id, component);\n        this._onDidConstraintsChangeInternal = new Emitter();\n        this.onDidConstraintsChangeInternal = this._onDidConstraintsChangeInternal.event;\n        this._onDidConstraintsChange = new Emitter();\n        this.onDidConstraintsChange = this._onDidConstraintsChange.event;\n        this._onDidSizeChange = new Emitter();\n        this.onDidSizeChange = this._onDidSizeChange.event;\n        this.addDisposables(this._onDidConstraintsChangeInternal, this._onDidConstraintsChange, this._onDidSizeChange);\n        if (panel) {\n            this.initialize(panel);\n        }\n    }\n    setConstraints(value) {\n        this._onDidConstraintsChangeInternal.fire(value);\n    }\n    setSize(event) {\n        this._onDidSizeChange.fire(event);\n    }\n}\n","import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n","import { positionToDirection } from '../dnd/droptarget';\nimport { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nconst NOT_INITIALIZED_MESSAGE = 'dockview: DockviewGroupPanelApiImpl not initialized';\nexport class DockviewGroupPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this._group.model.location;\n    }\n    constructor(id, accessor) {\n        super(id, '__dockviewgroup__');\n        this.accessor = accessor;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this.addDisposables(this._onDidLocationChange, this._onDidActivePanelChange);\n    }\n    close() {\n        if (!this._group) {\n            return;\n        }\n        return this.accessor.removeGroup(this._group);\n    }\n    getWindow() {\n        return this.location.type === 'popout'\n            ? this.location.getWindow()\n            : window;\n    }\n    moveTo(options) {\n        var _a, _b, _c;\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        const group = (_a = options.group) !== null && _a !== void 0 ? _a : this.accessor.addGroup({\n            direction: positionToDirection((_b = options.position) !== null && _b !== void 0 ? _b : 'right'),\n            skipSetActive: true,\n        });\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id },\n            to: {\n                group,\n                position: options.group\n                    ? (_c = options.position) !== null && _c !== void 0 ? _c : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    maximize() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.location.type !== 'grid') {\n            // only grid groups can be maximized\n            return;\n        }\n        this.accessor.maximizeGroup(this._group);\n    }\n    isMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        return this.accessor.isMaximizedGroup(this._group);\n    }\n    exitMaximized() {\n        if (!this._group) {\n            throw new Error(NOT_INITIALIZED_MESSAGE);\n        }\n        if (this.isMaximized()) {\n            this.accessor.exitMaximizedGroup();\n        }\n    }\n    initialize(group) {\n        this._group = group;\n    }\n}\n","import { DockviewGroupPanelModel, } from './dockviewGroupPanelModel';\nimport { GridviewPanel } from '../gridview/gridviewPanel';\nimport { DockviewGroupPanelApiImpl, } from '../api/dockviewGroupPanelApi';\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH = 100;\nconst MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT = 100;\nexport class DockviewGroupPanel extends GridviewPanel {\n    get minimumWidth() {\n        var _a;\n        const activePanelMinimumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumWidth;\n        if (typeof activePanelMinimumWidth === 'number') {\n            return activePanelMinimumWidth;\n        }\n        return super.__minimumWidth();\n    }\n    get minimumHeight() {\n        var _a;\n        const activePanelMinimumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.minimumHeight;\n        if (typeof activePanelMinimumHeight === 'number') {\n            return activePanelMinimumHeight;\n        }\n        return super.__minimumHeight();\n    }\n    get maximumWidth() {\n        var _a;\n        const activePanelMaximumWidth = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumWidth;\n        if (typeof activePanelMaximumWidth === 'number') {\n            return activePanelMaximumWidth;\n        }\n        return super.__maximumWidth();\n    }\n    get maximumHeight() {\n        var _a;\n        const activePanelMaximumHeight = (_a = this.activePanel) === null || _a === void 0 ? void 0 : _a.maximumHeight;\n        if (typeof activePanelMaximumHeight === 'number') {\n            return activePanelMaximumHeight;\n        }\n        return super.__maximumHeight();\n    }\n    get panels() {\n        return this._model.panels;\n    }\n    get activePanel() {\n        return this._model.activePanel;\n    }\n    get size() {\n        return this._model.size;\n    }\n    get model() {\n        return this._model;\n    }\n    get locked() {\n        return this._model.locked;\n    }\n    set locked(value) {\n        this._model.locked = value;\n    }\n    get header() {\n        return this._model.header;\n    }\n    constructor(accessor, id, options) {\n        var _a, _b, _c, _d, _e, _f;\n        super(id, 'groupview_default', {\n            minimumHeight: (_b = (_a = options.constraints) === null || _a === void 0 ? void 0 : _a.minimumHeight) !== null && _b !== void 0 ? _b : MINIMUM_DOCKVIEW_GROUP_PANEL_HEIGHT,\n            minimumWidth: (_d = (_c = options.constraints) === null || _c === void 0 ? void 0 : _c.maximumHeight) !== null && _d !== void 0 ? _d : MINIMUM_DOCKVIEW_GROUP_PANEL_WIDTH,\n            maximumHeight: (_e = options.constraints) === null || _e === void 0 ? void 0 : _e.maximumHeight,\n            maximumWidth: (_f = options.constraints) === null || _f === void 0 ? void 0 : _f.maximumWidth,\n        }, new DockviewGroupPanelApiImpl(id, accessor));\n        this.api.initialize(this); // cannot use 'this' after after 'super' call\n        this._model = new DockviewGroupPanelModel(this.element, accessor, id, options, this);\n        this.addDisposables(this.model.onDidActivePanelChange((event) => {\n            this.api._onDidActivePanelChange.fire(event);\n        }));\n    }\n    focus() {\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n        super.focus();\n    }\n    initialize() {\n        this._model.initialize();\n    }\n    setActive(isActive) {\n        super.setActive(isActive);\n        this.model.setActive(isActive);\n    }\n    layout(width, height) {\n        super.layout(width, height);\n        this.model.layout(width, height);\n    }\n    getComponent() {\n        return this._model;\n    }\n    toJSON() {\n        return this.model.toJSON();\n    }\n}\n","import { Emitter } from '../events';\nimport { GridviewPanelApiImpl } from './gridviewPanelApi';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class DockviewPanelApiImpl extends GridviewPanelApiImpl {\n    get location() {\n        return this.group.api.location;\n    }\n    get title() {\n        return this.panel.title;\n    }\n    get isGroupActive() {\n        return this.group.isActive;\n    }\n    get renderer() {\n        return this.panel.renderer;\n    }\n    set group(value) {\n        const oldGroup = this._group;\n        if (this._group !== value) {\n            this._group = value;\n            this._onDidGroupChange.fire({});\n            this.setupGroupEventListeners(oldGroup);\n            this._onDidLocationChange.fire({\n                location: this.group.api.location,\n            });\n        }\n    }\n    get group() {\n        return this._group;\n    }\n    get tabComponent() {\n        return this._tabComponent;\n    }\n    constructor(panel, group, accessor, component, tabComponent) {\n        super(panel.id, component);\n        this.panel = panel;\n        this.accessor = accessor;\n        this._onDidTitleChange = new Emitter();\n        this.onDidTitleChange = this._onDidTitleChange.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._onDidGroupChange = new Emitter();\n        this.onDidGroupChange = this._onDidGroupChange.event;\n        this._onDidRendererChange = new Emitter();\n        this.onDidRendererChange = this._onDidRendererChange.event;\n        this._onDidLocationChange = new Emitter();\n        this.onDidLocationChange = this._onDidLocationChange.event;\n        this.groupEventsDisposable = new MutableDisposable();\n        this._tabComponent = tabComponent;\n        this.initialize(panel);\n        this._group = group;\n        this.setupGroupEventListeners();\n        this.addDisposables(this.groupEventsDisposable, this._onDidRendererChange, this._onDidTitleChange, this._onDidGroupChange, this._onDidActiveGroupChange, this._onDidLocationChange);\n    }\n    getWindow() {\n        return this.group.api.getWindow();\n    }\n    moveTo(options) {\n        var _a, _b;\n        this.accessor.moveGroupOrPanel({\n            from: { groupId: this._group.id, panelId: this.panel.id },\n            to: {\n                group: (_a = options.group) !== null && _a !== void 0 ? _a : this._group,\n                position: options.group\n                    ? (_b = options.position) !== null && _b !== void 0 ? _b : 'center'\n                    : 'center',\n                index: options.index,\n            },\n        });\n    }\n    setTitle(title) {\n        this.panel.setTitle(title);\n    }\n    setRenderer(renderer) {\n        this.panel.setRenderer(renderer);\n    }\n    close() {\n        this.group.model.closePanel(this.panel);\n    }\n    maximize() {\n        this.group.api.maximize();\n    }\n    isMaximized() {\n        return this.group.api.isMaximized();\n    }\n    exitMaximized() {\n        this.group.api.exitMaximized();\n    }\n    setupGroupEventListeners(previousGroup) {\n        var _a;\n        let _trackGroupActive = (_a = previousGroup === null || previousGroup === void 0 ? void 0 : previousGroup.isActive) !== null && _a !== void 0 ? _a : false; // prevent duplicate events with same state\n        this.groupEventsDisposable.value = new CompositeDisposable(this.group.api.onDidVisibilityChange((event) => {\n            const hasBecomeHidden = !event.isVisible && this.isVisible;\n            const hasBecomeVisible = event.isVisible && !this.isVisible;\n            const isActivePanel = this.group.model.isPanelActive(this.panel);\n            if (hasBecomeHidden || (hasBecomeVisible && isActivePanel)) {\n                this._onDidVisibilityChange.fire(event);\n            }\n        }), this.group.api.onDidLocationChange((event) => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            this._onDidLocationChange.fire(event);\n        }), this.group.api.onDidActiveChange(() => {\n            if (this.group !== this.panel.group) {\n                return;\n            }\n            if (_trackGroupActive !== this.isGroupActive) {\n                _trackGroupActive = this.isGroupActive;\n                this._onDidActiveGroupChange.fire({\n                    isActive: this.isGroupActive,\n                });\n            }\n        }));\n    }\n}\n","import { DockviewPanelApiImpl, } from '../api/dockviewPanelApi';\nimport { CompositeDisposable } from '../lifecycle';\nimport { WillFocusEvent } from '../api/panelApi';\nexport class DockviewPanel extends CompositeDisposable {\n    get params() {\n        return this._params;\n    }\n    get title() {\n        return this._title;\n    }\n    get group() {\n        return this._group;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this._renderer) !== null && _a !== void 0 ? _a : this.accessor.renderer;\n    }\n    get minimumWidth() {\n        return this._minimumWidth;\n    }\n    get minimumHeight() {\n        return this._minimumHeight;\n    }\n    get maximumWidth() {\n        return this._maximumWidth;\n    }\n    get maximumHeight() {\n        return this._maximumHeight;\n    }\n    constructor(id, component, tabComponent, accessor, containerApi, group, view, options) {\n        super();\n        this.id = id;\n        this.accessor = accessor;\n        this.containerApi = containerApi;\n        this.view = view;\n        this._renderer = options.renderer;\n        this._group = group;\n        this._minimumWidth = options.minimumWidth;\n        this._minimumHeight = options.minimumHeight;\n        this._maximumWidth = options.maximumWidth;\n        this._maximumHeight = options.maximumHeight;\n        this.api = new DockviewPanelApiImpl(this, this._group, accessor, component, tabComponent);\n        this.addDisposables(this.api.onActiveChange(() => {\n            accessor.setActivePanel(this);\n        }), this.api.onDidSizeChange((event) => {\n            // forward the resize event to the group since if you want to resize a panel\n            // you are actually just resizing the panels parent which is the group\n            this.group.api.setSize(event);\n        }), this.api.onDidRendererChange(() => {\n            this.group.model.rerender(this);\n        }));\n    }\n    init(params) {\n        this._params = params.params;\n        this.view.init(Object.assign(Object.assign({}, params), { api: this.api, containerApi: this.containerApi }));\n        this.setTitle(params.title);\n    }\n    focus() {\n        const event = new WillFocusEvent();\n        this.api._onWillFocus.fire(event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (!this.api.isActive) {\n            this.api.setActive();\n        }\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            contentComponent: this.view.contentComponent,\n            tabComponent: this.view.tabComponent,\n            params: Object.keys(this._params || {}).length > 0\n                ? this._params\n                : undefined,\n            title: this.title,\n            renderer: this._renderer,\n            minimumHeight: this._minimumHeight,\n            maximumHeight: this._maximumHeight,\n            minimumWidth: this._minimumWidth,\n            maximumWidth: this._maximumWidth,\n        };\n    }\n    setTitle(title) {\n        const didTitleChange = title !== this.title;\n        if (didTitleChange) {\n            this._title = title;\n            this.api._onDidTitleChange.fire({ title });\n        }\n    }\n    setRenderer(renderer) {\n        const didChange = renderer !== this.renderer;\n        if (didChange) {\n            this._renderer = renderer;\n            this.api._onDidRendererChange.fire({\n                renderer: renderer,\n            });\n        }\n    }\n    update(event) {\n        var _a;\n        // merge the new parameters with the existing parameters\n        this._params = Object.assign(Object.assign({}, ((_a = this._params) !== null && _a !== void 0 ? _a : {})), event.params);\n        /**\n         * delete new keys that have a value of undefined,\n         * allow values of null\n         */\n        for (const key of Object.keys(event.params)) {\n            if (event.params[key] === undefined) {\n                delete this._params[key];\n            }\n        }\n        // update the view with the updated props\n        this.view.update({\n            params: this._params,\n        });\n    }\n    updateParentGroup(group, options) {\n        this._group = group;\n        this.api.group = this._group;\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (!(options === null || options === void 0 ? void 0 : options.skipSetActive)) {\n            if (this.api.isActive !== isActive) {\n                this.api._onDidActiveChange.fire({\n                    isActive: this.group.api.isActive && isPanelVisible,\n                });\n            }\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    runEvents() {\n        const isPanelVisible = this._group.model.isPanelActive(this);\n        const isActive = this.group.api.isActive && isPanelVisible;\n        if (this.api.isActive !== isActive) {\n            this.api._onDidActiveChange.fire({\n                isActive: this.group.api.isActive && isPanelVisible,\n            });\n        }\n        if (this.api.isVisible !== isPanelVisible) {\n            this.api._onDidVisibilityChange.fire({\n                isVisible: isPanelVisible,\n            });\n        }\n    }\n    layout(width, height) {\n        // TODO: Can we somehow do height without header height or indicate what the header height is?\n        this.api._onDidDimensionChange.fire({\n            width,\n            height: height,\n        });\n        this.view.layout(width, height);\n    }\n    dispose() {\n        this.api.dispose();\n        this.view.dispose();\n    }\n}\n","const createSvgElementFromPath = (params) => {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'height', params.height);\n    svg.setAttributeNS(null, 'width', params.width);\n    svg.setAttributeNS(null, 'viewBox', params.viewbox);\n    svg.setAttributeNS(null, 'aria-hidden', 'false');\n    svg.setAttributeNS(null, 'focusable', 'false');\n    svg.classList.add('dv-svg');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttributeNS(null, 'd', params.path);\n    svg.appendChild(path);\n    return svg;\n};\nexport const createCloseButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 28 28',\n    path: 'M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z',\n});\nexport const createExpandMoreButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 24 15',\n    path: 'M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z',\n});\nexport const createChevronRightButton = () => createSvgElementFromPath({\n    width: '11',\n    height: '11',\n    viewbox: '0 0 15 25',\n    path: 'M2.15 24.1L0 21.95L9.9 12.05L0 2.15L2.15 0L14.2 12.05L2.15 24.1Z',\n});\n","import { CompositeDisposable } from '../../../lifecycle';\nimport { addDisposableListener } from '../../../events';\nimport { createCloseButton } from '../../../svg';\nexport class DefaultTab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-default-tab';\n        this._content = document.createElement('div');\n        this._content.className = 'dv-default-tab-content';\n        this.action = document.createElement('div');\n        this.action.className = 'dv-default-tab-action';\n        this.action.appendChild(createCloseButton());\n        this._element.appendChild(this._content);\n        this._element.appendChild(this.action);\n        this.render();\n    }\n    init(params) {\n        this._title = params.title;\n        this.addDisposables(params.api.onDidTitleChange((event) => {\n            this._title = event.title;\n            this.render();\n        }), addDisposableListener(this.action, 'pointerdown', (ev) => {\n            ev.preventDefault();\n        }), addDisposableListener(this.action, 'click', (ev) => {\n            if (ev.defaultPrevented) {\n                return;\n            }\n            ev.preventDefault();\n            params.api.close();\n        }));\n        this.render();\n    }\n    render() {\n        var _a;\n        if (this._content.textContent !== this._title) {\n            this._content.textContent = (_a = this._title) !== null && _a !== void 0 ? _a : '';\n        }\n    }\n}\n","import { DefaultTab } from './components/tab/defaultTab';\nexport class DockviewPanelModel {\n    get content() {\n        return this._content;\n    }\n    get tab() {\n        return this._tab;\n    }\n    constructor(accessor, id, contentComponent, tabComponent) {\n        this.accessor = accessor;\n        this.id = id;\n        this.contentComponent = contentComponent;\n        this.tabComponent = tabComponent;\n        this._content = this.createContentComponent(this.id, contentComponent);\n        this._tab = this.createTabComponent(this.id, tabComponent);\n    }\n    init(params) {\n        this.content.init(params);\n        this.tab.init(params);\n    }\n    updateParentGroup(_group, _isPanelVisible) {\n        // noop\n    }\n    layout(width, height) {\n        var _a, _b;\n        (_b = (_a = this.content).layout) === null || _b === void 0 ? void 0 : _b.call(_a, width, height);\n    }\n    update(event) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).update) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n        (_d = (_c = this.tab).update) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.content).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n        (_d = (_c = this.tab).dispose) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    createContentComponent(id, componentName) {\n        return this.accessor.options.createComponent({\n            id,\n            name: componentName,\n        });\n    }\n    createTabComponent(id, componentName) {\n        const name = componentName !== null && componentName !== void 0 ? componentName : this.accessor.options.defaultTabComponent;\n        if (name) {\n            if (this.accessor.options.createTabComponent) {\n                const component = this.accessor.options.createTabComponent({\n                    id,\n                    name,\n                });\n                if (component) {\n                    return component;\n                }\n                else {\n                    return new DefaultTab();\n                }\n            }\n            console.warn(`dockview: tabComponent '${componentName}' was not found. falling back to the default tab.`);\n        }\n        return new DefaultTab();\n    }\n}\n","import { DockviewPanel } from './dockviewPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { DockviewApi } from '../api/component.api';\nexport class DefaultDockviewDeserialzier {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    fromJSON(panelData, group) {\n        var _a, _b;\n        const panelId = panelData.id;\n        const params = panelData.params;\n        const title = panelData.title;\n        const viewData = panelData.view;\n        const contentComponent = viewData\n            ? viewData.content.id\n            : (_a = panelData.contentComponent) !== null && _a !== void 0 ? _a : 'unknown';\n        const tabComponent = viewData\n            ? (_b = viewData.tab) === null || _b === void 0 ? void 0 : _b.id\n            : panelData.tabComponent;\n        const view = new DockviewPanelModel(this.accessor, panelId, contentComponent, tabComponent);\n        const panel = new DockviewPanel(panelId, contentComponent, tabComponent, this.accessor, new DockviewApi(this.accessor), group, view, {\n            renderer: panelData.renderer,\n            minimumWidth: panelData.minimumWidth,\n            minimumHeight: panelData.minimumHeight,\n            maximumWidth: panelData.maximumWidth,\n            maximumHeight: panelData.maximumHeight,\n        });\n        panel.init({\n            title: title !== null && title !== void 0 ? title : panelId,\n            params: params !== null && params !== void 0 ? params : {},\n        });\n        return panel;\n    }\n}\n","import { CompositeDisposable } from '../../../lifecycle';\nexport class Watermark extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-watermark';\n    }\n    init(_params) {\n        // noop\n    }\n}\n","import { disableIframePointEvents, quasiDefaultPrevented, toggleClass, } from '../dom';\nimport { Emitter, addDisposableListener, addDisposableWindowListener, } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { clamp } from '../math';\nclass AriaLevelTracker {\n    constructor() {\n        this._orderedList = [];\n    }\n    push(element) {\n        this._orderedList = [\n            ...this._orderedList.filter((item) => item !== element),\n            element,\n        ];\n        this.update();\n    }\n    destroy(element) {\n        this._orderedList = this._orderedList.filter((item) => item !== element);\n        this.update();\n    }\n    update() {\n        for (let i = 0; i < this._orderedList.length; i++) {\n            this._orderedList[i].setAttribute('aria-level', `${i}`);\n            this._orderedList[i].style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${i * 2})`;\n        }\n    }\n}\nconst arialLevelTracker = new AriaLevelTracker();\nexport class Overlay extends CompositeDisposable {\n    set minimumInViewportWidth(value) {\n        this.options.minimumInViewportWidth = value;\n    }\n    set minimumInViewportHeight(value) {\n        this.options.minimumInViewportHeight = value;\n    }\n    get element() {\n        return this._element;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n        this._element = document.createElement('div');\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeEnd = new Emitter();\n        this.onDidChangeEnd = this._onDidChangeEnd.event;\n        this.addDisposables(this._onDidChange, this._onDidChangeEnd);\n        this._element.className = 'dv-resize-container';\n        this._isVisible = true;\n        this.setupResize('top');\n        this.setupResize('bottom');\n        this.setupResize('left');\n        this.setupResize('right');\n        this.setupResize('topleft');\n        this.setupResize('topright');\n        this.setupResize('bottomleft');\n        this.setupResize('bottomright');\n        this._element.appendChild(this.options.content);\n        this.options.container.appendChild(this._element);\n        // if input bad resize within acceptable boundaries\n        this.setBounds(Object.assign(Object.assign(Object.assign(Object.assign({ height: this.options.height, width: this.options.width }, ('top' in this.options && { top: this.options.top })), ('bottom' in this.options && { bottom: this.options.bottom })), ('left' in this.options && { left: this.options.left })), ('right' in this.options && { right: this.options.right })));\n        arialLevelTracker.push(this._element);\n    }\n    setVisible(isVisible) {\n        if (isVisible === this.isVisible) {\n            return;\n        }\n        this._isVisible = isVisible;\n        toggleClass(this.element, 'dv-hidden', !this.isVisible);\n    }\n    bringToFront() {\n        arialLevelTracker.push(this._element);\n    }\n    setBounds(bounds = {}) {\n        if (typeof bounds.height === 'number') {\n            this._element.style.height = `${bounds.height}px`;\n        }\n        if (typeof bounds.width === 'number') {\n            this._element.style.width = `${bounds.width}px`;\n        }\n        if ('top' in bounds && typeof bounds.top === 'number') {\n            this._element.style.top = `${bounds.top}px`;\n            this._element.style.bottom = 'auto';\n            this.verticalAlignment = 'top';\n        }\n        if ('bottom' in bounds && typeof bounds.bottom === 'number') {\n            this._element.style.bottom = `${bounds.bottom}px`;\n            this._element.style.top = 'auto';\n            this.verticalAlignment = 'bottom';\n        }\n        if ('left' in bounds && typeof bounds.left === 'number') {\n            this._element.style.left = `${bounds.left}px`;\n            this._element.style.right = 'auto';\n            this.horiziontalAlignment = 'left';\n        }\n        if ('right' in bounds && typeof bounds.right === 'number') {\n            this._element.style.right = `${bounds.right}px`;\n            this._element.style.left = 'auto';\n            this.horiziontalAlignment = 'right';\n        }\n        const containerRect = this.options.container.getBoundingClientRect();\n        const overlayRect = this._element.getBoundingClientRect();\n        // region: ensure bounds within allowable limits\n        // a minimum width of minimumViewportWidth must be inside the viewport\n        const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n        // a minimum height of minimumViewportHeight must be inside the viewport\n        const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n        if (this.verticalAlignment === 'top') {\n            const top = clamp(overlayRect.top - containerRect.top, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.top = `${top}px`;\n            this._element.style.bottom = 'auto';\n        }\n        if (this.verticalAlignment === 'bottom') {\n            const bottom = clamp(containerRect.bottom - overlayRect.bottom, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n            this._element.style.bottom = `${bottom}px`;\n            this._element.style.top = 'auto';\n        }\n        if (this.horiziontalAlignment === 'left') {\n            const left = clamp(overlayRect.left - containerRect.left, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.left = `${left}px`;\n            this._element.style.right = 'auto';\n        }\n        if (this.horiziontalAlignment === 'right') {\n            const right = clamp(containerRect.right - overlayRect.right, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n            this._element.style.right = `${right}px`;\n            this._element.style.left = 'auto';\n        }\n        this._onDidChange.fire();\n    }\n    toJSON() {\n        const container = this.options.container.getBoundingClientRect();\n        const element = this._element.getBoundingClientRect();\n        const result = {};\n        if (this.verticalAlignment === 'top') {\n            result.top = parseFloat(this._element.style.top);\n        }\n        else if (this.verticalAlignment === 'bottom') {\n            result.bottom = parseFloat(this._element.style.bottom);\n        }\n        else {\n            result.top = element.top - container.top;\n        }\n        if (this.horiziontalAlignment === 'left') {\n            result.left = parseFloat(this._element.style.left);\n        }\n        else if (this.horiziontalAlignment === 'right') {\n            result.right = parseFloat(this._element.style.right);\n        }\n        else {\n            result.left = element.left - container.left;\n        }\n        result.width = element.width;\n        result.height = element.height;\n        return result;\n    }\n    setupDrag(dragTarget, options = { inDragMode: false }) {\n        const move = new MutableDisposable();\n        const track = () => {\n            let offset = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable({\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const x = e.clientX - containerRect.left;\n                const y = e.clientY - containerRect.top;\n                toggleClass(this._element, 'dv-resize-container-dragging', true);\n                const overlayRect = this._element.getBoundingClientRect();\n                if (offset === null) {\n                    offset = {\n                        x: e.clientX - overlayRect.left,\n                        y: e.clientY - overlayRect.top,\n                    };\n                }\n                const xOffset = Math.max(0, this.getMinimumWidth(overlayRect.width));\n                const yOffset = Math.max(0, this.getMinimumHeight(overlayRect.height));\n                const top = clamp(y - offset.y, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const bottom = clamp(offset.y -\n                    y +\n                    containerRect.height -\n                    overlayRect.height, -yOffset, Math.max(0, containerRect.height - overlayRect.height + yOffset));\n                const left = clamp(x - offset.x, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const right = clamp(offset.x - x + containerRect.width - overlayRect.width, -xOffset, Math.max(0, containerRect.width - overlayRect.width + xOffset));\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                this.setBounds(bounds);\n            }), addDisposableWindowListener(window, 'pointerup', () => {\n                toggleClass(this._element, 'dv-resize-container-dragging', false);\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        };\n        this.addDisposables(move, addDisposableListener(dragTarget, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                event.preventDefault();\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            track();\n        }), addDisposableListener(this.options.content, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            // if somebody has marked this event then treat as a defaultPrevented\n            // without actually calling event.preventDefault()\n            if (quasiDefaultPrevented(event)) {\n                return;\n            }\n            if (event.shiftKey) {\n                track();\n            }\n        }), addDisposableListener(this.options.content, 'pointerdown', () => {\n            arialLevelTracker.push(this._element);\n        }, true));\n        if (options.inDragMode) {\n            track();\n        }\n    }\n    setupResize(direction) {\n        const resizeHandleElement = document.createElement('div');\n        resizeHandleElement.className = `dv-resize-handle-${direction}`;\n        this._element.appendChild(resizeHandleElement);\n        const move = new MutableDisposable();\n        this.addDisposables(move, addDisposableListener(resizeHandleElement, 'pointerdown', (e) => {\n            e.preventDefault();\n            let startPosition = null;\n            const iframes = disableIframePointEvents();\n            move.value = new CompositeDisposable(addDisposableWindowListener(window, 'pointermove', (e) => {\n                const containerRect = this.options.container.getBoundingClientRect();\n                const overlayRect = this._element.getBoundingClientRect();\n                const y = e.clientY - containerRect.top;\n                const x = e.clientX - containerRect.left;\n                if (startPosition === null) {\n                    // record the initial dimensions since as all subsequence moves are relative to this\n                    startPosition = {\n                        originalY: y,\n                        originalHeight: overlayRect.height,\n                        originalX: x,\n                        originalWidth: overlayRect.width,\n                    };\n                }\n                let top = undefined;\n                let bottom = undefined;\n                let height = undefined;\n                let left = undefined;\n                let right = undefined;\n                let width = undefined;\n                const moveTop = () => {\n                    top = clamp(y, -Number.MAX_VALUE, startPosition.originalY +\n                        startPosition.originalHeight >\n                        containerRect.height\n                        ? this.getMinimumHeight(containerRect.height)\n                        : Math.max(0, startPosition.originalY +\n                            startPosition.originalHeight -\n                            Overlay.MINIMUM_HEIGHT));\n                    height =\n                        startPosition.originalY +\n                            startPosition.originalHeight -\n                            top;\n                    bottom = containerRect.height - top - height;\n                };\n                const moveBottom = () => {\n                    top =\n                        startPosition.originalY -\n                            startPosition.originalHeight;\n                    height = clamp(y - top, top < 0 &&\n                        typeof this.options\n                            .minimumInViewportHeight === 'number'\n                        ? -top +\n                            this.options.minimumInViewportHeight\n                        : Overlay.MINIMUM_HEIGHT, Number.MAX_VALUE);\n                    bottom = containerRect.height - top - height;\n                };\n                const moveLeft = () => {\n                    left = clamp(x, -Number.MAX_VALUE, startPosition.originalX +\n                        startPosition.originalWidth >\n                        containerRect.width\n                        ? this.getMinimumWidth(containerRect.width)\n                        : Math.max(0, startPosition.originalX +\n                            startPosition.originalWidth -\n                            Overlay.MINIMUM_WIDTH));\n                    width =\n                        startPosition.originalX +\n                            startPosition.originalWidth -\n                            left;\n                    right = containerRect.width - left - width;\n                };\n                const moveRight = () => {\n                    left =\n                        startPosition.originalX -\n                            startPosition.originalWidth;\n                    width = clamp(x - left, left < 0 &&\n                        typeof this.options\n                            .minimumInViewportWidth === 'number'\n                        ? -left +\n                            this.options.minimumInViewportWidth\n                        : Overlay.MINIMUM_WIDTH, Number.MAX_VALUE);\n                    right = containerRect.width - left - width;\n                };\n                switch (direction) {\n                    case 'top':\n                        moveTop();\n                        break;\n                    case 'bottom':\n                        moveBottom();\n                        break;\n                    case 'left':\n                        moveLeft();\n                        break;\n                    case 'right':\n                        moveRight();\n                        break;\n                    case 'topleft':\n                        moveTop();\n                        moveLeft();\n                        break;\n                    case 'topright':\n                        moveTop();\n                        moveRight();\n                        break;\n                    case 'bottomleft':\n                        moveBottom();\n                        moveLeft();\n                        break;\n                    case 'bottomright':\n                        moveBottom();\n                        moveRight();\n                        break;\n                }\n                const bounds = {};\n                // Anchor to top or to bottom depending on which one is closer\n                if (top <= bottom) {\n                    bounds.top = top;\n                }\n                else {\n                    bounds.bottom = bottom;\n                }\n                // Anchor to left or to right depending on which one is closer\n                if (left <= right) {\n                    bounds.left = left;\n                }\n                else {\n                    bounds.right = right;\n                }\n                bounds.height = height;\n                bounds.width = width;\n                this.setBounds(bounds);\n            }), {\n                dispose: () => {\n                    iframes.release();\n                },\n            }, addDisposableWindowListener(window, 'pointerup', () => {\n                move.dispose();\n                this._onDidChangeEnd.fire();\n            }));\n        }));\n    }\n    getMinimumWidth(width) {\n        if (typeof this.options.minimumInViewportWidth === 'number') {\n            return width - this.options.minimumInViewportWidth;\n        }\n        return 0;\n    }\n    getMinimumHeight(height) {\n        if (typeof this.options.minimumInViewportHeight === 'number') {\n            return height - this.options.minimumInViewportHeight;\n        }\n        return 0;\n    }\n    dispose() {\n        arialLevelTracker.destroy(this._element);\n        this._element.remove();\n        super.dispose();\n    }\n}\nOverlay.MINIMUM_HEIGHT = 20;\nOverlay.MINIMUM_WIDTH = 20;\n","import { CompositeDisposable } from '../lifecycle';\nexport class DockviewFloatingGroupPanel extends CompositeDisposable {\n    constructor(group, overlay) {\n        super();\n        this.group = group;\n        this.overlay = overlay;\n        this.addDisposables(overlay);\n    }\n    position(bounds) {\n        this.overlay.setBounds(bounds);\n    }\n}\n","export const DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE = 100;\nexport const DEFAULT_FLOATING_GROUP_POSITION = { left: 100, top: 100, width: 300, height: 300 };\n","import { DragAndDropObserver } from '../dnd/dnd';\nimport { getDomNodePagePosition, toggleClass } from '../dom';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../lifecycle';\nfunction createFocusableElement() {\n    const element = document.createElement('div');\n    element.tabIndex = -1;\n    return element;\n}\nexport class OverlayRenderContainer extends CompositeDisposable {\n    constructor(element, accessor) {\n        super();\n        this.element = element;\n        this.accessor = accessor;\n        this.map = {};\n        this._disposed = false;\n        this.addDisposables(Disposable.from(() => {\n            for (const value of Object.values(this.map)) {\n                value.disposable.dispose();\n                value.destroy.dispose();\n            }\n            this._disposed = true;\n        }));\n    }\n    detatch(panel) {\n        if (this.map[panel.api.id]) {\n            const { disposable, destroy } = this.map[panel.api.id];\n            disposable.dispose();\n            destroy.dispose();\n            delete this.map[panel.api.id];\n            return true;\n        }\n        return false;\n    }\n    attach(options) {\n        const { panel, referenceContainer } = options;\n        if (!this.map[panel.api.id]) {\n            const element = createFocusableElement();\n            element.className = 'dv-render-overlay';\n            this.map[panel.api.id] = {\n                panel,\n                disposable: Disposable.NONE,\n                destroy: Disposable.NONE,\n                element,\n            };\n        }\n        const focusContainer = this.map[panel.api.id].element;\n        if (panel.view.content.element.parentElement !== focusContainer) {\n            focusContainer.appendChild(panel.view.content.element);\n        }\n        if (focusContainer.parentElement !== this.element) {\n            this.element.appendChild(focusContainer);\n        }\n        const resize = () => {\n            // TODO propagate position to avoid getDomNodePagePosition calls, possible performance bottleneck?\n            const box = getDomNodePagePosition(referenceContainer.element);\n            const box2 = getDomNodePagePosition(this.element);\n            focusContainer.style.left = `${box.left - box2.left}px`;\n            focusContainer.style.top = `${box.top - box2.top}px`;\n            focusContainer.style.width = `${box.width}px`;\n            focusContainer.style.height = `${box.height}px`;\n            toggleClass(focusContainer, 'dv-render-overlay-float', panel.group.api.location.type === 'floating');\n        };\n        const visibilityChanged = () => {\n            if (panel.api.isVisible) {\n                resize();\n            }\n            focusContainer.style.display = panel.api.isVisible ? '' : 'none';\n        };\n        const observerDisposable = new MutableDisposable();\n        const correctLayerPosition = () => {\n            if (panel.api.location.type === 'floating') {\n                queueMicrotask(() => {\n                    const floatingGroup = this.accessor.floatingGroups.find((group) => group.group === panel.api.group);\n                    if (!floatingGroup) {\n                        return;\n                    }\n                    const element = floatingGroup.overlay.element;\n                    const update = () => {\n                        const level = Number(element.getAttribute('aria-level'));\n                        focusContainer.style.zIndex = `calc(var(--dv-overlay-z-index, 999) + ${level * 2 + 1})`;\n                    };\n                    const observer = new MutationObserver(() => {\n                        update();\n                    });\n                    observerDisposable.value = Disposable.from(() => observer.disconnect());\n                    observer.observe(element, {\n                        attributeFilter: ['aria-level'],\n                        attributes: true,\n                    });\n                    update();\n                });\n            }\n            else {\n                focusContainer.style.zIndex = ''; // reset the z-index, perhaps CSS will take over here\n            }\n        };\n        const disposable = new CompositeDisposable(observerDisposable, \n        /**\n         * since container is positioned absoutely we must explicitly forward\n         * the dnd events for the expect behaviours to continue to occur in terms of dnd\n         *\n         * the dnd observer does not need to be conditional on whether the panel is visible since\n         * non-visible panels are 'display: none' and in such case the dnd observer will not fire.\n         */\n        new DragAndDropObserver(focusContainer, {\n            onDragEnd: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnd(e);\n            },\n            onDragEnter: (e) => {\n                referenceContainer.dropTarget.dnd.onDragEnter(e);\n            },\n            onDragLeave: (e) => {\n                referenceContainer.dropTarget.dnd.onDragLeave(e);\n            },\n            onDrop: (e) => {\n                referenceContainer.dropTarget.dnd.onDrop(e);\n            },\n            onDragOver: (e) => {\n                referenceContainer.dropTarget.dnd.onDragOver(e);\n            },\n        }), panel.api.onDidVisibilityChange(() => {\n            /**\n             * Control the visibility of the content, however even when not visible (display: none)\n             * the content is still maintained within the DOM hence DOM specific attributes\n             * such as scroll position are maintained when next made visible.\n             */\n            visibilityChanged();\n        }), panel.api.onDidDimensionsChange(() => {\n            if (!panel.api.isVisible) {\n                return;\n            }\n            resize();\n        }), panel.api.onDidLocationChange(() => {\n            correctLayerPosition();\n        }));\n        this.map[panel.api.id].destroy = Disposable.from(() => {\n            var _a;\n            if (panel.view.content.element.parentElement === focusContainer) {\n                focusContainer.removeChild(panel.view.content.element);\n            }\n            (_a = focusContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(focusContainer);\n        });\n        correctLayerPosition();\n        queueMicrotask(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            /**\n             * wait until everything has finished in the current stack-frame call before\n             * calling the first resize as other size-altering events may still occur before\n             * the end of the stack-frame.\n             */\n            visibilityChanged();\n        });\n        // dispose of logic asoccciated with previous reference-container\n        this.map[panel.api.id].disposable.dispose();\n        // and reset the disposable to the active reference-container\n        this.map[panel.api.id].disposable = disposable;\n        return focusContainer;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addStyles } from './dom';\nimport { Emitter, addDisposableWindowListener } from './events';\nimport { CompositeDisposable, Disposable } from './lifecycle';\nexport class PopoutWindow extends CompositeDisposable {\n    get window() {\n        var _a, _b;\n        return (_b = (_a = this._window) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n    constructor(target, className, options) {\n        super();\n        this.target = target;\n        this.className = className;\n        this.options = options;\n        this._onWillClose = new Emitter();\n        this.onWillClose = this._onWillClose.event;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._window = null;\n        this.addDisposables(this._onWillClose, this._onDidClose, {\n            dispose: () => {\n                this.close();\n            },\n        });\n    }\n    dimensions() {\n        if (!this._window) {\n            return null;\n        }\n        const left = this._window.value.screenX;\n        const top = this._window.value.screenY;\n        const width = this._window.value.innerWidth;\n        const height = this._window.value.innerHeight;\n        return { top, left, width, height };\n    }\n    close() {\n        var _a, _b;\n        if (this._window) {\n            this._onWillClose.fire();\n            (_b = (_a = this.options).onWillClose) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: this._window.value,\n            });\n            this._window.disposable.dispose();\n            this._window = null;\n            this._onDidClose.fire();\n        }\n    }\n    open() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._window) {\n                throw new Error('instance of popout window is already open');\n            }\n            const url = `${this.options.url}`;\n            const features = Object.entries({\n                top: this.options.top,\n                left: this.options.left,\n                width: this.options.width,\n                height: this.options.height,\n            })\n                .map(([key, value]) => `${key}=${value}`)\n                .join(',');\n            /**\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open\n             */\n            const externalWindow = window.open(url, this.target, features);\n            if (!externalWindow) {\n                /**\n                 * Popup blocked\n                 */\n                return null;\n            }\n            const disposable = new CompositeDisposable();\n            this._window = { value: externalWindow, disposable };\n            disposable.addDisposables(Disposable.from(() => {\n                externalWindow.close();\n            }), addDisposableWindowListener(window, 'beforeunload', () => {\n                /**\n                 * before the main window closes we should close this popup too\n                 * to be good citizens\n                 *\n                 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                 */\n                this.close();\n            }));\n            const container = this.createPopoutWindowContainer();\n            if (this.className) {\n                container.classList.add(this.className);\n            }\n            (_b = (_a = this.options).onDidOpen) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                id: this.target,\n                window: externalWindow,\n            });\n            return new Promise((resolve, reject) => {\n                externalWindow.addEventListener('unload', (e) => {\n                    // if page fails to load before unloading\n                    // this.close();\n                });\n                externalWindow.addEventListener('load', () => {\n                    /**\n                     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\n                     */\n                    try {\n                        const externalDocument = externalWindow.document;\n                        externalDocument.title = document.title;\n                        externalDocument.body.appendChild(container);\n                        addStyles(externalDocument, window.document.styleSheets);\n                        /**\n                         * beforeunload must be registered after load for reasons I could not determine\n                         * otherwise the beforeunload event will not fire when the window is closed\n                         */\n                        addDisposableWindowListener(externalWindow, 'beforeunload', () => {\n                            /**\n                             * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event\n                             */\n                            this.close();\n                        });\n                        resolve(container);\n                    }\n                    catch (err) {\n                        // only except this is the DOM isn't setup. e.g. in a in correctly configured test\n                        reject(err);\n                    }\n                });\n            });\n        });\n    }\n    createPopoutWindowContainer() {\n        const el = document.createElement('div');\n        el.classList.add('dv-popout-window');\n        el.id = 'dv-popout-window';\n        el.style.position = 'absolute';\n        el.style.width = '100%';\n        el.style.height = '100%';\n        el.style.top = '0px';\n        el.style.left = '0px';\n        return el;\n    }\n}\n","import { CompositeDisposable } from '../lifecycle';\nexport class StrictEventsSequencing extends CompositeDisposable {\n    constructor(accessor) {\n        super();\n        this.accessor = accessor;\n        this.init();\n    }\n    init() {\n        const panels = new Set();\n        const groups = new Set();\n        this.addDisposables(this.accessor.onDidAddPanel((panel) => {\n            if (panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddPanel] called for panel ${panel.api.id} but panel already exists`);\n            }\n            else {\n                panels.add(panel.api.id);\n            }\n        }), this.accessor.onDidRemovePanel((panel) => {\n            if (!panels.has(panel.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemovePanel] called for panel ${panel.api.id} but panel does not exists`);\n            }\n            else {\n                panels.delete(panel.api.id);\n            }\n        }), this.accessor.onDidAddGroup((group) => {\n            if (groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidAddGroup] called for group ${group.api.id} but group already exists`);\n            }\n            else {\n                groups.add(group.api.id);\n            }\n        }), this.accessor.onDidRemoveGroup((group) => {\n            if (!groups.has(group.api.id)) {\n                throw new Error(`dockview: Invalid event sequence. [onDidRemoveGroup] called for group ${group.api.id} but group does not exists`);\n            }\n            else {\n                groups.delete(group.api.id);\n            }\n        }));\n    }\n}\n","import { getRelativeLocation, getGridLocation, orthogonal, } from '../gridview/gridview';\nimport { directionToPosition, Droptarget, } from '../dnd/droptarget';\nimport { tail, sequenceEquals, remove } from '../array';\nimport { DockviewPanel } from './dockviewPanel';\nimport { CompositeDisposable, Disposable } from '../lifecycle';\nimport { Event, Emitter, addDisposableWindowListener } from '../events';\nimport { Watermark } from './components/watermark/watermark';\nimport { sequentialNumberGenerator } from '../math';\nimport { DefaultDockviewDeserialzier } from './deserializer';\nimport { DockviewUnhandledDragOverEvent, isGroupOptionsWithGroup, isGroupOptionsWithPanel, isPanelOptionsWithGroup, isPanelOptionsWithPanel, } from './options';\nimport { BaseGrid, toTarget, } from '../gridview/baseComponentGridview';\nimport { DockviewApi } from '../api/component.api';\nimport { Orientation } from '../splitview/splitview';\nimport { DockviewDidDropEvent, DockviewWillDropEvent, WillShowOverlayLocationEvent, } from './dockviewGroupPanelModel';\nimport { DockviewGroupPanel } from './dockviewGroupPanel';\nimport { DockviewPanelModel } from './dockviewPanelModel';\nimport { getPanelData } from '../dnd/dataTransfer';\nimport { Overlay } from '../overlay/overlay';\nimport { addTestId, getDockviewTheme, toggleClass, watchElementResize, } from '../dom';\nimport { DockviewFloatingGroupPanel } from './dockviewFloatingGroupPanel';\nimport { DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, DEFAULT_FLOATING_GROUP_POSITION, } from '../constants';\nimport { OverlayRenderContainer, } from '../overlay/overlayRenderContainer';\nimport { PopoutWindow } from '../popoutWindow';\nimport { StrictEventsSequencing } from './strictEventsSequencing';\nconst DEFAULT_ROOT_OVERLAY_MODEL = {\n    activationSize: { type: 'pixels', value: 10 },\n    size: { type: 'pixels', value: 20 },\n};\nfunction moveGroupWithoutDestroying(options) {\n    const activePanel = options.from.activePanel;\n    const panels = [...options.from.panels].map((panel) => {\n        const removedPanel = options.from.model.removePanel(panel);\n        options.from.model.renderContainer.detatch(panel);\n        return removedPanel;\n    });\n    panels.forEach((panel) => {\n        options.to.model.openPanel(panel, {\n            skipSetActive: activePanel !== panel,\n            skipSetGroupActive: true,\n        });\n    });\n}\nexport class DockviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    get totalPanels() {\n        return this.panels.length;\n    }\n    get panels() {\n        return this.groups.flatMap((group) => group.panels);\n    }\n    get options() {\n        return this._options;\n    }\n    get activePanel() {\n        const activeGroup = this.activeGroup;\n        if (!activeGroup) {\n            return undefined;\n        }\n        return activeGroup.activePanel;\n    }\n    get renderer() {\n        var _a;\n        return (_a = this.options.defaultRenderer) !== null && _a !== void 0 ? _a : 'onlyWhenVisible';\n    }\n    get api() {\n        return this._api;\n    }\n    get gap() {\n        return this.gridview.margin;\n    }\n    get floatingGroups() {\n        return this._floatingGroups;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: true,\n            orientation: Orientation.HORIZONTAL,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            locked: options.locked,\n            margin: options.gap,\n            className: options.className,\n        });\n        this.nextGroupId = sequentialNumberGenerator();\n        this._deserializer = new DefaultDockviewDeserialzier(this);\n        this.watermark = null;\n        this._onWillDragPanel = new Emitter();\n        this.onWillDragPanel = this._onWillDragPanel.event;\n        this._onWillDragGroup = new Emitter();\n        this.onWillDragGroup = this._onWillDragGroup.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onWillDrop = new Emitter();\n        this.onWillDrop = this._onWillDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this._onDidRemovePanel = new Emitter();\n        this.onDidRemovePanel = this._onDidRemovePanel.event;\n        this._onDidAddPanel = new Emitter();\n        this.onDidAddPanel = this._onDidAddPanel.event;\n        this._onDidLayoutFromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutFromJSON.event;\n        this._onDidActivePanelChange = new Emitter();\n        this.onDidActivePanelChange = this._onDidActivePanelChange.event;\n        this._onDidMovePanel = new Emitter();\n        this.onDidMovePanel = this._onDidMovePanel.event;\n        this._onDidMaximizedGroupChange = new Emitter();\n        this.onDidMaximizedGroupChange = this._onDidMaximizedGroupChange.event;\n        this._floatingGroups = [];\n        this._popoutGroups = [];\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._moving = false;\n        this.overlayRenderContainer = new OverlayRenderContainer(this.gridview.element, this);\n        toggleClass(this.gridview.element, 'dv-dockview', true);\n        toggleClass(this.element, 'dv-debug', !!options.debug);\n        if (options.debug) {\n            this.addDisposables(new StrictEventsSequencing(this));\n        }\n        this.addDisposables(this.overlayRenderContainer, this._onWillDragPanel, this._onWillDragGroup, this._onWillShowOverlay, this._onDidActivePanelChange, this._onDidAddPanel, this._onDidRemovePanel, this._onDidLayoutFromJSON, this._onDidDrop, this._onWillDrop, this._onDidMovePanel, this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this._onUnhandledDragOverEvent, this._onDidMaximizedGroupChange, this.onDidViewVisibilityChangeMicroTaskQueue(() => {\n            this.updateWatermark();\n        }), this.onDidAdd((event) => {\n            if (!this._moving) {\n                this._onDidAddGroup.fire(event);\n            }\n        }), this.onDidRemove((event) => {\n            if (!this._moving) {\n                this._onDidRemoveGroup.fire(event);\n            }\n        }), this.onDidActiveChange((event) => {\n            if (!this._moving) {\n                this._onDidActiveGroupChange.fire(event);\n            }\n        }), this.onDidMaximizedChange((event) => {\n            this._onDidMaximizedGroupChange.fire({\n                group: event.panel,\n                isMaximized: event.isMaximized,\n            });\n        }), Event.any(this.onDidAdd, this.onDidRemove)(() => {\n            this.updateWatermark();\n        }), Event.any(this.onDidAddPanel, this.onDidRemovePanel, this.onDidAddGroup, this.onDidRemove, this.onDidMovePanel, this.onDidActivePanelChange)(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), Disposable.from(() => {\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._floatingGroups]) {\n                group.dispose();\n            }\n            // iterate over a copy of the array since .dispose() mutates the original array\n            for (const group of [...this._popoutGroups]) {\n                group.disposable.dispose();\n            }\n        }));\n        this._options = options;\n        this._rootDropTarget = new Droptarget(this.element, {\n            canDisplayOverlay: (event, position) => {\n                const data = getPanelData();\n                if (data) {\n                    if (data.viewId !== this.id) {\n                        return false;\n                    }\n                    if (position === 'center') {\n                        // center drop target is only allowed if there are no panels in the grid\n                        // floating panels are allowed\n                        return this.gridview.length === 0;\n                    }\n                    return true;\n                }\n                if (position === 'center' && this.gridview.length !== 0) {\n                    /**\n                     * for external events only show the four-corner drag overlays, disable\n                     * the center position so that external drag events can fall through to the group\n                     * and panel drop target handlers\n                     */\n                    return false;\n                }\n                const firedEvent = new DockviewUnhandledDragOverEvent(event, 'edge', position, getPanelData);\n                this._onUnhandledDragOverEvent.fire(firedEvent);\n                return firedEvent.isAccepted;\n            },\n            acceptedTargetZones: ['top', 'bottom', 'left', 'right', 'center'],\n            overlayModel: (_a = this.options.rootOverlayModel) !== null && _a !== void 0 ? _a : DEFAULT_ROOT_OVERLAY_MODEL,\n        });\n        this.addDisposables(this._rootDropTarget, this._rootDropTarget.onWillShowOverlay((event) => {\n            if (this.gridview.length > 0 && event.position === 'center') {\n                // option only available when no panels in primary grid\n                return;\n            }\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'edge',\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n            }));\n        }), this._rootDropTarget.onDrop((event) => {\n            var _a;\n            const willDropEvent = new DockviewWillDropEvent({\n                nativeEvent: event.nativeEvent,\n                position: event.position,\n                panel: undefined,\n                api: this._api,\n                group: undefined,\n                getData: getPanelData,\n                kind: 'edge',\n            });\n            this._onWillDrop.fire(willDropEvent);\n            if (willDropEvent.defaultPrevented) {\n                return;\n            }\n            const data = getPanelData();\n            if (data) {\n                this.moveGroupOrPanel({\n                    from: {\n                        groupId: data.groupId,\n                        panelId: (_a = data.panelId) !== null && _a !== void 0 ? _a : undefined,\n                    },\n                    to: {\n                        group: this.orthogonalize(event.position),\n                        position: 'center',\n                    },\n                });\n            }\n            else {\n                this._onDidDrop.fire(new DockviewDidDropEvent({\n                    nativeEvent: event.nativeEvent,\n                    position: event.position,\n                    panel: undefined,\n                    api: this._api,\n                    group: undefined,\n                    getData: getPanelData,\n                }));\n            }\n        }), this._rootDropTarget);\n        this._api = new DockviewApi(this);\n        this.updateWatermark();\n    }\n    setVisible(panel, visible) {\n        switch (panel.api.location.type) {\n            case 'grid':\n                super.setVisible(panel, visible);\n                break;\n            case 'floating': {\n                const item = this.floatingGroups.find((floatingGroup) => floatingGroup.group === panel);\n                if (item) {\n                    item.overlay.setVisible(visible);\n                    panel.api._onDidVisibilityChange.fire({\n                        isVisible: visible,\n                    });\n                }\n                break;\n            }\n            case 'popout':\n                console.warn('dockview: You cannot hide a group that is in a popout window');\n                break;\n        }\n    }\n    addPopoutGroup(itemToPopout, options) {\n        var _a, _b, _c, _d, _e;\n        if (itemToPopout instanceof DockviewPanel &&\n            itemToPopout.group.size === 1) {\n            return this.addPopoutGroup(itemToPopout.group, options);\n        }\n        const theme = getDockviewTheme(this.gridview.element);\n        const element = this.element;\n        function getBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                return options.position;\n            }\n            if (itemToPopout instanceof DockviewGroupPanel) {\n                return itemToPopout.element.getBoundingClientRect();\n            }\n            if (itemToPopout.group) {\n                return itemToPopout.group.element.getBoundingClientRect();\n            }\n            return element.getBoundingClientRect();\n        }\n        const box = getBox();\n        const groupId = (_b = (_a = options === null || options === void 0 ? void 0 : options.overridePopoutGroup) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : this.getNextGroupId();\n        const _window = new PopoutWindow(`${this.id}-${groupId}`, // unique id\n        theme !== null && theme !== void 0 ? theme : '', {\n            url: (_e = (_c = options === null || options === void 0 ? void 0 : options.popoutUrl) !== null && _c !== void 0 ? _c : (_d = this.options) === null || _d === void 0 ? void 0 : _d.popoutUrl) !== null && _e !== void 0 ? _e : '/popout.html',\n            left: window.screenX + box.left,\n            top: window.screenY + box.top,\n            width: box.width,\n            height: box.height,\n            onDidOpen: options === null || options === void 0 ? void 0 : options.onDidOpen,\n            onWillClose: options === null || options === void 0 ? void 0 : options.onWillClose,\n        });\n        const popoutWindowDisposable = new CompositeDisposable(_window, _window.onDidClose(() => {\n            popoutWindowDisposable.dispose();\n        }));\n        return _window\n            .open()\n            .then((popoutContainer) => {\n            var _a;\n            if (_window.isDisposed) {\n                return false;\n            }\n            if (popoutContainer === null) {\n                popoutWindowDisposable.dispose();\n                return false;\n            }\n            const gready = document.createElement('div');\n            gready.className = 'dv-overlay-render-container';\n            const overlayRenderContainer = new OverlayRenderContainer(gready, this);\n            const referenceGroup = itemToPopout instanceof DockviewPanel\n                ? itemToPopout.group\n                : itemToPopout;\n            const referenceLocation = itemToPopout.api.location.type;\n            /**\n             * The group that is being added doesn't already exist within the DOM, the most likely occurance\n             * of this case is when being called from the `fromJSON(...)` method\n             */\n            const isGroupAddedToDom = referenceGroup.element.parentElement !== null;\n            let group;\n            if (!isGroupAddedToDom) {\n                group = referenceGroup;\n            }\n            else if (options === null || options === void 0 ? void 0 : options.overridePopoutGroup) {\n                group = options.overridePopoutGroup;\n            }\n            else {\n                group = this.createGroup({ id: groupId });\n                this._onDidAddGroup.fire(group);\n            }\n            group.model.renderContainer = overlayRenderContainer;\n            group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            let floatingBox;\n            if (!(options === null || options === void 0 ? void 0 : options.overridePopoutGroup) && isGroupAddedToDom) {\n                if (itemToPopout instanceof DockviewPanel) {\n                    this.movingLock(() => {\n                        const panel = referenceGroup.model.removePanel(itemToPopout);\n                        group.model.openPanel(panel);\n                    });\n                }\n                else {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: referenceGroup,\n                        to: group,\n                    }));\n                    switch (referenceLocation) {\n                        case 'grid':\n                            referenceGroup.api.setVisible(false);\n                            break;\n                        case 'floating':\n                        case 'popout':\n                            floatingBox = (_a = this._floatingGroups\n                                .find((value) => value.group.api.id ===\n                                itemToPopout.api.id)) === null || _a === void 0 ? void 0 : _a.overlay.toJSON();\n                            this.removeGroup(referenceGroup);\n                            break;\n                    }\n                }\n            }\n            popoutContainer.classList.add('dv-dockview');\n            popoutContainer.style.overflow = 'hidden';\n            popoutContainer.appendChild(gready);\n            popoutContainer.appendChild(group.element);\n            group.model.location = {\n                type: 'popout',\n                getWindow: () => _window.window,\n                popoutUrl: options === null || options === void 0 ? void 0 : options.popoutUrl,\n            };\n            if (isGroupAddedToDom &&\n                itemToPopout.api.location.type === 'grid') {\n                itemToPopout.api.setVisible(false);\n            }\n            this.doSetGroupAndPanelActive(group);\n            popoutWindowDisposable.addDisposables(group.api.onDidActiveChange((event) => {\n                var _a;\n                if (event.isActive) {\n                    (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }), group.api.onWillFocus(() => {\n                var _a;\n                (_a = _window.window) === null || _a === void 0 ? void 0 : _a.focus();\n            }));\n            let returnedGroup;\n            const isValidReferenceGroup = isGroupAddedToDom &&\n                referenceGroup &&\n                this.getPanel(referenceGroup.id);\n            const value = {\n                window: _window,\n                popoutGroup: group,\n                referenceGroup: isValidReferenceGroup\n                    ? referenceGroup.id\n                    : undefined,\n                disposable: {\n                    dispose: () => {\n                        popoutWindowDisposable.dispose();\n                        return returnedGroup;\n                    },\n                },\n            };\n            popoutWindowDisposable.addDisposables(\n            /**\n             * ResizeObserver seems slow here, I do not know why but we don't need it\n             * since we can reply on the window resize event as we will occupy the full\n             * window dimensions\n             */\n            addDisposableWindowListener(_window.window, 'resize', () => {\n                group.layout(_window.window.innerWidth, _window.window.innerHeight);\n            }), overlayRenderContainer, Disposable.from(() => {\n                if (this.isDisposed) {\n                    return; // cleanup may run after instance is disposed\n                }\n                if (isGroupAddedToDom &&\n                    this.getPanel(referenceGroup.id)) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: group,\n                        to: referenceGroup,\n                    }));\n                    if (!referenceGroup.api.isVisible) {\n                        referenceGroup.api.setVisible(true);\n                    }\n                    if (this.getPanel(group.id)) {\n                        this.doRemoveGroup(group, {\n                            skipPopoutAssociated: true,\n                        });\n                    }\n                }\n                else if (this.getPanel(group.id)) {\n                    group.model.renderContainer =\n                        this.overlayRenderContainer;\n                    returnedGroup = group;\n                    const alreadyRemoved = !this._popoutGroups.find((p) => p.popoutGroup === group);\n                    if (alreadyRemoved) {\n                        /**\n                         * If this popout group was explicitly removed then we shouldn't run the additional\n                         * steps. To tell if the running of this disposable is the result of this popout group\n                         * being explicitly removed we can check if this popout group is still referenced in\n                         * the `this._popoutGroups` list.\n                         */\n                        return;\n                    }\n                    if (floatingBox) {\n                        this.addFloatingGroup(group, {\n                            height: floatingBox.height,\n                            width: floatingBox.width,\n                            position: floatingBox,\n                        });\n                    }\n                    else {\n                        this.doRemoveGroup(group, {\n                            skipDispose: true,\n                            skipActive: true,\n                            skipPopoutReturn: true,\n                        });\n                        group.model.location = { type: 'grid' };\n                        this.movingLock(() => {\n                            // suppress group add events since the group already exists\n                            this.doAddGroup(group, [0]);\n                        });\n                    }\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }));\n            this._popoutGroups.push(value);\n            this.updateWatermark();\n            return true;\n        })\n            .catch((err) => {\n            console.error('dockview: failed to create popout window', err);\n            return false;\n        });\n    }\n    addFloatingGroup(item, options) {\n        var _a, _b, _c, _d, _e;\n        let group;\n        if (item instanceof DockviewPanel) {\n            group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            this.movingLock(() => this.removePanel(item, {\n                removeEmptyGroup: true,\n                skipDispose: true,\n                skipSetActiveGroup: true,\n            }));\n            this.movingLock(() => group.model.openPanel(item, { skipSetGroupActive: true }));\n        }\n        else {\n            group = item;\n            const popoutReferenceGroupId = (_a = this._popoutGroups.find((_) => _.popoutGroup === group)) === null || _a === void 0 ? void 0 : _a.referenceGroup;\n            const popoutReferenceGroup = popoutReferenceGroupId\n                ? this.getPanel(popoutReferenceGroupId)\n                : undefined;\n            const skip = typeof (options === null || options === void 0 ? void 0 : options.skipRemoveGroup) === 'boolean' &&\n                options.skipRemoveGroup;\n            if (!skip) {\n                if (popoutReferenceGroup) {\n                    this.movingLock(() => moveGroupWithoutDestroying({\n                        from: item,\n                        to: popoutReferenceGroup,\n                    }));\n                    this.doRemoveGroup(item, {\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: true,\n                    });\n                    this.doRemoveGroup(popoutReferenceGroup, {\n                        skipDispose: true,\n                    });\n                    group = popoutReferenceGroup;\n                }\n                else {\n                    this.doRemoveGroup(item, {\n                        skipDispose: true,\n                        skipPopoutReturn: true,\n                        skipPopoutAssociated: false,\n                    });\n                }\n            }\n        }\n        function getAnchoredBox() {\n            if (options === null || options === void 0 ? void 0 : options.position) {\n                const result = {};\n                if ('left' in options.position) {\n                    result.left = Math.max(options.position.left, 0);\n                }\n                else if ('right' in options.position) {\n                    result.right = Math.max(options.position.right, 0);\n                }\n                else {\n                    result.left = DEFAULT_FLOATING_GROUP_POSITION.left;\n                }\n                if ('top' in options.position) {\n                    result.top = Math.max(options.position.top, 0);\n                }\n                else if ('bottom' in options.position) {\n                    result.bottom = Math.max(options.position.bottom, 0);\n                }\n                else {\n                    result.top = DEFAULT_FLOATING_GROUP_POSITION.top;\n                }\n                if (typeof options.width === 'number') {\n                    result.width = Math.max(options.width, 0);\n                }\n                else {\n                    result.width = DEFAULT_FLOATING_GROUP_POSITION.width;\n                }\n                if (typeof options.height === 'number') {\n                    result.height = Math.max(options.height, 0);\n                }\n                else {\n                    result.height = DEFAULT_FLOATING_GROUP_POSITION.height;\n                }\n                return result;\n            }\n            return {\n                left: typeof (options === null || options === void 0 ? void 0 : options.x) === 'number'\n                    ? Math.max(options.x, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.left,\n                top: typeof (options === null || options === void 0 ? void 0 : options.y) === 'number'\n                    ? Math.max(options.y, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.top,\n                width: typeof (options === null || options === void 0 ? void 0 : options.width) === 'number'\n                    ? Math.max(options.width, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.width,\n                height: typeof (options === null || options === void 0 ? void 0 : options.height) === 'number'\n                    ? Math.max(options.height, 0)\n                    : DEFAULT_FLOATING_GROUP_POSITION.height,\n            };\n        }\n        const anchoredBox = getAnchoredBox();\n        const overlay = new Overlay(Object.assign(Object.assign({ container: this.gridview.element, content: group.element }, anchoredBox), { minimumInViewportWidth: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_c = (_b = this.options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport) !== null && _c !== void 0 ? _c : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE, minimumInViewportHeight: this.options.floatingGroupBounds === 'boundedWithinViewport'\n                ? undefined\n                : (_e = (_d = this.options.floatingGroupBounds) === null || _d === void 0 ? void 0 : _d.minimumHeightWithinViewport) !== null && _e !== void 0 ? _e : DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE }));\n        const el = group.element.querySelector('.dv-void-container');\n        if (!el) {\n            throw new Error('failed to find drag handle');\n        }\n        overlay.setupDrag(el, {\n            inDragMode: typeof (options === null || options === void 0 ? void 0 : options.inDragMode) === 'boolean'\n                ? options.inDragMode\n                : false,\n        });\n        const floatingGroupPanel = new DockviewFloatingGroupPanel(group, overlay);\n        const disposable = new CompositeDisposable(group.api.onDidActiveChange((event) => {\n            if (event.isActive) {\n                overlay.bringToFront();\n            }\n        }), watchElementResize(group.element, (entry) => {\n            const { width, height } = entry.contentRect;\n            group.layout(width, height); // let the group know it's size is changing so it can fire events to the panel\n        }));\n        floatingGroupPanel.addDisposables(overlay.onDidChange(() => {\n            // this is either a resize or a move\n            // to inform the panels .layout(...) the group with it's current size\n            // don't care about resize since the above watcher handles that\n            group.layout(group.width, group.height);\n        }), overlay.onDidChangeEnd(() => {\n            this._bufferOnDidLayoutChange.fire();\n        }), group.onDidChange((event) => {\n            overlay.setBounds({\n                height: event === null || event === void 0 ? void 0 : event.height,\n                width: event === null || event === void 0 ? void 0 : event.width,\n            });\n        }), {\n            dispose: () => {\n                disposable.dispose();\n                remove(this._floatingGroups, floatingGroupPanel);\n                group.model.location = { type: 'grid' };\n                this.updateWatermark();\n            },\n        });\n        this._floatingGroups.push(floatingGroupPanel);\n        group.model.location = { type: 'floating' };\n        if (!(options === null || options === void 0 ? void 0 : options.skipActiveGroup)) {\n            this.doSetGroupAndPanelActive(group);\n        }\n        this.updateWatermark();\n    }\n    orthogonalize(position) {\n        switch (position) {\n            case 'top':\n            case 'bottom':\n                if (this.gridview.orientation === Orientation.HORIZONTAL) {\n                    // we need to add to a vertical splitview but the current root is a horizontal splitview.\n                    // insert a vertical splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            case 'left':\n            case 'right':\n                if (this.gridview.orientation === Orientation.VERTICAL) {\n                    // we need to add to a horizontal splitview but the current root is a vertical splitview.\n                    // insert a horiziontal splitview at the root level and add the existing view as a child\n                    this.gridview.insertOrthogonalSplitviewAtRoot();\n                }\n                break;\n            default:\n                break;\n        }\n        switch (position) {\n            case 'top':\n            case 'left':\n            case 'center':\n                return this.createGroupAtLocation([0]); // insert into first position\n            case 'bottom':\n            case 'right':\n                return this.createGroupAtLocation([this.gridview.length]); // insert into last position\n            default:\n                throw new Error(`unsupported position ${position}`);\n        }\n    }\n    updateOptions(options) {\n        var _a, _b, _c, _d;\n        super.updateOptions(options);\n        if ('floatingGroupBounds' in options) {\n            for (const group of this._floatingGroups) {\n                switch (options.floatingGroupBounds) {\n                    case 'boundedWithinViewport':\n                        group.overlay.minimumInViewportHeight = undefined;\n                        group.overlay.minimumInViewportWidth = undefined;\n                        break;\n                    case undefined:\n                        group.overlay.minimumInViewportHeight =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        group.overlay.minimumInViewportWidth =\n                            DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE;\n                        break;\n                    default:\n                        group.overlay.minimumInViewportHeight =\n                            (_a = options.floatingGroupBounds) === null || _a === void 0 ? void 0 : _a.minimumHeightWithinViewport;\n                        group.overlay.minimumInViewportWidth =\n                            (_b = options.floatingGroupBounds) === null || _b === void 0 ? void 0 : _b.minimumWidthWithinViewport;\n                }\n                group.overlay.setBounds();\n            }\n        }\n        if ('rootOverlayModel' in options) {\n            this._rootDropTarget.setOverlayModel((_c = options.rootOverlayModel) !== null && _c !== void 0 ? _c : DEFAULT_ROOT_OVERLAY_MODEL);\n        }\n        if ('gap' in options) {\n            this.gridview.margin = (_d = options.gap) !== null && _d !== void 0 ? _d : 0;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    layout(width, height, forceResize) {\n        super.layout(width, height, forceResize);\n        if (this._floatingGroups) {\n            for (const floating of this._floatingGroups) {\n                // ensure floting groups stay within visible boundaries\n                floating.overlay.setBounds();\n            }\n        }\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    getGroupPanel(id) {\n        return this.panels.find((panel) => panel.id === id);\n    }\n    setActivePanel(panel) {\n        panel.group.model.openPanel(panel);\n        this.doSetGroupAndPanelActive(panel.group);\n    }\n    moveToNext(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !==\n                options.group.panels[options.group.panels.length - 1]) {\n                options.group.model.moveToNext({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.next(location)) === null || _a === void 0 ? void 0 : _a.view;\n        this.doSetGroupAndPanelActive(next);\n    }\n    moveToPrevious(options = {}) {\n        var _a;\n        if (!options.group) {\n            if (!this.activeGroup) {\n                return;\n            }\n            options.group = this.activeGroup;\n        }\n        if (options.includePanel && options.group) {\n            if (options.group.activePanel !== options.group.panels[0]) {\n                options.group.model.moveToPrevious({ suppressRoll: true });\n                return;\n            }\n        }\n        const location = getGridLocation(options.group.element);\n        const next = (_a = this.gridview.previous(location)) === null || _a === void 0 ? void 0 : _a.view;\n        if (next) {\n            this.doSetGroupAndPanelActive(next);\n        }\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        const panels = this.panels.reduce((collection, panel) => {\n            collection[panel.id] = panel.toJSON();\n            return collection;\n        }, {});\n        const floats = this._floatingGroups.map((group) => {\n            return {\n                data: group.group.toJSON(),\n                position: group.overlay.toJSON(),\n            };\n        });\n        const popoutGroups = this._popoutGroups.map((group) => {\n            return {\n                data: group.popoutGroup.toJSON(),\n                gridReferenceGroup: group.referenceGroup,\n                position: group.window.dimensions(),\n                url: group.popoutGroup.api.location.type === 'popout'\n                    ? group.popoutGroup.api.location.popoutUrl\n                    : undefined,\n            };\n        });\n        const result = {\n            grid: data,\n            panels,\n            activeGroup: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n        if (floats.length > 0) {\n            result.floatingGroups = floats;\n        }\n        if (popoutGroups.length > 0) {\n            result.popoutGroups = popoutGroups;\n        }\n        return result;\n    }\n    fromJSON(data) {\n        var _a, _b, _c;\n        this.clear();\n        if (typeof data !== 'object' || data === null) {\n            throw new Error('serialized layout must be a non-null object');\n        }\n        const { grid, panels, activeGroup } = data;\n        if (grid.root.type !== 'branch' || !Array.isArray(grid.root.data)) {\n            throw new Error('root must be of type branch');\n        }\n        try {\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            const createGroupFromSerializedState = (data) => {\n                const { id, locked, hideHeader, views, activeView } = data;\n                if (typeof id !== 'string') {\n                    throw new Error('group id must be of type string');\n                }\n                const group = this.createGroup({\n                    id,\n                    locked: !!locked,\n                    hideHeader: !!hideHeader,\n                });\n                this._onDidAddGroup.fire(group);\n                const createdPanels = [];\n                for (const child of views) {\n                    /**\n                     * Run the deserializer step seperately since this may fail to due corrupted external state.\n                     * In running this section first we avoid firing lots of 'add' events in the event of a failure\n                     * due to a corruption of input data.\n                     */\n                    const panel = this._deserializer.fromJSON(panels[child], group);\n                    createdPanels.push(panel);\n                }\n                for (let i = 0; i < views.length; i++) {\n                    const panel = createdPanels[i];\n                    const isActive = typeof activeView === 'string' &&\n                        activeView === panel.id;\n                    group.model.openPanel(panel, {\n                        skipSetActive: !isActive,\n                        skipSetGroupActive: true,\n                    });\n                }\n                if (!group.activePanel && group.panels.length > 0) {\n                    group.model.openPanel(group.panels[group.panels.length - 1], {\n                        skipSetGroupActive: true,\n                    });\n                }\n                return group;\n            };\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    return createGroupFromSerializedState(node.data);\n                },\n            });\n            this.layout(width, height, true);\n            const serializedFloatingGroups = (_a = data.floatingGroups) !== null && _a !== void 0 ? _a : [];\n            for (const serializedFloatingGroup of serializedFloatingGroups) {\n                const { data, position } = serializedFloatingGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addFloatingGroup(group, {\n                    position: position,\n                    width: position.width,\n                    height: position.height,\n                    skipRemoveGroup: true,\n                    inDragMode: false,\n                });\n            }\n            const serializedPopoutGroups = (_b = data.popoutGroups) !== null && _b !== void 0 ? _b : [];\n            for (const serializedPopoutGroup of serializedPopoutGroups) {\n                const { data, position, gridReferenceGroup, url } = serializedPopoutGroup;\n                const group = createGroupFromSerializedState(data);\n                this.addPopoutGroup((_c = (gridReferenceGroup\n                    ? this.getPanel(gridReferenceGroup)\n                    : undefined)) !== null && _c !== void 0 ? _c : group, {\n                    position: position !== null && position !== void 0 ? position : undefined,\n                    overridePopoutGroup: gridReferenceGroup\n                        ? group\n                        : undefined,\n                    popoutUrl: url,\n                });\n            }\n            for (const floatingGroup of this._floatingGroups) {\n                floatingGroup.overlay.setBounds();\n            }\n            if (typeof activeGroup === 'string') {\n                const panel = this.getPanel(activeGroup);\n                if (panel) {\n                    this.doSetGroupAndPanelActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            console.error('dockview: failed to deserialize layout. Reverting changes', err);\n            /**\n             * Takes all the successfully created groups and remove all of their panels.\n             */\n            for (const group of this.groups) {\n                for (const panel of group.panels) {\n                    this.removePanel(panel, {\n                        removeEmptyGroup: false,\n                        skipDispose: false,\n                    });\n                }\n            }\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // iterate over a reassigned array since original array will be modified\n            for (const floatingGroup of [...this._floatingGroups]) {\n                floatingGroup.dispose();\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this.updateWatermark();\n        this._onDidLayoutFromJSON.fire();\n    }\n    clear() {\n        const groups = Array.from(this._groups.values()).map((_) => _.value);\n        const hasActiveGroup = !!this.activeGroup;\n        for (const group of groups) {\n            // remove the group will automatically remove the panels\n            this.removeGroup(group, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupAndPanelActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    closeAllGroups() {\n        for (const entry of this._groups.entries()) {\n            const [_, group] = entry;\n            group.value.model.closeAllPanels();\n        }\n    }\n    addPanel(options) {\n        var _a, _b;\n        if (this.panels.find((_) => _.id === options.id)) {\n            throw new Error(`panel with id ${options.id} already exists`);\n        }\n        let referenceGroup;\n        if (options.position && options.floating) {\n            throw new Error('you can only provide one of: position, floating as arguments to .addPanel(...)');\n        }\n        const initial = {\n            width: options.initialWidth,\n            height: options.initialHeight,\n        };\n        let index;\n        if (options.position) {\n            if (isPanelOptionsWithPanel(options.position)) {\n                const referencePanel = typeof options.position.referencePanel === 'string'\n                    ? this.getGroupPanel(options.position.referencePanel)\n                    : options.position.referencePanel;\n                index = options.position.index;\n                if (!referencePanel) {\n                    throw new Error(`referencePanel '${options.position.referencePanel}' does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n            }\n            else if (isPanelOptionsWithGroup(options.position)) {\n                referenceGroup =\n                    typeof options.position.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.position.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.position.referenceGroup;\n                index = options.position.index;\n                if (!referenceGroup) {\n                    throw new Error(`referenceGroup '${options.position.referenceGroup}' does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.position.direction));\n                const panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                group.api.setSize({\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                });\n                return panel;\n            }\n        }\n        else {\n            referenceGroup = this.activeGroup;\n        }\n        let panel;\n        if (referenceGroup) {\n            const target = toTarget(((_b = options.position) === null || _b === void 0 ? void 0 : _b.direction) || 'within');\n            if (options.floating) {\n                const group = this.createGroup();\n                this._onDidAddGroup.fire(group);\n                const floatingGroupOptions = typeof options.floating === 'object' &&\n                    options.floating !== null\n                    ? options.floating\n                    : {};\n                this.addFloatingGroup(group, Object.assign(Object.assign({}, floatingGroupOptions), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n            }\n            else if (referenceGroup.api.location.type === 'floating' ||\n                target === 'center') {\n                panel = this.createPanel(options, referenceGroup);\n                referenceGroup.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                referenceGroup.api.setSize({\n                    width: initial === null || initial === void 0 ? void 0 : initial.width,\n                    height: initial === null || initial === void 0 ? void 0 : initial.height,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(referenceGroup);\n                }\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n                const group = this.createGroupAtLocation(relativeLocation, this.orientationAtLocation(relativeLocation) ===\n                    Orientation.VERTICAL\n                    ? initial === null || initial === void 0 ? void 0 : initial.height\n                    : initial === null || initial === void 0 ? void 0 : initial.width);\n                panel = this.createPanel(options, group);\n                group.model.openPanel(panel, {\n                    skipSetActive: options.inactive,\n                    skipSetGroupActive: options.inactive,\n                    index,\n                });\n                if (!options.inactive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n            }\n        }\n        else if (options.floating) {\n            const group = this.createGroup();\n            this._onDidAddGroup.fire(group);\n            const coordinates = typeof options.floating === 'object' &&\n                options.floating !== null\n                ? options.floating\n                : {};\n            this.addFloatingGroup(group, Object.assign(Object.assign({}, coordinates), { inDragMode: false, skipRemoveGroup: true, skipActiveGroup: true }));\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n        }\n        else {\n            const group = this.createGroupAtLocation([0], this.gridview.orientation === Orientation.VERTICAL\n                ? initial === null || initial === void 0 ? void 0 : initial.height\n                : initial === null || initial === void 0 ? void 0 : initial.width);\n            panel = this.createPanel(options, group);\n            group.model.openPanel(panel, {\n                skipSetActive: options.inactive,\n                skipSetGroupActive: options.inactive,\n                index,\n            });\n            if (!options.inactive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n        }\n        return panel;\n    }\n    removePanel(panel, options = {\n        removeEmptyGroup: true,\n    }) {\n        const group = panel.group;\n        if (!group) {\n            throw new Error(`cannot remove panel ${panel.id}. it's missing a group.`);\n        }\n        group.model.removePanel(panel, {\n            skipSetActiveGroup: options.skipSetActiveGroup,\n        });\n        if (!options.skipDispose) {\n            panel.group.model.renderContainer.detatch(panel);\n            panel.dispose();\n        }\n        if (group.size === 0 && options.removeEmptyGroup) {\n            this.removeGroup(group, { skipActive: options.skipSetActiveGroup });\n        }\n    }\n    createWatermarkComponent() {\n        if (this.options.createWatermarkComponent) {\n            return this.options.createWatermarkComponent();\n        }\n        return new Watermark();\n    }\n    updateWatermark() {\n        var _a, _b;\n        if (this.groups.filter((x) => x.api.location.type === 'grid' && x.api.isVisible).length === 0) {\n            if (!this.watermark) {\n                this.watermark = this.createWatermarkComponent();\n                this.watermark.init({\n                    containerApi: new DockviewApi(this),\n                });\n                const watermarkContainer = document.createElement('div');\n                watermarkContainer.className = 'dv-watermark-container';\n                addTestId(watermarkContainer, 'watermark-component');\n                watermarkContainer.appendChild(this.watermark.element);\n                this.gridview.element.appendChild(watermarkContainer);\n            }\n        }\n        else if (this.watermark) {\n            this.watermark.element.parentElement.remove();\n            (_b = (_a = this.watermark).dispose) === null || _b === void 0 ? void 0 : _b.call(_a);\n            this.watermark = null;\n        }\n    }\n    addGroup(options) {\n        var _a;\n        if (options) {\n            let referenceGroup;\n            if (isGroupOptionsWithPanel(options)) {\n                const referencePanel = typeof options.referencePanel === 'string'\n                    ? this.panels.find((panel) => panel.id === options.referencePanel)\n                    : options.referencePanel;\n                if (!referencePanel) {\n                    throw new Error(`reference panel ${options.referencePanel} does not exist`);\n                }\n                referenceGroup = this.findGroup(referencePanel);\n                if (!referenceGroup) {\n                    throw new Error(`reference group for reference panel ${options.referencePanel} does not exist`);\n                }\n            }\n            else if (isGroupOptionsWithGroup(options)) {\n                referenceGroup =\n                    typeof options.referenceGroup === 'string'\n                        ? (_a = this._groups.get(options.referenceGroup)) === null || _a === void 0 ? void 0 : _a.value\n                        : options.referenceGroup;\n                if (!referenceGroup) {\n                    throw new Error(`reference group ${options.referenceGroup} does not exist`);\n                }\n            }\n            else {\n                const group = this.orthogonalize(directionToPosition(options.direction));\n                if (!options.skipSetActive) {\n                    this.doSetGroupAndPanelActive(group);\n                }\n                return group;\n            }\n            const target = toTarget(options.direction || 'within');\n            const location = getGridLocation(referenceGroup.element);\n            const relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            const group = this.createGroup(options);\n            const size = this.getLocationOrientation(relativeLocation) ===\n                Orientation.VERTICAL\n                ? options.initialHeight\n                : options.initialWidth;\n            this.doAddGroup(group, relativeLocation, size);\n            if (!options.skipSetActive) {\n                this.doSetGroupAndPanelActive(group);\n            }\n            return group;\n        }\n        else {\n            const group = this.createGroup(options);\n            this.doAddGroup(group);\n            this.doSetGroupAndPanelActive(group);\n            return group;\n        }\n    }\n    getLocationOrientation(location) {\n        return location.length % 2 == 0 &&\n            this.gridview.orientation === Orientation.HORIZONTAL\n            ? Orientation.HORIZONTAL\n            : Orientation.VERTICAL;\n    }\n    removeGroup(group, options) {\n        this.doRemoveGroup(group, options);\n    }\n    doRemoveGroup(group, options) {\n        var _a;\n        const panels = [...group.panels]; // reassign since group panels will mutate\n        if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n            for (const panel of panels) {\n                this.removePanel(panel, {\n                    removeEmptyGroup: false,\n                    skipDispose: (_a = options === null || options === void 0 ? void 0 : options.skipDispose) !== null && _a !== void 0 ? _a : false,\n                });\n            }\n        }\n        const activePanel = this.activePanel;\n        if (group.api.location.type === 'floating') {\n            const floatingGroup = this._floatingGroups.find((_) => _.group === group);\n            if (floatingGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    floatingGroup.group.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._floatingGroups, floatingGroup);\n                floatingGroup.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                return floatingGroup.group;\n            }\n            throw new Error('failed to find floating group');\n        }\n        if (group.api.location.type === 'popout') {\n            const selectedGroup = this._popoutGroups.find((_) => _.popoutGroup === group);\n            if (selectedGroup) {\n                if (!(options === null || options === void 0 ? void 0 : options.skipDispose)) {\n                    if (!(options === null || options === void 0 ? void 0 : options.skipPopoutAssociated)) {\n                        const refGroup = selectedGroup.referenceGroup\n                            ? this.getPanel(selectedGroup.referenceGroup)\n                            : undefined;\n                        if (refGroup && refGroup.panels.length === 0) {\n                            this.removeGroup(refGroup);\n                        }\n                    }\n                    selectedGroup.popoutGroup.dispose();\n                    this._groups.delete(group.id);\n                    this._onDidRemoveGroup.fire(group);\n                }\n                remove(this._popoutGroups, selectedGroup);\n                const removedGroup = selectedGroup.disposable.dispose();\n                if (!(options === null || options === void 0 ? void 0 : options.skipPopoutReturn) && removedGroup) {\n                    this.doAddGroup(removedGroup, [0]);\n                    this.doSetGroupAndPanelActive(removedGroup);\n                }\n                if (!(options === null || options === void 0 ? void 0 : options.skipActive) && this._activeGroup === group) {\n                    const groups = Array.from(this._groups.values());\n                    this.doSetGroupAndPanelActive(groups.length > 0 ? groups[0].value : undefined);\n                }\n                this.updateWatermark();\n                return selectedGroup.popoutGroup;\n            }\n            throw new Error('failed to find popout group');\n        }\n        const re = super.doRemoveGroup(group, options);\n        if (!(options === null || options === void 0 ? void 0 : options.skipActive)) {\n            if (this.activePanel !== activePanel) {\n                this._onDidActivePanelChange.fire(this.activePanel);\n            }\n        }\n        return re;\n    }\n    movingLock(func) {\n        const isMoving = this._moving;\n        try {\n            this._moving = true;\n            return func();\n        }\n        finally {\n            this._moving = isMoving;\n        }\n    }\n    moveGroupOrPanel(options) {\n        var _a;\n        const destinationGroup = options.to.group;\n        const sourceGroupId = options.from.groupId;\n        const sourceItemId = options.from.panelId;\n        const destinationTarget = options.to.position;\n        const destinationIndex = options.to.index;\n        const sourceGroup = sourceGroupId\n            ? (_a = this._groups.get(sourceGroupId)) === null || _a === void 0 ? void 0 : _a.value\n            : undefined;\n        if (!sourceGroup) {\n            throw new Error(`Failed to find group id ${sourceGroupId}`);\n        }\n        if (sourceItemId === undefined) {\n            /**\n             * Moving an entire group into another group\n             */\n            this.moveGroup({\n                from: { group: sourceGroup },\n                to: {\n                    group: destinationGroup,\n                    position: destinationTarget,\n                },\n            });\n            return;\n        }\n        if (!destinationTarget || destinationTarget === 'center') {\n            /**\n             * Dropping a panel within another group\n             */\n            const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                skipSetActive: false,\n                skipSetActiveGroup: true,\n            }));\n            if (!removedPanel) {\n                throw new Error(`No panel with id ${sourceItemId}`);\n            }\n            if (sourceGroup.model.size === 0) {\n                // remove the group and do not set a new group as active\n                this.doRemoveGroup(sourceGroup, { skipActive: true });\n            }\n            this.movingLock(() => destinationGroup.model.openPanel(removedPanel, {\n                index: destinationIndex,\n                skipSetGroupActive: true,\n            }));\n            this.doSetGroupAndPanelActive(destinationGroup);\n            this._onDidMovePanel.fire({\n                panel: removedPanel,\n                from: sourceGroup,\n            });\n        }\n        else {\n            /**\n             * Dropping a panel to the extremities of a group which will place that panel\n             * into an adjacent group\n             */\n            const referenceLocation = getGridLocation(destinationGroup.element);\n            const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n            if (sourceGroup.size < 2) {\n                /**\n                 * If we are moving from a group which only has one panel left we will consider\n                 * moving the group itself rather than moving the panel into a newly created group\n                 */\n                const [targetParentLocation, to] = tail(targetLocation);\n                if (sourceGroup.api.location.type === 'grid') {\n                    const sourceLocation = getGridLocation(sourceGroup.element);\n                    const [sourceParentLocation, from] = tail(sourceLocation);\n                    if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n                        // special case when 'swapping' two views within same grid location\n                        // if a group has one tab - we are essentially moving the 'group'\n                        // which is equivalent to swapping two views in this case\n                        this.gridview.moveView(sourceParentLocation, from, to);\n                        this._onDidMovePanel.fire({\n                            panel: this.getGroupPanel(sourceItemId),\n                            from: sourceGroup,\n                        });\n                        return;\n                    }\n                }\n                if (sourceGroup.api.location.type === 'popout') {\n                    /**\n                     * the source group is a popout group with a single panel\n                     *\n                     * 1. remove the panel from the group without triggering any events\n                     * 2. remove the popout group\n                     * 3. create a new group at the requested location and add that panel\n                     */\n                    const popoutGroup = this._popoutGroups.find((group) => group.popoutGroup === sourceGroup);\n                    const removedPanel = this.movingLock(() => popoutGroup.popoutGroup.model.removePanel(popoutGroup.popoutGroup.panels[0], {\n                        skipSetActive: true,\n                        skipSetActiveGroup: true,\n                    }));\n                    this.doRemoveGroup(sourceGroup, { skipActive: true });\n                    const newGroup = this.createGroupAtLocation(targetLocation);\n                    this.movingLock(() => newGroup.model.openPanel(removedPanel));\n                    this.doSetGroupAndPanelActive(newGroup);\n                    this._onDidMovePanel.fire({\n                        panel: this.getGroupPanel(sourceItemId),\n                        from: sourceGroup,\n                    });\n                    return;\n                }\n                // source group will become empty so delete the group\n                const targetGroup = this.movingLock(() => this.doRemoveGroup(sourceGroup, {\n                    skipActive: true,\n                    skipDispose: true,\n                }));\n                // after deleting the group we need to re-evaulate the ref location\n                const updatedReferenceLocation = getGridLocation(destinationGroup.element);\n                const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, destinationTarget);\n                this.movingLock(() => this.doAddGroup(targetGroup, location));\n                this.doSetGroupAndPanelActive(targetGroup);\n                this._onDidMovePanel.fire({\n                    panel: this.getGroupPanel(sourceItemId),\n                    from: sourceGroup,\n                });\n            }\n            else {\n                /**\n                 * The group we are removing from has many panels, we need to remove the panels we are moving,\n                 * create a new group, add the panels to that new group and add the new group in an appropiate position\n                 */\n                const removedPanel = this.movingLock(() => sourceGroup.model.removePanel(sourceItemId, {\n                    skipSetActive: false,\n                    skipSetActiveGroup: true,\n                }));\n                if (!removedPanel) {\n                    throw new Error(`No panel with id ${sourceItemId}`);\n                }\n                const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, destinationTarget);\n                const group = this.createGroupAtLocation(dropLocation);\n                this.movingLock(() => group.model.openPanel(removedPanel, {\n                    skipSetGroupActive: true,\n                }));\n                this.doSetGroupAndPanelActive(group);\n                this._onDidMovePanel.fire({\n                    panel: removedPanel,\n                    from: sourceGroup,\n                });\n            }\n        }\n    }\n    moveGroup(options) {\n        const from = options.from.group;\n        const to = options.to.group;\n        const target = options.to.position;\n        if (target === 'center') {\n            const activePanel = from.activePanel;\n            const panels = this.movingLock(() => [...from.panels].map((p) => from.model.removePanel(p.id, {\n                skipSetActive: true,\n            })));\n            if ((from === null || from === void 0 ? void 0 : from.model.size) === 0) {\n                this.doRemoveGroup(from, { skipActive: true });\n            }\n            this.movingLock(() => {\n                for (const panel of panels) {\n                    to.model.openPanel(panel, {\n                        skipSetActive: panel !== activePanel,\n                        skipSetGroupActive: true,\n                    });\n                }\n            });\n            this.doSetGroupAndPanelActive(to);\n        }\n        else {\n            switch (from.api.location.type) {\n                case 'grid':\n                    this.gridview.removeView(getGridLocation(from.element));\n                    break;\n                case 'floating': {\n                    const selectedFloatingGroup = this._floatingGroups.find((x) => x.group === from);\n                    if (!selectedFloatingGroup) {\n                        throw new Error('failed to find floating group');\n                    }\n                    selectedFloatingGroup.dispose();\n                    break;\n                }\n                case 'popout': {\n                    const selectedPopoutGroup = this._popoutGroups.find((x) => x.popoutGroup === from);\n                    if (!selectedPopoutGroup) {\n                        throw new Error('failed to find popout group');\n                    }\n                    selectedPopoutGroup.disposable.dispose();\n                }\n            }\n            const referenceLocation = getGridLocation(to.element);\n            const dropLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n            let size;\n            switch (this.gridview.orientation) {\n                case Orientation.VERTICAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.width\n                            : from.api.height;\n                    break;\n                case Orientation.HORIZONTAL:\n                    size =\n                        referenceLocation.length % 2 == 0\n                            ? from.api.height\n                            : from.api.width;\n                    break;\n            }\n            this.gridview.addView(from, size, dropLocation);\n        }\n        from.panels.forEach((panel) => {\n            this._onDidMovePanel.fire({ panel, from });\n        });\n    }\n    doSetGroupActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    doSetGroupAndPanelActive(group) {\n        super.doSetGroupActive(group);\n        const activePanel = this.activePanel;\n        if (group &&\n            this.hasMaximizedGroup() &&\n            !this.isMaximizedGroup(group)) {\n            this.exitMaximizedGroup();\n        }\n        if (!this._moving &&\n            activePanel !== this._onDidActivePanelChange.value) {\n            this._onDidActivePanelChange.fire(activePanel);\n        }\n    }\n    getNextGroupId() {\n        let id = this.nextGroupId.next();\n        while (this._groups.has(id)) {\n            id = this.nextGroupId.next();\n        }\n        return id;\n    }\n    createGroup(options) {\n        if (!options) {\n            options = {};\n        }\n        let id = options === null || options === void 0 ? void 0 : options.id;\n        if (id && this._groups.has(options.id)) {\n            console.warn(`dockview: Duplicate group id ${options === null || options === void 0 ? void 0 : options.id}. reassigning group id to avoid errors`);\n            id = undefined;\n        }\n        if (!id) {\n            id = this.nextGroupId.next();\n            while (this._groups.has(id)) {\n                id = this.nextGroupId.next();\n            }\n        }\n        const view = new DockviewGroupPanel(this, id, options);\n        view.init({ params: {}, accessor: this });\n        if (!this._groups.has(view.id)) {\n            const disposable = new CompositeDisposable(view.model.onTabDragStart((event) => {\n                this._onWillDragPanel.fire(event);\n            }), view.model.onGroupDragStart((event) => {\n                this._onWillDragGroup.fire(event);\n            }), view.model.onMove((event) => {\n                const { groupId, itemId, target, index } = event;\n                this.moveGroupOrPanel({\n                    from: { groupId: groupId, panelId: itemId },\n                    to: {\n                        group: view,\n                        position: target,\n                        index,\n                    },\n                });\n            }), view.model.onDidDrop((event) => {\n                this._onDidDrop.fire(event);\n            }), view.model.onWillDrop((event) => {\n                this._onWillDrop.fire(event);\n            }), view.model.onWillShowOverlay((event) => {\n                if (this.options.disableDnd) {\n                    event.preventDefault();\n                    return;\n                }\n                this._onWillShowOverlay.fire(event);\n            }), view.model.onUnhandledDragOverEvent((event) => {\n                this._onUnhandledDragOverEvent.fire(event);\n            }), view.model.onDidAddPanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidAddPanel.fire(event.panel);\n            }), view.model.onDidRemovePanel((event) => {\n                if (this._moving) {\n                    return;\n                }\n                this._onDidRemovePanel.fire(event.panel);\n            }), view.model.onDidActivePanelChange((event) => {\n                if (this._moving) {\n                    return;\n                }\n                if (event.panel !== this.activePanel) {\n                    return;\n                }\n                if (this._onDidActivePanelChange.value !== event.panel) {\n                    this._onDidActivePanelChange.fire(event.panel);\n                }\n            }), Event.any(view.model.onDidPanelTitleChange, view.model.onDidPanelParametersChange)(() => {\n                this._bufferOnDidLayoutChange.fire();\n            }));\n            this._groups.set(view.id, { value: view, disposable });\n        }\n        // TODO: must be called after the above listeners have been setup, not an ideal pattern\n        view.initialize();\n        return view;\n    }\n    createPanel(options, group) {\n        var _a, _b, _c;\n        const contentComponent = options.component;\n        const tabComponent = (_a = options.tabComponent) !== null && _a !== void 0 ? _a : this.options.defaultTabComponent;\n        const view = new DockviewPanelModel(this, options.id, contentComponent, tabComponent);\n        const panel = new DockviewPanel(options.id, contentComponent, tabComponent, this, this._api, group, view, {\n            renderer: options.renderer,\n            minimumWidth: options.minimumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumWidth: options.maximumWidth,\n            maximumHeight: options.maximumHeight,\n        });\n        panel.init({\n            title: (_b = options.title) !== null && _b !== void 0 ? _b : options.id,\n            params: (_c = options === null || options === void 0 ? void 0 : options.params) !== null && _c !== void 0 ? _c : {},\n        });\n        return panel;\n    }\n    createGroupAtLocation(location, size) {\n        const group = this.createGroup();\n        this.doAddGroup(group, location, size);\n        return group;\n    }\n    findGroup(panel) {\n        var _a;\n        return (_a = Array.from(this._groups.values()).find((group) => group.value.model.containsPanel(panel))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    orientationAtLocation(location) {\n        const rootOrientation = this.gridview.orientation;\n        return location.length % 2 == 1\n            ? rootOrientation\n            : orthogonal(rootOrientation);\n    }\n}\n","import { getRelativeLocation, getGridLocation, } from './gridview';\nimport { tail, sequenceEquals } from '../array';\nimport { CompositeDisposable } from '../lifecycle';\nimport { BaseGrid, toTarget, } from './baseComponentGridview';\nimport { Emitter } from '../events';\nexport class GridviewComponent extends BaseGrid {\n    get orientation() {\n        return this.gridview.orientation;\n    }\n    set orientation(value) {\n        this.gridview.orientation = value;\n    }\n    get options() {\n        return this._options;\n    }\n    get deserializer() {\n        return this._deserializer;\n    }\n    set deserializer(value) {\n        this._deserializer = value;\n    }\n    constructor(container, options) {\n        var _a;\n        super(container, {\n            proportionalLayout: (_a = options.proportionalLayout) !== null && _a !== void 0 ? _a : true,\n            orientation: options.orientation,\n            styles: options.hideBorders\n                ? { separatorBorder: 'transparent' }\n                : undefined,\n            disableAutoResizing: options.disableAutoResizing,\n            className: options.className,\n        });\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidRemoveGroup = new Emitter();\n        this.onDidRemoveGroup = this._onDidRemoveGroup.event;\n        this._onDidAddGroup = new Emitter();\n        this.onDidAddGroup = this._onDidAddGroup.event;\n        this._onDidActiveGroupChange = new Emitter();\n        this.onDidActiveGroupChange = this._onDidActiveGroupChange.event;\n        this._options = options;\n        this.addDisposables(this._onDidAddGroup, this._onDidRemoveGroup, this._onDidActiveGroupChange, this.onDidAdd((event) => {\n            this._onDidAddGroup.fire(event);\n        }), this.onDidRemove((event) => {\n            this._onDidRemoveGroup.fire(event);\n        }), this.onDidActiveChange((event) => {\n            this._onDidActiveGroupChange.fire(event);\n        }));\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        const hasOrientationChanged = typeof options.orientation === 'string' &&\n            this.gridview.orientation !== options.orientation;\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        if (hasOrientationChanged) {\n            this.gridview.orientation = options.orientation;\n        }\n        this.layout(this.gridview.width, this.gridview.height, true);\n    }\n    removePanel(panel) {\n        this.removeGroup(panel);\n    }\n    /**\n     * Serialize the current state of the layout\n     *\n     * @returns A JSON respresentation of the layout\n     */\n    toJSON() {\n        var _a;\n        const data = this.gridview.serialize();\n        return {\n            grid: data,\n            activePanel: (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.id,\n        };\n    }\n    setVisible(panel, visible) {\n        this.gridview.setViewVisible(getGridLocation(panel.element), visible);\n    }\n    setActive(panel) {\n        this._groups.forEach((value, _key) => {\n            value.value.setActive(panel === value.value);\n        });\n    }\n    focus() {\n        var _a;\n        (_a = this.activeGroup) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    fromJSON(serializedGridview) {\n        this.clear();\n        const { grid, activePanel } = serializedGridview;\n        try {\n            const queue = [];\n            // take note of the existing dimensions\n            const width = this.width;\n            const height = this.height;\n            this.gridview.deserialize(grid, {\n                fromJSON: (node) => {\n                    const { data } = node;\n                    const view = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => view.init({\n                        params: data.params,\n                        minimumWidth: data.minimumWidth,\n                        maximumWidth: data.maximumWidth,\n                        minimumHeight: data.minimumHeight,\n                        maximumHeight: data.maximumHeight,\n                        priority: data.priority,\n                        snap: !!data.snap,\n                        accessor: this,\n                        isVisible: node.visible,\n                    }));\n                    this._onDidAddGroup.fire(view);\n                    this.registerPanel(view);\n                    return view;\n                },\n            });\n            this.layout(width, height, true);\n            queue.forEach((f) => f());\n            if (typeof activePanel === 'string') {\n                const panel = this.getPanel(activePanel);\n                if (panel) {\n                    this.doSetGroupActive(panel);\n                }\n            }\n        }\n        catch (err) {\n            /**\n             * To remove a group we cannot call this.removeGroup(...) since this makes assumptions about\n             * the underlying HTMLElement existing in the Gridview.\n             */\n            for (const group of this.groups) {\n                group.dispose();\n                this._groups.delete(group.id);\n                this._onDidRemoveGroup.fire(group);\n            }\n            // fires clean-up events and clears the underlying HTML gridview.\n            this.clear();\n            /**\n             * even though we have cleaned-up we still want to inform the caller of their error\n             * and we'll do this through re-throwing the original error since afterall you would\n             * expect trying to load a corrupted layout to result in an error and not silently fail...\n             */\n            throw err;\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        const hasActiveGroup = this.activeGroup;\n        const groups = Array.from(this._groups.values()); // reassign since group panels will mutate\n        for (const group of groups) {\n            group.disposable.dispose();\n            this.doRemoveGroup(group.value, { skipActive: true });\n        }\n        if (hasActiveGroup) {\n            this.doSetGroupActive(undefined);\n        }\n        this.gridview.clear();\n    }\n    movePanel(panel, options) {\n        var _a;\n        let relativeLocation;\n        const removedPanel = this.gridview.remove(panel);\n        const referenceGroup = (_a = this._groups.get(options.reference)) === null || _a === void 0 ? void 0 : _a.value;\n        if (!referenceGroup) {\n            throw new Error(`reference group ${options.reference} does not exist`);\n        }\n        const target = toTarget(options.direction);\n        if (target === 'center') {\n            throw new Error(`${target} not supported as an option`);\n        }\n        else {\n            const location = getGridLocation(referenceGroup.element);\n            relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n        }\n        this.doAddGroup(removedPanel, relativeLocation, options.size);\n    }\n    addPanel(options) {\n        var _a, _b, _c, _d;\n        let relativeLocation = (_a = options.location) !== null && _a !== void 0 ? _a : [0];\n        if ((_b = options.position) === null || _b === void 0 ? void 0 : _b.referencePanel) {\n            const referenceGroup = (_c = this._groups.get(options.position.referencePanel)) === null || _c === void 0 ? void 0 : _c.value;\n            if (!referenceGroup) {\n                throw new Error(`reference group ${options.position.referencePanel} does not exist`);\n            }\n            const target = toTarget(options.position.direction);\n            if (target === 'center') {\n                throw new Error(`${target} not supported as an option`);\n            }\n            else {\n                const location = getGridLocation(referenceGroup.element);\n                relativeLocation = getRelativeLocation(this.gridview.orientation, location, target);\n            }\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.init({\n            params: (_d = options.params) !== null && _d !== void 0 ? _d : {},\n            minimumWidth: options.minimumWidth,\n            maximumWidth: options.maximumWidth,\n            minimumHeight: options.minimumHeight,\n            maximumHeight: options.maximumHeight,\n            priority: options.priority,\n            snap: !!options.snap,\n            accessor: this,\n            isVisible: true,\n        });\n        this.registerPanel(view);\n        this.doAddGroup(view, relativeLocation, options.size);\n        this.doSetGroupActive(view);\n        return view;\n    }\n    registerPanel(panel) {\n        const disposable = new CompositeDisposable(panel.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this._groups.forEach((groupItem) => {\n                const group = groupItem.value;\n                if (group !== panel) {\n                    group.setActive(false);\n                }\n                else {\n                    group.setActive(true);\n                }\n            });\n        }));\n        this._groups.set(panel.id, {\n            value: panel,\n            disposable,\n        });\n    }\n    moveGroup(referenceGroup, groupId, target) {\n        const sourceGroup = this.getPanel(groupId);\n        if (!sourceGroup) {\n            throw new Error('invalid operation');\n        }\n        const referenceLocation = getGridLocation(referenceGroup.element);\n        const targetLocation = getRelativeLocation(this.gridview.orientation, referenceLocation, target);\n        const [targetParentLocation, to] = tail(targetLocation);\n        const sourceLocation = getGridLocation(sourceGroup.element);\n        const [sourceParentLocation, from] = tail(sourceLocation);\n        if (sequenceEquals(sourceParentLocation, targetParentLocation)) {\n            // special case when 'swapping' two views within same grid location\n            // if a group has one tab - we are essentially moving the 'group'\n            // which is equivalent to swapping two views in this case\n            this.gridview.moveView(sourceParentLocation, from, to);\n            return;\n        }\n        // source group will become empty so delete the group\n        const targetGroup = this.doRemoveGroup(sourceGroup, {\n            skipActive: true,\n            skipDispose: true,\n        });\n        // after deleting the group we need to re-evaulate the ref location\n        const updatedReferenceLocation = getGridLocation(referenceGroup.element);\n        const location = getRelativeLocation(this.gridview.orientation, updatedReferenceLocation, target);\n        this.doAddGroup(targetGroup, location);\n    }\n    removeGroup(group) {\n        super.removeGroup(group);\n    }\n    dispose() {\n        super.dispose();\n        this._onDidLayoutfromJSON.dispose();\n    }\n}\n","import { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing, Splitview, } from './splitview';\nimport { Emitter } from '../events';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\n/**\n * A high-level implementation of splitview that works using 'panels'\n */\nexport class SplitviewComponent extends Resizable {\n    get panels() {\n        return this.splitview.getViews();\n    }\n    get options() {\n        return this._options;\n    }\n    get length() {\n        return this._panels.size;\n    }\n    get orientation() {\n        return this.splitview.orientation;\n    }\n    get splitview() {\n        return this._splitview;\n    }\n    set splitview(value) {\n        this._splitview = value;\n        this._splitviewChangeDisposable.value = new CompositeDisposable(this._splitview.onDidSashEnd(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._splitview.onDidAddView((e) => this._onDidAddView.fire(e)), this._splitview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get minimumSize() {\n        return this.splitview.minimumSize;\n    }\n    get maximumSize() {\n        return this.splitview.maximumSize;\n    }\n    get height() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.orthogonalSize\n            : this.splitview.size;\n    }\n    get width() {\n        return this.splitview.orientation === Orientation.HORIZONTAL\n            ? this.splitview.size\n            : this.splitview.orthogonalSize;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._splitviewChangeDisposable = new MutableDisposable();\n        this._panels = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.splitview = new Splitview(this.element, options);\n        this.addDisposables(this._onDidAddView, this._onDidLayoutfromJSON, this._onDidRemoveView, this._onDidLayoutChange);\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        if (typeof options.orientation === 'string') {\n            this.splitview.orientation = options.orientation;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n        this.splitview.layout(this.splitview.size, this.splitview.orthogonalSize);\n    }\n    focus() {\n        var _a;\n        (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    movePanel(from, to) {\n        this.splitview.moveView(from, to);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.splitview.setViewVisible(index, visible);\n    }\n    setActive(panel, skipFocus) {\n        this._activePanel = panel;\n        this.panels\n            .filter((v) => v !== panel)\n            .forEach((v) => {\n            v.api._onDidActiveChange.fire({ isActive: false });\n            if (!skipFocus) {\n                v.focus();\n            }\n        });\n        panel.api._onDidActiveChange.fire({ isActive: true });\n        if (!skipFocus) {\n            panel.focus();\n        }\n    }\n    removePanel(panel, sizing) {\n        const item = this._panels.get(panel.id);\n        if (!item) {\n            throw new Error(`unknown splitview panel ${panel.id}`);\n        }\n        item.dispose();\n        this._panels.delete(panel.id);\n        const index = this.panels.findIndex((_) => _ === panel);\n        const removedView = this.splitview.removeView(index, sizing);\n        removedView.dispose();\n        const panels = this.panels;\n        if (panels.length > 0) {\n            this.setActive(panels[panels.length - 1]);\n        }\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    addPanel(options) {\n        var _a;\n        if (this._panels.has(options.id)) {\n            throw new Error(`panel ${options.id} already exists`);\n        }\n        const view = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        view.orientation = this.splitview.orientation;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumSize: options.minimumSize,\n            maximumSize: options.maximumSize,\n            snap: options.snap,\n            priority: options.priority,\n            accessor: this,\n        });\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        this.splitview.addView(view, size, index);\n        this.doAddView(view);\n        this.setActive(view);\n        return view;\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.splitview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.splitview.layout(size, orthogonalSize);\n    }\n    doAddView(view) {\n        const disposable = view.api.onDidFocusChange((event) => {\n            if (!event.isFocused) {\n                return;\n            }\n            this.setActive(view, true);\n        });\n        this._panels.set(view.id, disposable);\n    }\n    toJSON() {\n        var _a;\n        const views = this.splitview\n            .getViews()\n            .map((view, i) => {\n            const size = this.splitview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                snap: !!view.snap,\n                priority: view.priority,\n            };\n        });\n        return {\n            views,\n            activeView: (_a = this._activePanel) === null || _a === void 0 ? void 0 : _a.id,\n            size: this.splitview.size,\n            orientation: this.splitview.orientation,\n        };\n    }\n    fromJSON(serializedSplitview) {\n        this.clear();\n        const { views, orientation, size, activeView } = serializedSplitview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.splitview = new Splitview(this.element, {\n            orientation,\n            proportionalLayout: this.options.proportionalLayout,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    if (this._panels.has(data.id)) {\n                        throw new Error(`panel ${data.id} already exists`);\n                    }\n                    const panel = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumSize: data.minimumSize,\n                            maximumSize: data.maximumSize,\n                            snap: view.snap,\n                            priority: view.priority,\n                            accessor: this,\n                        });\n                    });\n                    panel.orientation = orientation;\n                    this.doAddView(panel);\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        if (typeof activeView === 'string') {\n            const panel = this.getPanel(activeView);\n            if (panel) {\n                this.setActive(panel);\n            }\n        }\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        while (this.splitview.length > 0) {\n            const view = this.splitview.removeView(0, Sizing.Distribute, true);\n            view.dispose();\n        }\n    }\n    dispose() {\n        for (const disposable of this._panels.values()) {\n            disposable.dispose();\n        }\n        this._panels.clear();\n        const views = this.splitview.getViews();\n        this._splitviewChangeDisposable.dispose();\n        this.splitview.dispose();\n        for (const view of views) {\n            view.dispose();\n        }\n        super.dispose();\n    }\n}\n","import { addDisposableListener } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nimport { toggleClass } from '../dom';\nimport { createChevronRightButton, createExpandMoreButton } from '../svg';\nexport class DefaultHeader extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor() {\n        super();\n        this._expandedIcon = createExpandMoreButton();\n        this._collapsedIcon = createChevronRightButton();\n        this.disposable = new MutableDisposable();\n        this.apiRef = {\n            api: null,\n        };\n        this._element = document.createElement('div');\n        this.element.className = 'dv-default-header';\n        this._content = document.createElement('span');\n        this._expander = document.createElement('div');\n        this._expander.className = 'dv-pane-header-icon';\n        this.element.appendChild(this._expander);\n        this.element.appendChild(this._content);\n        this.addDisposables(addDisposableListener(this._element, 'click', () => {\n            var _a;\n            (_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.setExpanded(!this.apiRef.api.isExpanded);\n        }));\n    }\n    init(params) {\n        this.apiRef.api = params.api;\n        this._content.textContent = params.title;\n        this.updateIcon();\n        this.disposable.value = params.api.onDidExpansionChange(() => {\n            this.updateIcon();\n        });\n    }\n    updateIcon() {\n        var _a;\n        const isExpanded = !!((_a = this.apiRef.api) === null || _a === void 0 ? void 0 : _a.isExpanded);\n        toggleClass(this._expander, 'collapsed', !isExpanded);\n        if (isExpanded) {\n            if (this._expander.contains(this._collapsedIcon)) {\n                this._collapsedIcon.remove();\n            }\n            if (!this._expander.contains(this._expandedIcon)) {\n                this._expander.appendChild(this._expandedIcon);\n            }\n        }\n        else {\n            if (this._expander.contains(this._expandedIcon)) {\n                this._expandedIcon.remove();\n            }\n            if (!this._expander.contains(this._collapsedIcon)) {\n                this._expander.appendChild(this._collapsedIcon);\n            }\n        }\n    }\n    update(_params) {\n        //\n    }\n    dispose() {\n        this.disposable.dispose();\n        super.dispose();\n    }\n}\n","import { PaneviewApi } from '../api/component.api';\nimport { Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable, } from '../lifecycle';\nimport { Orientation, Sizing } from '../splitview/splitview';\nimport { Paneview } from './paneview';\nimport { DraggablePaneviewPanel, } from './draggablePaneviewPanel';\nimport { DefaultHeader } from './defaultPaneviewHeader';\nimport { sequentialNumberGenerator } from '../math';\nimport { Resizable } from '../resizable';\nimport { Classnames } from '../dom';\nconst nextLayoutId = sequentialNumberGenerator();\nexport class PaneFramework extends DraggablePaneviewPanel {\n    constructor(options) {\n        super(options.accessor, options.id, options.component, options.headerComponent, options.orientation, options.isExpanded, options.disableDnd);\n        this.options = options;\n    }\n    getBodyComponent() {\n        return this.options.body;\n    }\n    getHeaderComponent() {\n        return this.options.header;\n    }\n}\nexport class PaneviewComponent extends Resizable {\n    get id() {\n        return this._id;\n    }\n    get panels() {\n        return this.paneview.getPanes();\n    }\n    set paneview(value) {\n        this._paneview = value;\n        this._disposable.value = new CompositeDisposable(this._paneview.onDidChange(() => {\n            this._onDidLayoutChange.fire(undefined);\n        }), this._paneview.onDidAddView((e) => this._onDidAddView.fire(e)), this._paneview.onDidRemoveView((e) => this._onDidRemoveView.fire(e)));\n    }\n    get paneview() {\n        return this._paneview;\n    }\n    get minimumSize() {\n        return this.paneview.minimumSize;\n    }\n    get maximumSize() {\n        return this.paneview.maximumSize;\n    }\n    get height() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.orthogonalSize\n            : this.paneview.size;\n    }\n    get width() {\n        return this.paneview.orientation === Orientation.HORIZONTAL\n            ? this.paneview.size\n            : this.paneview.orthogonalSize;\n    }\n    get options() {\n        return this._options;\n    }\n    constructor(container, options) {\n        var _a;\n        super(document.createElement('div'), options.disableAutoResizing);\n        this._id = nextLayoutId.next();\n        this._disposable = new MutableDisposable();\n        this._viewDisposables = new Map();\n        this._onDidLayoutfromJSON = new Emitter();\n        this.onDidLayoutFromJSON = this._onDidLayoutfromJSON.event;\n        this._onDidLayoutChange = new Emitter();\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._onDidDrop = new Emitter();\n        this.onDidDrop = this._onDidDrop.event;\n        this._onDidAddView = new Emitter();\n        this.onDidAddView = this._onDidAddView.event;\n        this._onDidRemoveView = new Emitter();\n        this.onDidRemoveView = this._onDidRemoveView.event;\n        this._onUnhandledDragOverEvent = new Emitter();\n        this.onUnhandledDragOverEvent = this._onUnhandledDragOverEvent.event;\n        this.element.style.height = '100%';\n        this.element.style.width = '100%';\n        this.addDisposables(this._onDidLayoutChange, this._onDidLayoutfromJSON, this._onDidDrop, this._onDidAddView, this._onDidRemoveView, this._onUnhandledDragOverEvent);\n        this._classNames = new Classnames(this.element);\n        this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        // the container is owned by the third-party, do not modify/delete it\n        container.appendChild(this.element);\n        this._options = options;\n        this.paneview = new Paneview(this.element, {\n            // only allow paneview in the vertical orientation for now\n            orientation: Orientation.VERTICAL,\n        });\n        this.addDisposables(this._disposable);\n    }\n    setVisible(panel, visible) {\n        const index = this.panels.indexOf(panel);\n        this.paneview.setViewVisible(index, visible);\n    }\n    focus() {\n        //noop\n    }\n    updateOptions(options) {\n        var _a, _b;\n        if ('className' in options) {\n            this._classNames.setClassNames((_a = options.className) !== null && _a !== void 0 ? _a : '');\n        }\n        if ('disableResizing' in options) {\n            this.disableResizing = (_b = options.disableAutoResizing) !== null && _b !== void 0 ? _b : false;\n        }\n        this._options = Object.assign(Object.assign({}, this.options), options);\n    }\n    addPanel(options) {\n        var _a;\n        const body = this.options.createComponent({\n            id: options.id,\n            name: options.component,\n        });\n        let header;\n        if (options.headerComponent && this.options.createHeaderComponent) {\n            header = this.options.createHeaderComponent({\n                id: options.id,\n                name: options.headerComponent,\n            });\n        }\n        if (!header) {\n            header = new DefaultHeader();\n        }\n        const view = new PaneFramework({\n            id: options.id,\n            component: options.component,\n            headerComponent: options.headerComponent,\n            header,\n            body,\n            orientation: Orientation.VERTICAL,\n            isExpanded: !!options.isExpanded,\n            disableDnd: !!this.options.disableDnd,\n            accessor: this,\n        });\n        this.doAddPanel(view);\n        const size = typeof options.size === 'number' ? options.size : Sizing.Distribute;\n        const index = typeof options.index === 'number' ? options.index : undefined;\n        view.init({\n            params: (_a = options.params) !== null && _a !== void 0 ? _a : {},\n            minimumBodySize: options.minimumBodySize,\n            maximumBodySize: options.maximumBodySize,\n            isExpanded: options.isExpanded,\n            title: options.title,\n            containerApi: new PaneviewApi(this),\n            accessor: this,\n        });\n        this.paneview.addPane(view, size, index);\n        view.orientation = this.paneview.orientation;\n        return view;\n    }\n    removePanel(panel) {\n        const views = this.panels;\n        const index = views.findIndex((_) => _ === panel);\n        this.paneview.removePane(index);\n        this.doRemovePanel(panel);\n    }\n    movePanel(from, to) {\n        this.paneview.moveView(from, to);\n    }\n    getPanel(id) {\n        return this.panels.find((view) => view.id === id);\n    }\n    layout(width, height) {\n        const [size, orthogonalSize] = this.paneview.orientation === Orientation.HORIZONTAL\n            ? [width, height]\n            : [height, width];\n        this.paneview.layout(size, orthogonalSize);\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        const views = this.paneview\n            .getPanes()\n            .map((view, i) => {\n            const size = this.paneview.getViewSize(i);\n            return {\n                size,\n                data: view.toJSON(),\n                minimumSize: minimum(view.minimumBodySize),\n                maximumSize: maximum(view.maximumBodySize),\n                expanded: view.isExpanded(),\n            };\n        });\n        return {\n            views,\n            size: this.paneview.size,\n        };\n    }\n    fromJSON(serializedPaneview) {\n        this.clear();\n        const { views, size } = serializedPaneview;\n        const queue = [];\n        // take note of the existing dimensions\n        const width = this.width;\n        const height = this.height;\n        this.paneview = new Paneview(this.element, {\n            orientation: Orientation.VERTICAL,\n            descriptor: {\n                size,\n                views: views.map((view) => {\n                    const data = view.data;\n                    const body = this.options.createComponent({\n                        id: data.id,\n                        name: data.component,\n                    });\n                    let header;\n                    if (data.headerComponent &&\n                        this.options.createHeaderComponent) {\n                        header = this.options.createHeaderComponent({\n                            id: data.id,\n                            name: data.headerComponent,\n                        });\n                    }\n                    if (!header) {\n                        header = new DefaultHeader();\n                    }\n                    const panel = new PaneFramework({\n                        id: data.id,\n                        component: data.component,\n                        headerComponent: data.headerComponent,\n                        header,\n                        body,\n                        orientation: Orientation.VERTICAL,\n                        isExpanded: !!view.expanded,\n                        disableDnd: !!this.options.disableDnd,\n                        accessor: this,\n                    });\n                    this.doAddPanel(panel);\n                    queue.push(() => {\n                        var _a;\n                        panel.init({\n                            params: (_a = data.params) !== null && _a !== void 0 ? _a : {},\n                            minimumBodySize: view.minimumSize,\n                            maximumBodySize: view.maximumSize,\n                            title: data.title,\n                            isExpanded: !!view.expanded,\n                            containerApi: new PaneviewApi(this),\n                            accessor: this,\n                        });\n                        panel.orientation = this.paneview.orientation;\n                    });\n                    setTimeout(() => {\n                        // the original onDidAddView events are missed since they are fired before we can subcribe to them\n                        this._onDidAddView.fire(panel);\n                    }, 0);\n                    return { size: view.size, view: panel };\n                }),\n            },\n        });\n        this.layout(width, height);\n        queue.forEach((f) => f());\n        this._onDidLayoutfromJSON.fire();\n    }\n    clear() {\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n    doAddPanel(panel) {\n        const disposable = new CompositeDisposable(panel.onDidDrop((event) => {\n            this._onDidDrop.fire(event);\n        }), panel.onUnhandledDragOverEvent((event) => {\n            this._onUnhandledDragOverEvent.fire(event);\n        }));\n        this._viewDisposables.set(panel.id, disposable);\n    }\n    doRemovePanel(panel) {\n        const disposable = this._viewDisposables.get(panel.id);\n        if (disposable) {\n            disposable.dispose();\n            this._viewDisposables.delete(panel.id);\n        }\n    }\n    dispose() {\n        super.dispose();\n        for (const [_, value] of this._viewDisposables.entries()) {\n            value.dispose();\n        }\n        this._viewDisposables.clear();\n        this.paneview.dispose();\n    }\n}\n","import { BasePanelView, } from '../gridview/basePanelView';\nimport { SplitviewPanelApiImpl } from '../api/splitviewPanelApi';\nimport { Orientation } from './splitview';\nimport { Emitter } from '../events';\nexport class SplitviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const size = typeof this._minimumSize === 'function'\n            ? this._minimumSize()\n            : this._minimumSize;\n        if (size !== this._evaluatedMinimumSize) {\n            this._evaluatedMinimumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get maximumSize() {\n        const size = typeof this._maximumSize === 'function'\n            ? this._maximumSize()\n            : this._maximumSize;\n        if (size !== this._evaluatedMaximumSize) {\n            this._evaluatedMaximumSize = size;\n            this.updateConstraints();\n        }\n        return size;\n    }\n    get snap() {\n        return this._snap;\n    }\n    constructor(id, componentName) {\n        super(id, componentName, new SplitviewPanelApiImpl(id, componentName));\n        this._evaluatedMinimumSize = 0;\n        this._evaluatedMaximumSize = Number.POSITIVE_INFINITY;\n        this._minimumSize = 0;\n        this._maximumSize = Number.POSITIVE_INFINITY;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.api.initialize(this);\n        this.addDisposables(this._onDidChange, this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.setActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumSize === 'number' ||\n                typeof event.minimumSize === 'function') {\n                this._minimumSize = event.minimumSize;\n            }\n            if (typeof event.maximumSize === 'number' ||\n                typeof event.maximumSize === 'function') {\n                this._maximumSize = event.maximumSize;\n            }\n            this.updateConstraints();\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }));\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    layout(size, orthogonalSize) {\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        super.init(parameters);\n        this._priority = parameters.priority;\n        if (parameters.minimumSize) {\n            this._minimumSize = parameters.minimumSize;\n        }\n        if (parameters.maximumSize) {\n            this._maximumSize = parameters.maximumSize;\n        }\n        if (parameters.snap) {\n            this._snap = parameters.snap;\n        }\n    }\n    toJSON() {\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ||\n            value === Number.POSITIVE_INFINITY\n            ? undefined\n            : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, super.toJSON()), { minimumSize: minimum(this.minimumSize), maximumSize: maximum(this.maximumSize) });\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            maximumSize: this._evaluatedMaximumSize,\n            minimumSize: this._evaluatedMinimumSize,\n        });\n    }\n}\n","import { GridviewApi, PaneviewApi, SplitviewApi, } from '../api/component.api';\nimport { DockviewComponent } from '../dockview/dockviewComponent';\nimport { GridviewComponent } from '../gridview/gridviewComponent';\nimport { PaneviewComponent } from '../paneview/paneviewComponent';\nimport { SplitviewComponent } from '../splitview/splitviewComponent';\nexport function createDockview(element, options) {\n    const component = new DockviewComponent(element, options);\n    return component.api;\n}\nexport function createSplitview(element, options) {\n    const component = new SplitviewComponent(element, options);\n    return new SplitviewApi(component);\n}\nexport function createGridview(element, options) {\n    const component = new GridviewComponent(element, options);\n    return new GridviewApi(component);\n}\nexport function createPaneview(element, options) {\n    const component = new PaneviewComponent(element, options);\n    return new PaneviewApi(component);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DockviewDisposable, } from 'dockview-core';\n/**\n * This component is intended to interface between vanilla-js and React hence we need to be\n * creative in how we update props.\n * A ref of the component is exposed with an update method; which when called stores the props\n * as a ref within this component and forcefully triggers a re-render of the component using\n * the ref of props we just set on the renderered component as the props passed to the inner\n * component\n */\nconst ReactComponentBridge = (props, ref) => {\n    const [_, triggerRender] = React.useState();\n    const _props = React.useRef(props.componentProps);\n    React.useImperativeHandle(ref, () => ({\n        update: (componentProps) => {\n            _props.current = Object.assign(Object.assign({}, _props.current), componentProps);\n            /**\n             * setting a arbitrary piece of state within this component will\n             * trigger a re-render.\n             * we use this rather than updating through a prop since we can\n             * pass a ref into the vanilla-js world.\n             */\n            triggerRender(Date.now());\n        },\n    }), []);\n    return React.createElement(props.component, _props.current);\n};\nReactComponentBridge.displayName = 'DockviewReactJsBridge';\n/**\n * Since we are storing the React.Portal references in a rendered array they\n * require a key property like any other React element rendered in an array\n * to prevent excessive re-rendering\n */\nconst uniquePortalKeyGenerator = (() => {\n    let value = 1;\n    return { next: () => `dockview_react_portal_key_${(value++).toString()}` };\n})();\nexport const ReactPartContext = React.createContext({});\nexport class ReactPart {\n    constructor(parent, portalStore, component, parameters, context) {\n        this.parent = parent;\n        this.portalStore = portalStore;\n        this.component = component;\n        this.parameters = parameters;\n        this.context = context;\n        this._initialProps = {};\n        this.disposed = false;\n        this.createPortal();\n    }\n    update(props) {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!this.componentInstance) {\n            // if the component is yet to be mounted store the props\n            this._initialProps = Object.assign(Object.assign({}, this._initialProps), props);\n        }\n        else {\n            this.componentInstance.update(props);\n        }\n    }\n    createPortal() {\n        if (this.disposed) {\n            throw new Error('invalid operation: resource is already disposed');\n        }\n        if (!isReactComponent(this.component)) {\n            /**\n             * we know this isn't a React.FunctionComponent so throw an error here.\n             * if we do not intercept then React library will throw a very obsure error\n             * for the same reason... at least at this point we will emit a sensible stacktrace.\n             */\n            throw new Error('Dockview: Only React.memo(...), React.ForwardRef(...) and functional components are accepted as components');\n        }\n        const bridgeComponent = React.createElement(React.forwardRef(ReactComponentBridge), {\n            component: this\n                .component,\n            componentProps: this.parameters,\n            ref: (element) => {\n                this.componentInstance = element;\n                if (Object.keys(this._initialProps).length > 0) {\n                    this.componentInstance.update(this._initialProps);\n                    this._initialProps = {}; // don't keep a reference to the users object once no longer required\n                }\n            },\n        });\n        const node = this.context\n            ? React.createElement(ReactPartContext.Provider, { value: this.context }, bridgeComponent)\n            : bridgeComponent;\n        const portal = ReactDOM.createPortal(node, this.parent, uniquePortalKeyGenerator.next());\n        this.ref = {\n            portal,\n            disposable: this.portalStore.addPortal(portal),\n        };\n    }\n    dispose() {\n        var _a;\n        (_a = this.ref) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        this.disposed = true;\n    }\n}\n/**\n * A React Hook that returns an array of portals to be rendered by the user of this hook\n * and a disposable function to add a portal. Calling dispose removes this portal from the\n * portal array\n */\nexport const usePortalsLifecycle = () => {\n    const [portals, setPortals] = React.useState([]);\n    React.useDebugValue(`Portal count: ${portals.length}`);\n    const addPortal = React.useCallback((portal) => {\n        setPortals((existingPortals) => [...existingPortals, portal]);\n        let disposed = false;\n        return DockviewDisposable.from(() => {\n            if (disposed) {\n                throw new Error('invalid operation: resource already disposed');\n            }\n            disposed = true;\n            setPortals((existingPortals) => existingPortals.filter((p) => p !== portal));\n        });\n    }, []);\n    return [portals, addPortal];\n};\nexport function isReactComponent(component) {\n    /**\n     * Yes, we could use \"react-is\" but that would introduce an unwanted peer dependency\n     * so for now we will check in a rather crude fashion...\n     */\n    return (typeof component === 'function' /** Functional Componnts */ ||\n        !!(component === null || component === void 0 ? void 0 : component.$$typeof) /** React.memo(...) Components */);\n}\n","import { ReactPart } from '../react';\nimport { DockviewEmitter, } from 'dockview-core';\nexport class ReactPanelContentPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._onDidFocus = new DockviewEmitter();\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = new DockviewEmitter();\n        this.onDidBlur = this._onDidBlur.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        // TODO\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop\n    }\n    dispose() {\n        var _a;\n        this._onDidFocus.dispose();\n        this._onDidBlur.dispose();\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactPanelHeaderPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    focus() {\n        //noop\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n        });\n    }\n    update(event) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: event.params });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nexport class ReactWatermarkPart {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            group: parameters.group,\n            containerApi: parameters.containerApi,\n        });\n    }\n    focus() {\n        // noop\n    }\n    update(params) {\n        var _a, _b, _c;\n        if (this.parameters) {\n            this.parameters.params = params.params;\n        }\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update({ params: (_c = (_b = this.parameters) === null || _b === void 0 ? void 0 : _b.params) !== null && _c !== void 0 ? _c : {} });\n    }\n    layout(_width, _height) {\n        // noop - retrieval from api\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import { ReactPart } from '../react';\nimport { DockviewCompositeDisposable, DockviewMutableDisposable, } from 'dockview-core';\nexport class ReactHeaderActionsRendererPart {\n    get element() {\n        return this._element;\n    }\n    get part() {\n        return this._part;\n    }\n    constructor(component, reactPortalStore, _group) {\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._group = _group;\n        this.mutableDisposable = new DockviewMutableDisposable();\n        this._element = document.createElement('div');\n        this._element.className = 'dv-react-part';\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.mutableDisposable.value = new DockviewCompositeDisposable(this._group.model.onDidAddPanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidRemovePanel(() => {\n            this.updatePanels();\n        }), this._group.model.onDidActivePanelChange(() => {\n            this.updateActivePanel();\n        }), parameters.api.onDidActiveChange(() => {\n            this.updateGroupActive();\n        }));\n        this._part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            api: parameters.api,\n            containerApi: parameters.containerApi,\n            panels: this._group.model.panels,\n            activePanel: this._group.model.activePanel,\n            isGroupActive: this._group.api.isActive,\n            group: this._group,\n        });\n    }\n    dispose() {\n        var _a;\n        this.mutableDisposable.dispose();\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    update(event) {\n        var _a;\n        (_a = this._part) === null || _a === void 0 ? void 0 : _a.update(event.params);\n    }\n    updatePanels() {\n        this.update({ params: { panels: this._group.model.panels } });\n    }\n    updateActivePanel() {\n        this.update({\n            params: {\n                activePanel: this._group.model.activePanel,\n            },\n        });\n    }\n    updateGroupActive() {\n        this.update({\n            params: {\n                isGroupActive: this._group.api.isActive,\n            },\n        });\n    }\n}\n","import React from 'react';\nimport { PROPERTY_KEYS_DOCKVIEW, createDockview, } from 'dockview-core';\nimport { ReactPanelContentPart } from './reactContentPart';\nimport { ReactPanelHeaderPart } from './reactHeaderPart';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactWatermarkPart } from './reactWatermarkPart';\nimport { ReactHeaderActionsRendererPart } from './headerActionsRenderer';\nfunction createGroupControlElement(component, store) {\n    return component\n        ? (groupPanel) => {\n            return new ReactHeaderActionsRendererPart(component, store, groupPanel);\n        }\n        : undefined;\n}\nconst DEFAULT_REACT_TAB = 'props.defaultTabComponent';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_DOCKVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const DockviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const dockviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_DOCKVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (dockviewRef.current) {\n            dockviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_DOCKVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        const frameworkOptions = {\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n        };\n        const api = createDockview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        dockviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = dockviewRef.current.onWillDrop((event) => {\n            if (props.onWillDrop) {\n                props.onWillDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onWillDrop]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelContentPart(options.id, props.components[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!dockviewRef.current) {\n            return;\n        }\n        const frameworkTabComponents = (_a = props.tabComponents) !== null && _a !== void 0 ? _a : {};\n        if (props.defaultTabComponent) {\n            frameworkTabComponents[DEFAULT_REACT_TAB] =\n                props.defaultTabComponent;\n        }\n        dockviewRef.current.updateOptions({\n            defaultTabComponent: props.defaultTabComponent\n                ? DEFAULT_REACT_TAB\n                : undefined,\n            createTabComponent(options) {\n                return new ReactPanelHeaderPart(options.id, frameworkTabComponents[options.name], {\n                    addPortal,\n                });\n            },\n        });\n    }, [props.tabComponents, props.defaultTabComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createWatermarkComponent: props.watermarkComponent\n                ? () => {\n                    return new ReactWatermarkPart('watermark', props.watermarkComponent, {\n                        addPortal,\n                    });\n                }\n                : undefined,\n        });\n    }, [props.watermarkComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createRightHeaderActionComponent: createGroupControlElement(props.rightHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.rightHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createLeftHeaderActionComponent: createGroupControlElement(props.leftHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.leftHeaderActionsComponent]);\n    React.useEffect(() => {\n        if (!dockviewRef.current) {\n            return;\n        }\n        dockviewRef.current.updateOptions({\n            createPrefixHeaderActionComponent: createGroupControlElement(props.prefixHeaderActionsComponent, { addPortal }),\n        });\n    }, [props.prefixHeaderActionsComponent]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nDockviewReact.displayName = 'DockviewComponent';\n","import React from 'react';\nexport const CloseButton = () => (React.createElement(\"svg\", { height: \"11\", width: \"11\", viewBox: \"0 0 28 28\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n    React.createElement(\"path\", { d: \"M2.1 27.3L0 25.2L11.55 13.65L0 2.1L2.1 0L13.65 11.55L25.2 0L27.3 2.1L15.75 13.65L27.3 25.2L25.2 27.3L13.65 15.75L2.1 27.3Z\" })));\nexport const ExpandMore = () => {\n    return (React.createElement(\"svg\", { width: \"11\", height: \"11\", viewBox: \"0 0 24 15\", \"aria-hidden\": 'false', focusable: false, className: \"dockview-svg\" },\n        React.createElement(\"path\", { d: \"M12 14.15L0 2.15L2.15 0L12 9.9L21.85 0.0499992L24 2.2L12 14.15Z\" })));\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { CloseButton } from '../svg';\nfunction useTitle(api) {\n    const [title, setTitle] = React.useState(api.title);\n    React.useEffect(() => {\n        const disposable = api.onDidTitleChange((event) => {\n            setTitle(event.title);\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [api]);\n    return title;\n}\nexport const DockviewDefaultTab = (_a) => {\n    var { api, containerApi: _containerApi, params: _params, hideClose, closeActionOverride, onPointerDown, onPointerUp, onPointerLeave } = _a, rest = __rest(_a, [\"api\", \"containerApi\", \"params\", \"hideClose\", \"closeActionOverride\", \"onPointerDown\", \"onPointerUp\", \"onPointerLeave\"]);\n    const title = useTitle(api);\n    const isMiddleMouseButton = React.useRef(false);\n    const onClose = React.useCallback((event) => {\n        event.preventDefault();\n        if (closeActionOverride) {\n            closeActionOverride();\n        }\n        else {\n            api.close();\n        }\n    }, [api, closeActionOverride]);\n    const onBtnPointerDown = React.useCallback((event) => {\n        event.preventDefault();\n    }, []);\n    const _onPointerDown = React.useCallback((event) => {\n        isMiddleMouseButton.current = event.button === 1;\n        onPointerDown === null || onPointerDown === void 0 ? void 0 : onPointerDown(event);\n    }, [onPointerDown]);\n    const _onPointerUp = React.useCallback((event) => {\n        if (isMiddleMouseButton && event.button === 1 && !hideClose) {\n            isMiddleMouseButton.current = false;\n            onClose(event);\n        }\n        onPointerUp === null || onPointerUp === void 0 ? void 0 : onPointerUp(event);\n    }, [onPointerUp, onClose, hideClose]);\n    const _onPointerLeave = React.useCallback((event) => {\n        isMiddleMouseButton.current = false;\n        onPointerLeave === null || onPointerLeave === void 0 ? void 0 : onPointerLeave(event);\n    }, [onPointerLeave]);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": \"dockview-dv-default-tab\" }, rest, { onPointerDown: _onPointerDown, onPointerUp: _onPointerUp, onPointerLeave: _onPointerLeave, className: \"dv-default-tab\" }),\n        React.createElement(\"span\", { className: \"dv-default-tab-content\" }, title),\n        !hideClose && (React.createElement(\"div\", { className: \"dv-default-tab-action\", onPointerDown: onBtnPointerDown, onClick: onClose },\n            React.createElement(CloseButton, null)))));\n};\n","import { SplitviewApi, SplitviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactPanelView extends SplitviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            containerApi: new SplitviewApi(this._params.accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n","import { GridviewApi, GridviewPanel, } from 'dockview-core';\nimport { ReactPart } from '../react';\nexport class ReactGridPanelView extends GridviewPanel {\n    constructor(id, component, reactComponent, reactPortalStore) {\n        super(id, component);\n        this.reactComponent = reactComponent;\n        this.reactPortalStore = reactPortalStore;\n    }\n    getComponent() {\n        var _a, _b;\n        return new ReactPart(this.element, this.reactPortalStore, this.reactComponent, {\n            params: (_b = (_a = this._params) === null || _a === void 0 ? void 0 : _a.params) !== null && _b !== void 0 ? _b : {},\n            api: this.api,\n            // TODO: fix casting hack\n            containerApi: new GridviewApi(this._params\n                .accessor),\n        });\n    }\n}\n","import React from 'react';\nimport { createGridview, PROPERTY_KEYS_GRIDVIEW, } from 'dockview-core';\nimport { ReactGridPanelView } from './view';\nimport { usePortalsLifecycle } from '../react';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_GRIDVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const GridviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const gridviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_GRIDVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (gridviewRef.current) {\n            gridviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_GRIDVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createGridview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        gridviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!gridviewRef.current) {\n            return;\n        }\n        gridviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactGridPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nGridviewReact.displayName = 'GridviewComponent';\n","import { ReactPart } from '../react';\nexport class PanePanelSection {\n    get element() {\n        return this._element;\n    }\n    constructor(id, component, reactPortalStore) {\n        this.id = id;\n        this.component = component;\n        this.reactPortalStore = reactPortalStore;\n        this._element = document.createElement('div');\n        this._element.style.height = '100%';\n        this._element.style.width = '100%';\n    }\n    init(parameters) {\n        this.part = new ReactPart(this.element, this.reactPortalStore, this.component, {\n            params: parameters.params,\n            api: parameters.api,\n            title: parameters.title,\n            containerApi: parameters.containerApi,\n        });\n    }\n    toJSON() {\n        return {\n            id: this.id,\n        };\n    }\n    update(params) {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.update(params.params);\n    }\n    dispose() {\n        var _a;\n        (_a = this.part) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","import React from 'react';\nimport { createPaneview, PROPERTY_KEYS_PANEVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { PanePanelSection } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_PANEVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const PaneviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const paneviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_PANEVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (paneviewRef.current) {\n            paneviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_PANEVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        var _a;\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        };\n        const api = createPaneview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        paneviewRef.current = api;\n        return () => {\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return;\n        }\n        paneviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new PanePanelSection(options.id, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    React.useEffect(() => {\n        var _a;\n        if (!paneviewRef.current) {\n            return;\n        }\n        const headerComponents = (_a = props.headerComponents) !== null && _a !== void 0 ? _a : {};\n        paneviewRef.current.updateOptions({\n            createHeaderComponent: (options) => {\n                return new PanePanelSection(options.id, headerComponents[options.name], { addPortal });\n            },\n        });\n    }, [props.headerComponents]);\n    React.useEffect(() => {\n        if (!paneviewRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const disposable = paneviewRef.current.onDidDrop((event) => {\n            if (props.onDidDrop) {\n                props.onDidDrop(event);\n            }\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [props.onDidDrop]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nPaneviewReact.displayName = 'PaneviewComponent';\n","import * as React from 'react';\nimport './codeSandboxButton.scss';\nimport { ThemePicker } from './container';\n\nconst BASE_SANDBOX_URL =\n    'https://codesandbox.io/s/github/mathuo/dockview/tree/master/packages/docs/sandboxes';\n\nconst createSvgElementFromPath = (params: {\n    height: string;\n    width: string;\n    viewbox: string;\n    path: string;\n}) => {\n    return (\n        <svg\n            height={params.height}\n            width={params.width}\n            viewBox={params.viewbox}\n            focusable={false}\n            className={'dockview-svg'}\n        >\n            <path d={params.path} />\n        </svg>\n    );\n};\n\nconst CloseButton = () =>\n    createSvgElementFromPath({\n        width: '16',\n        height: '16',\n        viewbox: '0 0 50 58',\n        path: 'M22.5581 50.9938V30.1717L4.65116 19.869V31.7386L12.8536 36.4939V45.4198L22.5581 50.9938ZM27.2093 51.1162L37.0931 45.4226V36.2851L45.3488 31.501V19.7801L27.2093 30.2529V51.1162ZM42.9633 15.7867L33.4288 10.2615L25.0571 15.1193L16.6219 10.2567L7.00237 15.8557L24.9542 26.1842L42.9633 15.7867ZM0 43.4008V14.5498L24.9974 0L50 14.4887V43.3552L24.9969 57.7584L0 43.4008Z',\n    });\n\nexport const CodeSandboxButton = (props: {\n    id: string;\n    hideThemePicker?: boolean;\n}) => {\n    const url = React.useMemo(() => {\n        if (!props.id) {\n            return '';\n        }\n        return `${BASE_SANDBOX_URL}/${props.id}`;\n    }, [props.id]);\n\n    return (\n        <>\n            {!props.hideThemePicker && <ThemePicker />}\n            <span\n                className=\"codesandbox-button\"\n                style={{ display: 'flex', alignItems: 'center' }}\n            >\n                <span className=\"codesandbox-button-pretext\">{`Open in `}</span>\n                <a\n                    href={url}\n                    target={'_blank'}\n                    rel='noopener'\n                    className=\"codesandbox-button-content\"\n                >\n                    <span\n                        style={{\n                            fontWeight: 'bold',\n                            paddingRight: '4px',\n                        }}\n                    >\n                        CodeSandbox\n                    </span>\n                    <CloseButton />\n                </a>\n            </span>\n        </>\n    );\n};\n","import * as React from 'react';\nimport './spinner.scss';\n\nexport const Spinner = () => {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport { CodeSandboxButton } from './codeSandboxButton';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport './container.scss';\nimport { Spinner } from './spinner';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\nexport const Container = (props: {\n    children?: React.ReactNode;\n    height?: number;\n    injectVanillaJS?: (parent: HTMLElement) => void;\n    sandboxId?: string;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!props.injectVanillaJS) {\n            return;\n        }\n\n        props.injectVanillaJS(ref.current);\n    }, [props.injectVanillaJS]);\n\n    return (\n        <BrowserOnly>\n            {() => (\n                <>\n                    <div\n                        ref={ref}\n                        style={{\n                            height: props.height\n                                ? `${props.height}px`\n                                : '300px',\n                        }}\n                    >\n                        {props.children}\n                    </div>\n                    <div\n                        style={{\n                            padding: '2px 0px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            fontSize: '14px',\n                        }}\n                    >\n                        <span style={{ flexGrow: 1 }} />\n                        {props.sandboxId && (\n                            <CodeSandboxButton id={props.sandboxId} />\n                        )}\n                    </div>\n                </>\n            )}\n        </BrowserOnly>\n    );\n};\n\nconst ReactIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg\"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/react-icon.svg')}\n        />\n    );\n};\n\nconst JavascriptIcon = (props: { height: number; width: number }) => {\n    return (\n        <img\n            // className=\"dockview-svg \"\n            style={{ marginRight: '0px 4px' }}\n            height={props.height}\n            width={props.width}\n            src={useBaseUrl('img/js-icon.svg')}\n        />\n    );\n};\n\nconst themes = [\n    'dockview-theme-abyss',\n    'dockview-theme-dark',\n    'dockview-theme-light',\n    'dockview-theme-vs',\n    'dockview-theme-dracula',\n    'dockview-theme-replit',\n];\n\nfunction useLocalStorageItem(key: string, defaultValue: string): string {\n    const [item, setItem] = React.useState<string | null>(\n        localStorage.getItem(key)\n    );\n\n    React.useEffect(() => {\n        const listener = (event: StorageEvent) => {\n            setItem(localStorage.getItem(key));\n        };\n\n        window.addEventListener('storage', listener);\n\n        setItem(localStorage.getItem(key));\n\n        return () => {\n            window.removeEventListener('storage', listener);\n        };\n    }, [key]);\n\n    return item === null ? defaultValue : item;\n}\n\nexport const ThemePicker = () => {\n    const [theme, setTheme] = React.useState<string>(\n        localStorage.getItem('dv-theme-class-name') || themes[0]\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('dv-theme-class-name', theme);\n        window.dispatchEvent(new StorageEvent('storage'));\n    }, [theme]);\n\n    return (\n        <div\n            style={{\n              \n                height: '20px',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0px 0px 0px 4px',\n            }}\n        >\n            <span style={{ paddingRight: '4px' }}>{'Theme: '}</span>\n            <select\n                style={{ backgroundColor: 'inherit', color: 'inherit' }}\n                onChange={(e) => setTheme(e.target.value)}\n                value={theme}\n            >\n                {themes.map((theme) => (\n                    <option key={theme} value={theme}>\n                        {theme}\n                    </option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport function useTheme(): string {\n    return useLocalStorageItem('dv-theme-class-name', 'dockview-theme-abyss');\n}\n\nexport const MultiFrameworkContainer2 = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    const [framework, setFramework] = React.useState<string>('React');\n\n    const [animation, setAnimation] = React.useState<boolean>(false);\n\n    const theme = useLocalStorageItem(\n        'dv-theme-class-name',\n        'dockview-theme-abyss'\n    );\n\n    React.useEffect(() => {\n        setAnimation(true);\n\n        setTimeout(() => {\n            setAnimation(false);\n        }, 500);\n    }, [framework]);\n\n    React.useEffect(() => {\n        if (!ref.current) {\n            return;\n        }\n\n        if (framework === 'Javascript') {\n            const disposable = props.typescript(ref.current);\n\n            return () => {\n                disposable.dispose();\n            };\n        }\n\n        return;\n    }, [props.typescript, framework]);\n\n    const sandboxId = React.useMemo(() => {\n        if (framework === 'Javascript') {\n            return `javascript/${props.sandboxId}`;\n        }\n        return props.sandboxId;\n    }, [props.sandboxId, framework]);\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{\n                    position: 'relative',\n                    height: props.height ? `${props.height}px` : '300px',\n                }}\n            >\n                {animation && (\n                    <div\n                        style={{\n                            background: 'rgba(30,30,30)',\n                            position: 'absolute',\n                            zIndex: 9999,\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <Spinner />\n                    </div>\n                )}\n                {framework === 'React' && <props.react theme={theme} />}\n            </div>\n            <div\n                style={{\n                    margin: '2px 0px',\n                    padding: '2px 0px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '14px',\n                    height: '24px',\n                }}\n            >\n                <div\n                    className=\"framework-button\"\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                    }}\n                >\n                    {props.typescript &&\n                        (framework === 'React' ? (\n                            <ReactIcon height={16} width={16} />\n                        ) : (\n                            <JavascriptIcon height={16} width={16} />\n                        ))}\n                    {props.typescript && (\n                        <select\n                            style={{\n                                border: 'none',\n                                fontWeight: 'bold',\n                                backgroundColor: 'inherit',\n                                cursor: 'inherit',\n                                color: 'inherit',\n                                height: '24px',\n                            }}\n                            onChange={(e) => {\n                                const target = e.target as HTMLSelectElement;\n                                setFramework(target.value);\n                            }}\n                        >\n                            <option value=\"React\">{'React'}</option>\n                            <option value=\"Javascript\">{'Javascript'}</option>\n                        </select>\n                    )}\n                </div>\n                <span style={{ flexGrow: 1 }} />\n                <CodeSandboxButton\n                    id={sandboxId}\n                    hideThemePicker={props.hideThemePicker}\n                />\n            </div>\n        </>\n    );\n};\n\nexport const MultiFrameworkContainer = (props: {\n    react: React.FC;\n    typescript?: (parent: HTMLElement) => { dispose: () => void };\n    sandboxId: string;\n    height?: number;\n    hideThemePicker?: boolean;\n}) => {\n    return (\n        <BrowserOnly>\n            {() => <MultiFrameworkContainer2 {...props} />}\n        </BrowserOnly>\n    );\n};\n","import {\n    DockviewReact,\n    DockviewReadyEvent,\n    IDockviewPanelProps,\n    IDockviewPanelHeaderProps,\n} from 'dockview';\nimport * as React from 'react';\nimport './app.scss';\n\nconst components = {\n    default: (props: IDockviewPanelProps<{ title: string; x?: number }>) => {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    color: 'white',\n                    height: '100%',\n                }}\n            >\n                <span>{`${props.params.title}`}</span>\n                {props.params.x && <span>{`  ${props.params.x}`}</span>}\n            </div>\n        );\n    },\n    isolatedApp: (\n        props: IDockviewPanelProps<{ title: string; x?: number }>\n    ) => {\n        const onReady = (event: DockviewReadyEvent) => {\n            const panel1 = event.api.addPanel({\n                id: 'panel_1',\n                component: 'default',\n                params: {\n                    title: 'Tab 1',\n                },\n            });\n            const panel2 = event.api.addPanel({\n                id: 'panel_2',\n                component: 'default',\n                params: {\n                    title: 'Tab 2',\n                },\n            });\n            const panel3 = event.api.addPanel({\n                id: 'panel_3',\n                component: 'default',\n                params: {\n                    title: 'Tab 3',\n                },\n            });\n        };\n        return (\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className=\"dockview-theme-abyss\"\n            />\n        );\n    },\n};\n\nconst tabComponents = {\n    default: (props: IDockviewPanelHeaderProps<{ title: string }>) => {\n        return (\n            <div className=\"my-custom-tab\">\n                <span>{props.params.title}</span>\n                <span style={{ flexGrow: 1 }} />\n\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    minimize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    maximize\n                </span>\n                <span className=\"my-custom-tab-icon material-symbols-outlined\">\n                    close\n                </span>\n            </div>\n        );\n    },\n};\n\nconst DockviewNative2 = (props: { theme?: string }) => {\n    const onReady = (event: DockviewReadyEvent) => {\n        const panel1 = event.api.addPanel({\n            id: 'panel_1',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 1',\n            },\n        });\n        panel1.group.locked = true;\n\n        const panel2 = event.api.addPanel({\n            id: 'panel_2',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 2',\n            },\n            position: {\n                direction: 'right',\n            },\n        });\n        panel2.group.locked = true;\n\n        const panel3 = event.api.addPanel({\n            id: 'panel_3',\n            component: 'isolatedApp',\n            tabComponent: 'default',\n            params: {\n                title: 'Window 3',\n            },\n            position: {\n                direction: 'below',\n            },\n        });\n        panel3.group.locked = true;\n    };\n\n    return (\n        <div\n            style={{\n                height: '500px',\n                display: 'flex',\n                flexDirection: 'column',\n            }}\n        >\n            <DockviewReact\n                onReady={onReady}\n                components={components}\n                tabComponents={tabComponents}\n                className={`${props.theme || 'dockview-theme-abyss'}`}\n                singleTabMode=\"fullwidth\"\n            />\n        </div>\n    );\n};\n\nexport default DockviewNative2;\n","\n\nexport const frontMatter = {};\nexport const contentTitle = 'Window-like mananger with tabs';\nexport const metadata = {\n  \"id\": \"advanced/advanced\",\n  \"title\": \"Window-like mananger with tabs\",\n  \"description\": \"\",\n  \"source\": \"@site/docs/advanced/advanced.mdx\",\n  \"sourceDirName\": \"advanced\",\n  \"slug\": \"/advanced/\",\n  \"permalink\": \"/docs/advanced/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"tutorialSidebar\",\n  \"previous\": {\n    \"title\": \"Tabview\",\n    \"permalink\": \"/docs/other/tabview\"\n  },\n  \"next\": {\n    \"title\": \"iframes\",\n    \"permalink\": \"/docs/advanced/iframe\"\n  }\n};\nexport const assets = {\n\n};\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport {MultiFrameworkContainer} from '@site/src/components/ui/container';\nimport DockviewNative2 from '@site/sandboxes/nativeapp-dockview/src/app';\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"window-like-mananger-with-tabs\",\n      children: \"Window-like mananger with tabs\"\n    }), \"\\n\", _jsx(MultiFrameworkContainer, {\n      sandboxId: \"nativeapp-dockview\",\n      react: DockviewNative2\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["BrowserOnly","_ref","children","fallback","useIsBrowser","_jsx","_Fragment","TransferObject","PanelTransfer","constructor","viewId","groupId","panelId","super","this","PaneTransfer","paneId","LocalSelectionTransfer","getInstance","INSTANCE","hasData","proto","clearData","undefined","data","getData","setData","getPanelData","panelTransfer","prototype","getPaneData","paneTransfer","Event","Disposable","any","_len","arguments","length","Array","_key","listener","disposables","map","child","dispose","forEach","d","DockviewEvent","_defaultPrevented","defaultPrevented","preventDefault","AcceptableEvent","_isAccepted","isAccepted","accept","Stacktrace","create","_a","Error","stack","value","print","console","warn","Listener","callback","stacktrace","Emitter","setLeakageMonitorEnabled","isEnabled","ENABLE_TRACKING","MEMORY_LEAK_WATCHER","clear","_last","options","_listeners","_disposed","event","_event","replay","push","index","indexOf","splice","add","fire","e","queueMicrotask","delete","addDisposableWindowListener","element","type","addEventListener","removeEventListener","addDisposableListener","events","Map","size","set","AsapEvent","_onFired","_currentFireCount","_queued","onEvent","fireCountAtTimeOfEventSubscription","NONE","from","func","CompositeDisposable","isDisposed","_isDisposed","args","_disposables","addDisposables","_len2","_key2","arg","MutableDisposable","_disposable","disposable","watchElementResize","cb","observer","ResizeObserver","entires","requestAnimationFrame","firstEntry","observe","unobserve","disconnect","removeClasses","classes","classname","classList","contains","remove","addClasses","toggleClass","className","isToggled","hasClass","isAncestor","testChild","testAncestor","parentNode","getElementsByTagName","tag","slice","call","document","trackFocus","FocusTracker","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","hasFocus","activeElement","loosingFocus","onFocus","onBlur","window","setTimeout","_refreshStateHandler","HTMLElement","refreshState","QUASI_PREVENT_DEFAULT_KEY","quasiDefaultPrevented","getDomNodePagePosition","domNode","left","top","width","height","getBoundingClientRect","scrollX","scrollY","disableIframePointEvents","iframes","original","WeakMap","iframe","style","pointerEvents","release","get","Classnames","_classNames","setClassNames","classNames","split","filter","v","trim","tail","arr","sequenceEquals","arr1","arr2","i","pushToStart","unshift","pushToEnd","array","findIndex","t","clamp","min","max","Math","sequentialNumberGenerator","next","toString","range","to","result","ViewItem","_size","cachedVisibleSize","_cachedVisibleSize","visible","minimumSize","view","viewMinimumSize","maximumSize","viewMaximumSize","priority","snap","enabled","container","setVisible","toggle","Orientation","SashState","LayoutPriority","Sizing","Distribute","Split","Invisible","Splitview","contentSize","_contentSize","orthogonalSize","_orthogonalSize","viewItems","proportions","_proportions","orientation","_orientation","tmp","HORIZONTAL","reduce","r","item","Number","POSITIVE_INFINITY","startSnappingEnabled","_startSnappingEnabled","updateSashEnablement","endSnappingEnabled","_endSnappingEnabled","disabled","_disabled","margin","_margin","_b","_this","sashes","_onDidSashEnd","onDidSashEnd","_onDidAddView","onDidAddView","_onDidRemoveView","onDidRemoveView","resize","delta","sizes","lowPriorityIndexes","highPriorityIndexes","overloadMinDelta","overloadMaxDelta","snapBefore","snapAfter","x","NEGATIVE_INFINITY","upIndexes","downIndexes","upItems","upSizes","downItems","downSizes","minDeltaUp","_","maxDeltaUp","maxDeltaDown","minDeltaDown","minDelta","maxDelta","snapped","snapView","limitDelta","actualDelta","deltaUp","viewDelta","deltaDown","VERTICAL","createContainer","proportionalLayout","viewContainer","createViewContainer","sashContainer","createSashContainer","appendChild","styles","descriptor","views","viewDescriptor","sizing","addView","saveProportions","separatorBorder","removeProperty","setProperty","isViewVisible","setViewVisible","viewItem","distributeEmptySpace","layoutViews","getViewSize","resizeView","indexes","Low","High","round","relayout","getViews","onDidChange","skipLayout","createElement","viewSize","newSize","removeChild","insertBefore","sash","onPointerStart","start","clientX","clientY","sashIndex","fn","firstIndex","s","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","snappedViewItem","halfSize","floor","onPointerMove","end","sashItem","distributeViewSizes","flexibleViewItems","flexibleSize","removeView","getViewCachedVisibleSize","moveView","layout","previousSize","total","proportion","lowPriorityIndex","emptyDelta","visibleViewItems","sashCount","marginReducedSize","totalLeftOffset","viewLeftOffsets","runningVisiblePanelCount","flag","visiblePanelsBeforeThisView","offset","sashWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","position","snappedBefore","snappedAfter","updateSash","MINIMUM","MAXIMUM","DISABLED","ENABLED","state","orientationClassname","PROPERTY_KEYS_SPLITVIEW","properties","disableAutoResizing","Object","keys","Paneview","splitview","paneItems","skipAnimation","_onDidChange","getPanes","pane","onDidChangeExpansionState","setupAnimation","paneItem","addPane","removePane","skipDispose","animationTimer","clearTimeout","LeafNode","minimumWidth","maximumWidth","minimumHeight","maximumHeight","minimumOrthogonalSize","maximumOrthogonalSize","BranchNode","c","Normal","priorities","some","p","childDescriptors","_childrenDisposable","_onDidVisibilityChange","onDidVisibilityChange","childDescriptor","node","setupChildrenEvents","_visible","isChildVisible","setChildVisible","wereAllChildrenHidden","areAllChildrenHidden","moveChild","_removeChild","_addChild","getChildSize","resizeChild","addChild","getChildCachedVisibleSize","findLeaf","candiateNode","last","flipNode","orthogonal","totalSize","childSize","getGridLocation","parentElement","test","el","firstElementChild","lastElementChild","nextElementSibling","indexInParent","getRelativeLocation","rootOrientation","location","direction","getLocationOrientation","directionOrientation","getDirectionOrientation","rest","_index","serializeBranchNode","box","isGridBranchNode","toJSON","Gridview","_root","root","locked","_locked","branch","pop","maximizedView","_maximizedNode","leaf","hasMaximizedView","maximizeView","getNode","exitMaximizedView","getView","hiddenOnMaximize","hideAllViewsBut","parent","exclude","_onDidMaximizedNodeChange","isMaximized","showViewsInReverseOrder","includes","serialize","maxmizedViewLocation","resullt","maximizedNode","_onDidViewVisibilityChange","deserialize","json","deserializer","_deserialize","_deserializeNode","serializedChild","fromJSON","oldRoot","insertOrthogonalSplitviewAtRoot","childReference","progmaticSelect","_getViews","nodeCachedVisibleSize","path","n","l","onDidViewVisibilityChange","onDidMaximizedNodeChange","parentLocation","pathToParent","grandParent","parentIndex","__","newSiblingSize","newSiblingCachedVisibleSize","newParent","newSibling","nodeToRemove","sibling","isSiblingVisible","siblingSizing","PROPERTY_KEYS_GRIDVIEW","hideBorders","Resizable","_element","disableResizing","_disableResizing","entry","offsetParent","currentElement","DocumentFragment","host","isInDocument","contentRect","nextLayoutId","toTarget","BaseGrid","id","_id","_groups","groups","values","gridview","activeGroup","_activeGroup","_onDidRemove","onDidRemove","_onDidAdd","onDidAdd","_onDidMaximizedChange","onDidMaximizedChange","_onDidActiveChange","onDidActiveChange","_bufferOnDidLayoutChange","onDidLayoutChange","_onDidViewVisibilityChangeMicroTaskQueue","onDidViewVisibilityChangeMicroTaskQueue","panel","isVisible","updateOptions","_c","_d","maximizeGroup","doSetGroupActive","isMaximizedGroup","exitMaximizedGroup","hasMaximizedGroup","doAddGroup","group","doRemoveGroup","has","skipActive","getPanel","setActive","removeGroup","moveToNext","moveToPrevious","forceResize","SplitviewApi","component","panels","onDidLayoutFromJSON","removePanel","focus","addPanel","movePanel","PaneviewApi","onDidDrop","onUnhandledDragOverEvent","GridviewApi","onDidAddPanel","onDidAddGroup","onDidRemovePanel","onDidRemoveGroup","onDidActivePanelChange","onDidActiveGroupChange","force","DockviewApi","totalPanels","gap","onDidMovePanel","onWillDrop","onWillShowOverlay","onWillDragGroup","onWillDragPanel","activePanel","getGroupPanel","addGroup","closeAllGroups","getGroup","addFloatingGroup","onDidMaximizedGroupChange","addPopoutGroup","setGap","DragHandler","dataDisposable","pointerEventsDisposable","_onDragStart","onDragStart","configure","isCancelled","dataTransfer","effectAllowed","items","DragAndDropObserver","callbacks","target","registerListeners","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","WillShowOverlayEvent","nativeEvent","directionToPosition","positionToDirection","DEFAULT_ACTIVATION_SIZE","DEFAULT_SIZE","Droptarget","_state","_onDrop","_onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","removeDropTarget","clientWidth","clientHeight","rect","currentTarget","y","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","markAsUsed","targetElement","overlayElement","append","toggleClasses","stopPropagation","setTargetZones","setOverlayModel","model","overlayModel","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","overlayType","activationSizeOptions","activationSize","threshold","xp","yp","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","PROPERTY_KEYS_PANEVIEW","disableDnd","PaneviewUnhandledDragOverEvent","WillFocusEvent","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","_isVisible","_width","_height","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onWillVisibilityChange","onWillVisibilityChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","getParameters","initialize","parameters","update","params","updateParameters","SplitviewPanelApiImpl","_onDidConstraintsChangeInternal","onDidConstraintsChangeInternal","_onDidConstraintsChange","onDidConstraintsChange","_onDidSizeChange","onDidSizeChange","setConstraints","setSize","PaneviewPanelApiImpl","_pane","_onDidExpansionChange","onDidExpansionChange","_onMouseEnter","onMouseEnter","_onMouseLeave","onMouseLeave","setExpanded","isExpanded","BasePanelView","_params","api","tabIndex","outline","overflow","focusTracker","part","init","getComponent","assign","key","PaneviewPanel","headerSize","_minimumBodySize","_maximumBodySize","minimumBodySize","maximumBodySize","headerVisible","_headerVisible","header","display","headerComponent","isHeaderVisible","_onDidChangeExpansionState","_isExpanded","expandedSize","accessor","ev","isPanelExpanded","renderOnce","expanded","body","bodyPart","getBodyComponent","headerPart","getHeaderComponent","title","lineHeight","minHeight","maxHeight","DraggablePaneviewPanel","_onDidDrop","_onUnhandledDragOverEvent","initDragFeatures","accessorId","draggable","handler","firedEvent","containerApi","existingPanel","allPanels","fromIndex","toIndex","ContentContainer","dropTarget","shiftKey","show","hide","renderPanel","asActive","doRender","isPanelActive","content","renderer","renderContainer","detatch","attach","referenceContainer","openPanel","closePanel","TabDragHandler","Tab","_onPointDown","onPointerDown","_onDropped","dragHandler","setContent","GroupDragHandler","dragEvent","getComputedStyle","bgColor","getPropertyValue","color","ghostElement","backgroundColor","padding","fontSize","borderRadius","textContent","setDragImage","addGhostImage","VoidContainer","dropTraget","TabsContainer","tabs","hidden","_hidden","setRightActionsElement","rightActions","rightActionsContainer","setLeftActionsElement","leftActions","leftActionsContainer","setPrefixActionsElement","preActions","preActionsContainer","tab","selectedIndex","_onTabDragStart","onTabDragStart","_onGroupDragStart","onGroupDragStart","singleTabMode","tabContainer","voidContainer","WillShowOverlayLocationEvent","kind","disableFloatingGroups","rootTop","rootLeft","inDragMode","button","_isGroupActive","tabToRemove","updateClassnames","setActivePanel","isActivePanel","find","isFloatingGroupsEnabled","isFloatingWithOnePanel","addTab","DockviewUnhandledDragOverEvent","PROPERTY_KEYS_DOCKVIEW","floatingGroupBounds","popoutUrl","defaultRenderer","debug","rootOverlayModel","noPanelsOverlay","DockviewDidDropEvent","DockviewWillDropEvent","_kind","DockviewGroupPanelModel","_activePanel","_panels","isEmpty","hasWatermark","watermark","tabsContainer","isContentFocused","contentContainer","_location","groupPanel","_onDidLocationChange","mostRecentlyUsed","_overwriteRenderContainer","_panelDisposables","_onMove","onMove","_onWillDrop","_onDidAddPanel","_onDidPanelTitleChange","onDidPanelTitleChange","_onDidPanelParametersChange","onDidPanelParametersChange","_onDidRemovePanel","_onDidActivePanelChange","_api","hideHeader","handleDropEvent","focusContent","rerender","overlayRenderContainer","doAddPanel","updateContainer","createRightHeaderActionComponent","_rightHeaderActions","createLeftHeaderActionComponent","_leftHeaderActions","createPrefixHeaderActionComponent","_prefixHeaderActions","activeView","normalizedIndex","suppressRoll","containsPanel","skipSetActive","updateParentGroup","doSetActivePanel","skipSetGroupActive","groupItemOrId","panelToRemove","_removePanel","closeAllPanels","arrPanelCpy","doClose","isLast","removeEmptyGroup","updateActions","isGroupActive","doRemovePanel","nextPanel","skipSetActiveGroup","hasExistingPanel","updateMru","onDidTitleChange","runEvents","createWatermarkComponent","willDropEvent","getKind","itemId","GridviewPanelApiImpl","GridviewPanel","_priority","_snap","__minimumWidth","__minimumHeight","__maximumHeight","__maximumWidth","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","MAX_SAFE_INTEGER","maximum","minimum","NOT_INITIALIZED_MESSAGE","DockviewGroupPanelApiImpl","_group","onDidLocationChange","close","getWindow","moveTo","moveGroupOrPanel","maximize","exitMaximized","DockviewGroupPanel","activePanelMinimumWidth","activePanelMinimumHeight","activePanelMaximumWidth","activePanelMaximumHeight","_model","_e","_f","constraints","DockviewPanelApiImpl","oldGroup","_onDidGroupChange","setupGroupEventListeners","tabComponent","_tabComponent","_onDidTitleChange","_onDidActiveGroupChange","onDidGroupChange","_onDidRendererChange","onDidRendererChange","groupEventsDisposable","setTitle","setRenderer","previousGroup","_trackGroupActive","hasBecomeHidden","hasBecomeVisible","DockviewPanel","_title","_renderer","contentComponent","isPanelVisible","createSvgElementFromPath","svg","createElementNS","setAttributeNS","viewbox","DefaultTab","_content","action","render","DockviewPanelModel","_tab","createContentComponent","createTabComponent","_isPanelVisible","componentName","createComponent","name","defaultTabComponent","DefaultDockviewDeserialzier","panelData","viewData","Watermark","arialLevelTracker","_orderedList","destroy","setAttribute","zIndex","Overlay","minimumInViewportWidth","minimumInViewportHeight","_onDidChangeEnd","onDidChangeEnd","setupResize","setBounds","bottom","right","bringToFront","bounds","verticalAlignment","horiziontalAlignment","containerRect","overlayRect","xOffset","getMinimumWidth","yOffset","getMinimumHeight","parseFloat","setupDrag","dragTarget","move","track","resizeHandleElement","startPosition","originalY","originalHeight","originalX","originalWidth","moveTop","MAX_VALUE","MINIMUM_HEIGHT","moveBottom","moveLeft","MINIMUM_WIDTH","moveRight","DockviewFloatingGroupPanel","overlay","DEFAULT_FLOATING_GROUP_OVERFLOW_SIZE","DEFAULT_FLOATING_GROUP_POSITION","OverlayRenderContainer","createFocusableElement","focusContainer","box2","visibilityChanged","observerDisposable","correctLayerPosition","floatingGroup","floatingGroups","level","getAttribute","MutationObserver","attributeFilter","attributes","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","apply","PopoutWindow","_window","_onWillClose","onWillClose","_onDidClose","onDidClose","dimensions","screenX","screenY","innerWidth","innerHeight","open","url","features","entries","join","externalWindow","createPopoutWindowContainer","onDidOpen","externalDocument","styleSheetList","styleSheets","styleSheet","href","link","rel","head","cssTexts","cssRules","rule","cssText","err","createTextNode","addStyles","StrictEventsSequencing","DEFAULT_ROOT_OVERLAY_MODEL","moveGroupWithoutDestroying","removedPanel","DockviewComponent","flatMap","_options","_floatingGroups","nextGroupId","_deserializer","_onWillDragPanel","_onWillDragGroup","_onDidLayoutFromJSON","_onDidMovePanel","_onDidMaximizedGroupChange","_popoutGroups","_onDidRemoveGroup","_onDidAddGroup","_moving","updateWatermark","_rootDropTarget","orthogonalize","itemToPopout","theme","toClassList","list","cls","startsWith","getDockviewTheme","overridePopoutGroup","getNextGroupId","popoutWindowDisposable","popoutContainer","gready","referenceGroup","referenceLocation","isGroupAddedToDom","floatingBox","returnedGroup","createGroup","movingLock","doSetGroupAndPanelActive","isValidReferenceGroup","popoutGroup","skipPopoutAssociated","skipPopoutReturn","catch","error","popoutReferenceGroupId","popoutReferenceGroup","skipRemoveGroup","anchoredBox","getAnchoredBox","minimumWidthWithinViewport","minimumHeightWithinViewport","querySelector","floatingGroupPanel","skipActiveGroup","createGroupAtLocation","floating","includePanel","collection","floats","popoutGroups","gridReferenceGroup","grid","isArray","createGroupFromSerializedState","createdPanels","serializedFloatingGroups","serializedFloatingGroup","serializedPopoutGroups","serializedPopoutGroup","hasActiveGroup","initial","initialWidth","initialHeight","referencePanel","findGroup","isPanelOptionsWithGroup","createPanel","inactive","floatingGroupOptions","relativeLocation","orientationAtLocation","coordinates","watermarkContainer","isGroupOptionsWithGroup","selectedGroup","refGroup","removedGroup","re","isMoving","destinationGroup","sourceGroupId","sourceItemId","destinationTarget","destinationIndex","sourceGroup","targetLocation","targetParentLocation","sourceLocation","sourceParentLocation","newGroup","targetGroup","updatedReferenceLocation","dropLocation","moveGroup","selectedFloatingGroup","selectedPopoutGroup","GridviewComponent","_onDidLayoutfromJSON","hasOrientationChanged","serializedGridview","queue","registerPanel","f","reference","groupItem","SplitviewComponent","_splitview","_splitviewChangeDisposable","_onDidLayoutChange","skipFocus","doAddView","serializedSplitview","DefaultHeader","_expandedIcon","_collapsedIcon","apiRef","_expander","updateIcon","PaneFramework","PaneviewComponent","paneview","_paneview","_viewDisposables","createHeaderComponent","serializedPaneview","SplitviewPanel","_minimumSize","_evaluatedMinimumSize","_maximumSize","_evaluatedMaximumSize","createDockview","createSplitview","createGridview","createPaneview","ReactComponentBridge","props","ref","triggerRender","React","_props","componentProps","current","Date","now","displayName","uniquePortalKeyGenerator","ReactPartContext","ReactPart","portalStore","context","_initialProps","disposed","createPortal","componentInstance","$$typeof","bridgeComponent","Provider","portal","ReactDOM","addPortal","usePortalsLifecycle","portals","setPortals","existingPortals","DockviewDisposable","ReactPanelContentPart","reactPortalStore","DockviewEmitter","ReactPanelHeaderPart","ReactWatermarkPart","ReactHeaderActionsRendererPart","_part","mutableDisposable","DockviewMutableDisposable","DockviewCompositeDisposable","updatePanels","updateActivePanel","updateGroupActive","createGroupControlElement","store","DEFAULT_REACT_TAB","DockviewReact","domRef","dockviewRef","prevProps","changes","propKey","propValue","frameworkTabComponents","tabComponents","frameworkOptions","leftHeaderActionsComponent","rightHeaderActionsComponent","prefixHeaderActionsComponent","components","watermarkComponent","obj","extractCoreOptions","onReady","CloseButton","viewBox","focusable","__rest","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","DockviewDefaultTab","_containerApi","hideClose","closeActionOverride","onPointerUp","onPointerLeave","useTitle","isMiddleMouseButton","onClose","onBtnPointerDown","_onPointerDown","_onPointerUp","_onPointerLeave","onClick","ReactPanelView","reactComponent","SplitviewReact","splitviewRef","ReactGridPanelView","GridviewReact","gridviewRef","PanePanelSection","PaneviewReact","paneviewRef","headerComponents","CodeSandboxButton","_jsxs","hideThemePicker","ThemePicker","alignItems","fontWeight","paddingRight","Spinner","ReactIcon","marginRight","src","useBaseUrl","JavascriptIcon","themes","useLocalStorageItem","defaultValue","setItem","localStorage","getItem","setTheme","dispatchEvent","StorageEvent","onChange","MultiFrameworkContainer2","framework","setFramework","animation","setAnimation","typescript","sandboxId","background","justifyContent","react","cursor","border","flexGrow","MultiFrameworkContainer","default","isolatedApp","flexDirection","frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","_components","h1","MDXContent","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents","MDXProvider","allComponents","disableParentContext"],"sourceRoot":""}